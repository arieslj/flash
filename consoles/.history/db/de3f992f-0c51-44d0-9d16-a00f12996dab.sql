with t as
    (
        select
            pr.store_name pr_store_name
            ,pr.store_id pr_store_id
            ,pi.pno
            ,pi.ticket_pickup_store_id
            ,pr.staff_info_id
            ,pi.dst_store_id
            ,pr.routed_at
            ,pi.state
            ,pi.created_at
            ,pi.ticket_delivery_store_id
        from fle_staging.parcel_info pi
        join rot_pro.parcel_route pr on pr.pno = pi.pno and pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
        where
            pi.created_at >= '2023-11-30 17:00:00'
            and pi.created_at < '2023-12-07 17:00:00'
            and pi.dst_store_id != pi.ticket_pickup_store_id
            and pr.store_id != pi.dst_store_id
            and pr.store_id != pi.ticket_delivery_store_id
        group by 1,2,3,4,5,6,7,8,9,10
    )
select
    t1.pno
    ,ss.name 揽件网点
    ,t1.pr_store_name 交接扫描网点
    ,ss2.name 目的地网点
    ,ss3.name 妥投网点
    ,t1.staff_info_id 交接扫描员工
    ,convert_tz(t1.routed_at, '+00:00', '+07:00') 交接扫描时间
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as `运单状态`
    ,if(plt.pno is null, '否', '是' ) 是否丢失
from t t1
left join
    (
        select
            t1.pno
            ,pcd.old_value
        from fle_staging.parcel_change_detail pcd
        join t t1 on t1.pno = pcd.pno
        where
            pcd.created_at > '2023-11-20'
            and pcd.field_name = 'dst_store_id'
        group by 1,2
    ) a on a.pno = t1.pno
left join fle_staging.sys_store ss on ss.id = t1.ticket_pickup_store_id
left join fle_staging.sys_store ss2 on ss2.id = t1.dst_store_id
left join bi_pro.parcel_lose_task plt on plt.pno = t1.pno and plt.state = 6 and plt.duty_result = 1 and plt.penalties > 0
left join fle_staging.sys_store ss3 on ss3.id = t1.ticket_delivery_store_id
where
    a.pno is null;
;-- -. . -..- - / . -. - .-. -.--
select
    plt.pno
    ,ss.name
from bi_pro.parcel_lose_task plt
left join fle_staging.parcel_info pi on pi.pno = plt.pno
left join fle_staging.sys_store ss on ss.id = pi.dst_store_id
where
    plt.state = 6
    and plt.duty_result = 1
    and parcel_created_at >= '2023-11-01'
group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
    plt.pno
    ,if(pi.dst_store_id = 'TH05110303', pcd.old_value, pi.dst_store_id) dst_store
from bi_pro.parcel_lose_task plt
left join fle_staging.parcel_info pi on pi.pno = plt.pno and pi.created_at > '2023-10-20'
left join fle_staging.parcel_change_detail pcd on pcd.pno = plt.pno and pcd.field_name = 'dst_store_id' and pcd.new_value = pi.dst_store_id
where
    plt.state = 6
    and plt.duty_result = 1
    and parcel_created_at >= '2023-11-01'
group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
    plt.pno
    ,if(pi.dst_store_id = 'TH05110303', pcd.old_value, pi.dst_store_id) dst_store
    ,plt.last_valid_store_id
from bi_pro.parcel_lose_task plt
left join fle_staging.parcel_info pi on pi.pno = plt.pno and pi.created_at > '2023-10-20'
left join fle_staging.parcel_change_detail pcd on pcd.pno = plt.pno and pcd.field_name = 'dst_store_id' and pcd.new_value = pi.dst_store_id
where
    plt.state = 6
    and plt.duty_result = 1
    and parcel_created_at >= '2023-11-01'
group by 1,2,3;
;-- -. . -..- - / . -. - .-. -.--
select
    *
from
    (
        select
            plt.pno
            ,if(pi.dst_store_id = 'TH05110303', pcd.old_value, pi.dst_store_id) dst_store
            ,plt.last_valid_store_id
        from bi_pro.parcel_lose_task plt
        left join fle_staging.parcel_info pi on pi.pno = plt.pno and pi.created_at > '2023-10-20'
        left join fle_staging.parcel_change_detail pcd on pcd.pno = plt.pno and pcd.field_name = 'dst_store_id' and pcd.new_value = pi.dst_store_id
        where
            plt.state = 6
            and plt.duty_result = 1
            and parcel_created_at >= '2023-11-01'
        group by 1,2,3
    ) a
where
    a.last_valid_store_id!= a.dst_store;
;-- -. . -..- - / . -. - .-. -.--
select
    am.pno
    ,am.store_id
    ,am.staff_info_id
    ,am.extra_info
    ,am.created_at
    ,acc.complaints_sub_type
   ,json_extract(am.extra_info, '$.request_sub_type')
    ,find_in_set(7,acc.complaints_sub_type)
from bi_pro.abnormal_message am
join bi_pro.abnormal_customer_complaint acc on acc.abnormal_message_id=am.id
where find_in_set(7,acc.complaints_sub_type) is not null
  and json_extract(am.extra_info, '$.request_sub_type') is not null;
;-- -. . -..- - / . -. - .-. -.--
select
    am.pno
    ,am.store_id
    ,am.staff_info_id
    ,am.extra_info
    ,am.created_at
    ,acc.complaints_sub_type
   ,json_extract(am.extra_info, '$.request_sub_type')
    ,find_in_set(7,acc.complaints_sub_type)
from bi_pro.abnormal_message am
join bi_pro.abnormal_customer_complaint acc on acc.abnormal_message_id=am.id
where find_in_set(7,acc.complaints_sub_type) > 0
  and json_extract(am.extra_info, '$.request_sub_type') is not null;
;-- -. . -..- - / . -. - .-. -.--
select
    t.date 日期
    ,t.客户类型
    ,t.client_id
    ,t.归属部门
    ,t.归属网点
    ,t.销售代表
    ,t.项目经理
    ,t.运费结算方式
    ,t.目前下单状态
    ,t.账号创建日期
    ,10d.days_count 10月寄件天数
    ,11d.days_count 11月寄件天数
    ,pi.pick_count 当日揽收数量
    ,shd.should_count 当日揽收数量
    ,shd.handover_count 当日交接量
    ,rej.rej_count 当日标记拒收数量
    ,rej.reurn_reject_count 当日拒收且生成退件数量
    ,rej.no_buy_count '拒收原因为“未购买”量'
    ,rej2.other_reason_count 当日标记其他原因
    ,sign.sign_count 当日妥投数量
from
    (
        select
            c.*
            ,d.date
        from
            (
                select
                     t.client_id
                    ,'KA' 客户类型
                    ,if(kp.forbid_call_order = 0, '否', '是') 目前下单状态
                    ,sd.name 归属部门
                    ,ss2.name 归属网点
                    ,kp.staff_info_name 销售代表
                    ,si.name 项目经理
                    ,case kp.settlement_category
                        when 1 then '现结'
                        when 2 then '定结'
                    end  运费结算方式
                    ,,date(convert_tz(kp.created_at, '+00:00', '+07:00')) 账号创建日期
                from fle_staging.ka_profile kp
                join tmpale.tmp_th_client_lj_1213 t on t.client_id = kp.id
                left join fle_staging.sys_department sd on sd.id = kp.department_id
                left join fle_staging.sys_store ss2 on ss2.id = kp.store_id
                left join fle_staging.staff_info si on si.id = kp.project_manager_id

                union all

                select
                   t.client_id
                    ,'小c' 客户类型
                    ,if(ui.forbid_call_order = 0, '否', '是') 目前下单状态
                    ,'' 归属部门
                    ,'' 归属网点
                    ,'' 销售代表
                    ,'' 项目经理
                    ,'现结' 运费结算方式
                    ,date(convert_tz(ui.created_at, '+00:00', '+07:00')) 账号创建日期
                from fle_staging.user_info ui
                join tmpale.tmp_th_client_lj_1213 t on t.client_id = ui.id
            ) c
        cross join
            (
                select
                    ot.date
                from tmpale.ods_th_dim_date ot
                where
                    ot.date >= '2023-10-01'
                    and ot.date < '2023-12-01'
            ) d
    ) t
left join
    ( -- 揽收
        select
            t.client_id
            ,date(convert_tz(pi.created_at, '+00:00', '+07:00')) pick_date
            ,count(distinct pi.pno) pick_count
        from fle_staging.parcel_info pi
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
        where
            pi.created_at > '2023-09-30 17:00:00'
            and pi.created_at < '2023-11-30 17:00:00'
            and pi.state < 9
        group by 1,2
    ) pi on pi.client_id = t.client_id and pi.pick_date = t.date
left join
    (
        select
            t.client_id
            ,10d.stat_date
            ,count(distinct 10d.pno) should_count
            ,count(if(10d.handover_scan_route_at is not null, 10d.pno, null)) handover_count
        from bi_pro.dc_should_delivery_2023_10 10d
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = 10d.client_id
        group by 1,2

        union all

        select
            t.client_id
            ,11d.stat_date
            ,count(distinct 11d.pno) should_count
            ,count(distinct if(11d.handover_scan_route_at is not null, 11d.pno, null)) handover_count
        from bi_pro.dc_should_delivery_2023_11 11d
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = 11d.client_id
        group by 1,2
    ) shd on shd.client_id = t.client_id and shd.stat_date = t.date
left join
    (
        select
            date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pr_date
            ,t.client_id
            ,count(distinct pr.pno) rej_count
            ,count(distinct if(json_extract(pr.extra_value, '$.rejectionCategory') = 1, pr.pno, null)) no_buy_count
            ,count(distinct if(pi.state = 7 and pi2.created_at < date_add(date(convert_tz(pr.routed_at, '+00:00', '+07:00')), interval 17 hour) and pi2.created_at >= date_sub(date(convert_tz(pr.routed_at, '+00:00', '+07:00')), interval 7 hour), pi.pno, null)) reurn_reject_count
        from rot_pro.parcel_route pr
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
        left join fle_staging.parcel_info pi2 on pi2.pno = pi.returned_pno
        where
            pr.routed_at > '2023-09-30 17:00:00'
            and pr.routed_at < '2023-11-30 17:00:00'
            and pr.marker_category = 2 -- 收件人拒收标记
        group by 1,2
    ) rej on rej.client_id = t.client_id and rej.pr_date = t.date
left join
    (
        select
           t1.client_id
            ,t1.pr_date
            ,count(distinct t1.pno) other_reason_count
        from
           (
                select
                    date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pr_date
                    ,t.client_id
                    ,pr.pno
                from rot_pro.parcel_route pr
                left join fle_staging.parcel_info pi on pi.pno = pr.pno
                join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
                where
                    pr.routed_at > '2023-09-30 17:00:00'
                    and pr.routed_at < '2023-11-30 17:00:00'
                    and pr.marker_category = 2
                    and ( json_extract(pr.extra_value, '$.rejectionCategory') > 1  or json_extract(pr.extra_value, '$.rejectionCategory') is null )
                group by 1,2,3
           ) t1
        left join
            (
                select
                    date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pr_date
                    ,t.client_id
                    ,pr.pno
                from rot_pro.parcel_route pr
                left join fle_staging.parcel_info pi on pi.pno = pr.pno
                join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
                where
                    pr.routed_at > '2023-09-30 17:00:00'
                    and pr.routed_at < '2023-11-30 17:00:00'
                    and pr.marker_category = 2
                    and json_extract(pr.extra_value, '$.rejectionCategory') = 1
                group by 1,2,3
            ) t2 on t1.client_id = t2.client_id and t1.pr_date = t2.pr_date and t1.pno = t2.pno
        where
            t2.pno is null
        group by 1,2
    ) rej2 on rej2.client_id = t.client_id and rej2.pr_date = t.date
left join
    (
        select
            t.client_id
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
            ,count(distinct pi.pno) sign_count
        from fle_staging.parcel_info pi
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
        where
            pi.finished_at > '2023-09-30 17:00:00'
            and pi.finished_at < '2023-11-30 17:00:00'
            and pi.state = 5
        group by 1,2
    ) sign on sign.client_id = t.client_id and sign.fin_date = t.date
left join
    (
        select
            pi.client_id
            ,count(distinct date(convert_tz(pi.created_at, '+00:00', '+07:00'))) days_count
        from fle_staging.parcel_info pi
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
        where
            pi.created_at >= '2023-09-30 17:00:00'
            and pi.created_at < '2023-10-31 17:00:00'
            and pi.state < 9
        group by 1
    ) 10d on 10d.client_id = t.client_id
left join
    (
        select
            pi.client_id
            ,count(distinct date(convert_tz(pi.created_at, '+00:00', '+07:00'))) days_count
        from fle_staging.parcel_info pi
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
        where
            pi.created_at >= '2023-10-31 17:00:00'
            and pi.created_at < '2023-11-30 17:00:00'
            and pi.state < 9
        group by 1
    ) 11d on 11d.client_id = t.client_id;
;-- -. . -..- - / . -. - .-. -.--
select
    t.date 日期
    ,t.客户类型
    ,t.client_id
    ,t.归属部门
    ,t.归属网点
    ,t.销售代表
    ,t.项目经理
    ,t.运费结算方式
    ,t.目前下单状态
    ,t.账号创建日期
    ,10d.days_count 10月寄件天数
    ,11d.days_count 11月寄件天数
    ,pi.pick_count 当日揽收数量
    ,shd.should_count 当日揽收数量
    ,shd.handover_count 当日交接量
    ,rej.rej_count 当日标记拒收数量
    ,rej.reurn_reject_count 当日拒收且生成退件数量
    ,rej.no_buy_count '拒收原因为“未购买”量'
    ,rej2.other_reason_count 当日标记其他原因
    ,sign.sign_count 当日妥投数量
from
    (
        select
            c.*
            ,d.date
        from
            (
                select
                     t.client_id
                    ,'KA' 客户类型
                    ,if(kp.forbid_call_order = 0, '否', '是') 目前下单状态
                    ,sd.name 归属部门
                    ,ss2.name 归属网点
                    ,kp.staff_info_name 销售代表
                    ,si.name 项目经理
                    ,case kp.settlement_category
                        when 1 then '现结'
                        when 2 then '定结'
                    end  运费结算方式
                    ,date(convert_tz(kp.created_at, '+00:00', '+07:00')) 账号创建日期
                from fle_staging.ka_profile kp
                join tmpale.tmp_th_client_lj_1213 t on t.client_id = kp.id
                left join fle_staging.sys_department sd on sd.id = kp.department_id
                left join fle_staging.sys_store ss2 on ss2.id = kp.store_id
                left join fle_staging.staff_info si on si.id = kp.project_manager_id

                union all

                select
                   t.client_id
                    ,'小c' 客户类型
                    ,if(ui.forbid_call_order = 0, '否', '是') 目前下单状态
                    ,'' 归属部门
                    ,'' 归属网点
                    ,'' 销售代表
                    ,'' 项目经理
                    ,'现结' 运费结算方式
                    ,date(convert_tz(ui.created_at, '+00:00', '+07:00')) 账号创建日期
                from fle_staging.user_info ui
                join tmpale.tmp_th_client_lj_1213 t on t.client_id = ui.id
            ) c
        cross join
            (
                select
                    ot.date
                from tmpale.ods_th_dim_date ot
                where
                    ot.date >= '2023-10-01'
                    and ot.date < '2023-12-01'
            ) d
    ) t
left join
    ( -- 揽收
        select
            t.client_id
            ,date(convert_tz(pi.created_at, '+00:00', '+07:00')) pick_date
            ,count(distinct pi.pno) pick_count
        from fle_staging.parcel_info pi
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
        where
            pi.created_at > '2023-09-30 17:00:00'
            and pi.created_at < '2023-11-30 17:00:00'
            and pi.state < 9
        group by 1,2
    ) pi on pi.client_id = t.client_id and pi.pick_date = t.date
left join
    (
        select
            t.client_id
            ,10d.stat_date
            ,count(distinct 10d.pno) should_count
            ,count(if(10d.handover_scan_route_at is not null, 10d.pno, null)) handover_count
        from bi_pro.dc_should_delivery_2023_10 10d
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = 10d.client_id
        group by 1,2

        union all

        select
            t.client_id
            ,11d.stat_date
            ,count(distinct 11d.pno) should_count
            ,count(distinct if(11d.handover_scan_route_at is not null, 11d.pno, null)) handover_count
        from bi_pro.dc_should_delivery_2023_11 11d
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = 11d.client_id
        group by 1,2
    ) shd on shd.client_id = t.client_id and shd.stat_date = t.date
left join
    (
        select
            date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pr_date
            ,t.client_id
            ,count(distinct pr.pno) rej_count
            ,count(distinct if(json_extract(pr.extra_value, '$.rejectionCategory') = 1, pr.pno, null)) no_buy_count
            ,count(distinct if(pi.state = 7 and pi2.created_at < date_add(date(convert_tz(pr.routed_at, '+00:00', '+07:00')), interval 17 hour) and pi2.created_at >= date_sub(date(convert_tz(pr.routed_at, '+00:00', '+07:00')), interval 7 hour), pi.pno, null)) reurn_reject_count
        from rot_pro.parcel_route pr
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
        left join fle_staging.parcel_info pi2 on pi2.pno = pi.returned_pno
        where
            pr.routed_at > '2023-09-30 17:00:00'
            and pr.routed_at < '2023-11-30 17:00:00'
            and pr.marker_category = 2 -- 收件人拒收标记
        group by 1,2
    ) rej on rej.client_id = t.client_id and rej.pr_date = t.date
left join
    (
        select
           t1.client_id
            ,t1.pr_date
            ,count(distinct t1.pno) other_reason_count
        from
           (
                select
                    date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pr_date
                    ,t.client_id
                    ,pr.pno
                from rot_pro.parcel_route pr
                left join fle_staging.parcel_info pi on pi.pno = pr.pno
                join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
                where
                    pr.routed_at > '2023-09-30 17:00:00'
                    and pr.routed_at < '2023-11-30 17:00:00'
                    and pr.marker_category = 2
                    and ( json_extract(pr.extra_value, '$.rejectionCategory') > 1  or json_extract(pr.extra_value, '$.rejectionCategory') is null )
                group by 1,2,3
           ) t1
        left join
            (
                select
                    date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pr_date
                    ,t.client_id
                    ,pr.pno
                from rot_pro.parcel_route pr
                left join fle_staging.parcel_info pi on pi.pno = pr.pno
                join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
                where
                    pr.routed_at > '2023-09-30 17:00:00'
                    and pr.routed_at < '2023-11-30 17:00:00'
                    and pr.marker_category = 2
                    and json_extract(pr.extra_value, '$.rejectionCategory') = 1
                group by 1,2,3
            ) t2 on t1.client_id = t2.client_id and t1.pr_date = t2.pr_date and t1.pno = t2.pno
        where
            t2.pno is null
        group by 1,2
    ) rej2 on rej2.client_id = t.client_id and rej2.pr_date = t.date
left join
    (
        select
            t.client_id
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
            ,count(distinct pi.pno) sign_count
        from fle_staging.parcel_info pi
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
        where
            pi.finished_at > '2023-09-30 17:00:00'
            and pi.finished_at < '2023-11-30 17:00:00'
            and pi.state = 5
        group by 1,2
    ) sign on sign.client_id = t.client_id and sign.fin_date = t.date
left join
    (
        select
            pi.client_id
            ,count(distinct date(convert_tz(pi.created_at, '+00:00', '+07:00'))) days_count
        from fle_staging.parcel_info pi
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
        where
            pi.created_at >= '2023-09-30 17:00:00'
            and pi.created_at < '2023-10-31 17:00:00'
            and pi.state < 9
        group by 1
    ) 10d on 10d.client_id = t.client_id
left join
    (
        select
            pi.client_id
            ,count(distinct date(convert_tz(pi.created_at, '+00:00', '+07:00'))) days_count
        from fle_staging.parcel_info pi
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
        where
            pi.created_at >= '2023-10-31 17:00:00'
            and pi.created_at < '2023-11-30 17:00:00'
            and pi.state < 9
        group by 1
    ) 11d on 11d.client_id = t.client_id;
;-- -. . -..- - / . -. - .-. -.--
select
             pr.id
            ,pr.pno
            ,pr.staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
        #     ,json_extract(pr.extra_value, '$.callingChannel') calling_channel
        #     ,json_extract(pr.extra_value, '$.callType') call_type
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from rot_pro.parcel_route pr
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        where
            pr.route_action in ('PHONE', 'INCOMING_CALL')
#             and pr.routed_at >= date_sub(date_sub(curdate(), interval 1 day), interval 7 hour)
#             and pr.routed_at < date_add(date_sub(curdate(), interval 1 day), interval 17 hour)
            and pr.routed_at >= '2023-11-23 17:00:00'
             and pr.routed_at < '2023-12-03 17:00:00';
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and (swa.started_at is not null or swa.end_at is not null)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.phone
            ,a1.pho_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.phone
                    ,t1.pho_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.routed_at
                    ,t1.pho_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.staff_info_id = a2.staff_info_id and a1.pho_date = a2.pho_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5,6
    )
select
    t1.pho_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,t1.staff_info_id 快递员id
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,t1.incoming_count 来电次数
    ,ci.incoming_count 有效接通次数
    ,c2.incoming_count 有效回拨次数
    ,(ci.incoming_count + c2.incoming_count)/t1.incoming_count 有效接线率
    ,case
        when a2.staff_info_id is not null and a2.incoming_count = 0 then ''
        when a2.staff_info_id is not null and a2.incoming_count > 0 then ''
        when a2.staff_info_id is null and (ci.incoming_count + c2.incoming_count)/t1.incoming_count < 0.5 then '是'
        when a2.staff_info_id is null and (ci.incoming_count + c2.incoming_count)/t1.incoming_count >= 0.5 then '否'
        else null
    end 是否异常
from
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2
    ) t1
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = t1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.staff_info_id
            ,c3.phone
            ,c3.pho_date
            ,count(c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                   ,c1.phone
                   ,c1.pho_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.phone
                    ,c1.pho_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.staff_info_id = c1.staff_info_id and t1.pho_date = c1.pho_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2,3
    ) c2 on  c2.staff_info_id = t1.staff_info_id and c2.pho_date = t1.pho_date
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.pho_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = t1.staff_info_id and  ci.pho_date = t1.pho_date
left join
    (
        select
            a1.staff_info_id
           ,a1.pho_date
           ,count(pr.id) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.pho_date
                    ,count(distinct t1.phone) phone_count
                from t t1
                where
                    t1.phone_type = 'in_coming'
                group by 1,2
                having count(distinct t1.phone) = 0
            ) a1
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.pho_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.pho_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = t1.staff_info_id and a2.pho_date = t1.pho_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and (swa.started_at is not null or swa.end_at is not null)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.phone
            ,a1.pho_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.phone
                    ,t1.pho_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.routed_at
                    ,t1.pho_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.staff_info_id = a2.staff_info_id and a1.pho_date = a2.pho_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    t1.pho_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,t1.staff_info_id 快递员id
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,t1.incoming_count 来电次数
    ,ci.incoming_count 有效接通次数
    ,c2.incoming_count 有效回拨次数
    ,(ci.incoming_count + c2.incoming_count)/t1.incoming_count 有效接线率
    ,case
        when a2.staff_info_id is not null and a2.incoming_count = 0 then '否'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '是'
        when a2.staff_info_id is null and (ci.incoming_count + c2.incoming_count)/t1.incoming_count < 0.5 then '是'
        when a2.staff_info_id is null and (ci.incoming_count + c2.incoming_count)/t1.incoming_count >= 0.5 then '否'
        else null
    end 是否异常
from
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2
    ) t1
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = t1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.staff_info_id
            ,c3.phone
            ,c3.pho_date
            ,count(c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                   ,c1.phone
                   ,c1.pho_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.phone
                    ,c1.pho_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.staff_info_id = c1.staff_info_id and t1.pho_date = c1.pho_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2,3
    ) c2 on  c2.staff_info_id = t1.staff_info_id and c2.pho_date = t1.pho_date
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.pho_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = t1.staff_info_id and  ci.pho_date = t1.pho_date
left join
    (
        select
            a1.staff_info_id
           ,a1.pho_date
           ,count(pr.id) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.pho_date
                    ,count(distinct t1.phone) phone_count
                from t t1
                where
                    t1.phone_type = 'in_coming'
                group by 1,2
                having count(distinct t1.phone) = 0
            ) a1
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.pho_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.pho_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = t1.staff_info_id and a2.pho_date = t1.pho_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-12', interval 7 hour) and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and (swa.started_at is not null or swa.end_at is not null)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.phone
            ,a1.pho_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.phone
                    ,t1.pho_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.routed_at
                    ,t1.pho_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.staff_info_id = a2.staff_info_id and a1.pho_date = a2.pho_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    t1.pho_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,t1.staff_info_id 快递员id
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,t1.incoming_count 来电次数
    ,ci.incoming_count 有效接通次数
    ,c2.incoming_count 有效回拨次数
    ,(ci.incoming_count + c2.incoming_count)/t1.incoming_count 有效接线率
    ,case
        when a2.staff_info_id is not null and a2.incoming_count = 0 then '否'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '是'
        when a2.staff_info_id is null and (ci.incoming_count + c2.incoming_count)/t1.incoming_count < 0.5 then '是'
        when a2.staff_info_id is null and (ci.incoming_count + c2.incoming_count)/t1.incoming_count >= 0.5 then '否'
        else null
    end 是否异常
from
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2
    ) t1
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = t1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.staff_info_id
            ,c3.phone
            ,c3.pho_date
            ,count(c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                   ,c1.phone
                   ,c1.pho_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.phone
                    ,c1.pho_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.staff_info_id = c1.staff_info_id and t1.pho_date = c1.pho_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2,3
    ) c2 on  c2.staff_info_id = t1.staff_info_id and c2.pho_date = t1.pho_date
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.pho_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = t1.staff_info_id and  ci.pho_date = t1.pho_date
left join
    (
        select
            a1.staff_info_id
           ,a1.pho_date
           ,count(pr.id) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.pho_date
                    ,count(distinct t1.phone) phone_count
                from t t1
                where
                    t1.phone_type = 'in_coming'
                group by 1,2
                having count(distinct t1.phone) = 0
            ) a1
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.pho_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.pho_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = t1.staff_info_id and a2.pho_date = t1.pho_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-12', interval 7 hour) and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and (swa.started_at is not null or swa.end_at is not null)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.phone
            ,a1.pho_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.phone
                    ,t1.pho_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.routed_at
                    ,t1.pho_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.staff_info_id = a2.staff_info_id and a1.pho_date = a2.pho_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    t1.pho_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,t1.staff_info_id 快递员id
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,t1.incoming_count 来电次数
    ,ci.incoming_count 有效接通次数
    ,c2.incoming_count 有效回拨次数
    ,(ci.incoming_count + c2.incoming_count)/t1.incoming_count 有效接线率
    ,case
        when a2.staff_info_id is not null and a2.incoming_count = 0 then '否'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '是'
        when a2.staff_info_id is null and (ci.incoming_count + c2.incoming_count)/t1.incoming_count < 0.5 then '是'
        when a2.staff_info_id is null and (ci.incoming_count + c2.incoming_count)/t1.incoming_count >= 0.5 then '否'
        else null
    end 是否异常
    ,a2.incoming_count
from
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2
    ) t1
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = t1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.staff_info_id
            ,c3.phone
            ,c3.pho_date
            ,count(c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                   ,c1.phone
                   ,c1.pho_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.phone
                    ,c1.pho_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.staff_info_id = c1.staff_info_id and t1.pho_date = c1.pho_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2,3
    ) c2 on  c2.staff_info_id = t1.staff_info_id and c2.pho_date = t1.pho_date
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.pho_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = t1.staff_info_id and  ci.pho_date = t1.pho_date
left join
    (
        select
            a1.staff_info_id
           ,a1.pho_date
           ,count(pr.id) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.pho_date
                    ,count(distinct t1.phone) phone_count
                from t t1
                where
                    t1.phone_type = 'in_coming'
                group by 1,2
                having count(distinct t1.phone) = 0
            ) a1
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.pho_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.pho_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = t1.staff_info_id and a2.pho_date = t1.pho_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-12', interval 7 hour) and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and (swa.started_at is not null or swa.end_at is not null)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.phone
            ,a1.pho_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.phone
                    ,t1.pho_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.routed_at
                    ,t1.pho_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.staff_info_id = a2.staff_info_id and a1.pho_date = a2.pho_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    t1.pho_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,t1.staff_info_id 快递员id
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,t1.incoming_count 来电次数
    ,ci.incoming_count 有效接通次数
    ,c2.incoming_count 有效回拨次数
    ,(ci.incoming_count + c2.incoming_count)/t1.incoming_count 有效接线率
    ,case
        when a2.staff_info_id is not null and a2.incoming_count = 0 then '否'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '是'
        when a2.staff_info_id is null and (ci.incoming_count + c2.incoming_count)/t1.incoming_count < 0.5 then '是'
        when a2.staff_info_id is null and (ci.incoming_count + c2.incoming_count)/t1.incoming_count >= 0.5 then '否'
        else null
    end 是否异常
    ,a2.staff_info_id
    ,a2.incoming_count
from
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2
    ) t1
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = t1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.staff_info_id
            ,c3.phone
            ,c3.pho_date
            ,count(c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                   ,c1.phone
                   ,c1.pho_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.phone
                    ,c1.pho_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.staff_info_id = c1.staff_info_id and t1.pho_date = c1.pho_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2,3
    ) c2 on  c2.staff_info_id = t1.staff_info_id and c2.pho_date = t1.pho_date
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.pho_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = t1.staff_info_id and  ci.pho_date = t1.pho_date
left join
    (
        select
            a1.staff_info_id
           ,a1.pho_date
           ,count(pr.id) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.pho_date
                    ,count(distinct t1.phone) phone_count
                from t t1
                where
                    t1.phone_type = 'in_coming'
                group by 1,2
                having count(distinct t1.phone) = 0
            ) a1
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.pho_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.pho_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = t1.staff_info_id and a2.pho_date = t1.pho_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-12', interval 7 hour) and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and (swa.started_at is not null or swa.end_at is not null)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.phone
            ,a1.pho_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.phone
                    ,t1.pho_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.routed_at
                    ,t1.pho_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.staff_info_id = a2.staff_info_id and a1.pho_date = a2.pho_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
# select
#     t1.pho_date 日期
#     ,dt.region_name 大区
#     ,dt.piece_name 片区
#     ,dt.store_name 网点
#     ,t1.staff_info_id 快递员id
#     ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
#     ,t1.incoming_count 来电次数
#     ,ci.incoming_count 有效接通次数
#     ,c2.incoming_count 有效回拨次数
#     ,(ci.incoming_count + c2.incoming_count)/t1.incoming_count 有效接线率
#     ,case
#         when a2.staff_info_id is not null and a2.incoming_count = 0 then '否'
#         when a2.staff_info_id is not null and a2.incoming_count > 0 then '是'
#         when a2.staff_info_id is null and (ci.incoming_count + c2.incoming_count)/t1.incoming_count < 0.5 then '是'
#         when a2.staff_info_id is null and (ci.incoming_count + c2.incoming_count)/t1.incoming_count >= 0.5 then '否'
#         else null
#     end 是否异常
#     ,a2.staff_info_id
#     ,a2.incoming_count
# from
#     (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-12', interval 7 hour) and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and (swa.started_at is not null or swa.end_at is not null)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.phone
            ,a1.pho_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.phone
                    ,t1.pho_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.routed_at
                    ,t1.pho_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.staff_info_id = a2.staff_info_id and a1.pho_date = a2.pho_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    t1.pho_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,t1.staff_info_id 快递员id
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,t1.incoming_count 来电次数
    ,ci.incoming_count 有效接通次数
    ,c2.incoming_count 有效回拨次数
    ,(ci.incoming_count + c2.incoming_count)/t1.incoming_count 有效接线率
    ,case
        when a2.staff_info_id is not null and a2.incoming_count = 0 then '否'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '是'
        when a2.staff_info_id is null and (ci.incoming_count + c2.incoming_count)/t1.incoming_count < 0.5 then '是'
        when a2.staff_info_id is null and (ci.incoming_count + c2.incoming_count)/t1.incoming_count >= 0.5 then '否'
        else null
    end 是否异常
    ,a2.staff_info_id
    ,a2.incoming_count
from
    (
        select
            swa.attendance_date
            ,swa.staff_info_id
           ,count(distinct t1.phone) incoming_count
        from backyard_pro.staff_work_attendance swa
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
            and (swa.started_at is not null or swa.end_at is not null)
    ) a1
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2
    ) t1
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.staff_info_id
            ,c3.phone
            ,c3.pho_date
            ,count(c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                   ,c1.phone
                   ,c1.pho_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.phone
                    ,c1.pho_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.staff_info_id = c1.staff_info_id and t1.pho_date = c1.pho_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2,3
    ) c2 on  c2.staff_info_id = a1.staff_info_id and c2.pho_date = a1.attendance_date
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.pho_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = a1.staff_info_id and  ci.pho_date = a1.attendance_date
left join
    (
        select
            a1.staff_info_id
           ,a1.pho_date
           ,count(pr.id) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.pho_date
                    ,count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) phone_count
                from t t1
                group by 1,2
                having count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) = 0
            ) a1
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.pho_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.pho_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = t1.staff_info_id and a2.pho_date = a1.attendance_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-12', interval 7 hour) and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and (swa.started_at is not null or swa.end_at is not null)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.phone
            ,a1.pho_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.phone
                    ,t1.pho_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.routed_at
                    ,t1.pho_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.staff_info_id = a2.staff_info_id and a1.pho_date = a2.pho_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    t1.pho_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,t1.staff_info_id 快递员id
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,t1.incoming_count 来电次数
    ,ci.incoming_count 有效接通次数
    ,c2.incoming_count 有效回拨次数
    ,(ci.incoming_count + c2.incoming_count)/t1.incoming_count 有效接线率
    ,case
        when a2.staff_info_id is not null and a2.incoming_count = 0 then '否'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '是'
        when a2.staff_info_id is null and (ci.incoming_count + c2.incoming_count)/t1.incoming_count < 0.5 then '是'
        when a2.staff_info_id is null and (ci.incoming_count + c2.incoming_count)/t1.incoming_count >= 0.5 then '否'
        else null
    end 是否异常
    ,a2.staff_info_id
    ,a2.incoming_count
from
    (
        select
            swa.attendance_date
            ,swa.staff_info_id
           ,count(distinct t1.phone) incoming_count
        from backyard_pro.staff_work_attendance swa
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
            and (swa.started_at is not null or swa.end_at is not null)
    ) a1
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2
    ) t1 on a1.staff_info_id = t1.staff_info_id and a1.attendance_date = t1.pho_date
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.staff_info_id
            ,c3.phone
            ,c3.pho_date
            ,count(c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                   ,c1.phone
                   ,c1.pho_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.phone
                    ,c1.pho_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.staff_info_id = c1.staff_info_id and t1.pho_date = c1.pho_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2,3
    ) c2 on  c2.staff_info_id = a1.staff_info_id and c2.pho_date = a1.attendance_date
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.pho_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = a1.staff_info_id and  ci.pho_date = a1.attendance_date
left join
    (
        select
            a1.staff_info_id
           ,a1.pho_date
           ,count(pr.id) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.pho_date
                    ,count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) phone_count
                from t t1
                group by 1,2
                having count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) = 0
            ) a1
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.pho_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.pho_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = t1.staff_info_id and a2.pho_date = a1.attendance_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-12', interval 7 hour) and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and (swa.started_at is not null or swa.end_at is not null)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.phone
            ,a1.pho_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.phone
                    ,t1.pho_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.routed_at
                    ,t1.pho_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.staff_info_id = a2.staff_info_id and a1.pho_date = a2.pho_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    t1.pho_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,t1.staff_info_id 快递员id
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,t1.incoming_count 来电次数
    ,ci.incoming_count 有效接通次数
    ,c2.incoming_count 有效回拨次数
    ,(ci.incoming_count + c2.incoming_count)/t1.incoming_count 有效接线率
    ,case
        when a2.staff_info_id is not null and a2.incoming_count = 0 then '否'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '是'
        when a2.staff_info_id is null and (ci.incoming_count + c2.incoming_count)/t1.incoming_count < 0.5 then '是'
        when a2.staff_info_id is null and (ci.incoming_count + c2.incoming_count)/t1.incoming_count >= 0.5 then '否'
        else null
    end 是否异常
    ,a2.staff_info_id
    ,a2.incoming_count
from
    (
        select
            swa.attendance_date
            ,swa.staff_info_id
        from backyard_pro.staff_work_attendance swa
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
            and (swa.started_at is not null or swa.end_at is not null)
    ) a1
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2
    ) t1 on a1.staff_info_id = t1.staff_info_id and a1.attendance_date = t1.pho_date
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.staff_info_id
            ,c3.phone
            ,c3.pho_date
            ,count(c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                   ,c1.phone
                   ,c1.pho_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.phone
                    ,c1.pho_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.staff_info_id = c1.staff_info_id and t1.pho_date = c1.pho_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2,3
    ) c2 on  c2.staff_info_id = a1.staff_info_id and c2.pho_date = a1.attendance_date
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.pho_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = a1.staff_info_id and  ci.pho_date = a1.attendance_date
left join
    (
        select
            a1.staff_info_id
           ,a1.pho_date
           ,count(pr.id) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.pho_date
                    ,count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) phone_count
                from t t1
                group by 1,2
                having count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) = 0
            ) a1
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.pho_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.pho_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = t1.staff_info_id and a2.pho_date = a1.attendance_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-12', interval 7 hour) and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and (swa.started_at is not null or swa.end_at is not null)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.phone
            ,a1.pho_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.phone
                    ,t1.pho_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.routed_at
                    ,t1.pho_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.staff_info_id = a2.staff_info_id and a1.pho_date = a2.pho_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    t1.pho_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.staff_info_id 快递员id
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,t1.incoming_count 来电次数
    ,ci.incoming_count 有效接通次数
    ,c2.incoming_count 有效回拨次数
    ,(ci.incoming_count + c2.incoming_count)/t1.incoming_count 有效接线率
    ,case
        when a2.staff_info_id is not null and a2.incoming_count = 0 then '否'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '是'
        when a2.staff_info_id is null and (ci.incoming_count + c2.incoming_count)/t1.incoming_count < 0.5 then '是'
        when a2.staff_info_id is null and (ci.incoming_count + c2.incoming_count)/t1.incoming_count >= 0.5 then '否'
        else null
    end 是否异常
    ,a2.staff_info_id
    ,a2.incoming_count
from
    (
        select
            swa.attendance_date
            ,swa.staff_info_id
        from backyard_pro.staff_work_attendance swa
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
            and (swa.started_at is not null or swa.end_at is not null)
    ) a1
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2
    ) t1 on a1.staff_info_id = t1.staff_info_id and a1.attendance_date = t1.pho_date
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.staff_info_id
            ,c3.phone
            ,c3.pho_date
            ,count(c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                   ,c1.phone
                   ,c1.pho_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.phone
                    ,c1.pho_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.staff_info_id = c1.staff_info_id and t1.pho_date = c1.pho_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2,3
    ) c2 on  c2.staff_info_id = a1.staff_info_id and c2.pho_date = a1.attendance_date
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.pho_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = a1.staff_info_id and  ci.pho_date = a1.attendance_date
left join
    (
        select
            a1.staff_info_id
           ,a1.pho_date
           ,count(pr.id) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.pho_date
                    ,count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) phone_count
                from t t1
                group by 1,2
                having (count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) = 0 count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) is null)
            ) a1
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.pho_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.pho_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = t1.staff_info_id and a2.pho_date = a1.attendance_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-12', interval 7 hour) and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and (swa.started_at is not null or swa.end_at is not null)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.phone
            ,a1.pho_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.phone
                    ,t1.pho_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.routed_at
                    ,t1.pho_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.staff_info_id = a2.staff_info_id and a1.pho_date = a2.pho_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    t1.pho_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.staff_info_id 快递员id
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,t1.incoming_count 来电次数
    ,ci.incoming_count 有效接通次数
    ,c2.incoming_count 有效回拨次数
    ,(ci.incoming_count + c2.incoming_count)/t1.incoming_count 有效接线率
    ,case
        when a2.staff_info_id is not null and a2.incoming_count = 0 then '否'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '是'
        when a2.staff_info_id is null and (ci.incoming_count + c2.incoming_count)/t1.incoming_count < 0.5 then '是'
        when a2.staff_info_id is null and (ci.incoming_count + c2.incoming_count)/t1.incoming_count >= 0.5 then '否'
        else null
    end 是否异常
    ,a2.staff_info_id
    ,a2.incoming_count
from
    (
        select
            swa.attendance_date
            ,swa.staff_info_id
        from backyard_pro.staff_work_attendance swa
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
            and (swa.started_at is not null or swa.end_at is not null)
    ) a1
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2
    ) t1 on a1.staff_info_id = t1.staff_info_id and a1.attendance_date = t1.pho_date
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.staff_info_id
            ,c3.phone
            ,c3.pho_date
            ,count(c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                   ,c1.phone
                   ,c1.pho_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.phone
                    ,c1.pho_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.staff_info_id = c1.staff_info_id and t1.pho_date = c1.pho_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2,3
    ) c2 on  c2.staff_info_id = a1.staff_info_id and c2.pho_date = a1.attendance_date
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.pho_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = a1.staff_info_id and  ci.pho_date = a1.attendance_date
left join
    (
        select
            a1.staff_info_id
           ,a1.pho_date
           ,count(pr.id) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.pho_date
                    ,count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) phone_count
                from t t1
                group by 1,2
                having (count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) = 0 or count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) is null)
            ) a1
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.pho_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.pho_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = t1.staff_info_id and a2.pho_date = a1.attendance_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-12', interval 7 hour) and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and (swa.started_at is not null or swa.end_at is not null)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.phone
            ,a1.pho_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.phone
                    ,t1.pho_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.routed_at
                    ,t1.pho_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.staff_info_id = a2.staff_info_id and a1.pho_date = a2.pho_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    t1.pho_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.staff_info_id 快递员id
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,coalesce(t1.incoming_count, 0) 来电次数
    ,coalesce(ci.incoming_count, 0) 有效接通次数
    ,coalesce(c2.incoming_count, 0) 有效回拨次数
    ,(coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) 有效接线率
    ,case
        when a2.staff_info_id is not null and a2.incoming_count = 0 then '否'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '是'
        when a2.staff_info_id is null and (ci.incoming_count + c2.incoming_count)/t1.incoming_count < 0.5 then '是'
        when a2.staff_info_id is null and (ci.incoming_count + c2.incoming_count)/t1.incoming_count >= 0.5 then '否'
        else null
    end 是否异常
    ,a2.staff_info_id
    ,a2.incoming_count
from
    (
        select
            swa.attendance_date
            ,swa.staff_info_id
        from backyard_pro.staff_work_attendance swa
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
            and (swa.started_at is not null or swa.end_at is not null)
    ) a1
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2
    ) t1 on a1.staff_info_id = t1.staff_info_id and a1.attendance_date = t1.pho_date
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.staff_info_id
            ,c3.phone
            ,c3.pho_date
            ,count(c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                   ,c1.phone
                   ,c1.pho_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.phone
                    ,c1.pho_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.staff_info_id = c1.staff_info_id and t1.pho_date = c1.pho_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2,3
    ) c2 on  c2.staff_info_id = a1.staff_info_id and c2.pho_date = a1.attendance_date
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.pho_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = a1.staff_info_id and  ci.pho_date = a1.attendance_date
left join
    (
        select
            a1.staff_info_id
           ,a1.pho_date
           ,count(pr.id) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.pho_date
                    ,count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) phone_count
                from t t1
                group by 1,2
                having (count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) = 0 or count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) is null)
            ) a1
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.pho_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.pho_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = t1.staff_info_id and a2.pho_date = a1.attendance_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-12', interval 7 hour) and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and (swa.started_at is not null or swa.end_at is not null)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.phone
            ,a1.pho_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.phone
                    ,t1.pho_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.routed_at
                    ,t1.pho_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.staff_info_id = a2.staff_info_id and a1.pho_date = a2.pho_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    t1.pho_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.staff_info_id 快递员id
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,coalesce(t1.incoming_count, 0) 来电次数
    ,coalesce(ci.incoming_count, 0) 有效接通次数
    ,coalesce(c2.incoming_count, 0) 有效回拨次数
    ,(coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) 有效接线率
    ,case
        when a2.staff_info_id is not null and a2.incoming_count = 0 then '否'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '是'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) < 0.5 then '是'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) >= 0.5 then '否'
        else null
    end 是否异常
    ,a2.staff_info_id
    ,a2.incoming_count
from
    (
        select
            swa.attendance_date
            ,swa.staff_info_id
        from backyard_pro.staff_work_attendance swa
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
            and (swa.started_at is not null or swa.end_at is not null)
    ) a1
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2
    ) t1 on a1.staff_info_id = t1.staff_info_id and a1.attendance_date = t1.pho_date
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.staff_info_id
            ,c3.phone
            ,c3.pho_date
            ,count(c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                   ,c1.phone
                   ,c1.pho_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.phone
                    ,c1.pho_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.staff_info_id = c1.staff_info_id and t1.pho_date = c1.pho_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2,3
    ) c2 on  c2.staff_info_id = a1.staff_info_id and c2.pho_date = a1.attendance_date
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.pho_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = a1.staff_info_id and  ci.pho_date = a1.attendance_date
left join
    (
        select
            a1.staff_info_id
           ,a1.pho_date
           ,count(pr.id) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.pho_date
                    ,count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) phone_count
                from t t1
                group by 1,2
                having (count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) = 0 or count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) is null)
            ) a1
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.pho_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.pho_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = t1.staff_info_id and a2.pho_date = a1.attendance_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-12', interval 7 hour) and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and (swa.started_at is not null or swa.end_at is not null)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.phone
            ,a1.pho_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.phone
                    ,t1.pho_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.routed_at
                    ,t1.pho_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.staff_info_id = a2.staff_info_id and a1.pho_date = a2.pho_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    a1.attendance_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.staff_info_id 快递员id
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,coalesce(t1.incoming_count, 0) 来电次数
    ,coalesce(ci.incoming_count, 0) 有效接通次数
    ,coalesce(c2.incoming_count, 0) 有效回拨次数
    ,(coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) 有效接线率
    ,case
        when a2.staff_info_id is not null and a2.incoming_count = 0 then '否'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '是'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) < 0.5 then '是'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) >= 0.5 then '否'
        else null
    end 是否异常
    ,a2.staff_info_id
    ,a2.incoming_count
from
    (
        select
            swa.attendance_date
            ,swa.staff_info_id
        from backyard_pro.staff_work_attendance swa
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
            and (swa.started_at is not null or swa.end_at is not null)
    ) a1
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2
    ) t1 on a1.staff_info_id = t1.staff_info_id and a1.attendance_date = t1.pho_date
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.staff_info_id
            ,c3.phone
            ,c3.pho_date
            ,count(c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                   ,c1.phone
                   ,c1.pho_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.phone
                    ,c1.pho_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.staff_info_id = c1.staff_info_id and t1.pho_date = c1.pho_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2,3
    ) c2 on  c2.staff_info_id = a1.staff_info_id and c2.pho_date = a1.attendance_date
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.pho_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = a1.staff_info_id and  ci.pho_date = a1.attendance_date
left join
    (
        select
            a1.staff_info_id
           ,a1.pho_date
           ,count(pr.id) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.pho_date
                    ,count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) phone_count
                from t t1
                group by 1,2
                having (count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) = 0 or count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) is null)
            ) a1
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.pho_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.pho_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = a1.staff_info_id and a2.pho_date = a1.attendance_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-12', interval 7 hour) and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and (swa.started_at is not null or swa.end_at is not null)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.phone
            ,a1.pho_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.phone
                    ,t1.pho_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.routed_at
                    ,t1.pho_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.staff_info_id = a2.staff_info_id and a1.pho_date = a2.pho_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    a1.attendance_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.staff_info_id 快递员id
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,coalesce(t1.incoming_count, 0) 来电次数
    ,coalesce(ci.incoming_count, 0) 有效接通次数
    ,coalesce(c2.incoming_count, 0) 有效回拨次数
    ,(coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) 有效接线率
    ,case
        when a2.staff_info_id is not null and (a2.incoming_count = 0 or a2.incoming_count is null) then '否'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '是'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) < 0.5 then '是'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) >= 0.5 then '否'
        else null
    end 是否异常
    ,a2.staff_info_id
    ,a2.incoming_count
from
    (
        select
            swa.attendance_date
            ,swa.staff_info_id
        from backyard_pro.staff_work_attendance swa
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
            and (swa.started_at is not null or swa.end_at is not null)
    ) a1
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2
    ) t1 on a1.staff_info_id = t1.staff_info_id and a1.attendance_date = t1.pho_date
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.staff_info_id
            ,c3.phone
            ,c3.pho_date
            ,count(c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                   ,c1.phone
                   ,c1.pho_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.phone
                    ,c1.pho_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.staff_info_id = c1.staff_info_id and t1.pho_date = c1.pho_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2,3
    ) c2 on  c2.staff_info_id = a1.staff_info_id and c2.pho_date = a1.attendance_date
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.pho_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = a1.staff_info_id and  ci.pho_date = a1.attendance_date
left join
    (
        select
            a1.staff_info_id
           ,a1.pho_date
           ,count(pr.id) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.pho_date
                    ,count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) phone_count
                from t t1
                group by 1,2
                having (count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) = 0 or count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) is null)
            ) a1
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.pho_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.pho_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = a1.staff_info_id and a2.pho_date = a1.attendance_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-12', interval 7 hour) and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and (swa.started_at is not null or swa.end_at is not null)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.phone
            ,a1.pho_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.phone
                    ,t1.pho_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.routed_at
                    ,t1.pho_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.staff_info_id = a2.staff_info_id and a1.pho_date = a2.pho_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    a1.attendance_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.staff_info_id 快递员id
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,coalesce(t1.incoming_count, 0) 来电次数
    ,coalesce(ci.incoming_count, 0) 有效接通次数
    ,coalesce(c2.incoming_count, 0) 有效回拨次数
    ,(coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) 有效接线率
    ,case
        when a2.staff_info_id is not null and (a2.incoming_count = 0 or a2.incoming_count is null) then '否'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '异常'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) < 0.5 then '异常'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) >= 0.5 then '否'
        else null
    end 是否异常
    ,a2.staff_info_id
    ,a2.incoming_count
from
    (
        select
            swa.attendance_date
            ,swa.staff_info_id
        from backyard_pro.staff_work_attendance swa
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
            and (swa.started_at is not null or swa.end_at is not null)
    ) a1
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2
    ) t1 on a1.staff_info_id = t1.staff_info_id and a1.attendance_date = t1.pho_date
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.staff_info_id
            ,c3.phone
            ,c3.pho_date
            ,count(c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                   ,c1.phone
                   ,c1.pho_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.phone
                    ,c1.pho_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.staff_info_id = c1.staff_info_id and t1.pho_date = c1.pho_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2,3
    ) c2 on  c2.staff_info_id = a1.staff_info_id and c2.pho_date = a1.attendance_date
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.pho_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = a1.staff_info_id and  ci.pho_date = a1.attendance_date
left join
    (
        select
            a1.staff_info_id
           ,a1.pho_date
           ,count(pr.id) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.pho_date
                    ,count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) phone_count
                from t t1
                group by 1,2
                having (count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) = 0 or count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) is null)
            ) a1
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.pho_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.pho_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = a1.staff_info_id and a2.pho_date = a1.attendance_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-12', interval 7 hour) and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and (swa.started_at is not null or swa.end_at is not null)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.phone
            ,a1.pho_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.phone
                    ,t1.pho_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.routed_at
                    ,t1.pho_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.staff_info_id = a2.staff_info_id and a1.pho_date = a2.pho_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
# select
#     a1.attendance_date 日期
#     ,dt.region_name 大区
#     ,dt.piece_name 片区
#     ,dt.store_name 网点
#     ,a1.staff_info_id 快递员id
#     ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
#     ,coalesce(t1.incoming_count, 0) 来电次数
#     ,coalesce(ci.incoming_count, 0) 有效接通次数
#     ,coalesce(c2.incoming_count, 0) 有效回拨次数
#     ,(coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) 有效接线率
#     ,case
#         when a2.staff_info_id is not null and (a2.incoming_count = 0 or a2.incoming_count is null) then '否'
#         when a2.staff_info_id is not null and a2.incoming_count > 0 then '异常'
#         when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) < 0.5 then '异常'
#         when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) >= 0.5 then '否'
#         else null
#     end 是否异常
#     ,a2.staff_info_id
#     ,a2.incoming_count
# from
#     (
#         select
#             swa.attendance_date
#             ,swa.staff_info_id
#         from backyard_pro.staff_work_attendance swa
#         left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
#         where
#             swa.attendance_date >= '${s_date}'
#             and swa.attendance_date <= '${e_date}'
#             and swa.job_title in (13,110,45)
#             and hsi.formal = 1
#             and hsi.is_sub_staff = 0
#             and (swa.started_at is not null or swa.end_at is not null)
#     ) a1
# left join
#     (
#         select
#             t1.staff_info_id
#             ,t1.pho_date
#             ,count(distinct t1.phone) incoming_count
#         from t t1
#         where
#             t1.phone_type = 'in_coming'
#         group by 1,2
#     ) t1 on a1.staff_info_id = t1.staff_info_id and a1.attendance_date = t1.pho_date
# left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a1.staff_info_id
# left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
# left join
#     (
#         select
#             c3.staff_info_id
#             ,c3.phone
#             ,c3.pho_date
#             ,count(c3.phone) incoming_count
#         from
#             (
#                 select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
#                     c1.staff_info_id
#                    ,c1.phone
#                    ,c1.pho_date
#                 from cb c1
#                 where
#                     c1.call_num > 0
#                     or c1.diao_num >= 10
#                 group by 1,2,3
#
#                 union
#
#                 select
#                     c1.staff_info_id
#                     ,c1.phone
#                     ,c1.pho_date
#                 from cb c1
#                 join t t1 on t1.phone = c1.phone and t1.staff_info_id = c1.staff_info_id and t1.pho_date = c1.pho_date
#                 where
#                     t1.call_num >= 8
#                 group by 1,2,3
#             ) c3
#         group by 1,2,3
#     ) c2 on  c2.staff_info_id = a1.staff_info_id and c2.pho_date = a1.attendance_date
# left join
#     (
#         select
#             t1.staff_info_id
#             ,t1.pho_date
#             ,count(distinct t1.phone) incoming_count
#         from t t1
#         left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.pho_date = t1.pho_date
#         where
#             c1.phone is null
#             and t1.phone_type = 'in_coming'
#             and t1.call_num >= 8
#         group by 1,2
#     ) ci on ci.staff_info_id = a1.staff_info_id and  ci.pho_date = a1.attendance_date
# left join
#     (
#         select
#             a1.staff_info_id
#            ,a1.pho_date
#            ,count(pr.id) incoming_count
#         from
#             (
                select
                    t1.staff_info_id
                    ,t1.pho_date
                    ,count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) phone_count
                from t t1
                group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,swa.attendance_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-12', interval 7 hour) and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and (swa.started_at is not null or swa.end_at is not null)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.phone
            ,a1.attendance_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.phone
                    ,t1.attendance_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.routed_at
                    ,t1.attendance_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.staff_info_id = a2.staff_info_id and a1.attendance_date = a2.attendance_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    a1.attendance_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.staff_info_id 快递员id
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,coalesce(t1.incoming_count, 0) 来电次数
    ,coalesce(ci.incoming_count, 0) 有效接通次数
    ,coalesce(c2.incoming_count, 0) 有效回拨次数
    ,(coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) 有效接线率
    ,case
        when a2.staff_info_id is not null and (a2.incoming_count = 0 or a2.incoming_count is null) then '否'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '异常'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) < 0.5 then '异常'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) >= 0.5 then '否'
        else null
    end 是否异常
    ,a2.staff_info_id
    ,a2.incoming_count
from
    (
        select
            swa.attendance_date
            ,swa.staff_info_id
        from backyard_pro.staff_work_attendance swa
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
            and (swa.started_at is not null or swa.end_at is not null)
    ) a1
left join
    (
        select
            t1.staff_info_id
            ,t1.attendance_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2
    ) t1 on a1.staff_info_id = t1.staff_info_id and a1.attendance_date = t1.attendance_date
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.staff_info_id
            ,c3.phone
            ,c3.attendance_date
            ,count(c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                   ,c1.phone
                   ,c1.attendance_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.phone
                    ,c1.attendance_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.staff_info_id = c1.staff_info_id and t1.pho_date = c1.pho_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2,3
    ) c2 on  c2.staff_info_id = a1.staff_info_id and c2.pho_date = a1.attendance_date
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.pho_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = a1.staff_info_id and  ci.pho_date = a1.attendance_date
left join
    (
        select
            a1.staff_info_id
           ,a1.attendance_date
           ,count(pr.id) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.pho_date
                    ,count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) phone_count
                from t t1
                group by 1,2
                having (count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) = 0 or count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) is null)
            ) a1
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.pho_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.pho_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = a1.staff_info_id and a2.attendance_date = a1.attendance_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,swa.attendance_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-12', interval 7 hour) and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and (swa.started_at is not null or swa.end_at is not null)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.phone
            ,a1.attendance_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.phone
                    ,t1.attendance_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.routed_at
                    ,t1.attendance_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.staff_info_id = a2.staff_info_id and a1.attendance_date = a2.attendance_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    a1.attendance_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.staff_info_id 快递员id
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,coalesce(t1.incoming_count, 0) 来电次数
    ,coalesce(ci.incoming_count, 0) 有效接通次数
    ,coalesce(c2.incoming_count, 0) 有效回拨次数
    ,(coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) 有效接线率
    ,case
        when a2.staff_info_id is not null and (a2.incoming_count = 0 or a2.incoming_count is null) then '否'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '异常'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) < 0.5 then '异常'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) >= 0.5 then '否'
        else null
    end 是否异常
    ,a2.staff_info_id
    ,a2.incoming_count
from
    (
        select
            swa.attendance_date
            ,swa.staff_info_id
        from backyard_pro.staff_work_attendance swa
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
            and (swa.started_at is not null or swa.end_at is not null)
    ) a1
left join
    (
        select
            t1.staff_info_id
            ,t1.attendance_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2
    ) t1 on a1.staff_info_id = t1.staff_info_id and a1.attendance_date = t1.attendance_date
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.staff_info_id
            ,c3.phone
            ,c3.attendance_date
            ,count(c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                   ,c1.phone
                   ,c1.attendance_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.phone
                    ,c1.attendance_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.staff_info_id = c1.staff_info_id and t1.attendance_date = c1.attendance_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2,3
    ) c2 on  c2.staff_info_id = a1.staff_info_id and c2.attendance_date = a1.attendance_date
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.attendance_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = a1.staff_info_id and  ci.pho_date = a1.attendance_date
left join
    (
        select
            a1.staff_info_id
           ,a1.attendance_date
           ,count(pr.id) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.pho_date
                    ,count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) phone_count
                from t t1
                group by 1,2
                having (count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) = 0 or count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) is null)
            ) a1
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.pho_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.pho_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = a1.staff_info_id and a2.attendance_date = a1.attendance_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,swa.attendance_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-12', interval 7 hour) and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and (swa.started_at is not null or swa.end_at is not null)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.phone
            ,a1.attendance_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.phone
                    ,t1.attendance_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.routed_at
                    ,t1.attendance_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.staff_info_id = a2.staff_info_id and a1.attendance_date = a2.attendance_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    a1.attendance_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.staff_info_id 快递员id
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,coalesce(t1.incoming_count, 0) 来电次数
    ,coalesce(ci.incoming_count, 0) 有效接通次数
    ,coalesce(c2.incoming_count, 0) 有效回拨次数
    ,(coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) 有效接线率
    ,case
        when a2.staff_info_id is not null and (a2.incoming_count = 0 or a2.incoming_count is null) then '否'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '异常'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) < 0.5 then '异常'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) >= 0.5 then '否'
        else null
    end 是否异常
    ,a2.staff_info_id
    ,a2.incoming_count
from
    (
        select
            swa.attendance_date
            ,swa.staff_info_id
        from backyard_pro.staff_work_attendance swa
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
            and (swa.started_at is not null or swa.end_at is not null)
    ) a1
left join
    (
        select
            t1.staff_info_id
            ,t1.attendance_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2
    ) t1 on a1.staff_info_id = t1.staff_info_id and a1.attendance_date = t1.attendance_date
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.staff_info_id
            ,c3.phone
            ,c3.attendance_date
            ,count(c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                   ,c1.phone
                   ,c1.attendance_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.phone
                    ,c1.attendance_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.staff_info_id = c1.staff_info_id and t1.attendance_date = c1.attendance_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2,3
    ) c2 on  c2.staff_info_id = a1.staff_info_id and c2.attendance_date = a1.attendance_date
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.attendance_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = a1.staff_info_id and  ci.pho_date = a1.attendance_date
left join
    (
        select
            a1.staff_info_id
           ,a1.attendance_date
           ,count(pr.id) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.attendance_date
                    ,count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) phone_count
                from t t1
                group by 1,2
                having (count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) = 0 or count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) is null)
            ) a1
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.pho_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.pho_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = a1.staff_info_id and a2.attendance_date = a1.attendance_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,swa.attendance_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-12', interval 7 hour) and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and (swa.started_at is not null or swa.end_at is not null)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.phone
            ,a1.attendance_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.phone
                    ,t1.attendance_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.routed_at
                    ,t1.attendance_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.staff_info_id = a2.staff_info_id and a1.attendance_date = a2.attendance_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    a1.attendance_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.staff_info_id 快递员id
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,coalesce(t1.incoming_count, 0) 来电次数
    ,coalesce(ci.incoming_count, 0) 有效接通次数
    ,coalesce(c2.incoming_count, 0) 有效回拨次数
    ,(coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) 有效接线率
    ,case
        when a2.staff_info_id is not null and (a2.incoming_count = 0 or a2.incoming_count is null) then '否'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '异常'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) < 0.5 then '异常'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) >= 0.5 then '否'
        else null
    end 是否异常
    ,a2.staff_info_id
    ,a2.incoming_count
from
    (
        select
            swa.attendance_date
            ,swa.staff_info_id
        from backyard_pro.staff_work_attendance swa
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,45)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
            and (swa.started_at is not null or swa.end_at is not null)
    ) a1
left join
    (
        select
            t1.staff_info_id
            ,t1.attendance_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2
    ) t1 on a1.staff_info_id = t1.staff_info_id and a1.attendance_date = t1.attendance_date
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.staff_info_id
            ,c3.phone
            ,c3.attendance_date
            ,count(c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                   ,c1.phone
                   ,c1.attendance_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.phone
                    ,c1.attendance_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.staff_info_id = c1.staff_info_id and t1.attendance_date = c1.attendance_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2,3
    ) c2 on  c2.staff_info_id = a1.staff_info_id and c2.attendance_date = a1.attendance_date
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.attendance_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = a1.staff_info_id and  ci.pho_date = a1.attendance_date
left join
    (
        select
            a1.staff_info_id
           ,a1.attendance_date
           ,count(pr.id) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.attendance_date
                    ,count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) phone_count
                from t t1
                group by 1,2
                having (count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) = 0 or count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) is null)
            ) a1
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.attendance_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.attendance_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = a1.staff_info_id and a2.attendance_date = a1.attendance_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,swa.attendance_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-12', interval 7 hour) and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,452)
            and (swa.started_at is not null or swa.end_at is not null)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.phone
            ,a1.attendance_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.phone
                    ,t1.attendance_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.routed_at
                    ,t1.attendance_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.staff_info_id = a2.staff_info_id and a1.attendance_date = a2.attendance_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    a1.attendance_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.staff_info_id 快递员id
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,coalesce(t1.incoming_count, 0) 来电次数
    ,coalesce(ci.incoming_count, 0) 有效接通次数
    ,coalesce(c2.incoming_count, 0) 有效回拨次数
    ,(coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) 有效接线率
    ,case
        when a2.staff_info_id is not null and (a2.incoming_count = 0 or a2.incoming_count is null) then '否'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '异常'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) < 0.5 then '异常'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) >= 0.5 then '否'
        else null
    end 是否异常
    ,a2.staff_info_id
    ,a2.incoming_count
from
    (
        select
            swa.attendance_date
            ,swa.staff_info_id
        from backyard_pro.staff_work_attendance swa
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,452)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
            and (swa.started_at is not null or swa.end_at is not null)
    ) a1
left join
    (
        select
            t1.staff_info_id
            ,t1.attendance_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2
    ) t1 on a1.staff_info_id = t1.staff_info_id and a1.attendance_date = t1.attendance_date
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.staff_info_id
            ,c3.phone
            ,c3.attendance_date
            ,count(c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                   ,c1.phone
                   ,c1.attendance_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.phone
                    ,c1.attendance_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.staff_info_id = c1.staff_info_id and t1.attendance_date = c1.attendance_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2,3
    ) c2 on  c2.staff_info_id = a1.staff_info_id and c2.attendance_date = a1.attendance_date
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.attendance_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = a1.staff_info_id and  ci.pho_date = a1.attendance_date
left join
    (
        select
            a1.staff_info_id
           ,a1.attendance_date
           ,count(pr.id) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.attendance_date
                    ,count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) phone_count
                from t t1
                group by 1,2
                having (count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) = 0 or count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) is null)
            ) a1
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.attendance_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.attendance_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = a1.staff_info_id and a2.attendance_date = a1.attendance_date;
;-- -. . -..- - / . -. - .-. -.--
select
            swa.attendance_date
            ,swa.staff_info_id
        from backyard_pro.staff_work_attendance swa
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,452)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
            and (swa.started_at is not null or swa.end_at is not null);
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,swa.attendance_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-12', interval 7 hour) and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,452)
            and (swa.started_at is not null or swa.end_at is not null)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.phone
            ,a1.attendance_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.phone
                    ,t1.attendance_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.routed_at
                    ,t1.attendance_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.staff_info_id = a2.staff_info_id and a1.attendance_date = a2.attendance_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    a1.attendance_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.staff_info_id 快递员id
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,coalesce(t1.incoming_count, 0) 来电次数
    ,coalesce(ci.incoming_count, 0) 有效接通次数
    ,coalesce(c2.incoming_count, 0) 有效回拨次数
    ,(coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) 有效接线率
    ,case
        when a2.staff_info_id is not null and (a2.incoming_count = 0 or a2.incoming_count is null) then '否'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '异常'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) < 0.5 then '异常'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) >= 0.5 then '否'
        else null
    end 是否异常
    ,a2.staff_info_id
    ,a2.incoming_count
from
    (
        select
            swa.attendance_date
            ,swa.staff_info_id
        from backyard_pro.staff_work_attendance swa
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-12'
            and swa.attendance_date <= '2023-12-12'
            and swa.job_title in (13,110,452)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
            and (swa.started_at is not null or swa.end_at is not null)
    ) a1
left join
    (
        select
            t1.staff_info_id
            ,t1.attendance_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2
    ) t1 on a1.staff_info_id = t1.staff_info_id and a1.attendance_date = t1.attendance_date
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.staff_info_id
            ,c3.attendance_date
            ,count(c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                   ,c1.phone
                   ,c1.attendance_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.phone
                    ,c1.attendance_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.staff_info_id = c1.staff_info_id and t1.attendance_date = c1.attendance_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2
    ) c2 on  c2.staff_info_id = a1.staff_info_id and c2.attendance_date = a1.attendance_date
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.attendance_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = a1.staff_info_id and  ci.pho_date = a1.attendance_date
left join
    (
        select
            a1.staff_info_id
           ,a1.attendance_date
           ,count(pr.id) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.attendance_date
                    ,count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) phone_count
                from t t1
                group by 1,2
                having (count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) = 0 or count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) is null)
            ) a1
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.attendance_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.attendance_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = a1.staff_info_id and a2.attendance_date = a1.attendance_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,swa.attendance_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-11', interval 7 hour) and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-11'
            and swa.attendance_date <= '2023-12-11'
            and swa.job_title in (13,110,452)
            and (swa.started_at is not null or swa.end_at is not null)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.phone
            ,a1.attendance_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.phone
                    ,t1.attendance_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.routed_at
                    ,t1.attendance_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.staff_info_id = a2.staff_info_id and a1.attendance_date = a2.attendance_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    a1.attendance_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.staff_info_id 快递员id
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,coalesce(t1.incoming_count, 0) 来电次数
    ,coalesce(ci.incoming_count, 0) 有效接通次数
    ,coalesce(c2.incoming_count, 0) 有效回拨次数
    ,(coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) 有效接线率
    ,case
        when a2.staff_info_id is not null and (a2.incoming_count = 0 or a2.incoming_count is null) then '否'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '异常'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) < 0.5 then '异常'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) >= 0.5 then '否'
        else null
    end 是否异常
    ,a2.staff_info_id
    ,a2.incoming_count
from
    (
        select
            swa.attendance_date
            ,swa.staff_info_id
        from backyard_pro.staff_work_attendance swa
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-11'
            and swa.attendance_date <= '2023-12-11'
            and swa.job_title in (13,110,452)
            and hsi.formal = 1
            and hsi.is_sub_staff = 0
            and (swa.started_at is not null or swa.end_at is not null)
    ) a1
left join
    (
        select
            t1.staff_info_id
            ,t1.attendance_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2
    ) t1 on a1.staff_info_id = t1.staff_info_id and a1.attendance_date = t1.attendance_date
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.staff_info_id
            ,c3.attendance_date
            ,count(c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                   ,c1.phone
                   ,c1.attendance_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.phone
                    ,c1.attendance_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.staff_info_id = c1.staff_info_id and t1.attendance_date = c1.attendance_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2
    ) c2 on  c2.staff_info_id = a1.staff_info_id and c2.attendance_date = a1.attendance_date
left join
    (
        select
            t1.staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.attendance_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = a1.staff_info_id and  ci.pho_date = a1.attendance_date
left join
    (
        select
            a1.staff_info_id
           ,a1.attendance_date
           ,count(pr.id) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.attendance_date
                    ,count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) phone_count
                from t t1
                group by 1,2
                having (count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) = 0 or count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) is null)
            ) a1
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.attendance_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.attendance_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = a1.staff_info_id and a2.attendance_date = a1.attendance_date;
;-- -. . -..- - / . -. - .-. -.--
select
    pr.*
from rot_pro.parcel_route pr
left join fle_staging.parcel_info pi on pi.pno = pr.pno
where
    pr.marker_category = 2
    and pr.routed_at > '2023-10-10 17:00:00'
    and pr.routed_at < '2023-10-11 17:00:00'
    and pi.client_id = 'CAZ5422';
;-- -. . -..- - / . -. - .-. -.--
select
    pr.*
from rot_pro.parcel_route pr
left join fle_staging.parcel_info pi on pi.pno = pr.pno
where
    -- pr.marker_category = 2
    pr.route_action = 'DELIVERY_MARKER'
    and pr.routed_at > '2023-10-10 17:00:00'
    and pr.routed_at < '2023-10-11 17:00:00'
    and pi.client_id = 'CAZ5422';
;-- -. . -..- - / . -. - .-. -.--
select
    pr.*
from rot_pro.parcel_route pr
left join fle_staging.parcel_info pi on pi.pno = pr.pno
where
    -- pr.marker_category = 2
    pr.routed_at > '2023-10-10 17:00:00'
    and pr.routed_at < '2023-10-11 17:00:00'
    and pi.client_id = 'CAZ5422';
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
            a.*
        from
            (
                select
                    plt.pno
                    ,if(pi.dst_store_id = 'TH05110303', pcd.old_value, pi.dst_store_id) dst_store
                    ,plt.last_valid_store_id
                    ,plt.updated_at
                    ,plt.created_at
                    ,plt.parcel_created_at
                    ,plt.last_valid_action
                    ,plt.source
                    ,plt.id
                from bi_pro.parcel_lose_task plt
                left join fle_staging.parcel_info pi on pi.pno = plt.pno and pi.created_at > '2023-10-20'
                left join fle_staging.parcel_change_detail pcd on pcd.pno = plt.pno and pcd.field_name = 'dst_store_id' and pcd.new_value = pi.dst_store_id
                where
                    plt.state = 6
                    and plt.duty_result = 1
                    and plt.source in (1,12)
                    and plt.parcel_created_at >= '2023-11-01'
                    and plt.penalties > 0
                group by 1,2,3,4,5,6,7,8
            ) a
        where
            a.last_valid_store_id = a.dst_store
    )
, f as
    (
        select
            a2.*
            ,datediff(a2.created_at, a2.first_valid_routed_at) stay_length
        from
            (
                select
                    a.*
                from
                    (
                        select
                            t1.*
                            ,pssn.first_valid_routed_at
                            ,date(pssn.first_valid_routed_at) valid_date
                            ,row_number() over (partition by t1.pno order by pssn.first_valid_routed_at desc) rn
                        from t t1
                        left join dw_dmd.parcel_store_stage_new pssn on t1.dst_store = pssn.store_id and t1.pno = pssn.pno
                    ) a
                where
                    a.rn = 1
            ) a2
        where
            datediff(a2.created_at, a2.first_valid_routed_at) >= 5
    )
select
    f1.pno
    ,case f1.source
        WHEN 1 THEN 'A-问题件-丢失'
        WHEN 2 THEN 'B-记录本-丢失'
        WHEN 3 THEN 'C-包裹状态未更新'
        WHEN 4 THEN 'D-问题件-破损/短少'
        WHEN 5 THEN 'E-记录本-索赔-丢失'
        WHEN 6 THEN 'F-记录本-索赔-破损/短少'
        WHEN 7 THEN 'G-记录本-索赔-其他'
        WHEN 8 THEN 'H-包裹状态未更新-IPC计数'
        WHEN 9 THEN 'I-问题件-外包装破损险'
        WHEN 10 THEN 'J-问题记录本-外包装破损险'
        when 11 then 'K-超时效包裹'
        when 12 then 'L-高度疑似丢失'
    end 问题来源渠道
    ,f1.parcel_created_at 包裹揽收时间
    ,f1.created_at 任务生成时间
    ,f1.updated_at 判责时间
    ,ddd.CN_element 最后有效路由
    ,f1.stay_length 滞留时长
    ,tra.tra_count 转单次数
    ,tra.tra_time 转单时间
    ,sc.mark 20点后标记
    ,sc.mark_count 20点后标记次数
    ,sc.mark_time 20点后标记时间
    ,pi.cod_amount/100 cod金额
    ,ch.change_count 收件人改约次数
    ,sc1.diff_hour 收件人改约时长
    ,if(am.pno is null, 'n', 'y') 是否有丢失申诉
    ,if(foc.pno is null, 'n', 'y' ) 是否有强制拍照
    ,du.duty_store 责任网点
    ,if(dt.双重预警 = 'Alert', '是', '否') 当日是否爆仓
from f f1
left join fle_staging.parcel_info pi on pi.pno = f1.pno and pi.created_at > '2023-10-20'
left join
    (
        select
            t1.pno
            ,count(distinct pr.id) tra_count
            ,group_concat(convert_tz(pr.routed_at, '+00:00', '+07:00')) tra_time
        from rot_pro.parcel_route pr
        join  t t1 on t1.pno = pr.pno
        where
            pr.routed_at > '2023-10-30'
            and pr.route_action = 'DELIVERY_TRANSFER'
        group by 1
        having count(distinct pr.id) > 2
    ) tra on tra.pno = f1.pno
left join
    (
        select
            t1.pno
            ,count(pr.id) mark_count
            ,group_concat(ddd.CN_element) mark
            ,group_concat(convert_tz(pr.routed_at, '+00:00', '+07:00')) mark_time
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        left join dwm.dwd_dim_dict ddd on ddd.element = pr.marker_category and ddd.db = 'fle_staging' and ddd.tablename = 'diff_info' and ddd.fieldname ='diff_marker_category'
        where
            pr.routed_at > '2023-10-30'
            and pr.route_action = 'DELIVERY_MARKER'
            and hour(convert_tz(pr.routed_at, '+00:00', '+07:00')) >= 20
        having count(pr.id) > 3
    ) sc on sc.pno = f1.pno
left join
    (
        select
            t1.pno
            ,count(pr.id) change_count
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        left join dwm.dwd_dim_dict ddd on ddd.element = pr.marker_category and ddd.db = 'fle_staging' and ddd.tablename = 'diff_info' and ddd.fieldname ='diff_marker_category'
        where
            pr.routed_at > '2023-10-30'
            and pr.route_action = 'DELIVERY_MARKER'
            and pr.marker_category in (9,14,70)
        group by 1
    ) ch on ch.pno = f1.pno
left join
    (
        select
            t1.pno
            ,timestampdiff(hour, convert_tz(pr.routed_at, '+00:00', '+07:00'), now()) diff_hour
            ,row_number() over (partition by t1.pno order by pr.routed_at) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        left join dwm.dwd_dim_dict ddd on ddd.element = pr.marker_category and ddd.db = 'fle_staging' and ddd.tablename = 'diff_info' and ddd.fieldname ='diff_marker_category'
        where
            pr.routed_at > '2023-10-30'
            and pr.route_action = 'DELIVERY_MARKER'
            and pr.marker_category in (9,14,70)
    ) sc1 on sc1.pno = f1.pno and sc1.rk = 1
left join
    (
        select
            t1.pno
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        left join dwm.dwd_dim_dict ddd on ddd.element = pr.marker_category and ddd.db = 'fle_staging' and ddd.tablename = 'diff_info' and ddd.fieldname ='diff_marker_category'
        where
            pr.routed_at > '2023-10-30'
            and pr.route_action = 'FORCE_TAKE_PHOTO'
        group by 1
    ) foc on foc.pno = f1.pno
left join
    (
        select
            t1.pno
            ,group_concat(distinct ss.name) duty_store
        from bi_pro.parcel_lose_responsible plr
        join t t1 on t1.id = plr.lose_task_id
        left join fle_staging.sys_store ss on ss.id = plr.store_id
        where
            plr.created_at > '2023-10-20'
        group by 1
    ) du on du.pno = f1.pno
left join
    (
        select
            t1.pno
        from bi_pro.abnormal_message am
        join t t1 on t1.id = json_extract(am.extra_info, '$.losr_task_id')
        where
            am.created_at > '2023-10-20'
            and am.isappeal > 1
            and am.isdel = 0
        group by 1
    ) am on am.pno = f1.pno
left join dwm.dwd_th_network_spill_detl_rd dt on dt.网点ID = f1.dst_store and dt.统计日期 = f1.valid_date
left join dwm.dwd_dim_dict ddd on ddd.element = f1.last_valid_action and ddd.db = 'rot_pro' and ddd.tablename = 'parcel_route' and ddd.fieldname ='route_action';
;-- -. . -..- - / . -. - .-. -.--
with
 handover2 as
(
    select
        fn.pno
        ,fn.pno_type
        ,fn.store_id
        ,fn.staff_info_id
        ,fn.finished_at
        ,fn.pi_state
    from
        (
            select
                    pr.pno
                    ,pr.store_id
                    ,pr.staff_info_id
                    ,pr.sub_staff_info_id
                    ,pi.state pi_state
                    ,convert_tz(pi.updated_at,'+00:00','+08:00') as pi_updated_at
                    ,if(pi.returned=1,'退件','正向件') as pno_type
                    ,convert_tz(pi.finished_at,'+00:00','+08:00') as finished_at
                from
                    ( # 所有22点前交接包裹找到最后一次交接的人
                        select
                            pr.*
                        from
                            (
                                select
                                    pr.pno
                                    ,rid.staff_info_id
                                    ,pr.store_id
                                    ,rid.sub_staff_info_id
                                    ,row_number() over(partition by pr.pno order by convert_tz(pr.created_at,'+00:00','+08:00') desc) as rnk
                                from fle_staging.`ticket_delivery`  pr
                               join tmpale.staff_info_record_info_day rid on pr.staff_info_id=rid.sub_staff_info_id
                                where
                                pr.created_at >=concat(date_sub(date_sub(curdate(), interval 1 day),interval 1 day), ' 16:00:00')
                                and pr.created_at <concat(date_sub(date_sub(curdate(), interval 1 day),interval 0 day), ' 14:00:00')
                            ) pr
                            where  pr.rnk=1
                    ) pr
                    left join fle_staging.parcel_info pi on pr.pno = pi.pno and pi.created_at >=concat(date_sub(date_sub(curdate(), interval 1 day),interval 60 day), ' 16:00:00') and pi.created_at <concat(date_sub(date_sub(curdate(), interval 1 day),interval 0 day), ' 09:00:00')
        )fn
)
,
 al as
     (
         select
            t1.网点
            ,t1.大区
            ,t1.片区
            ,t1.员工ID
            ,t1.快递员姓名
            ,t1.work_days  在职时长
            ,t1.快递员类型
            ,ifnull(f2.交接量_非退件, 0)+ifnull(ff2.ct, 0) 交接量_非退件
            ,ifnull(f6.非退件妥投量, 0) 非退件妥投量
            ,ifnull(f6.退件妥投量_按地址转换, 0) 退件妥投量_按地址转换
            ,ifnull(f6.非退件妥投量_大件折算, 0 ) 非退件妥投量_大件折算
            ,ifnull(pk.ticket_pickup_cn,0) 揽收任务数
            ,ifnull(pk.pickup_pno_cn,0) 揽收包裹量
            ,f6.finished_at as 22点前快递员结束派件时间
            ,if((ifnull(f2.交接量_非退件,0)+ ifnull(ff2.ct,0))<>0 ,concat(round(f6.非退件妥投量/(ifnull(f2.交接量_非退件,0)+ ifnull(ff2.ct,0))*100,2),'%'),0) as 妥投率
            ,row_number() over (partition by t1.网点 order by ifnull(f6.非退件妥投量, 0)) rk
#                         ,if(f5.staff_info_id is not null, '是', null) 是否出勤不达标
            ,case
                when (ifnull(f6.非退件妥投量_大件折算,0)+ifnull(f6.退件妥投量_按地址转换,0))=0 then '是'
                when t1.网点类型=1 and sdt.total_should_delivery_pno/ss.attendance_staff_cn>=100 and (ifnull(f6.非退件妥投量_大件折算,0)+ifnull(f6.退件妥投量_按地址转换,0))<80  then '是'
                when t1.网点类型=1 and sdt.total_should_delivery_pno/ss.attendance_staff_cn<100 and (ifnull(f6.非退件妥投量_大件折算,0)+ifnull(f6.退件妥投量_按地址转换,0))<sdt.total_should_delivery_pno/ss.attendance_staff_cn*0.8  then '是'
                when t1.网点类型=10 and sdt.total_should_delivery_pno/ss.attendance_staff_cn>=80 and (ifnull(f6.非退件妥投量_大件折算,0)+ifnull(f6.退件妥投量_按地址转换,0))<65  then '是'
                when t1.网点类型=10 and sdt.total_should_delivery_pno/ss.attendance_staff_cn<80 and (ifnull(f6.非退件妥投量_大件折算,0)+ifnull(f6.退件妥投量_按地址转换,0))<sdt.total_should_delivery_pno/ss.attendance_staff_cn*0.8  then '是'
                else null
            end as 是否低人效
        from
            (
                select
                    dt.region_name 大区
                    ,dt.piece_name 片区
                    ,dt.store_name 网点
                    ,dt.store_category as 网点类型
                    ,rid.staff_info_id as 员工ID
                    ,rid.store_id
                    ,hsi.name as  快递员姓名
                    ,rid.work_days
                    ,case when rid.job_title=13 then 'bike' when rid.job_title=110 then 'van' when rid.job_title=452 then 'boat' when rid.job_title=1497 then 'Van Feeder'  else '' end as 快递员类型
                    #,datediff(date_sub(curdate(), interval 1 day), hsi.hire_date)  在职时长
                from tmpale.staff_info_record_info_day rid
                join bi_pro.hr_staff_info hsi on hsi.staff_info_id =rid.staff_info_id
                left join dwm.dim_th_sys_store_rd dt on dt.store_id =rid.store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
                left join tmpale.staff_info_record_info_day rid1 on rid.staff_info_id=rid1.staff_info_id and rid1.if_support='Y'
                where rid.if_support='N' and rid1.staff_info_id is null
            ) t1
        left join
            (-- 非子母件交接量
                select
                    fn.staff_info_id as 员工ID
                    ,count(distinct if(fn.pno_type='正向件', fn.pno ,null)) as 交接量_非退件
                from  handover2 fn
                group by 1
            )f2 on f2.员工ID = t1.员工ID
        left join
            (-- 子母件交接量
                select
                    ff.staff_info_id
                    ,sum(ff.mps_count) ct
                from
                (
                    select
                        pr.pno
                        ,rid.staff_info_id
                        ,pim.mps_count
                        ,sum(pim.mps_count) as 1mps_count
                    from fle_staging.`ticket_delivery`  pr
                    join tmpale.staff_info_record_info_day rid on pr.staff_info_id=rid.sub_staff_info_id
                    left join fle_staging.parcel_info_mps_relation pim on pim.mother_pno =pr.pno -- 子母单关联
                    left join fle_staging.parcel_info pi on pr.pno=pi.pno
                    where
                        pr.created_at >=concat(date_sub(date_sub(curdate(), interval 1 day),interval 1 day), ' 17:00:00')
                        and pr.created_at <concat(date_sub(date_sub(curdate(), interval 1 day),interval 0 day), ' 10:00:00')
                        and pr.mps_delivery_category=1 -- 母件
                    #	and pr.pno='TH01124THEGB0A'
                        and pi.returned=0 -- 非退件
                    group by 1,2,3

                )ff
                group by 1
            )ff2 on ff2.staff_info_id= t1.员工ID
        left join
            (
                select
                    pi.ticket_pickup_staff_info_id
                    ,count(distinct pi.ticket_pickup_id) as ticket_pickup_cn
                    ,count(distinct pi.pno) as pickup_pno_cn
                from fle_staging.parcel_info pi
                where pi.state<9
                and pi.returned=0
                and pi.created_at >=concat(date_sub(date_sub(curdate(), interval 1 day), interval 1 day),' 17:00:00')
                and pi.created_at <=concat(date_sub(curdate(), interval 1 day),' 17:00:00')
                group by 1
            )pk on pk.ticket_pickup_staff_info_id = t1.员工ID
        left join
            ( -- 22点前最后一个妥投包裹时间
                select
                    rid.staff_info_id
                    ,max(convert_tz(pi.finished_at,'+00:00','+07:00')) as finished_at
                    ,count(distinct case when pi.returned=0  then pi.pno else null end) as 非退件妥投量
                    ,count(distinct case when pi.returned=1  then pi.dst_detail_address else null end) as 退件妥投量_按地址转换
                    ,sum(case when pi.returned=0 and if(floor(pi.weight/10000)=0,1,floor(pi.weight/10000))<if(floor((((pi.width+pi.height+pi.length) DIV 5)*5-5)/50)-1<1,1,floor((((pi.width+pi.height+pi.length) DIV 5)*5-5)/50)-1)
                                then if(floor((((pi.width+pi.height+pi.length) DIV 5)*5-5)/50)-1<1,1,floor((((pi.width+pi.height+pi.length) DIV 5)*5-5)/50)-1)
                               when pi.returned=0  then if(floor(pi.weight/10000)=0,1,floor(pi.weight/10000)) else null end) as 非退件妥投量_大件折算
                from fle_staging.parcel_info pi
                join tmpale.staff_info_record_info_day rid on pi.ticket_delivery_staff_info_id=rid.sub_staff_info_id
                left join fle_staging.parcel_info_mps_relation pimr on pimr.mother_pno =pi.pno
                where
                    pi.state=5
                    and pi.finished_at>=concat(date_sub(date_sub(curdate(), interval 1 day),interval 1 day), ' 17:00:00')
                    and pi.finished_at<=concat(date_sub(date_sub(curdate(), interval 1 day),interval 0 day), ' 15:00:00')
                    and pimr.id is null  -- 母件单号不算做妥投包裹，子件才算妥投包裹
                    #and pi.ticket_delivery_staff_info_id='637320'
                group by 1
             ) f6 on f6.staff_info_id = t1.员工ID
        left join
            (
                select
                    sdt.store_id
                    ,count(distinct sdt.pno) as total_should_delivery_pno
                from bi_pro.dc_should_delivery_today sdt
                where sdt.stat_date= date_sub(curdate(), interval 1 day)
                group by 1
            )sdt on t1.store_id=sdt.store_id
        left join
            (#网点今日出勤人数
                select
                    ss.store_id
                    ,count(distinct ss.staff_info_id) as attendance_staff_cn
                from
                    (
                        select
                            adv.staff_info_id
                            ,if(hsa.staff_info_id is null,adv.sys_store_id,hsa.store_id) as store_id
                            ,if(hsa.staff_info_id is null,hsi.job_title,hsa.job_title_id) as job_title_id
                        from bi_pro.attendance_data_v2 adv
                        join bi_pro.hr_staff_info hsi on hsi.staff_info_id =adv.staff_info_id
                        left join backyard_pro.hr_staff_apply_support_store hsa on adv.staff_info_id=hsa.staff_info_id
                            and hsa.status = 2 #支援审核通过
                            and hsa.actual_begin_date <=date_sub(curdate(), interval 1 day)
                            and coalesce(hsa.actual_end_date, date_sub(curdate(), interval 1 day))>= date_sub(curdate(), interval 1 day)
                            and hsa.employment_begin_date<=date_sub(curdate(), interval 1 day)
                            and hsa.employment_end_date>=date_sub(curdate(), interval 1 day)
                        where  adv.stat_date=date_sub(curdate(), interval 1 day) and (adv.attendance_started_at is not null or adv.attendance_end_at is not null)
                    )ss
                where ss.job_title_id in(13,110,452,1497)
                group by 1
            )ss on t1.store_id =ss.store_id
     )
select
    a.*
from
    (
        select
            date_sub(curdate(), interval 1 day) p_date
            ,fn.网点
            ,fn.大区
            ,fn.片区
            ,fn.员工ID
            ,fn.快递员姓名
            ,convert_tz(swa.started_at, '+00:00', '+07:00') 上班时间
            ,convert_tz(swa.end_at, '+00:00', '+07:00') 下班时间
            ,fn.快递员类型
            ,fn.在职时长
            ,fn.交接量_非退件
            ,fn.非退件妥投量
            ,fn.非退件妥投量_大件折算
            ,fn.退件妥投量_按地址转换
            ,fn.揽收任务数
            ,fn.揽收包裹量
            ,fn.22点前快递员结束派件时间
            ,fn.妥投率
            ,fn.是否出勤不达标
            ,fn.是否低人效v2 是否低人效
           ,if(fn.虚假行为>0,'是',null) as 是否虚假
        from
        (
            select
                a1.*
                ,a2.是否低人效 是否低人效v2
                ,fg.虚假行为
                ,if(f5.staff_info_id is not null, '是', null) 是否出勤不达标
            from al a1
            left join al a2 on a2.员工ID = a1.员工ID and a2.rk <= 2
            left join
                (
                    select
                        a.staff_info_id
                        ,sum(a.揽件虚假量) 虚假揽件量
                        ,sum(a.妥投虚假量) 虚假妥投量
                        ,sum(a.派件标记虚假量) 虚假派件标记量
                        ,sum(a.揽件虚假量)+sum(a.妥投虚假量)+sum(a.派件标记虚假量) as 虚假行为
                    from
                        (
                            select
                                vrv.staff_info_id
                                ,'回访' type
                                ,count(distinct if(vrv.visit_result  in (6), vrv.link_id, null)) 妥投虚假量
                                ,count(distinct if(vrv.visit_result in (18,8,19,20,21,31,32,22,23,24), vrv.link_id, null)) 派件标记虚假量
                                ,count(distinct if(vrv.visit_result in (37,39,3), vrv.link_id, null)) 揽件虚假量
                            from nl_production.violation_return_visit vrv
                            where
                                vrv.visit_state = 4
                                and vrv.updated_at >= date_sub(date_sub(curdate(), interval 1 day), interval 7 hour)
                                and vrv.updated_at < date_add(date_sub(curdate(), interval 1 day), interval 17 hour) -- 昨天
                                and vrv.visit_staff_id not in (10000,10001) -- 非ivr回访
                                and vrv.type in (1,2,3,4,5,6)
                            group by 1

                            union all
                            select
                                acca.staff_info_id
                                ,'投诉' type
                                ,count(distinct if(acca.complaints_type = 2, acca.merge_column, null)) 揽件虚假量
                                ,count(distinct if(acca.complaints_type = 1, acca.merge_column, null)) 妥投虚假量
                                ,count(distinct if(acca.complaints_type = 3, acca.merge_column, null)) 派件标记虚假量
                            from nl_production.abnormal_customer_complaint_authentic acca
                            where
                                acca.callback_state = 2
                                and acca.qaqc_callback_result in (2,3)
                                and acca.qaqc_callback_at >=date_sub(date_sub(curdate(), interval 1 day), interval 7 hour)
                                and acca.qaqc_callback_at <  date_add(date_sub(curdate(), interval 1 day), interval 17 hour)  -- 昨天
                                and acca.type = 1
                                and acca.complaints_type in (1,2,3)
                            group by 1
                        ) a
                    group by 1
                )fg on fg.staff_info_id = a1.员工ID
            left join
                ( --
                    select
                        a2.staff_info_id
                        ,a2.sys_store_id
                        ,a2.attendance_started_at
                        ,a2.shift_start
                        ,a2.attendance_end_at
                    from
                        (
                            select
                                ad.staff_info_id
                                ,hsi.sys_store_id
                                ,ad.shift_start
                                ,ad.attendance_started_at
                                ,ad.attendance_end_at
                                ,row_number() over (partition by hsi.sys_store_id order by timestampdiff(minute , concat(ad.stat_date, ' ', ad.shift_start), ad.attendance_started_at) desc) rk
                            from bi_pro.attendance_data_v2 ad
                            left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = ad.staff_info_id
                            where
                                ad.stat_date = date_sub(curdate(), interval 1 day)
                                and ad.attendance_started_at > concat(ad.stat_date, ' ', ad.shift_start)
                                and hsi.sys_store_id != -1
                                and hsi.is_sub_staff = 0
                                and hsi.job_title in (13,110,452)
                                and hsi.state = 1
                                and timestampdiff(minute , concat(ad.stat_date, ' ', ad.shift_start), ad.attendance_started_at) > 30

                        ) a2
                    where
                        a2.rk <= 2
                ) f5 on f5.staff_info_id = a1.员工ID
        )fn
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = fn.员工ID and swa.attendance_date = date_sub(curdate(), interval 1 day)
) a
where
a.是否虚假 is not null
or a.是否低人效 is not null
or a.是否出勤不达标 is not null

union all

select
    date_sub(curdate(), interval 1 day) p_date
    ,dt.store_name 网点
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,ad.staff_info_id 员工ID
    ,hsi.name 快递员姓名
    ,ad.attendance_started_at 上班时间
    ,ad.attendance_end_at 下班时间
    ,case hsi.job_title
        when 13 then  'bike'
        when 110 then 'van'
        when 452 then'boat'
    end 快递员类型
    ,datediff(date_sub(curdate(), interval 1 day), hsi.hire_date) 在职时长
    ,'' 交接量_非退件
    ,'' 非退件妥投量
    ,'' 非退件妥投量_大件折算
    ,'' 退件妥投量_按地址转换
    ,'' 揽收任务数
    ,'' 揽收包裹量
    ,'' 22点前快递员结束派件时间
    ,'' 妥投率
    ,'是' 是否出勤不达标
    ,'' 是否低人效
    ,'' 是否虚假
from bi_pro.attendance_data_v2 ad
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = ad.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(date_sub(curdate(), interval 1 day), interval 1 day)
where ad.attendance_time + ad.BT+ ad.BT_Y + ad.AB >0 -- 应出勤
    and ad.stat_date = date_sub(curdate(), interval 1 day)
    and ad.attendance_started_at is null
    and ad.attendance_end_at is null
    and hsi.sys_store_id != -1
    and hsi.is_sub_staff = 0
    and hsi.job_title in (13,110,452)
    and hsi.state = 1;
;-- -. . -..- - / . -. - .-. -.--
select * from bi_pro.parcel_lose_task plt
where
    plt.source_id LIKE 'return_visit_3_%' and plt.created_at > '2023-11-01' and plt.source = 2;
;-- -. . -..- - / . -. - .-. -.--
select * from bi_pro.parcel_lose_task plt
where
    plt.source_id LIKE 'return_visit_1_%' and plt.created_at > '2023-11-01' and plt.source = 2;
;-- -. . -..- - / . -. - .-. -.--
select
    hsi.staff_info_id
    ,if(d1.双重预警 = 'Alert' or d2.双重预警 = 'Alert' or d3.双重预警 = 'Alert' or d4.双重预警 = 'Alert' or d5.双重预警 = 'Alert' or d6.双重预警 = 'Alert' or d7.双重预警 = 'Alert' , '是', '否' )  近一周是否爆仓
from bi_pro.hr_staff_info hsi
join tmpale.tmp_th_sco_staff_lj_1220 t on t.staff = hsi.staff_info_id
left join dwm.dwd_th_network_spill_detl_rd d1 on d1.网点ID = hsi.sys_store_id and d1.统计日期 = date_sub(curdate(), interval 1 day)
left join dwm.dwd_th_network_spill_detl_rd d2 on d2.网点ID = hsi.sys_store_id and d2.统计日期 = date_sub(curdate(), interval 2 day)
left join dwm.dwd_th_network_spill_detl_rd d3 on d3.网点ID = hsi.sys_store_id and d3.统计日期 = date_sub(curdate(), interval 3 day)
left join dwm.dwd_th_network_spill_detl_rd d4 on d4.网点ID = hsi.sys_store_id and d4.统计日期 = date_sub(curdate(), interval 4 day)
left join dwm.dwd_th_network_spill_detl_rd d5 on d5.网点ID = hsi.sys_store_id and d5.统计日期 = date_sub(curdate(), interval 5 day)
left join dwm.dwd_th_network_spill_detl_rd d6 on d6.网点ID = hsi.sys_store_id and d6.统计日期 = date_sub(curdate(), interval 6 day)
left join dwm.dwd_th_network_spill_detl_rd d7 on d7.网点ID = hsi.sys_store_id and d7.统计日期 = date_sub(curdate(), interval 7 day);
;-- -. . -..- - / . -. - .-. -.--
select
    t.pno
    ,case vrv.visit_result
            when 1 then '联系不上'
            when 2 then '取消原因属实、合理'
            when 3 then '快递员虚假标记/违背客户意愿要求取消'
            when 4 then '多次联系不上客户'
            when 5 then '收件人已签收包裹'
            when 6 then '收件人未收到包裹'
            when 7 then '未经收件人允许投放他处/让他人代收'
            when 8 then '快递员没有联系客户，直接标记收件人拒收'
            when 9 then '收件人拒收情况属实'
            when 10 then '快递员服务态度差'
            when 11 then '因快递员未按照收件人地址送货，客户不方便去取货'
            when 12 then '网点派送速度慢，客户不想等'
            when 13 then '非快递员问题，个人原因拒收'
            when 14 then '其它'
            when 15 then '未经客户同意改约派件时间'
            when 16 then '未按约定时间派送'
            when 17 then '派件前未提前联系客户'
            when 18 then '收件人拒收情况不属实'
            when 19 then '快递员联系客户，但未经客户同意标记收件人拒收'
            when 20 then '快递员要求/威胁客户拒收'
            when 21 then '快递员引导客户拒收'
            when 22 then '其他'
            when 23 then '情况不属实，快递员虚假标记'
            when 24 then '情况不属实，快递员诱导客户改约时间'
            when 25 then '情况属实，客户原因改约时间'
            when 26 then '客户退货，不想购买该商品'
            when 27 then '客户未购买商品'
            when 28 then '客户本人/家人对包裹不知情而拒收'
            when 29 then '商家发错商品'
            when 30 then '包裹物流派送慢超时效'
            when 31 then '快递员服务态度差'
            when 32 then '因快递员未按照收件人地址送货，客户不方便去取货'
            when 33 then '货物验收破损'
            when 34 then '无人在家不便签收'
            when 35 then '客户错误拒收包裹'
            when 36 then '快递员按照要求当场扫描揽收'
            when 37 then '快递员未按照要求当场扫描揽收'
            when 38 then '无所谓，客户无要求'
            when 39 then '包裹未准备好 - 情况不属实，快递员虚假标记'
            when 40 then '包裹未准备好 - 情况属实，客户存在未准备好的包裹'
            when 41 then '虚假修改包裹信息'
            when 42 then '修改包裹信息属实'
        end as 拒收回复结果
        ,case vrv3.visit_result
            when 1 then '联系不上'
            when 2 then '取消原因属实、合理'
            when 3 then '快递员虚假标记/违背客户意愿要求取消'
            when 4 then '多次联系不上客户'
            when 5 then '收件人已签收包裹'
            when 6 then '收件人未收到包裹'
            when 7 then '未经收件人允许投放他处/让他人代收'
            when 8 then '快递员没有联系客户，直接标记收件人拒收'
            when 9 then '收件人拒收情况属实'
            when 10 then '快递员服务态度差'
            when 11 then '因快递员未按照收件人地址送货，客户不方便去取货'
            when 12 then '网点派送速度慢，客户不想等'
            when 13 then '非快递员问题，个人原因拒收'
            when 14 then '其它'
            when 15 then '未经客户同意改约派件时间'
            when 16 then '未按约定时间派送'
            when 17 then '派件前未提前联系客户'
            when 18 then '收件人拒收情况不属实'
            when 19 then '快递员联系客户，但未经客户同意标记收件人拒收'
            when 20 then '快递员要求/威胁客户拒收'
            when 21 then '快递员引导客户拒收'
            when 22 then '其他'
            when 23 then '情况不属实，快递员虚假标记'
            when 24 then '情况不属实，快递员诱导客户改约时间'
            when 25 then '情况属实，客户原因改约时间'
            when 26 then '客户退货，不想购买该商品'
            when 27 then '客户未购买商品'
            when 28 then '客户本人/家人对包裹不知情而拒收'
            when 29 then '商家发错商品'
            when 30 then '包裹物流派送慢超时效'
            when 31 then '快递员服务态度差'
            when 32 then '因快递员未按照收件人地址送货，客户不方便去取货'
            when 33 then '货物验收破损'
            when 34 then '无人在家不便签收'
            when 35 then '客户错误拒收包裹'
            when 36 then '快递员按照要求当场扫描揽收'
            when 37 then '快递员未按照要求当场扫描揽收'
            when 38 then '无所谓，客户无要求'
            when 39 then '包裹未准备好 - 情况不属实，快递员虚假标记'
            when 40 then '包裹未准备好 - 情况属实，客户存在未准备好的包裹'
            when 41 then '虚假修改包裹信息'
            when 42 then '修改包裹信息属实'
        end as result
from tmpale.tmp_th_m_pno_lj_1220 t
left join nl_production.violation_return_visit vrv on t.pno = vrv.link_id and vrv.type = 3 and vrv.visit_state in (3,4)
left join nl_production.violation_return_visit vrv3 on t.pno = vrv3.link_id and vrv3.type = 4 and vrv3.visit_state in (3,4);
;-- -. . -..- - / . -. - .-. -.--
select
    t.pno
    ,case vrv.visit_result
            when 1 then '联系不上'
            when 2 then '取消原因属实、合理'
            when 3 then '快递员虚假标记/违背客户意愿要求取消'
            when 4 then '多次联系不上客户'
            when 5 then '收件人已签收包裹'
            when 6 then '收件人未收到包裹'
            when 7 then '未经收件人允许投放他处/让他人代收'
            when 8 then '快递员没有联系客户，直接标记收件人拒收'
            when 9 then '收件人拒收情况属实'
            when 10 then '快递员服务态度差'
            when 11 then '因快递员未按照收件人地址送货，客户不方便去取货'
            when 12 then '网点派送速度慢，客户不想等'
            when 13 then '非快递员问题，个人原因拒收'
            when 14 then '其它'
            when 15 then '未经客户同意改约派件时间'
            when 16 then '未按约定时间派送'
            when 17 then '派件前未提前联系客户'
            when 18 then '收件人拒收情况不属实'
            when 19 then '快递员联系客户，但未经客户同意标记收件人拒收'
            when 20 then '快递员要求/威胁客户拒收'
            when 21 then '快递员引导客户拒收'
            when 22 then '其他'
            when 23 then '情况不属实，快递员虚假标记'
            when 24 then '情况不属实，快递员诱导客户改约时间'
            when 25 then '情况属实，客户原因改约时间'
            when 26 then '客户退货，不想购买该商品'
            when 27 then '客户未购买商品'
            when 28 then '客户本人/家人对包裹不知情而拒收'
            when 29 then '商家发错商品'
            when 30 then '包裹物流派送慢超时效'
            when 31 then '快递员服务态度差'
            when 32 then '因快递员未按照收件人地址送货，客户不方便去取货'
            when 33 then '货物验收破损'
            when 34 then '无人在家不便签收'
            when 35 then '客户错误拒收包裹'
            when 36 then '快递员按照要求当场扫描揽收'
            when 37 then '快递员未按照要求当场扫描揽收'
            when 38 then '无所谓，客户无要求'
            when 39 then '包裹未准备好 - 情况不属实，快递员虚假标记'
            when 40 then '包裹未准备好 - 情况属实，客户存在未准备好的包裹'
            when 41 then '虚假修改包裹信息'
            when 42 then '修改包裹信息属实'
        end as 拒收回复结果
        ,case vrv3.visit_result
            when 1 then '联系不上'
            when 2 then '取消原因属实、合理'
            when 3 then '快递员虚假标记/违背客户意愿要求取消'
            when 4 then '多次联系不上客户'
            when 5 then '收件人已签收包裹'
            when 6 then '收件人未收到包裹'
            when 7 then '未经收件人允许投放他处/让他人代收'
            when 8 then '快递员没有联系客户，直接标记收件人拒收'
            when 9 then '收件人拒收情况属实'
            when 10 then '快递员服务态度差'
            when 11 then '因快递员未按照收件人地址送货，客户不方便去取货'
            when 12 then '网点派送速度慢，客户不想等'
            when 13 then '非快递员问题，个人原因拒收'
            when 14 then '其它'
            when 15 then '未经客户同意改约派件时间'
            when 16 then '未按约定时间派送'
            when 17 then '派件前未提前联系客户'
            when 18 then '收件人拒收情况不属实'
            when 19 then '快递员联系客户，但未经客户同意标记收件人拒收'
            when 20 then '快递员要求/威胁客户拒收'
            when 21 then '快递员引导客户拒收'
            when 22 then '其他'
            when 23 then '情况不属实，快递员虚假标记'
            when 24 then '情况不属实，快递员诱导客户改约时间'
            when 25 then '情况属实，客户原因改约时间'
            when 26 then '客户退货，不想购买该商品'
            when 27 then '客户未购买商品'
            when 28 then '客户本人/家人对包裹不知情而拒收'
            when 29 then '商家发错商品'
            when 30 then '包裹物流派送慢超时效'
            when 31 then '快递员服务态度差'
            when 32 then '因快递员未按照收件人地址送货，客户不方便去取货'
            when 33 then '货物验收破损'
            when 34 then '无人在家不便签收'
            when 35 then '客户错误拒收包裹'
            when 36 then '快递员按照要求当场扫描揽收'
            when 37 then '快递员未按照要求当场扫描揽收'
            when 38 then '无所谓，客户无要求'
            when 39 then '包裹未准备好 - 情况不属实，快递员虚假标记'
            when 40 then '包裹未准备好 - 情况属实，客户存在未准备好的包裹'
            when 41 then '虚假修改包裹信息'
            when 42 then '修改包裹信息属实'
        end as result
from tmpale.tmp_th_pno_lj_1220 t
left join nl_production.violation_return_visit vrv on t.pno = vrv.link_id and vrv.type = 3 and vrv.visit_state in (3,4)
left join nl_production.violation_return_visit vrv3 on t.pno = vrv3.link_id and vrv3.type = 4 and vrv3.visit_state in (3,4);
;-- -. . -..- - / . -. - .-. -.--
select
    count(if(timestampdiff(second, acc.created_at, acc.store_callback_at)/3600 < 24 and acc.store_callback_expired = 0, acc.id, null)) '任务生成时间-道歉时间-24'
    ,count(if(timestampdiff(second, acc.created_at, acc.store_callback_at)/3600 < 36 and acc.store_callback_expired = 0, acc.id, null)) '任务生成时间-道歉时间-36'
    ,count(if(timestampdiff(second, acc.created_at, acc.store_callback_at)/3600 < 48 and acc.store_callback_expired = 0, acc.id, null)) '任务生成时间-道歉时间-48'
    ,count(if(timestampdiff(second, am.created_at, acc.store_callback_at)/3600 < 24 and acc.store_callback_expired = 0, acc.id, null)) '任务发放时间-道歉时间-24'
    ,count(if(timestampdiff(second, am.created_at, acc.store_callback_at)/3600 < 36 and acc.store_callback_expired = 0, acc.id, null)) '任务发放时间-道歉时间-36'
    ,count(if(timestampdiff(second, am.created_at, acc.store_callback_at)/3600 < 48 and acc.store_callback_expired = 0, acc.id, null)) '任务发放时间-道歉时间-48'
    ,count(distinct acc.id) 投诉量
    ,count(if(acc.store_callback_expired = 0 and acc.store_callback_at is not null, acc.id, null)) 有道歉量
    ,count(if(acc.store_callback_expired != 0 or  acc.store_callback_at is null, acc.id, null)) 无道歉量
from bi_pro.abnormal_customer_complaint acc
left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id
where
    acc.complaints_type = 1
    and acc.created_at >= '2023-10-01'
    and acc.created_at < '2023-11-01';
;-- -. . -..- - / . -. - .-. -.--
select
    count(if(timestampdiff(second, acc.created_at, acc.store_callback_at)/3600 < 24 and acc.store_callback_expired = 0, acc.id, null)) '任务生成时间-道歉时间-24'
    ,count(if(timestampdiff(second, acc.created_at, acc.store_callback_at)/3600 < 36 and acc.store_callback_expired = 0, acc.id, null)) '任务生成时间-道歉时间-36'
    ,count(if(timestampdiff(second, acc.created_at, acc.store_callback_at)/3600 < 48 and acc.store_callback_expired = 0, acc.id, null)) '任务生成时间-道歉时间-48'
    ,count(if(timestampdiff(second, am.created_at, acc.store_callback_at)/3600 < 24 and acc.store_callback_expired = 0, acc.id, null)) '任务发放时间-道歉时间-24'
    ,count(if(timestampdiff(second, am.created_at, acc.store_callback_at)/3600 < 36 and acc.store_callback_expired = 0, acc.id, null)) '任务发放时间-道歉时间-36'
    ,count(if(timestampdiff(second, am.created_at, acc.store_callback_at)/3600 < 48 and acc.store_callback_expired = 0, acc.id, null)) '任务发放时间-道歉时间-48'
    ,count(distinct acc.id) 投诉量
    ,count(if(acc.store_callback_expired = 0 and acc.store_callback_at is not null, acc.id, null)) 有道歉量
    ,count(if(acc.store_callback_expired != 0 or  acc.store_callback_at is null, acc.id, null)) 无道歉量
from bi_pro.abnormal_customer_complaint acc
left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id
where
    acc.complaints_type = 1
    and acc.created_at >= '2023-09-01'
    and acc.created_at < '2023-10-01';
;-- -. . -..- - / . -. - .-. -.--
select
    count(if(timestampdiff(second, acc.created_at, acc.store_callback_at)/3600 < 24 and acc.store_callback_expired = 0, acc.id, null)) '任务生成时间-道歉时间-24'
    ,count(if(timestampdiff(second, acc.created_at, acc.store_callback_at)/3600 < 36 and acc.store_callback_expired = 0, acc.id, null)) '任务生成时间-道歉时间-36'
    ,count(if(timestampdiff(second, acc.created_at, acc.store_callback_at)/3600 < 48 and acc.store_callback_expired = 0, acc.id, null)) '任务生成时间-道歉时间-48'
    ,count(if(timestampdiff(second, am.created_at, acc.store_callback_at)/3600 < 24 and acc.store_callback_expired = 0, acc.id, null)) '任务发放时间-道歉时间-24'
    ,count(if(timestampdiff(second, am.created_at, acc.store_callback_at)/3600 < 36 and acc.store_callback_expired = 0, acc.id, null)) '任务发放时间-道歉时间-36'
    ,count(if(timestampdiff(second, am.created_at, acc.store_callback_at)/3600 < 48 and acc.store_callback_expired = 0, acc.id, null)) '任务发放时间-道歉时间-48'
    ,count(distinct acc.id) 投诉量
    ,count(if(acc.store_callback_expired = 0 and acc.store_callback_at is not null, acc.id, null)) 有道歉量
    ,count(if(acc.store_callback_expired != 0 or  acc.store_callback_at is null, acc.id, null)) 无道歉量
from bi_pro.abnormal_customer_complaint acc
left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id
where
    acc.complaints_type = 1
    and acc.created_at >= '2023-11-01'
    and acc.created_at < '2023-12-01';
;-- -. . -..- - / . -. - .-. -.--
select
    case t1.complaints_sub_type
        when 1 then '业务不熟练'
        when 2 then '虚假签收'
        when 3 then '以不礼貌的态度对待客户'
        when 4 then '揽/派件动作慢'
        when 5 then '未经客户同意投递他处'
        when 6 then '未经客户同意改约时间'
        when 7 then '不接客户电话'
        when 8 then '包裹丢失 没有数据'
        when 9 then '改约的时间和客户沟通的时间不一致'
        when 10 then '未提前电话联系客户'
        when 11 then '包裹破损 没有数据'
        when 12 then '未按照改约时间派件'
        when 13 then '未按订单带包装'
        when 14 then '不找零钱'
        when 15 then '客户通话记录内未看到员工电话'
        when 16 then '未经客户允许取消揽件任务'
        when 17 then '未给客户回执'
        when 18 then '拨打电话时间太短，客户来不及接电话'
        when 19 then '未经客户允许退件'
        when 20 then '没有上门'
        when 21 then '其他'
        when 22 then '未经客户同意改约揽件时间'
        when 23 then '改约的揽件时间和客户要求的时间不一致'
        when 24 then '没有按照改约时间揽件'
        when 25 then '揽件前未提前联系客户'
        when 26 then '答应客户揽件，但最终没有揽'
        when 27 then '很晚才打电话联系客户'
        when 28 then '货物多/体积大，因骑摩托而拒绝上门揽收'
        when 29 then '因为超过当日截单时间，要求客户取消'
        when 30 then '声称不是自己负责的区域，要求客户取消'
        when 31 then '拨打电话时间太短，客户来不及接电话'
        when 32 then '不接听客户回复的电话'
        when 33 then '答应客户今天上门，但最终没有揽收'
        when 34 then '没有上门揽件，也没有打电话联系客户'
        when 35 then '货物不属于超大件/违禁品'
        when 36 then '没有收到包裹，且快递员没有联系客户'
        when 37 then '快递员拒绝上门派送'
        when 38 then '快递员擅自将包裹放在门口或他处'
        when 39 then '快递员没有按约定的时间派送'
        when 40 then '代替客户签收包裹'
        when 41 then '快说话不礼貌/没有礼貌/不愿意服务'
        when 42 then '说话不礼貌/没有礼貌/不愿意服务'
        when 43 then '快递员抛包裹'
        when 44 then '报复/骚扰客户'
        when 45 then '快递员收错COD金额'
        when 46 then '虚假妥投'
        when 47 then '派件虚假留仓件/问题件'
        when 48 then '虚假揽件改约时间/取消揽件任务'
        when 49 then '抛客户包裹'
        when 50 then '录入客户信息不正确'
        when 51 then '送货前未电话联系'
        when 52 then '未在约定时间上门'
        when 53 then '上门前不电话联系'
        when 54 then '以不礼貌的态度对待客户'
        when 55 then '录入客户信息不正确'
        when 56 then '与客户发生肢体接触'
        when 57 then '辱骂客户'
        when 58 then '威胁客户'
        when 59 then '上门揽件慢'
        when 60 then '快递员拒绝上门揽件'
        when 61 then '未经客户同意标记收件人拒收'
        when 62 then '未按照系统地址送货导致收件人拒收'
        when 63 then '情况不属实，快递员虚假标记'
        when 64 then '情况不属实，快递员诱导客户改约时间'
        when 65 then '包裹长时间未派送'
        when 66 then '未经同意拒收包裹'
        when 67 then '已交费仍索要COD'
        when 68 then '投递时要求开箱'
        when 69 then '不当场扫描揽收'
        when 70 then '揽派件速度慢'
    end as '虚假类型'
    ,count(if(timestampdiff(second, acc.created_at, acc.store_callback_at)/3600 < 24 and acc.store_callback_expired = 0, acc.id, null)) '任务生成时间-道歉时间-24'
    ,count(if(timestampdiff(second, acc.created_at, acc.store_callback_at)/3600 < 36 and acc.store_callback_expired = 0, acc.id, null)) '任务生成时间-道歉时间-36'
    ,count(if(timestampdiff(second, acc.created_at, acc.store_callback_at)/3600 < 48 and acc.store_callback_expired = 0, acc.id, null)) '任务生成时间-道歉时间-48'
    ,count(if(timestampdiff(second, am.created_at, acc.store_callback_at)/3600 < 24 and acc.store_callback_expired = 0, acc.id, null)) '任务发放时间-道歉时间-24'
    ,count(if(timestampdiff(second, am.created_at, acc.store_callback_at)/3600 < 36 and acc.store_callback_expired = 0, acc.id, null)) '任务发放时间-道歉时间-36'
    ,count(if(timestampdiff(second, am.created_at, acc.store_callback_at)/3600 < 48 and acc.store_callback_expired = 0, acc.id, null)) '任务发放时间-道歉时间-48'
    ,count(distinct acc.id) 投诉量
    ,count(if(acc.store_callback_expired = 0 and acc.store_callback_at is not null, acc.id, null)) 有道歉量
    ,count(if(acc.store_callback_expired != 0 or  acc.store_callback_at is null, acc.id, null)) 无道歉量
from bi_pro.abnormal_customer_complaint acc
left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id
where
    acc.complaints_type = 1
    and acc.created_at >= '2023-11-01'
    and acc.created_at < '2023-12-01'
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
    case acc.complaints_sub_type
        when 1 then '业务不熟练'
        when 2 then '虚假签收'
        when 3 then '以不礼貌的态度对待客户'
        when 4 then '揽/派件动作慢'
        when 5 then '未经客户同意投递他处'
        when 6 then '未经客户同意改约时间'
        when 7 then '不接客户电话'
        when 8 then '包裹丢失 没有数据'
        when 9 then '改约的时间和客户沟通的时间不一致'
        when 10 then '未提前电话联系客户'
        when 11 then '包裹破损 没有数据'
        when 12 then '未按照改约时间派件'
        when 13 then '未按订单带包装'
        when 14 then '不找零钱'
        when 15 then '客户通话记录内未看到员工电话'
        when 16 then '未经客户允许取消揽件任务'
        when 17 then '未给客户回执'
        when 18 then '拨打电话时间太短，客户来不及接电话'
        when 19 then '未经客户允许退件'
        when 20 then '没有上门'
        when 21 then '其他'
        when 22 then '未经客户同意改约揽件时间'
        when 23 then '改约的揽件时间和客户要求的时间不一致'
        when 24 then '没有按照改约时间揽件'
        when 25 then '揽件前未提前联系客户'
        when 26 then '答应客户揽件，但最终没有揽'
        when 27 then '很晚才打电话联系客户'
        when 28 then '货物多/体积大，因骑摩托而拒绝上门揽收'
        when 29 then '因为超过当日截单时间，要求客户取消'
        when 30 then '声称不是自己负责的区域，要求客户取消'
        when 31 then '拨打电话时间太短，客户来不及接电话'
        when 32 then '不接听客户回复的电话'
        when 33 then '答应客户今天上门，但最终没有揽收'
        when 34 then '没有上门揽件，也没有打电话联系客户'
        when 35 then '货物不属于超大件/违禁品'
        when 36 then '没有收到包裹，且快递员没有联系客户'
        when 37 then '快递员拒绝上门派送'
        when 38 then '快递员擅自将包裹放在门口或他处'
        when 39 then '快递员没有按约定的时间派送'
        when 40 then '代替客户签收包裹'
        when 41 then '快说话不礼貌/没有礼貌/不愿意服务'
        when 42 then '说话不礼貌/没有礼貌/不愿意服务'
        when 43 then '快递员抛包裹'
        when 44 then '报复/骚扰客户'
        when 45 then '快递员收错COD金额'
        when 46 then '虚假妥投'
        when 47 then '派件虚假留仓件/问题件'
        when 48 then '虚假揽件改约时间/取消揽件任务'
        when 49 then '抛客户包裹'
        when 50 then '录入客户信息不正确'
        when 51 then '送货前未电话联系'
        when 52 then '未在约定时间上门'
        when 53 then '上门前不电话联系'
        when 54 then '以不礼貌的态度对待客户'
        when 55 then '录入客户信息不正确'
        when 56 then '与客户发生肢体接触'
        when 57 then '辱骂客户'
        when 58 then '威胁客户'
        when 59 then '上门揽件慢'
        when 60 then '快递员拒绝上门揽件'
        when 61 then '未经客户同意标记收件人拒收'
        when 62 then '未按照系统地址送货导致收件人拒收'
        when 63 then '情况不属实，快递员虚假标记'
        when 64 then '情况不属实，快递员诱导客户改约时间'
        when 65 then '包裹长时间未派送'
        when 66 then '未经同意拒收包裹'
        when 67 then '已交费仍索要COD'
        when 68 then '投递时要求开箱'
        when 69 then '不当场扫描揽收'
        when 70 then '揽派件速度慢'
    end as '虚假类型'
    ,count(if(timestampdiff(second, acc.created_at, acc.store_callback_at)/3600 < 24 and acc.store_callback_expired = 0, acc.id, null)) '任务生成时间-道歉时间-24'
    ,count(if(timestampdiff(second, acc.created_at, acc.store_callback_at)/3600 < 36 and acc.store_callback_expired = 0, acc.id, null)) '任务生成时间-道歉时间-36'
    ,count(if(timestampdiff(second, acc.created_at, acc.store_callback_at)/3600 < 48 and acc.store_callback_expired = 0, acc.id, null)) '任务生成时间-道歉时间-48'
    ,count(if(timestampdiff(second, am.created_at, acc.store_callback_at)/3600 < 24 and acc.store_callback_expired = 0, acc.id, null)) '任务发放时间-道歉时间-24'
    ,count(if(timestampdiff(second, am.created_at, acc.store_callback_at)/3600 < 36 and acc.store_callback_expired = 0, acc.id, null)) '任务发放时间-道歉时间-36'
    ,count(if(timestampdiff(second, am.created_at, acc.store_callback_at)/3600 < 48 and acc.store_callback_expired = 0, acc.id, null)) '任务发放时间-道歉时间-48'
    ,count(distinct acc.id) 投诉量
    ,count(if(acc.store_callback_expired = 0 and acc.store_callback_at is not null, acc.id, null)) 有道歉量
    ,count(if(acc.store_callback_expired != 0 or  acc.store_callback_at is null, acc.id, null)) 无道歉量
from bi_pro.abnormal_customer_complaint acc
left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id
where
    acc.complaints_type = 1
    and acc.created_at >= '2023-11-01'
    and acc.created_at < '2023-12-01'
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
    count(if(timestampdiff(second, acc.created_at, acc.store_callback_at)/3600 < 24 and acc.store_callback_expired = 0, acc.id, null)) '任务生成时间-道歉时间-24'
    ,count(if(timestampdiff(second, acc.created_at, acc.store_callback_at)/3600 < 36 and acc.store_callback_expired = 0, acc.id, null)) '任务生成时间-道歉时间-36'
    ,count(if(timestampdiff(second, acc.created_at, acc.store_callback_at)/3600 < 48 and acc.store_callback_expired = 0, acc.id, null)) '任务生成时间-道歉时间-48'
    ,count(if(timestampdiff(second, am.created_at, acc.store_callback_at)/3600 < 24 and acc.store_callback_expired = 0, acc.id, null)) '任务发放时间-道歉时间-24'
    ,count(if(timestampdiff(second, am.created_at, acc.store_callback_at)/3600 < 36 and acc.store_callback_expired = 0, acc.id, null)) '任务发放时间-道歉时间-36'
    ,count(if(timestampdiff(second, am.created_at, acc.store_callback_at)/3600 < 48 and acc.store_callback_expired = 0, acc.id, null)) '任务发放时间-道歉时间-48'
    ,count(distinct acc.id) 投诉量
    ,count(if(acc.store_callback_expired = 0 and acc.store_callback_at is not null, acc.id, null)) 有道歉量
    ,count(if(acc.store_callback_expired != 0 or  acc.store_callback_at is null, acc.id, null)) 无道歉量
from bi_pro.abnormal_customer_complaint acc
left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id
where
    acc.created_at >= '2023-11-01'
    and acc.created_at < '2023-12-01';
;-- -. . -..- - / . -. - .-. -.--
select
    t.pno
   ,a1.拒收回访
   ,a1.改约回访
    ,if(a2.id is null, '否', '是') 是否有历史贪污记录
from tmpale.tmp_th_pno_lj_1210 t
left join
    (
        select
            a.pno
            ,group_concat(distinct a.拒收回复结果) as 拒收回访
            ,group_concat(distinct a.改约回访结果) as 改约回访
        from
            (
                select
                    t.pno
                    ,case vrv.visit_result
                            when 1 then '联系不上'
                            when 2 then '取消原因属实、合理'
                            when 3 then '快递员虚假标记/违背客户意愿要求取消'
                            when 4 then '多次联系不上客户'
                            when 5 then '收件人已签收包裹'
                            when 6 then '收件人未收到包裹'
                            when 7 then '未经收件人允许投放他处/让他人代收'
                            when 8 then '快递员没有联系客户，直接标记收件人拒收'
                            when 9 then '收件人拒收情况属实'
                            when 10 then '快递员服务态度差'
                            when 11 then '因快递员未按照收件人地址送货，客户不方便去取货'
                            when 12 then '网点派送速度慢，客户不想等'
                            when 13 then '非快递员问题，个人原因拒收'
                            when 14 then '其它'
                            when 15 then '未经客户同意改约派件时间'
                            when 16 then '未按约定时间派送'
                            when 17 then '派件前未提前联系客户'
                            when 18 then '收件人拒收情况不属实'
                            when 19 then '快递员联系客户，但未经客户同意标记收件人拒收'
                            when 20 then '快递员要求/威胁客户拒收'
                            when 21 then '快递员引导客户拒收'
                            when 22 then '其他'
                            when 23 then '情况不属实，快递员虚假标记'
                            when 24 then '情况不属实，快递员诱导客户改约时间'
                            when 25 then '情况属实，客户原因改约时间'
                            when 26 then '客户退货，不想购买该商品'
                            when 27 then '客户未购买商品'
                            when 28 then '客户本人/家人对包裹不知情而拒收'
                            when 29 then '商家发错商品'
                            when 30 then '包裹物流派送慢超时效'
                            when 31 then '快递员服务态度差'
                            when 32 then '因快递员未按照收件人地址送货，客户不方便去取货'
                            when 33 then '货物验收破损'
                            when 34 then '无人在家不便签收'
                            when 35 then '客户错误拒收包裹'
                            when 36 then '快递员按照要求当场扫描揽收'
                            when 37 then '快递员未按照要求当场扫描揽收'
                            when 38 then '无所谓，客户无要求'
                            when 39 then '包裹未准备好 - 情况不属实，快递员虚假标记'
                            when 40 then '包裹未准备好 - 情况属实，客户存在未准备好的包裹'
                            when 41 then '虚假修改包裹信息'
                            when 42 then '修改包裹信息属实'
                        end as 拒收回复结果
                        ,case vrv3.visit_result
                            when 1 then '联系不上'
                            when 2 then '取消原因属实、合理'
                            when 3 then '快递员虚假标记/违背客户意愿要求取消'
                            when 4 then '多次联系不上客户'
                            when 5 then '收件人已签收包裹'
                            when 6 then '收件人未收到包裹'
                            when 7 then '未经收件人允许投放他处/让他人代收'
                            when 8 then '快递员没有联系客户，直接标记收件人拒收'
                            when 9 then '收件人拒收情况属实'
                            when 10 then '快递员服务态度差'
                            when 11 then '因快递员未按照收件人地址送货，客户不方便去取货'
                            when 12 then '网点派送速度慢，客户不想等'
                            when 13 then '非快递员问题，个人原因拒收'
                            when 14 then '其它'
                            when 15 then '未经客户同意改约派件时间'
                            when 16 then '未按约定时间派送'
                            when 17 then '派件前未提前联系客户'
                            when 18 then '收件人拒收情况不属实'
                            when 19 then '快递员联系客户，但未经客户同意标记收件人拒收'
                            when 20 then '快递员要求/威胁客户拒收'
                            when 21 then '快递员引导客户拒收'
                            when 22 then '其他'
                            when 23 then '情况不属实，快递员虚假标记'
                            when 24 then '情况不属实，快递员诱导客户改约时间'
                            when 25 then '情况属实，客户原因改约时间'
                            when 26 then '客户退货，不想购买该商品'
                            when 27 then '客户未购买商品'
                            when 28 then '客户本人/家人对包裹不知情而拒收'
                            when 29 then '商家发错商品'
                            when 30 then '包裹物流派送慢超时效'
                            when 31 then '快递员服务态度差'
                            when 32 then '因快递员未按照收件人地址送货，客户不方便去取货'
                            when 33 then '货物验收破损'
                            when 34 then '无人在家不便签收'
                            when 35 then '客户错误拒收包裹'
                            when 36 then '快递员按照要求当场扫描揽收'
                            when 37 then '快递员未按照要求当场扫描揽收'
                            when 38 then '无所谓，客户无要求'
                            when 39 then '包裹未准备好 - 情况不属实，快递员虚假标记'
                            when 40 then '包裹未准备好 - 情况属实，客户存在未准备好的包裹'
                            when 41 then '虚假修改包裹信息'
                            when 42 then '修改包裹信息属实'
                        end as 改约回访结果
                from tmpale.tmp_th_pno_lj_1220 t
                left join nl_production.violation_return_visit vrv on t.pno = vrv.link_id and vrv.type = 3 and vrv.visit_state in (3,4)
                left join nl_production.violation_return_visit vrv3 on t.pno = vrv3.link_id and vrv3.type = 4 and vrv3.visit_state in (3,4)
            ) a
        group by 1
    ) a1 on a1.pno = t.pno
left join
    (
        select
            ss.id
        from bi_pro.receivables_issues ri
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = ri.staff_id
        left join fle_staging.sys_store ss on ss.id = hsi.sys_store_id
        where
            ri.updated_at >= '2023-01-01'
            and ri.state = 13
            and ri.issues_type = 3
        group by 1
    ) a2 on a2.id = t.dst_store_id;
;-- -. . -..- - / . -. - .-. -.--
select
    t.pno
   ,a1.拒收回访
   ,a1.改约回访
    ,if(a2.id is null, '否', '是') 是否有历史贪污记录
from tmpale.tmp_th_pno_lj_1220 t
left join
    (
        select
            a.pno
            ,group_concat(distinct a.拒收回复结果) as 拒收回访
            ,group_concat(distinct a.改约回访结果) as 改约回访
        from
            (
                select
                    t.pno
                    ,case vrv.visit_result
                            when 1 then '联系不上'
                            when 2 then '取消原因属实、合理'
                            when 3 then '快递员虚假标记/违背客户意愿要求取消'
                            when 4 then '多次联系不上客户'
                            when 5 then '收件人已签收包裹'
                            when 6 then '收件人未收到包裹'
                            when 7 then '未经收件人允许投放他处/让他人代收'
                            when 8 then '快递员没有联系客户，直接标记收件人拒收'
                            when 9 then '收件人拒收情况属实'
                            when 10 then '快递员服务态度差'
                            when 11 then '因快递员未按照收件人地址送货，客户不方便去取货'
                            when 12 then '网点派送速度慢，客户不想等'
                            when 13 then '非快递员问题，个人原因拒收'
                            when 14 then '其它'
                            when 15 then '未经客户同意改约派件时间'
                            when 16 then '未按约定时间派送'
                            when 17 then '派件前未提前联系客户'
                            when 18 then '收件人拒收情况不属实'
                            when 19 then '快递员联系客户，但未经客户同意标记收件人拒收'
                            when 20 then '快递员要求/威胁客户拒收'
                            when 21 then '快递员引导客户拒收'
                            when 22 then '其他'
                            when 23 then '情况不属实，快递员虚假标记'
                            when 24 then '情况不属实，快递员诱导客户改约时间'
                            when 25 then '情况属实，客户原因改约时间'
                            when 26 then '客户退货，不想购买该商品'
                            when 27 then '客户未购买商品'
                            when 28 then '客户本人/家人对包裹不知情而拒收'
                            when 29 then '商家发错商品'
                            when 30 then '包裹物流派送慢超时效'
                            when 31 then '快递员服务态度差'
                            when 32 then '因快递员未按照收件人地址送货，客户不方便去取货'
                            when 33 then '货物验收破损'
                            when 34 then '无人在家不便签收'
                            when 35 then '客户错误拒收包裹'
                            when 36 then '快递员按照要求当场扫描揽收'
                            when 37 then '快递员未按照要求当场扫描揽收'
                            when 38 then '无所谓，客户无要求'
                            when 39 then '包裹未准备好 - 情况不属实，快递员虚假标记'
                            when 40 then '包裹未准备好 - 情况属实，客户存在未准备好的包裹'
                            when 41 then '虚假修改包裹信息'
                            when 42 then '修改包裹信息属实'
                        end as 拒收回复结果
                        ,case vrv3.visit_result
                            when 1 then '联系不上'
                            when 2 then '取消原因属实、合理'
                            when 3 then '快递员虚假标记/违背客户意愿要求取消'
                            when 4 then '多次联系不上客户'
                            when 5 then '收件人已签收包裹'
                            when 6 then '收件人未收到包裹'
                            when 7 then '未经收件人允许投放他处/让他人代收'
                            when 8 then '快递员没有联系客户，直接标记收件人拒收'
                            when 9 then '收件人拒收情况属实'
                            when 10 then '快递员服务态度差'
                            when 11 then '因快递员未按照收件人地址送货，客户不方便去取货'
                            when 12 then '网点派送速度慢，客户不想等'
                            when 13 then '非快递员问题，个人原因拒收'
                            when 14 then '其它'
                            when 15 then '未经客户同意改约派件时间'
                            when 16 then '未按约定时间派送'
                            when 17 then '派件前未提前联系客户'
                            when 18 then '收件人拒收情况不属实'
                            when 19 then '快递员联系客户，但未经客户同意标记收件人拒收'
                            when 20 then '快递员要求/威胁客户拒收'
                            when 21 then '快递员引导客户拒收'
                            when 22 then '其他'
                            when 23 then '情况不属实，快递员虚假标记'
                            when 24 then '情况不属实，快递员诱导客户改约时间'
                            when 25 then '情况属实，客户原因改约时间'
                            when 26 then '客户退货，不想购买该商品'
                            when 27 then '客户未购买商品'
                            when 28 then '客户本人/家人对包裹不知情而拒收'
                            when 29 then '商家发错商品'
                            when 30 then '包裹物流派送慢超时效'
                            when 31 then '快递员服务态度差'
                            when 32 then '因快递员未按照收件人地址送货，客户不方便去取货'
                            when 33 then '货物验收破损'
                            when 34 then '无人在家不便签收'
                            when 35 then '客户错误拒收包裹'
                            when 36 then '快递员按照要求当场扫描揽收'
                            when 37 then '快递员未按照要求当场扫描揽收'
                            when 38 then '无所谓，客户无要求'
                            when 39 then '包裹未准备好 - 情况不属实，快递员虚假标记'
                            when 40 then '包裹未准备好 - 情况属实，客户存在未准备好的包裹'
                            when 41 then '虚假修改包裹信息'
                            when 42 then '修改包裹信息属实'
                        end as 改约回访结果
                from tmpale.tmp_th_pno_lj_1220 t
                left join nl_production.violation_return_visit vrv on t.pno = vrv.link_id and vrv.type = 3 and vrv.visit_state in (3,4)
                left join nl_production.violation_return_visit vrv3 on t.pno = vrv3.link_id and vrv3.type = 4 and vrv3.visit_state in (3,4)
            ) a
        group by 1
    ) a1 on a1.pno = t.pno
left join
    (
        select
            ss.id
        from bi_pro.receivables_issues ri
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = ri.staff_id
        left join fle_staging.sys_store ss on ss.id = hsi.sys_store_id
        where
            ri.updated_at >= '2023-01-01'
            and ri.state = 13
            and ri.issues_type = 3
        group by 1
    ) a2 on a2.id = t.dst_store_id;
;-- -. . -..- - / . -. - .-. -.--
select
    *
from bi_pro.parcel_lose_task plt
where
    plt.source = 2 -- B来源
    and plt.created_at > '2023-10-01'
    and plt.source_id like 'return_visit_2_%';
;-- -. . -..- - / . -. - .-. -.--
select
            wo.id
            ,wo.order_no
            ,wor.created_at
            ,wor.staff_info_id
            ,lead(wor.staff_info_id,1)over(partition by wo.id order by wor.created_at desc) lead1
        ,hsi.state
        from bi_pro.work_order wo
        left join bi_pro.work_order_reply wor on wor.order_id = wo.id
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = wor.staff_info_id
        where
            wo.created_at >= date_sub(curdate(),interval 30 day)
            and wo.created_staff_info_id = 678318

            and (hsi.node_department_id = 86 or wor.staff_info_id=wo.created_staff_info_id);
;-- -. . -..- - / . -. - .-. -.--
select
    t.id
    ,t.order_no
    ,t.created_at
    ,t.staff_info_id
    ,row_number()over (partition by t.id order by t.created_at) rn
    from
        (
            select
            wo.id
            ,wo.order_no
            ,wor.created_at
            ,wor.staff_info_id
            ,lead(wor.staff_info_id,1)over(partition by wo.id order by wor.created_at desc) lead1
        ,hsi.state
        from bi_pro.work_order wo
        left join bi_pro.work_order_reply wor on wor.order_id = wo.id
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = wor.staff_info_id
        where
            wo.created_at >= date_sub(curdate(),interval 30 day)
            and wo.created_staff_info_id = '678318'
            and (hsi.node_department_id = 86 or wor.staff_info_id=wo.created_staff_info_id)

        )t
    left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = t.staff_info_id
    left join bi_pro.hr_staff_info hsi2 on hsi2.staff_info_id =t.lead1
    where (t.staff_info_id<>t.lead1 or t.lead1 is null)
    and (hsi.node_department_id<>hsi2.node_department_id or t.lead1 is null)

    and hsi.node_department_id = 86;
;-- -. . -..- - / . -. - .-. -.--
select
            wo.id
            ,wo.order_no
            ,wor.created_at
            ,wor.staff_info_id
            ,lead(wor.staff_info_id,1)over(partition by wo.id order by wor.created_at desc) lead1
        ,hsi.state
        from bi_pro.work_order wo
        left join bi_pro.work_order_reply wor on wor.order_id = wo.id
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = wor.staff_info_id
        where
            wo.created_at >= date_sub(curdate(),interval 30 day)
            and wo.created_staff_info_id = '678318'
            and (hsi.node_department_id = 86 or wor.staff_info_id=wo.created_staff_info_id);
;-- -. . -..- - / . -. - .-. -.--
select
            wo.id
            ,wo.order_no
            ,wor.created_at
            ,wor.staff_info_id
            ,lead(wor.staff_info_id,1)over(partition by wo.id order by wor.created_at desc) lead1
        ,hsi.state
        from bi_pro.work_order wo
        left join bi_pro.work_order_reply wor on wor.order_id = wo.id
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = wor.staff_info_id
        where
            wo.created_at >= date_sub(curdate(),interval 30 day)
            and wor.staff_info_id = '678318'
            and (hsi.node_department_id = 86 or wor.staff_info_id=wo.created_staff_info_id);
;-- -. . -..- - / . -. - .-. -.--
select
    t.id
    ,t.order_no
    ,t.created_at
    ,t.staff_info_id
    ,row_number()over (partition by t.id order by t.created_at) rn
    from
        (
            select
            wo.id
            ,wo.order_no
            ,wor.created_at
            ,wor.staff_info_id
            ,lead(wor.staff_info_id,1)over(partition by wo.id order by wor.created_at desc) lead1
        ,hsi.state
        from bi_pro.work_order wo
        left join bi_pro.work_order_reply wor on wor.order_id = wo.id
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = wor.staff_info_id
        where
            wo.created_at >= date_sub(curdate(),interval 30 day)
            and wor.staff_info_id = '678318'
            and (hsi.node_department_id = 86 or wor.staff_info_id=wo.created_staff_info_id)

        )t
    left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = t.staff_info_id
    left join bi_pro.hr_staff_info hsi2 on hsi2.staff_info_id =t.lead1
    where (t.staff_info_id<>t.lead1 or t.lead1 is null)
    and (hsi.node_department_id<>hsi2.node_department_id or t.lead1 is null)

    and hsi.node_department_id = 86;
;-- -. . -..- - / . -. - .-. -.--
select
    t.id
    ,t.order_no
    ,t.created_at
    ,t.staff_info_id
    ,row_number()over (partition by t.id order by t.created_at) rn
    from
        (
            select
            wo.id
            ,wo.order_no
            ,wor.created_at
            ,wor.staff_info_id
            ,lead(wor.staff_info_id,1)over(partition by wo.id order by wor.created_at desc) lead1
        ,hsi.state
        from bi_pro.work_order wo
        left join bi_pro.work_order_reply wor on wor.order_id = wo.id
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = wor.staff_info_id
        where
            wo.created_at >= date_sub(curdate(),interval 30 day)
            and wor.staff_info_id = '678318'
            and (hsi.node_department_id = 86 or wor.staff_info_id=wo.created_staff_info_id)

        )t
    left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = t.staff_info_id
    left join bi_pro.hr_staff_info hsi2 on hsi2.staff_info_id =t.lead1
    where (t.staff_info_id<>t.lead1 or t.lead1 is null)
    and (hsi.node_department_id<>hsi2.node_department_id or t.lead1 is null);
;-- -. . -..- - / . -. - .-. -.--
select
    plt.id
    ,plt.pno
    ,RIGHT(plt.source_id, LOCATE('_', plt.source_id, LOCATE('_', plt.source_id, 0) + 1) - 1)
from bi_pro.parcel_lose_task plt

where
    plt.source = 2 -- B来源
    and plt.created_at > '2023-10-01'
    and ( plt.source_id like 'return_visit_1_%' or plt.source_id like'return_visit_3_%');
;-- -. . -..- - / . -. - .-. -.--
select
    plt.id
    ,plt.pno
    ,plt.source_id
    ,RIGHT(plt.source_id, LOCATE('_', plt.source_id, LOCATE('_', plt.source_id, 0) + 1) - 1)
from bi_pro.parcel_lose_task plt

where
    plt.source = 2 -- B来源
    and plt.created_at > '2023-10-01'
    and ( plt.source_id like 'return_visit_1_%' or plt.source_id like'return_visit_3_%');
;-- -. . -..- - / . -. - .-. -.--
select
    plt.id
    ,plt.pno
    ,plt.source_id
    ,SUBSTRING_INDEX(SUBSTRING_INDEX(plt.source_id, '_', -2), '_', 2)
from bi_pro.parcel_lose_task plt

where
    plt.source = 2 -- B来源
    and plt.created_at > '2023-10-01'
    and ( plt.source_id like 'return_visit_1_%' or plt.source_id like'return_visit_3_%');
;-- -. . -..- - / . -. - .-. -.--
select
    plt.id
    ,plt.pno
    ,plt.source_id
    ,SUBSTRING_INDEX(SUBSTRING_INDEX(plt.source_id, '_', -1), '_', 2)
from bi_pro.parcel_lose_task plt

where
    plt.source = 2 -- B来源
    and plt.created_at > '2023-10-01'
    and ( plt.source_id like 'return_visit_1_%' or plt.source_id like'return_visit_3_%');
;-- -. . -..- - / . -. - .-. -.--
select
    plt.id
    ,plt.pno
    ,plt.source_id
    ,SUBSTRING_INDEX(plt.source_id, '_', -1)
from bi_pro.parcel_lose_task plt

where
    plt.source = 2 -- B来源
    and plt.created_at > '2023-10-01'
    and ( plt.source_id like 'return_visit_1_%' or plt.source_id like'return_visit_3_%');
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id main_staff_info_id
            ,coalesce(hsa.sub_staff_info_id, swa.staff_info_id) staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,swa.stat_date attendance_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  bi_pro.attendance_data_v2 swa
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-20', interval 7 hour) and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        left join backyard_pro.hr_staff_apply_support_store hsa on hsa.staff_info_id = swa.staff_info_id and hsa.status = 2 and hsa.employment_begin_date <= swa.stat_date and hsa.employment_end_date >= swa.stat_date
        where
            swa.stat_date >= '2023-12-20'
            and swa.stat_date <= '2023-12-20'
            and swa.job_title in (13,110,452)
            and (swa.attendance_started_at is not null or swa.attendance_end_at is not null)
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.main_staff_info_id
            ,a1.phone
            ,a1.attendance_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.main_staff_info_id
                    ,t1.phone
                    ,t1.attendance_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.routed_at
                    ,t1.attendance_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.staff_info_id = a2.staff_info_id and a1.attendance_date = a2.attendance_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    a1.attendance_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.staff_info_id 快递员id
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,coalesce(t1.incoming_count, 0) 来电次数
    ,coalesce(ci.incoming_count, 0) 有效接通次数
    ,coalesce(c2.incoming_count, 0) 有效回拨次数
    ,(coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) 有效接线率
    ,case
        when a2.staff_info_id is not null and (a2.incoming_count = 0 or a2.incoming_count is null) then '异常'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '否'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) < 0.5 then '异常'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) >= 0.5 then '否'
        else null
    end 是否异常
    ,a2.staff_info_id
    ,a2.incoming_count
from
    (
        select
            swa.stat_date attendance_date
            ,swa.staff_info_id
        from bi_pro.attendance_data_v2 swa
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.stat_date >= '2023-12-20'
            and swa.stat_date <= '2023-12-20'
            and swa.job_title in (13,110,452)
            and (swa.attendance_started_at is not null or swa.attendance_end_at is not null)
    ) a1
left join
    (
        select
            t1.main_staff_info_id staff_info_id
            ,t1.attendance_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2
    ) t1 on a1.staff_info_id = t1.staff_info_id and a1.attendance_date = t1.attendance_date
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.main_staff_info_id staff_info_id
            ,c3.attendance_date
            ,count(c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                    ,c1.main_staff_info_id
                   ,c1.phone
                   ,c1.attendance_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.main_staff_info_id
                    ,c1.phone
                    ,c1.attendance_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.staff_info_id = c1.staff_info_id and t1.attendance_date = c1.attendance_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2
    ) c2 on  c2.staff_info_id = a1.staff_info_id and c2.attendance_date = a1.attendance_date
left join
    (
        select
            t1.main_staff_info_id staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.attendance_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = a1.staff_info_id and  ci.pho_date = a1.attendance_date
left join
    (
        select
            a1.main_staff_info_id staff_info_id
           ,a1.attendance_date
           ,count(pr.id) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.main_staff_info_id
                    ,t1.attendance_date
                    ,count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) phone_count
                from t t1
                group by 1,2,3
                having (count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) = 0 or count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) is null)
            ) a1
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.attendance_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.attendance_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = a1.staff_info_id and a2.attendance_date = a1.attendance_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id main_staff_info_id
            ,coalesce(hsa.sub_staff_info_id, swa.staff_info_id) staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,swa.stat_date attendance_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  bi_pro.attendance_data_v2 swa
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-20', interval 7 hour) and pr.routed_at >= date_sub(swa.stat_date, interval 7 hour) and pr.routed_at < date_add(swa.stat_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        left join backyard_pro.hr_staff_apply_support_store hsa on hsa.staff_info_id = swa.staff_info_id and hsa.status = 2 and hsa.employment_begin_date <= swa.stat_date and hsa.employment_end_date >= swa.stat_date
        where
            swa.stat_date >= '2023-12-20'
            and swa.stat_date <= '2023-12-20'
            and swa.job_title in (13,110,452)
            and (swa.attendance_started_at is not null or swa.attendance_end_at is not null)
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.main_staff_info_id
            ,a1.phone
            ,a1.attendance_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.main_staff_info_id
                    ,t1.phone
                    ,t1.attendance_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.routed_at
                    ,t1.attendance_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.staff_info_id = a2.staff_info_id and a1.attendance_date = a2.attendance_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    a1.attendance_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.staff_info_id 快递员id
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,coalesce(t1.incoming_count, 0) 来电次数
    ,coalesce(ci.incoming_count, 0) 有效接通次数
    ,coalesce(c2.incoming_count, 0) 有效回拨次数
    ,(coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) 有效接线率
    ,case
        when a2.staff_info_id is not null and (a2.incoming_count = 0 or a2.incoming_count is null) then '异常'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '否'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) < 0.5 then '异常'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) >= 0.5 then '否'
        else null
    end 是否异常
    ,a2.staff_info_id
    ,a2.incoming_count
from
    (
        select
            swa.stat_date attendance_date
            ,swa.staff_info_id
        from bi_pro.attendance_data_v2 swa
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.stat_date >= '2023-12-20'
            and swa.stat_date <= '2023-12-20'
            and swa.job_title in (13,110,452)
            and (swa.attendance_started_at is not null or swa.attendance_end_at is not null)
    ) a1
left join
    (
        select
            t1.main_staff_info_id staff_info_id
            ,t1.attendance_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2
    ) t1 on a1.staff_info_id = t1.staff_info_id and a1.attendance_date = t1.attendance_date
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.main_staff_info_id staff_info_id
            ,c3.attendance_date
            ,count(c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                    ,c1.main_staff_info_id
                   ,c1.phone
                   ,c1.attendance_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.main_staff_info_id
                    ,c1.phone
                    ,c1.attendance_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.staff_info_id = c1.staff_info_id and t1.attendance_date = c1.attendance_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2
    ) c2 on  c2.staff_info_id = a1.staff_info_id and c2.attendance_date = a1.attendance_date
left join
    (
        select
            t1.main_staff_info_id staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.attendance_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = a1.staff_info_id and  ci.pho_date = a1.attendance_date
left join
    (
        select
            a1.main_staff_info_id staff_info_id
           ,a1.attendance_date
           ,count(pr.id) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.main_staff_info_id
                    ,t1.attendance_date
                    ,count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) phone_count
                from t t1
                group by 1,2,3
                having (count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) = 0 or count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) is null)
            ) a1
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.attendance_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.attendance_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = a1.staff_info_id and a2.attendance_date = a1.attendance_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id main_staff_info_id
            ,coalesce(hsa.sub_staff_info_id, swa.staff_info_id) staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,swa.stat_date attendance_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  bi_pro.attendance_data_v2 swa
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-20', interval 7 hour) and pr.routed_at >= date_sub(swa.stat_date, interval 7 hour) and pr.routed_at < date_add(swa.stat_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        left join backyard_pro.hr_staff_apply_support_store hsa on hsa.staff_info_id = swa.staff_info_id and hsa.status = 2 and hsa.employment_begin_date <= swa.stat_date and hsa.employment_end_date >= swa.stat_date
        where
            swa.stat_date >= '2023-12-20'
            and swa.stat_date <= '2023-12-20'
            and swa.job_title in (13,110,452)
            and (swa.attendance_started_at is not null or swa.attendance_end_at is not null)
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.main_staff_info_id
            ,a1.phone
            ,a1.attendance_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.main_staff_info_id
                    ,t1.phone
                    ,t1.attendance_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.routed_at
                    ,t1.attendance_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.staff_info_id = a2.staff_info_id and a1.attendance_date = a2.attendance_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    a1.attendance_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.staff_info_id 快递员id
    ,t1.staff_info_id
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,coalesce(t1.incoming_count, 0) 来电次数
    ,coalesce(ci.incoming_count, 0) 有效接通次数
    ,coalesce(c2.incoming_count, 0) 有效回拨次数
    ,(coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) 有效接线率
    ,case
        when a2.staff_info_id is not null and (a2.incoming_count = 0 or a2.incoming_count is null) then '异常'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '否'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) < 0.5 then '异常'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) >= 0.5 then '否'
        else null
    end 是否异常
    ,a2.staff_info_id
    ,a2.incoming_count
from
    (
        select
            swa.stat_date attendance_date
            ,swa.staff_info_id
        from bi_pro.attendance_data_v2 swa
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.stat_date >= '2023-12-20'
            and swa.stat_date <= '2023-12-20'
            and swa.job_title in (13,110,452)
            and (swa.attendance_started_at is not null or swa.attendance_end_at is not null)
    ) a1
left join
    (
        select
            t1.main_staff_info_id staff_info_id
            ,t1.staff_info_id
            ,t1.attendance_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2,3
    ) t1 on a1.staff_info_id = t1.staff_info_id and a1.attendance_date = t1.attendance_date
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.main_staff_info_id staff_info_id
            ,c3.attendance_date
            ,count(c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                    ,c1.main_staff_info_id
                   ,c1.phone
                   ,c1.attendance_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.main_staff_info_id
                    ,c1.phone
                    ,c1.attendance_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.staff_info_id = c1.staff_info_id and t1.attendance_date = c1.attendance_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2
    ) c2 on  c2.staff_info_id = a1.staff_info_id and c2.attendance_date = a1.attendance_date
left join
    (
        select
            t1.main_staff_info_id staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.attendance_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = a1.staff_info_id and  ci.pho_date = a1.attendance_date
left join
    (
        select
            a1.main_staff_info_id staff_info_id
           ,a1.attendance_date
           ,count(pr.id) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.main_staff_info_id
                    ,t1.attendance_date
                    ,count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) phone_count
                from t t1
                group by 1,2,3
                having (count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) = 0 or count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) is null)
            ) a1
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.attendance_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.attendance_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = a1.staff_info_id and a2.attendance_date = a1.attendance_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id main_staff_info_id
            ,coalesce(hsa.sub_staff_info_id, swa.staff_info_id) staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,swa.stat_date attendance_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  bi_pro.attendance_data_v2 swa
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-20', interval 7 hour) and pr.routed_at >= date_sub(swa.stat_date, interval 7 hour) and pr.routed_at < date_add(swa.stat_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        left join backyard_pro.hr_staff_apply_support_store hsa on hsa.staff_info_id = swa.staff_info_id and hsa.status = 2 and hsa.employment_begin_date <= swa.stat_date and hsa.employment_end_date >= swa.stat_date
        where
            swa.stat_date >= '2023-12-20'
            and swa.stat_date <= '2023-12-20'
            and swa.job_title in (13,110,452)
            and (swa.attendance_started_at is not null or swa.attendance_end_at is not null)
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.main_staff_info_id
            ,a1.phone
            ,a1.attendance_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.main_staff_info_id
                    ,t1.phone
                    ,t1.attendance_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.routed_at
                    ,t1.attendance_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.staff_info_id = a2.staff_info_id and a1.attendance_date = a2.attendance_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    a1.attendance_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.staff_info_id 快递员id
    ,t1.staff_info_id_v2
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,coalesce(t1.incoming_count, 0) 来电次数
    ,coalesce(ci.incoming_count, 0) 有效接通次数
    ,coalesce(c2.incoming_count, 0) 有效回拨次数
    ,(coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) 有效接线率
    ,case
        when a2.staff_info_id is not null and (a2.incoming_count = 0 or a2.incoming_count is null) then '异常'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '否'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) < 0.5 then '异常'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) >= 0.5 then '否'
        else null
    end 是否异常
    ,a2.staff_info_id
    ,a2.incoming_count
from
    (
        select
            swa.stat_date attendance_date
            ,swa.staff_info_id
        from bi_pro.attendance_data_v2 swa
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.stat_date >= '2023-12-20'
            and swa.stat_date <= '2023-12-20'
            and swa.job_title in (13,110,452)
            and (swa.attendance_started_at is not null or swa.attendance_end_at is not null)
    ) a1
left join
    (
        select
            t1.main_staff_info_id staff_info_id
            ,t1.staff_info_id staff_info_id_v2
            ,t1.attendance_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2,3
    ) t1 on a1.staff_info_id = t1.staff_info_id and a1.attendance_date = t1.attendance_date
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.main_staff_info_id staff_info_id
            ,c3.attendance_date
            ,count(c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                    ,c1.main_staff_info_id
                   ,c1.phone
                   ,c1.attendance_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.main_staff_info_id
                    ,c1.phone
                    ,c1.attendance_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.staff_info_id = c1.staff_info_id and t1.attendance_date = c1.attendance_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2
    ) c2 on  c2.staff_info_id = a1.staff_info_id and c2.attendance_date = a1.attendance_date
left join
    (
        select
            t1.main_staff_info_id staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.attendance_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = a1.staff_info_id and  ci.pho_date = a1.attendance_date
left join
    (
        select
            a1.main_staff_info_id staff_info_id
           ,a1.attendance_date
           ,count(pr.id) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.main_staff_info_id
                    ,t1.attendance_date
                    ,count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) phone_count
                from t t1
                group by 1,2,3
                having (count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) = 0 or count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) is null)
            ) a1
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.attendance_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.attendance_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = a1.staff_info_id and a2.attendance_date = a1.attendance_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id main_staff_info_id
            ,coalesce(hsa.sub_staff_info_id, swa.staff_info_id) staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,swa.stat_date attendance_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  bi_pro.attendance_data_v2 swa
        left join backyard_pro.hr_staff_apply_support_store hsa on hsa.staff_info_id = swa.staff_info_id and hsa.status = 2 and hsa.employment_begin_date <= swa.stat_date and hsa.employment_end_date >= swa.stat_date
        left join rot_pro.parcel_route pr on coalesce(hsa.sub_staff_info_id, swa.staff_info_id) = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-20', interval 7 hour) and pr.routed_at >= date_sub(swa.stat_date, interval 7 hour) and pr.routed_at < date_add(swa.stat_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.stat_date >= '2023-12-20'
            and swa.stat_date <= '2023-12-20'
            and swa.job_title in (13,110,452)
            and (swa.attendance_started_at is not null or swa.attendance_end_at is not null)
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.main_staff_info_id
            ,a1.phone
            ,a1.attendance_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.main_staff_info_id
                    ,t1.phone
                    ,t1.attendance_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.routed_at
                    ,t1.attendance_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.staff_info_id = a2.staff_info_id and a1.attendance_date = a2.attendance_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    a1.attendance_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.staff_info_id 快递员id
    ,t1.staff_info_id_v2
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,coalesce(t1.incoming_count, 0) 来电次数
    ,coalesce(ci.incoming_count, 0) 有效接通次数
    ,coalesce(c2.incoming_count, 0) 有效回拨次数
    ,(coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) 有效接线率
    ,case
        when a2.staff_info_id is not null and (a2.incoming_count = 0 or a2.incoming_count is null) then '异常'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '否'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) < 0.5 then '异常'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) >= 0.5 then '否'
        else null
    end 是否异常
    ,a2.staff_info_id
    ,a2.incoming_count
from
    (
        select
            swa.stat_date attendance_date
            ,swa.staff_info_id
        from bi_pro.attendance_data_v2 swa
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.stat_date >= '2023-12-20'
            and swa.stat_date <= '2023-12-20'
            and swa.job_title in (13,110,452)
            and (swa.attendance_started_at is not null or swa.attendance_end_at is not null)
    ) a1
left join
    (
        select
            t1.main_staff_info_id staff_info_id
            ,t1.staff_info_id staff_info_id_v2
            ,t1.attendance_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2,3
    ) t1 on a1.staff_info_id = t1.staff_info_id and a1.attendance_date = t1.attendance_date
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.main_staff_info_id staff_info_id
            ,c3.attendance_date
            ,count(c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                    ,c1.main_staff_info_id
                   ,c1.phone
                   ,c1.attendance_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.main_staff_info_id
                    ,c1.phone
                    ,c1.attendance_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.staff_info_id = c1.staff_info_id and t1.attendance_date = c1.attendance_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2
    ) c2 on  c2.staff_info_id = a1.staff_info_id and c2.attendance_date = a1.attendance_date
left join
    (
        select
            t1.main_staff_info_id staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.attendance_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = a1.staff_info_id and  ci.pho_date = a1.attendance_date
left join
    (
        select
            a1.main_staff_info_id staff_info_id
           ,a1.attendance_date
           ,count(pr.id) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.main_staff_info_id
                    ,t1.attendance_date
                    ,count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) phone_count
                from t t1
                group by 1,2,3
                having (count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) = 0 or count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) is null)
            ) a1
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.attendance_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.attendance_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = a1.staff_info_id and a2.attendance_date = a1.attendance_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,coalesce(hsa.staff_info_id, swa.staff_info_id) main_staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,swa.attendance_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join backyard_pro.hr_staff_apply_support_store hsa on hsa.sub_staff_info_id = swa.staff_info_id and hsa.status = 2 and hsa.employment_begin_date <= swa.stat_date and hsa.employment_end_date >= swa.stat_date
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-20', interval 7 hour) and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-20'
            and swa.attendance_date <= '2023-12-20'
            and swa.job_title in (13,110,452)
            and (swa.started_at is not null or swa.end_at is not null)
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.main_staff_info_id
            ,a1.phone
            ,a1.attendance_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.main_staff_info_id
                    ,t1.phone
                    ,t1.attendance_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.main_staff_info_id
                    ,t1.routed_at
                    ,t1.attendance_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.main_staff_info_id = a2.main_staff_info_id and a1.attendance_date = a2.attendance_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    a1.attendance_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.staff_info_id 快递员id
    ,t1.staff_info_id_v2
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,coalesce(t1.incoming_count, 0) 来电次数
    ,coalesce(ci.incoming_count, 0) 有效接通次数
    ,coalesce(c2.incoming_count, 0) 有效回拨次数
    ,(coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) 有效接线率
    ,case
        when a2.staff_info_id is not null and (a2.incoming_count = 0 or a2.incoming_count is null) then '异常'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '否'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) < 0.5 then '异常'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) >= 0.5 then '否'
        else null
    end 是否异常
    ,a2.staff_info_id
    ,a2.incoming_count
from
    (
        select
            swa.stat_date attendance_date
            ,swa.staff_info_id
        from bi_pro.attendance_data_v2 swa
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.stat_date >= '2023-12-20'
            and swa.stat_date <= '2023-12-20'
            and swa.job_title in (13,110,452)
            and (swa.attendance_started_at is not null or swa.attendance_end_at is not null)
    ) a1
left join
    (
        select
            t1.main_staff_info_id staff_info_id
            ,t1.staff_info_id staff_info_id_v2
            ,t1.attendance_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2,3
    ) t1 on a1.staff_info_id = t1.staff_info_id and a1.attendance_date = t1.attendance_date
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.main_staff_info_id staff_info_id
            ,c3.attendance_date
            ,count(distinct c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                    ,c1.main_staff_info_id
                   ,c1.phone
                   ,c1.attendance_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.main_staff_info_id
                    ,c1.phone
                    ,c1.attendance_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.main_staff_info_id = c1.main_staff_info_id and t1.attendance_date = c1.attendance_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2
    ) c2 on  c2.staff_info_id = a1.staff_info_id and c2.attendance_date = a1.attendance_date
left join
    (
        select
            t1.main_staff_info_id staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.attendance_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = a1.staff_info_id and  ci.pho_date = a1.attendance_date
left join
    (
        select
            a1.main_staff_info_id staff_info_id
           ,a1.attendance_date
           ,coalesce(count(distinct pr.id), 0) + coalesce(count(distinct pr2.id), 0) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.main_staff_info_id
                    ,t1.attendance_date
                    ,count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) phone_count
                from t t1
                group by 1,2,3
                having (count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) = 0 or count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) is null)
            ) a1
        left join backyard_pro.hr_staff_apply_support_store hsa on hsa.staff_info_id = a1.main_staff_info_id and hsa.employment_end_date >= date_sub(a1.attendance_date, interval 7 day) and hsa.employment_begin_date < a1.attendance_date and hsa.status = 2
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.main_staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.attendance_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.attendance_date, interval 7 day), interval 17 hour)
        left join rot_pro.parcel_route pr2 on pr2.routed_at > date_sub(curdate(), interval 1 month ) and pr2.staff_info_id = hsa.sub_staff_info_id and pr2.route_action in ( 'INCOMING_CALL') and pr2.routed_at < date_add(a1.attendance_date, interval 7 hour) and pr2.routed_at >= date_add(date_sub(a1.attendance_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = a1.staff_info_id and a2.attendance_date = a1.attendance_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,coalesce(hsa.staff_info_id, swa.staff_info_id) main_staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,swa.attendance_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join backyard_pro.hr_staff_apply_support_store hsa on hsa.sub_staff_info_id = swa.staff_info_id and hsa.status = 2 and hsa.employment_begin_date <= swa.attendance_date and hsa.employment_end_date >= swa.attendance_date
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-20', interval 7 hour) and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-20'
            and swa.attendance_date <= '2023-12-20'
            and swa.job_title in (13,110,452)
            and (swa.started_at is not null or swa.end_at is not null)
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.main_staff_info_id
            ,a1.phone
            ,a1.attendance_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.main_staff_info_id
                    ,t1.phone
                    ,t1.attendance_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.main_staff_info_id
                    ,t1.routed_at
                    ,t1.attendance_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.main_staff_info_id = a2.main_staff_info_id and a1.attendance_date = a2.attendance_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    a1.attendance_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.staff_info_id 快递员id
    ,t1.staff_info_id_v2
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,coalesce(t1.incoming_count, 0) 来电次数
    ,coalesce(ci.incoming_count, 0) 有效接通次数
    ,coalesce(c2.incoming_count, 0) 有效回拨次数
    ,(coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) 有效接线率
    ,case
        when a2.staff_info_id is not null and (a2.incoming_count = 0 or a2.incoming_count is null) then '异常'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '否'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) < 0.5 then '异常'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) >= 0.5 then '否'
        else null
    end 是否异常
    ,a2.staff_info_id
    ,a2.incoming_count
from
    (
        select
            swa.stat_date attendance_date
            ,swa.staff_info_id
        from bi_pro.attendance_data_v2 swa
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.stat_date >= '2023-12-20'
            and swa.stat_date <= '2023-12-20'
            and swa.job_title in (13,110,452)
            and (swa.attendance_started_at is not null or swa.attendance_end_at is not null)
    ) a1
left join
    (
        select
            t1.main_staff_info_id staff_info_id
            ,t1.staff_info_id staff_info_id_v2
            ,t1.attendance_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2,3
    ) t1 on a1.staff_info_id = t1.staff_info_id and a1.attendance_date = t1.attendance_date
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.main_staff_info_id staff_info_id
            ,c3.attendance_date
            ,count(distinct c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                    ,c1.main_staff_info_id
                   ,c1.phone
                   ,c1.attendance_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.main_staff_info_id
                    ,c1.phone
                    ,c1.attendance_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.main_staff_info_id = c1.main_staff_info_id and t1.attendance_date = c1.attendance_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2
    ) c2 on  c2.staff_info_id = a1.staff_info_id and c2.attendance_date = a1.attendance_date
left join
    (
        select
            t1.main_staff_info_id staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.attendance_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = a1.staff_info_id and  ci.pho_date = a1.attendance_date
left join
    (
        select
            a1.main_staff_info_id staff_info_id
           ,a1.attendance_date
           ,coalesce(count(distinct pr.id), 0) + coalesce(count(distinct pr2.id), 0) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.main_staff_info_id
                    ,t1.attendance_date
                    ,count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) phone_count
                from t t1
                group by 1,2,3
                having (count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) = 0 or count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) is null)
            ) a1
        left join backyard_pro.hr_staff_apply_support_store hsa on hsa.staff_info_id = a1.main_staff_info_id and hsa.employment_end_date >= date_sub(a1.attendance_date, interval 7 day) and hsa.employment_begin_date < a1.attendance_date and hsa.status = 2
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.main_staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.attendance_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.attendance_date, interval 7 day), interval 17 hour)
        left join rot_pro.parcel_route pr2 on pr2.routed_at > date_sub(curdate(), interval 1 month ) and pr2.staff_info_id = hsa.sub_staff_info_id and pr2.route_action in ( 'INCOMING_CALL') and pr2.routed_at < date_add(a1.attendance_date, interval 7 hour) and pr2.routed_at >= date_add(date_sub(a1.attendance_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = a1.staff_info_id and a2.attendance_date = a1.attendance_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,coalesce(hsa.staff_info_id, swa.staff_info_id) main_staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,swa.attendance_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join backyard_pro.hr_staff_apply_support_store hsa on hsa.sub_staff_info_id = swa.staff_info_id and hsa.status = 2 and hsa.employment_begin_date <= swa.attendance_date and hsa.employment_end_date >= swa.attendance_date
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-20', interval 7 hour) and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-20'
            and swa.attendance_date <= '2023-12-20'
            and swa.job_title in (13,110,452)
            and (swa.started_at is not null or swa.end_at is not null)
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.main_staff_info_id
            ,a1.phone
            ,a1.attendance_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.main_staff_info_id
                    ,t1.phone
                    ,t1.attendance_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.main_staff_info_id
                    ,t1.routed_at
                    ,t1.attendance_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.main_staff_info_id = a2.main_staff_info_id and a1.attendance_date = a2.attendance_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    a1.attendance_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.staff_info_id 快递员id
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,coalesce(t1.incoming_count, 0) 来电次数
    ,coalesce(ci.incoming_count, 0) 有效接通次数
    ,coalesce(c2.incoming_count, 0) 有效回拨次数
    ,(coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) 有效接线率
    ,case
        when a2.staff_info_id is not null and (a2.incoming_count = 0 or a2.incoming_count is null) then '异常'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '否'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) < 0.5 then '异常'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) >= 0.5 then '否'
        else null
    end 是否异常
    ,a2.staff_info_id
    ,a2.incoming_count
from
    (
        select
            swa.stat_date attendance_date
            ,swa.staff_info_id
        from bi_pro.attendance_data_v2 swa
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.stat_date >= '2023-12-20'
            and swa.stat_date <= '2023-12-20'
            and swa.job_title in (13,110,452)
            and (swa.attendance_started_at is not null or swa.attendance_end_at is not null)
    ) a1
left join
    (
        select
            t1.main_staff_info_id staff_info_id
            ,t1.attendance_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2,3
    ) t1 on a1.staff_info_id = t1.staff_info_id and a1.attendance_date = t1.attendance_date
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.main_staff_info_id staff_info_id
            ,c3.attendance_date
            ,count(distinct c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                    ,c1.main_staff_info_id
                   ,c1.phone
                   ,c1.attendance_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.main_staff_info_id
                    ,c1.phone
                    ,c1.attendance_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.main_staff_info_id = c1.main_staff_info_id and t1.attendance_date = c1.attendance_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2
    ) c2 on  c2.staff_info_id = a1.staff_info_id and c2.attendance_date = a1.attendance_date
left join
    (
        select
            t1.main_staff_info_id staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.attendance_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = a1.staff_info_id and  ci.pho_date = a1.attendance_date
left join
    (
        select
            a1.main_staff_info_id staff_info_id
           ,a1.attendance_date
           ,coalesce(count(distinct pr.id), 0) + coalesce(count(distinct pr2.id), 0) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.main_staff_info_id
                    ,t1.attendance_date
                    ,count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) phone_count
                from t t1
                group by 1,2,3
                having (count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) = 0 or count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) is null)
            ) a1
        left join backyard_pro.hr_staff_apply_support_store hsa on hsa.staff_info_id = a1.main_staff_info_id and hsa.employment_end_date >= date_sub(a1.attendance_date, interval 7 day) and hsa.employment_begin_date < a1.attendance_date and hsa.status = 2
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.main_staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.attendance_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.attendance_date, interval 7 day), interval 17 hour)
        left join rot_pro.parcel_route pr2 on pr2.routed_at > date_sub(curdate(), interval 1 month ) and pr2.staff_info_id = hsa.sub_staff_info_id and pr2.route_action in ( 'INCOMING_CALL') and pr2.routed_at < date_add(a1.attendance_date, interval 7 hour) and pr2.routed_at >= date_add(date_sub(a1.attendance_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = a1.staff_info_id and a2.attendance_date = a1.attendance_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,coalesce(hsa.staff_info_id, swa.staff_info_id) main_staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,swa.attendance_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join backyard_pro.hr_staff_apply_support_store hsa on hsa.sub_staff_info_id = swa.staff_info_id and hsa.status = 2 and hsa.employment_begin_date <= swa.attendance_date and hsa.employment_end_date >= swa.attendance_date
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-20', interval 7 hour) and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-20'
            and swa.attendance_date <= '2023-12-20'
            and swa.job_title in (13,110,452)
            and (swa.started_at is not null or swa.end_at is not null)
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.main_staff_info_id
            ,a1.phone
            ,a1.attendance_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.main_staff_info_id
                    ,t1.phone
                    ,t1.attendance_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.main_staff_info_id
                    ,t1.routed_at
                    ,t1.attendance_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.main_staff_info_id = a2.main_staff_info_id and a1.attendance_date = a2.attendance_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    a1.attendance_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.staff_info_id 快递员id
    ,coalesce(hsi.mobile_company, hsi.mobile) 快递员号码
    ,coalesce(t1.incoming_count, 0) 来电次数
    ,coalesce(ci.incoming_count, 0) 有效接通次数
    ,coalesce(c2.incoming_count, 0) 有效回拨次数
    ,(coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) 有效接线率
    ,case
        when a2.staff_info_id is not null and (a2.incoming_count = 0 or a2.incoming_count is null) then '异常'
        when a2.staff_info_id is not null and a2.incoming_count > 0 then '否'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) < 0.5 then '异常'
        when a2.staff_info_id is null and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) >= 0.5 then '否'
        else null
    end 是否异常
    ,a2.staff_info_id
    ,a2.incoming_count
from
    (
        select
            swa.stat_date attendance_date
            ,swa.staff_info_id
        from bi_pro.attendance_data_v2 swa
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.stat_date >= '2023-12-20'
            and swa.stat_date <= '2023-12-20'
            and swa.job_title in (13,110,452)
            and (swa.attendance_started_at is not null or swa.attendance_end_at is not null)
    ) a1
left join
    (
        select
            t1.main_staff_info_id staff_info_id
            ,t1.attendance_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2
    ) t1 on a1.staff_info_id = t1.staff_info_id and a1.attendance_date = t1.attendance_date
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.main_staff_info_id staff_info_id
            ,c3.attendance_date
            ,count(distinct c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                    ,c1.main_staff_info_id
                   ,c1.phone
                   ,c1.attendance_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.main_staff_info_id
                    ,c1.phone
                    ,c1.attendance_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.main_staff_info_id = c1.main_staff_info_id and t1.attendance_date = c1.attendance_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2
    ) c2 on  c2.staff_info_id = a1.staff_info_id and c2.attendance_date = a1.attendance_date
left join
    (
        select
            t1.main_staff_info_id staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.attendance_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = a1.staff_info_id and  ci.pho_date = a1.attendance_date
left join
    (
        select
            a1.main_staff_info_id staff_info_id
           ,a1.attendance_date
           ,coalesce(count(distinct pr.id), 0) + coalesce(count(distinct pr2.id), 0) incoming_count
        from
            (
                select
                    t1.staff_info_id
                    ,t1.main_staff_info_id
                    ,t1.attendance_date
                    ,count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) phone_count
                from t t1
                group by 1,2,3
                having (count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) = 0 or count(distinct if(t1.phone_type = 'in_coming', t1.phone, null)) is null)
            ) a1
        left join backyard_pro.hr_staff_apply_support_store hsa on hsa.staff_info_id = a1.main_staff_info_id and hsa.employment_end_date >= date_sub(a1.attendance_date, interval 7 day) and hsa.employment_begin_date < a1.attendance_date and hsa.status = 2
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.main_staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.attendance_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.attendance_date, interval 7 day), interval 17 hour)
        left join rot_pro.parcel_route pr2 on pr2.routed_at > date_sub(curdate(), interval 1 month ) and pr2.staff_info_id = hsa.sub_staff_info_id and pr2.route_action in ( 'INCOMING_CALL') and pr2.routed_at < date_add(a1.attendance_date, interval 7 hour) and pr2.routed_at >= date_add(date_sub(a1.attendance_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = a1.staff_info_id and a2.attendance_date = a1.attendance_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,coalesce(hsa.staff_info_id, swa.staff_info_id) main_staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,swa.attendance_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join backyard_pro.hr_staff_apply_support_store hsa on hsa.sub_staff_info_id = swa.staff_info_id and hsa.status = 2 and hsa.employment_begin_date <= swa.attendance_date and hsa.employment_end_date >= swa.attendance_date
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-20', interval 7 hour) and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-20'
            and swa.attendance_date <= '2023-12-20'
            and swa.job_title in (13,110,452)
            and (swa.started_at is not null or swa.end_at is not null)
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.main_staff_info_id
            ,a1.phone
            ,a1.attendance_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.main_staff_info_id
                    ,t1.phone
                    ,t1.attendance_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.main_staff_info_id
                    ,t1.routed_at
                    ,t1.attendance_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.main_staff_info_id = a2.main_staff_info_id and a1.attendance_date = a2.attendance_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    a1.attendance_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.staff_info_id 快递员id
    ,hsa.sub_staff_info_id 子账号
    ,hsi.mobile_company 企业号码
    ,hsi.mobile 个人号码
    ,coalesce(t1.incoming_count, 0) 来电次数
    ,coalesce(ci.incoming_count, 0) 有效接通次数
    ,coalesce(c2.incoming_count, 0) 有效回拨次数
    ,(coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) 有效接线率
    ,case
        when coalesce(t1.incoming_count, 0)  = 0 and (a2.incoming_count = 0 or a2.incoming_count is null) then '异常'
        when coalesce(t1.incoming_count, 0)  = 0 and a2.incoming_count > 0 then '否'
        when coalesce(t1.incoming_count, 0)  > 0 and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) < 0.5 then '异常'
        when coalesce(t1.incoming_count, 0)  > 0 and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) >= 0.5 then '否'
        else null
    end 是否异常
#     ,a2.staff_info_id
#     ,a2.incoming_count
from
    (
        select
            swa.stat_date attendance_date
            ,swa.staff_info_id
        from bi_pro.attendance_data_v2 swa
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.stat_date >= '2023-12-20'
            and swa.stat_date <= '2023-12-20'
            and swa.job_title in (13,110,452)
            and (swa.attendance_started_at is not null or swa.attendance_end_at is not null)
    ) a1
left join backyard_pro.hr_staff_apply_support_store hsa on hsa.staff_info_id = swa.staff_info_id and hsa.status = 2 and hsa.employment_begin_date <= swa.attendance_date and hsa.employment_end_date >= swa.attendance_date
left join
    (
        select
            t1.main_staff_info_id staff_info_id
            ,t1.attendance_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2
    ) t1 on a1.staff_info_id = t1.staff_info_id and a1.attendance_date = t1.attendance_date
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.main_staff_info_id staff_info_id
            ,c3.attendance_date
            ,count(distinct c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                    ,c1.main_staff_info_id
                   ,c1.phone
                   ,c1.attendance_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.main_staff_info_id
                    ,c1.phone
                    ,c1.attendance_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.main_staff_info_id = c1.main_staff_info_id and t1.attendance_date = c1.attendance_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2
    ) c2 on  c2.staff_info_id = a1.staff_info_id and c2.attendance_date = a1.attendance_date
left join
    (
        select
            t1.main_staff_info_id staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.attendance_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = a1.staff_info_id and  ci.pho_date = a1.attendance_date
left join
    (
        select
            a1.main_staff_info_id staff_info_id
           ,a1.attendance_date
           ,coalesce(count(distinct pr.id), 0) + coalesce(count(distinct pr2.id), 0) incoming_count
        from
            (
                select
                    swa.stat_date attendance_date
                    ,swa.staff_info_id  main_staff_info_id
                from bi_pro.attendance_data_v2 swa
                left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
                where
                    swa.stat_date >= '2023-12-20'
                    and swa.stat_date <= '2023-12-20'
                    and swa.job_title in (13,110,452)
                    and (swa.attendance_started_at is not null or swa.attendance_end_at is not null)
            ) a1
        left join backyard_pro.hr_staff_apply_support_store hsa on hsa.staff_info_id = a1.main_staff_info_id and hsa.employment_end_date >= date_sub(a1.attendance_date, interval 7 day) and hsa.employment_begin_date < a1.attendance_date and hsa.status = 2
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.main_staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.attendance_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.attendance_date, interval 7 day), interval 17 hour)
        left join rot_pro.parcel_route pr2 on pr2.routed_at > date_sub(curdate(), interval 1 month ) and pr2.staff_info_id = hsa.sub_staff_info_id and pr2.route_action in ( 'INCOMING_CALL') and pr2.routed_at < date_add(a1.attendance_date, interval 7 hour) and pr2.routed_at >= date_add(date_sub(a1.attendance_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = a1.staff_info_id and a2.attendance_date = a1.attendance_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
             pr.id
            ,pr.pno
            ,swa.staff_info_id
            ,coalesce(hsa.staff_info_id, swa.staff_info_id) main_staff_info_id
            ,pi.src_phone
            ,pi.dst_phone
            ,json_extract(pr.extra_value, '$.phone') phone
            ,case
                when  json_extract(pr.extra_value, '$.phone') = pi.src_phone then'src'
                when json_extract(pr.extra_value, '$.phone') = pi.dst_phone then 'dst'
                else 'other'
            end phone_source
            ,case pr.route_action
                when 'PHONE' then 'out_going'
                when 'INCOMING_CALL' then 'in_coming'
             end as phone_type
            ,pr.routed_at
            ,date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pho_date
            ,swa.attendance_date
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
        from  backyard_pro.staff_work_attendance swa
        left join backyard_pro.hr_staff_apply_support_store hsa on hsa.sub_staff_info_id = swa.staff_info_id and hsa.status = 2 and hsa.employment_begin_date <= swa.attendance_date and hsa.employment_end_date >= swa.attendance_date
        left join rot_pro.parcel_route pr on swa.staff_info_id = pr.staff_info_id  and pr.routed_at >= date_sub('2023-12-20', interval 7 hour) and pr.routed_at >= date_sub(swa.attendance_date, interval 7 hour) and pr.routed_at < date_add(swa.attendance_date, interval 17 hour) and pr.route_action in ('PHONE', 'INCOMING_CALL')
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.attendance_date >= '2023-12-20'
            and swa.attendance_date <= '2023-12-20'
            and swa.job_title in (13,110,452)
            and (swa.started_at is not null or swa.end_at is not null)
    )
, cb as
    (
        select -- 回拨
            a1.staff_info_id
            ,a1.main_staff_info_id
            ,a1.phone
            ,a1.attendance_date
            ,a2.call_num
            ,a2.diao_num
        from
            (
                select
                    t1.staff_info_id
                    ,t1.main_staff_info_id
                    ,t1.phone
                    ,t1.attendance_date
                    ,t1.routed_at
                from t t1
                where
                    t1.phone_type = 'in_coming'
                    and (t1.call_num is null or t1.call_num = 0) -- 未接通
            ) a1
        join
            (
                select
                    t1.staff_info_id
                    ,t1.main_staff_info_id
                    ,t1.routed_at
                    ,t1.attendance_date
                    ,t1.phone
                    ,t1.id
                    ,t1.call_num
                    ,t1.diao_num
                from t t1
                where
                    t1.phone_type = 'out_going'
                    -- and t1.call_num > 5
            ) a2 on a1.phone = a2.phone and a1.main_staff_info_id = a2.main_staff_info_id and a1.attendance_date = a2.attendance_date
        where
            a2.routed_at > a1.routed_at
        group by 1,2,3,4,5
    )
select
    a1.attendance_date 日期
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.staff_info_id 快递员id
    ,hsa.sub_staff_info_id 子账号
    ,hsi.mobile_company 企业号码
    ,hsi.mobile 个人号码
    ,coalesce(t1.incoming_count, 0) 来电次数
    ,coalesce(ci.incoming_count, 0) 有效接通次数
    ,coalesce(c2.incoming_count, 0) 有效回拨次数
    ,(coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) 有效接线率
    ,case
        when coalesce(t1.incoming_count, 0)  = 0 and (a2.incoming_count = 0 or a2.incoming_count is null) then '异常'
        when coalesce(t1.incoming_count, 0)  = 0 and a2.incoming_count > 0 then '否'
        when coalesce(t1.incoming_count, 0)  > 0 and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) < 0.5 then '异常'
        when coalesce(t1.incoming_count, 0)  > 0 and (coalesce(ci.incoming_count, 0) + coalesce(c2.incoming_count, 0))/coalesce(t1.incoming_count, 0) >= 0.5 then '否'
        else null
    end 是否异常
#     ,a2.staff_info_id
#     ,a2.incoming_count
from
    (
        select
            swa.stat_date attendance_date
            ,swa.staff_info_id
        from bi_pro.attendance_data_v2 swa
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
        where
            swa.stat_date >= '2023-12-20'
            and swa.stat_date <= '2023-12-20'
            and swa.job_title in (13,110,452)
            and (swa.attendance_started_at is not null or swa.attendance_end_at is not null)
    ) a1
left join backyard_pro.hr_staff_apply_support_store hsa on hsa.staff_info_id = a1.staff_info_id and hsa.status = 2 and hsa.employment_begin_date <= a1.attendance_date and hsa.employment_end_date >= a1.attendance_date
left join
    (
        select
            t1.main_staff_info_id staff_info_id
            ,t1.attendance_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        where
            t1.phone_type = 'in_coming'
        group by 1,2
    ) t1 on a1.staff_info_id = t1.staff_info_id and a1.attendance_date = t1.attendance_date
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a1.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join
    (
        select
            c3.main_staff_info_id staff_info_id
            ,c3.attendance_date
            ,count(distinct c3.phone) incoming_count
        from
            (
                select  -- 有效回拨：呼入通话大于 8，回拨接通或者响铃大于 10
                    c1.staff_info_id
                    ,c1.main_staff_info_id
                   ,c1.phone
                   ,c1.attendance_date
                from cb c1
                where
                    c1.call_num > 0
                    or c1.diao_num >= 10
                group by 1,2,3

                union

                select
                    c1.staff_info_id
                    ,c1.main_staff_info_id
                    ,c1.phone
                    ,c1.attendance_date
                from cb c1
                join t t1 on t1.phone = c1.phone and t1.main_staff_info_id = c1.main_staff_info_id and t1.attendance_date = c1.attendance_date
                where
                    t1.call_num >= 8
                group by 1,2,3
            ) c3
        group by 1,2
    ) c2 on  c2.staff_info_id = a1.staff_info_id and c2.attendance_date = a1.attendance_date
left join
    (
        select
            t1.main_staff_info_id staff_info_id
            ,t1.pho_date
            ,count(distinct t1.phone) incoming_count
        from t t1
        left join cb c1 on c1.phone = t1.phone and c1.staff_info_id = t1.staff_info_id and c1.attendance_date = t1.pho_date
        where
            c1.phone is null
            and t1.phone_type = 'in_coming'
            and t1.call_num >= 8
        group by 1,2
    ) ci on ci.staff_info_id = a1.staff_info_id and  ci.pho_date = a1.attendance_date
left join
    (
        select
            a1.main_staff_info_id staff_info_id
           ,a1.attendance_date
           ,coalesce(count(distinct pr.id), 0) + coalesce(count(distinct pr2.id), 0) incoming_count
        from
            (
                select
                    swa.stat_date attendance_date
                    ,swa.staff_info_id  main_staff_info_id
                from bi_pro.attendance_data_v2 swa
                left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = swa.staff_info_id
                where
                    swa.stat_date >= '2023-12-20'
                    and swa.stat_date <= '2023-12-20'
                    and swa.job_title in (13,110,452)
                    and (swa.attendance_started_at is not null or swa.attendance_end_at is not null)
            ) a1
        left join backyard_pro.hr_staff_apply_support_store hsa on hsa.staff_info_id = a1.main_staff_info_id and hsa.employment_end_date >= date_sub(a1.attendance_date, interval 7 day) and hsa.employment_begin_date < a1.attendance_date and hsa.status = 2
        left join rot_pro.parcel_route pr on pr.routed_at > date_sub(curdate(), interval 1 month ) and pr.staff_info_id = a1.main_staff_info_id and pr.route_action in ( 'INCOMING_CALL') and pr.routed_at < date_add(a1.attendance_date, interval 7 hour) and pr.routed_at >= date_add(date_sub(a1.attendance_date, interval 7 day), interval 17 hour)
        left join rot_pro.parcel_route pr2 on pr2.routed_at > date_sub(curdate(), interval 1 month ) and pr2.staff_info_id = hsa.sub_staff_info_id and pr2.route_action in ( 'INCOMING_CALL') and pr2.routed_at < date_add(a1.attendance_date, interval 7 hour) and pr2.routed_at >= date_add(date_sub(a1.attendance_date, interval 7 day), interval 17 hour)
        group by 1,2
    ) a2 on a2.staff_info_id = a1.staff_info_id and a2.attendance_date = a1.attendance_date;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
            t.return_pno
            ,t.pno
            ,pi.ticket_pickup_store_id return_ticket_pickup_store_id
            ,pi.dst_store_id renturn_dst_store_id
            ,pi.state return_state
            ,pi.dst_name return_dst_name
        from fle_staging.parcel_info pi
        join tmpale.tmp_th_pno_lj_1222 t on t.return_pno = pi.pno
        where
            pi.created_at > date_sub(curdate(), interval 2 month )
    )

select
    t1.pno
    ,t1.return_pno
    ,case cod.forward_state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end 正向包裹最后状态
    ,cod.cod cod金额
    ,pick_ss.name 退件包裹揽收网点
    ,convert_tz(ship.routed_at, '+00:00', '+08:00') 退件包裹发件出仓时间
    ,convert_tz(los.routed_at, '+00:00', '+08:00') 退件包裹上报丢失时间
    ,los.staff_info_id 上报丢失员工工号
    ,if(los.remark = 'SS Judge Auto Created For Overtime', '是', '否') 是否系统自动上报
    ,los.ss_name 退件包裹上报丢失员工所属网点
    ,dst_ss.name 退件包裹目的地网点
    ,coalesce(dst_time.van_arrived_at, dst_time.first_valid_routed_at) 退件包裹到达目的地网点时间
    ,sca.scan_count 退件包裹交接次数
    ,convert_tz(sca.routed_at, '+00:00', '+08:00') 退件包裹第一次交接时间
    ,sca.staff_info_id 退件包裹第一次交接员工工号
    ,sca.ss_name 退件包裹第一次交接员工所属网点
    ,case t1.return_state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end 退件包裹最后状态
    ,t1.return_dst_name  退件包裹收件人姓名
    ,dif.CN_element '退件包裹最后一次疑难件/留仓件提交原因'
    ,convert_tz(dif.created_at, '+00:00', '+08:00') '退件包裹最后一次疑难件/留仓件提交时间'
    ,dif.staff_info_id '退件包裹最后一次疑难件/留仓件提交员工'
    ,dif.ss_name '退件包裹最后一次疑难件/留仓件提交员工所属网点'
    ,if(clo.return_pno is not null, '是', '否')  退件包裹是否在LAS妥投
from t t1
left join
    (
        select
            t.pno
            ,pi.cod_amount/100 cod
            ,pi.state forward_state
        from fle_staging.parcel_info pi
        join tmpale.tmp_th_pno_lj_1222 t on t.pno = pi.pno
    ) cod on cod.pno = t1.pno
left join fle_staging.sys_store pick_ss on pick_ss.id = t1.return_ticket_pickup_store_id
left join
    (
        select
            t1.return_pno
            ,pr.routed_at
            ,row_number() over (partition by t1.return_pno order by pr.routed_at desc) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.return_pno = pr.pno and pr.store_id = t.return_ticket_pickup_store_id
        where
            pr.routed_at > date_sub(curdate(), interval 2 month )
            and pr.route_action = 'SHIPMENT_WAREHOUSE_SCAN'
    ) ship on ship.return_pno = t1.pno and ship.rk = 1
left join
    (
        select
            t1.return_pno
            ,pr.routed_at
            ,pr.remark
            ,pr.staff_info_id
            ,ss.name ss_name
            ,row_number() over (partition by t1.return_pno order by pr.routed_at ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.return_pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = pr.staff_info_id
        left join fle_staging.sys_store ss on ss.id = hsi.sys_store_id
        where
            pr.routed_at > date_sub(curdate(), interval 2 month )
            and pr.route_action = 'DIFFICULTY_HANDOVER'
            and pr.marker_category = 22
    ) los on los.return_pno = t1.return_pno and los.rk = 1
left join fle_staging.sys_store dst_ss on dst_ss.id = t1.renturn_dst_store_id
left join
    (
        select
            t1.return_pno
            ,pssn.first_valid_routed_at
            ,pssn.van_arrived_at
            ,row_number() over (partition by t1.return_pno order by pssn.first_valid_routed_at) rk
        from dw_dmd.parcel_store_stage_new pssn
        join t t1 on t1.return_pno = pssn.pno and t1.renturn_dst_store_id = pssn.store_id
        where
            pssn.created_at > date_sub(curdate(), interval 2 month )
    ) dst_time on dst_time.return_pno = t1.return_pno and dst_time.rk = 1
left join
    (
        select
            t1.return_pno
            ,pr.routed_at
            ,pr.staff_info_id
            ,ss.name ss_name
            ,count() over (partition by t1.return_pno) scan_count
            ,row_number() over (partition by t1.return_pno order by pr.routed_at) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.return_pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = pr.staff_info_id
        left join fle_staging.sys_store ss on ss.id = hsi.sys_store_id
        where
            pr.routed_at > date_sub(curdate(), interval 2 month )
            and pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
    ) sca on sca.return_pno = t1.return_pno and sca.rk = 1
left join
    (
        select
            t1.return_pno
            ,pr.created_at
            ,pr.staff_info_id
            ,ss.name ss_name
            ,ddd.CN_element
            ,row_number() over (partition by t1.return_pno order by pr.created_at desc) rk
        from fle_staging.parcel_problem_detail pr
        join t t1 on t1.return_pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = pr.staff_info_id
        left join fle_staging.sys_store ss on ss.id = hsi.sys_store_id
        left join dwm.dwd_dim_dict ddd on ddd.db = 'fle_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
        where
            pr.created_at > date_sub(curdate(), interval 2 month )
    ) dif on dif.return_pno = t1.return_pno and dif.rk = 1
left join
    (
        select
            t1.return_pno
        from rot_pro.parcel_route pr
        join t t1 on t1.return_pno = pr.pno
        where
            pr.routed_at > date_sub(curdate(), interval 2 month )
            and pr.store_id = 'TH02030204'
            and pr.route_action = 'CHANGE_PARCEL_CLOSE'
        group by 1
    ) clo on clo.return_pno = t1.return_pno;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
            t.return_pno
            ,t.pno
            ,pi.ticket_pickup_store_id return_ticket_pickup_store_id
            ,pi.dst_store_id renturn_dst_store_id
            ,pi.state return_state
            ,pi.dst_name return_dst_name
        from fle_staging.parcel_info pi
        join tmpale.tmp_th_pno_lj_1222 t on t.return_pno = pi.pno
        where
            pi.created_at > date_sub(curdate(), interval 2 month )
    )

select
    t1.pno
    ,t1.return_pno
    ,case cod.forward_state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end 正向包裹最后状态
    ,cod.cod cod金额
    ,pick_ss.name 退件包裹揽收网点
    ,convert_tz(ship.routed_at, '+00:00', '+08:00') 退件包裹发件出仓时间
    ,convert_tz(los.routed_at, '+00:00', '+08:00') 退件包裹上报丢失时间
    ,los.staff_info_id 上报丢失员工工号
    ,if(los.remark = 'SS Judge Auto Created For Overtime', '是', '否') 是否系统自动上报
    ,los.ss_name 退件包裹上报丢失员工所属网点
    ,dst_ss.name 退件包裹目的地网点
    ,coalesce(dst_time.van_arrived_at, dst_time.first_valid_routed_at) 退件包裹到达目的地网点时间
    ,sca.scan_count 退件包裹交接次数
    ,convert_tz(sca.routed_at, '+00:00', '+08:00') 退件包裹第一次交接时间
    ,sca.staff_info_id 退件包裹第一次交接员工工号
    ,sca.ss_name 退件包裹第一次交接员工所属网点
    ,case t1.return_state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end 退件包裹最后状态
    ,t1.return_dst_name  退件包裹收件人姓名
    ,dif.CN_element '退件包裹最后一次疑难件/留仓件提交原因'
    ,convert_tz(dif.created_at, '+00:00', '+08:00') '退件包裹最后一次疑难件/留仓件提交时间'
    ,dif.staff_info_id '退件包裹最后一次疑难件/留仓件提交员工'
    ,dif.ss_name '退件包裹最后一次疑难件/留仓件提交员工所属网点'
    ,if(clo.return_pno is not null, '是', '否')  退件包裹是否在LAS妥投
from t t1
left join
    (
        select
            t.pno
            ,pi.cod_amount/100 cod
            ,pi.state forward_state
        from fle_staging.parcel_info pi
        join tmpale.tmp_th_pno_lj_1222 t on t.pno = pi.pno
    ) cod on cod.pno = t1.pno
left join fle_staging.sys_store pick_ss on pick_ss.id = t1.return_ticket_pickup_store_id
left join
    (
        select
            t1.return_pno
            ,pr.routed_at
            ,row_number() over (partition by t1.return_pno order by pr.routed_at desc) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.return_pno = pr.pno and pr.store_id = t1.return_ticket_pickup_store_id
        where
            pr.routed_at > date_sub(curdate(), interval 2 month )
            and pr.route_action = 'SHIPMENT_WAREHOUSE_SCAN'
    ) ship on ship.return_pno = t1.pno and ship.rk = 1
left join
    (
        select
            t1.return_pno
            ,pr.routed_at
            ,pr.remark
            ,pr.staff_info_id
            ,ss.name ss_name
            ,row_number() over (partition by t1.return_pno order by pr.routed_at ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.return_pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = pr.staff_info_id
        left join fle_staging.sys_store ss on ss.id = hsi.sys_store_id
        where
            pr.routed_at > date_sub(curdate(), interval 2 month )
            and pr.route_action = 'DIFFICULTY_HANDOVER'
            and pr.marker_category = 22
    ) los on los.return_pno = t1.return_pno and los.rk = 1
left join fle_staging.sys_store dst_ss on dst_ss.id = t1.renturn_dst_store_id
left join
    (
        select
            t1.return_pno
            ,pssn.first_valid_routed_at
            ,pssn.van_arrived_at
            ,row_number() over (partition by t1.return_pno order by pssn.first_valid_routed_at) rk
        from dw_dmd.parcel_store_stage_new pssn
        join t t1 on t1.return_pno = pssn.pno and t1.renturn_dst_store_id = pssn.store_id
        where
            pssn.created_at > date_sub(curdate(), interval 2 month )
    ) dst_time on dst_time.return_pno = t1.return_pno and dst_time.rk = 1
left join
    (
        select
            t1.return_pno
            ,pr.routed_at
            ,pr.staff_info_id
            ,ss.name ss_name
            ,count() over (partition by t1.return_pno) scan_count
            ,row_number() over (partition by t1.return_pno order by pr.routed_at) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.return_pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = pr.staff_info_id
        left join fle_staging.sys_store ss on ss.id = hsi.sys_store_id
        where
            pr.routed_at > date_sub(curdate(), interval 2 month )
            and pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
    ) sca on sca.return_pno = t1.return_pno and sca.rk = 1
left join
    (
        select
            t1.return_pno
            ,pr.created_at
            ,pr.staff_info_id
            ,ss.name ss_name
            ,ddd.CN_element
            ,row_number() over (partition by t1.return_pno order by pr.created_at desc) rk
        from fle_staging.parcel_problem_detail pr
        join t t1 on t1.return_pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = pr.staff_info_id
        left join fle_staging.sys_store ss on ss.id = hsi.sys_store_id
        left join dwm.dwd_dim_dict ddd on ddd.db = 'fle_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
        where
            pr.created_at > date_sub(curdate(), interval 2 month )
    ) dif on dif.return_pno = t1.return_pno and dif.rk = 1
left join
    (
        select
            t1.return_pno
        from rot_pro.parcel_route pr
        join t t1 on t1.return_pno = pr.pno
        where
            pr.routed_at > date_sub(curdate(), interval 2 month )
            and pr.store_id = 'TH02030204'
            and pr.route_action = 'CHANGE_PARCEL_CLOSE'
        group by 1
    ) clo on clo.return_pno = t1.return_pno;
;-- -. . -..- - / . -. - .-. -.--
select
    dt.统计日期
    ,dt.网点ID
    ,dt.网点名称
    ,if(dt.双重预警 = 'Alert', '是', '否') 当日是否爆仓
from dwm.dwd_th_network_spill_detl_rd dt
where
    dt.统计日期 >= '2023-11-01'
    and dt.统计日期 < '2023-12-01';
;-- -. . -..- - / . -. - .-. -.--
select
    dt.统计日期
    ,dt.网点ID
    ,ss.name  网点名称
    ,if(dt.双重预警 = 'Alert', '是', '否') 当日是否爆仓
from dwm.dwd_th_network_spill_detl_rd dt
left join fle_staging.sys_store ss on ss.id = dt.网点ID
where
    dt.统计日期 >= '2023-11-01'
    and dt.统计日期 < '2023-12-01';
;-- -. . -..- - / . -. - .-. -.--
select
    dt.统计日期
    ,dt.网点ID
    ,ss.name  网点名称
    ,if(dt.双重预警 = 'Alert', 1, 0) 当日是否爆仓
from dwm.dwd_th_network_spill_detl_rd dt
left join fle_staging.sys_store ss on ss.id = dt.网点ID
where
    dt.统计日期 >= '2023-11-01'
    and dt.统计日期 < '2023-12-01';
;-- -. . -..- - / . -. - .-. -.--
select
    t.date 日期
    ,t.客户类型
    ,t.client_id
    ,t.归属部门
    ,t.归属网点
    ,t.销售代表
    ,t.项目经理
    ,t.运费结算方式
    ,t.目前下单状态
    ,t.账号创建日期
    ,10d.days_count 10月寄件天数
    ,11d.days_count 11月寄件天数
    ,pi.pick_count 当日揽收数量
    ,shd.should_count 当日揽收数量
    ,shd.handover_count 当日交接量
    ,rej.rej_count 当日标记拒收数量
    ,rej.reurn_reject_count 当日拒收且生成退件数量
    ,rej.no_buy_count '拒收原因为“未购买”量'
    ,rej2.other_reason_count 当日标记其他原因
    ,sign.sign_count 当日妥投数量
from
    (
        select
            c.*
            ,d.date
        from
            (
                select
                     t.client_id
                    ,'KA' 客户类型
                    ,if(kp.forbid_call_order = 0, '否', '是') 目前下单状态
                    ,sd.name 归属部门
                    ,ss2.name 归属网点
                    ,kp.staff_info_name 销售代表
                    ,si.name 项目经理
                    ,case kp.settlement_category
                        when 1 then '现结'
                        when 2 then '定结'
                    end  运费结算方式
                    ,date(convert_tz(kp.created_at, '+00:00', '+07:00')) 账号创建日期
                from fle_staging.ka_profile kp
                join tmpale.tmp_th_client_lj_1213 t on t.client_id = kp.id
                left join fle_staging.sys_department sd on sd.id = kp.department_id
                left join fle_staging.sys_store ss2 on ss2.id = kp.store_id
                left join fle_staging.staff_info si on si.id = kp.project_manager_id

                union all

                select
                   t.client_id
                    ,'小c' 客户类型
                    ,if(ui.forbid_call_order = 0, '否', '是') 目前下单状态
                    ,'' 归属部门
                    ,'' 归属网点
                    ,'' 销售代表
                    ,'' 项目经理
                    ,'现结' 运费结算方式
                    ,date(convert_tz(ui.created_at, '+00:00', '+07:00')) 账号创建日期
                from fle_staging.user_info ui
                join tmpale.tmp_th_client_lj_1213 t on t.client_id = ui.id
            ) c
        cross join
            (
                select
                    ot.date
                from tmpale.ods_th_dim_date ot
                where
                    ot.date >= '2023-10-01'
                    and ot.date < '2023-12-01'
            ) d
    ) t
left join
    ( -- 揽收
        select
            t.client_id
            ,date(convert_tz(pi.created_at, '+00:00', '+07:00')) pick_date
            ,count(distinct pi.pno) pick_count
        from fle_staging.parcel_info pi
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
        where
            pi.created_at > '2023-09-30 17:00:00'
            and pi.created_at < '2023-11-30 17:00:00'
            and pi.state < 9
        group by 1,2
    ) pi on pi.client_id = t.client_id and pi.pick_date = t.date
left join
    (
        select
            t.client_id
            ,10d.stat_date
            ,count(distinct 10d.pno) should_count
            ,count(if(10d.handover_scan_route_at is not null, 10d.pno, null)) handover_count
        from bi_pro.dc_should_delivery_2023_10 10d
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = 10d.client_id
        group by 1,2

        union all

        select
            t.client_id
            ,11d.stat_date
            ,count(distinct 11d.pno) should_count
            ,count(distinct if(11d.handover_scan_route_at != '1970-01-01 00:00:00', 11d.pno, null)) handover_count
        from bi_pro.dc_should_delivery_2023_11 11d
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = 11d.client_id
        group by 1,2
    ) shd on shd.client_id = t.client_id and shd.stat_date = t.date
left join
    (
        select
            date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pr_date
            ,t.client_id
            ,count(distinct pr.pno) rej_count
            ,count(distinct if(json_extract(pr.extra_value, '$.rejectionCategory') = 1, pr.pno, null)) no_buy_count
            ,count(distinct if(pi.state = 7 and pi2.created_at < date_add(date(convert_tz(pr.routed_at, '+00:00', '+07:00')), interval 17 hour) and pi2.created_at >= date_sub(date(convert_tz(pr.routed_at, '+00:00', '+07:00')), interval 7 hour), pi.pno, null)) reurn_reject_count
        from rot_pro.parcel_route pr
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
        left join fle_staging.parcel_info pi2 on pi2.pno = pi.returned_pno
        where
            pr.routed_at > '2023-09-30 17:00:00'
            and pr.routed_at < '2023-11-30 17:00:00'
            and pr.marker_category = 2 -- 收件人拒收标记
        group by 1,2
    ) rej on rej.client_id = t.client_id and rej.pr_date = t.date
left join
    (
        select
           t1.client_id
            ,t1.pr_date
            ,count(distinct t1.pno) other_reason_count
        from
           (
                select
                    date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pr_date
                    ,t.client_id
                    ,pr.pno
                from rot_pro.parcel_route pr
                left join fle_staging.parcel_info pi on pi.pno = pr.pno
                join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
                where
                    pr.routed_at > '2023-09-30 17:00:00'
                    and pr.routed_at < '2023-11-30 17:00:00'
                    and pr.marker_category = 2
                    and ( json_extract(pr.extra_value, '$.rejectionCategory') > 1  or json_extract(pr.extra_value, '$.rejectionCategory') is null )
                group by 1,2,3
           ) t1
        left join
            (
                select
                    date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pr_date
                    ,t.client_id
                    ,pr.pno
                from rot_pro.parcel_route pr
                left join fle_staging.parcel_info pi on pi.pno = pr.pno
                join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
                where
                    pr.routed_at > '2023-09-30 17:00:00'
                    and pr.routed_at < '2023-11-30 17:00:00'
                    and pr.marker_category = 2
                    and json_extract(pr.extra_value, '$.rejectionCategory') = 1
                group by 1,2,3
            ) t2 on t1.client_id = t2.client_id and t1.pr_date = t2.pr_date and t1.pno = t2.pno
        where
            t2.pno is null
        group by 1,2
    ) rej2 on rej2.client_id = t.client_id and rej2.pr_date = t.date
left join
    (
        select
            t.client_id
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
            ,count(distinct pi.pno) sign_count
        from fle_staging.parcel_info pi
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
        where
            pi.finished_at > '2023-09-30 17:00:00'
            and pi.finished_at < '2023-11-30 17:00:00'
            and pi.state = 5
        group by 1,2
    ) sign on sign.client_id = t.client_id and sign.fin_date = t.date
left join
    (
        select
            pi.client_id
            ,count(distinct date(convert_tz(pi.created_at, '+00:00', '+07:00'))) days_count
        from fle_staging.parcel_info pi
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
        where
            pi.created_at >= '2023-09-30 17:00:00'
            and pi.created_at < '2023-10-31 17:00:00'
            and pi.state < 9
        group by 1
    ) 10d on 10d.client_id = t.client_id
left join
    (
        select
            pi.client_id
            ,count(distinct date(convert_tz(pi.created_at, '+00:00', '+07:00'))) days_count
        from fle_staging.parcel_info pi
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
        where
            pi.created_at >= '2023-10-31 17:00:00'
            and pi.created_at < '2023-11-30 17:00:00'
            and pi.state < 9
        group by 1
    ) 11d on 11d.client_id = t.client_id;
;-- -. . -..- - / . -. - .-. -.--
select
    pr.*
from rot_pro.parcel_route pr
left join fle_staging.parcel_info pi on pi.pno = pr.pno
where
    -- pr.marker_category = 2
    pr.routed_at > '2023-11-22 17:00:00'
    and pr.routed_at < '2023-11-23 17:00:00'
    and pi.client_id = 'CAY9826';
;-- -. . -..- - / . -. - .-. -.--
select
    t.date 日期
    ,t.客户类型
    ,t.client_id
    ,t.归属部门
    ,t.归属网点
    ,t.销售代表
    ,t.项目经理
    ,t.运费结算方式
    ,t.目前下单状态
    ,t.账号创建日期
    ,11d.days_count 11月寄件天数
    ,pi.pick_count 当日揽收数量
    ,shd.should_count 当日揽收数量
    ,rej.scan_count 当日交接量
    ,rej.cod_scan_count 当日COD交接量
    ,rej.rej_count 当日标记拒收数量
    ,rej.cod_rej_count 当日COD标记拒收数量
    ,rej.reurn_reject_count 当日拒收且生成退件数量
    ,rej.cod_reurn_reject_count 当日COD拒收且生成退件数量
    ,rej.no_buy_count '拒收原因为“未购买”量'
    ,rej.cod_no_buy_count 'COD拒收原因为“未购买”量'
    ,rej2.other_reason_count 当日标记其他原因
    ,rej2.cod_other_reason_count 当日COD标记其他原因
    ,sign.sign_count 当日妥投数量
    ,sign.cod_sign_count 当日COD妥投数量
from
    (
        select
            c.*
            ,d.date
        from
            (
                select
                     t.client_id
                    ,'KA' 客户类型
                    ,if(kp.forbid_call_order = 0, '否', '是') 目前下单状态
                    ,sd.name 归属部门
                    ,ss2.name 归属网点
                    ,kp.staff_info_name 销售代表
                    ,si.name 项目经理
                    ,case kp.settlement_category
                        when 1 then '现结'
                        when 2 then '定结'
                    end  运费结算方式
                    ,date(convert_tz(kp.created_at, '+00:00', '+07:00')) 账号创建日期
                from fle_staging.ka_profile kp
                join tmpale.tmp_th_client_lj_1213 t on t.client_id = kp.id
                left join fle_staging.sys_department sd on sd.id = kp.department_id
                left join fle_staging.sys_store ss2 on ss2.id = kp.store_id
                left join fle_staging.staff_info si on si.id = kp.project_manager_id

                union all

                select
                   t.client_id
                    ,'小c' 客户类型
                    ,if(ui.forbid_call_order = 0, '否', '是') 目前下单状态
                    ,'' 归属部门
                    ,'' 归属网点
                    ,'' 销售代表
                    ,'' 项目经理
                    ,'现结' 运费结算方式
                    ,date(convert_tz(ui.created_at, '+00:00', '+07:00')) 账号创建日期
                from fle_staging.user_info ui
                join tmpale.tmp_th_client_lj_1213 t on t.client_id = ui.id
            ) c
        cross join
            (
                select
                    ot.date
                from tmpale.ods_th_dim_date ot
                where
                    ot.date >= '2023-11-01'
                    and ot.date < '2023-12-01'
            ) d
    ) t
left join
    ( -- 揽收
        select
            t.client_id
            ,date(convert_tz(pi.created_at, '+00:00', '+07:00')) pick_date
            ,count(distinct pi.pno) pick_count
        from fle_staging.parcel_info pi
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
        where
            pi.created_at > '2023-10-31 17:00:00'
            and pi.created_at < '2023-11-30 17:00:00'
            and pi.state < 9
        group by 1,2
    ) pi on pi.client_id = t.client_id and pi.pick_date = t.date
left join
    (
        select
            t.client_id
            ,11d.stat_date
            ,count(distinct 11d.pno) should_count
           -- ,count(distinct if(11d.handover_scan_route_at != '1970-01-01 00:00:00', 11d.pno, null)) handover_count
        from bi_pro.dc_should_delivery_2023_11 11d
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = 11d.client_id
        group by 1,2
    ) shd on shd.client_id = t.client_id and shd.stat_date = t.date
left join
    (
        select
            date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pr_date
            ,t.client_id
            ,count(distinct pr.pno) scan_count
            ,count(distinct if(pi.cod_enabled = 1, pr.pno, null)) cod_scan_count
            ,count(distinct if(pr.marker_category = 2, pr.pno, null)) rej_count
            ,count(distinct if(pr.marker_category = 2 and pi.cod_enabled = 1, pr.pno, null)) cod_rej_count
            ,count(distinct if(pr.marker_category = 2 and json_extract(pr.extra_value, '$.rejectionCategory') = 1, pr.pno, null)) no_buy_count
            ,count(distinct if(pr.marker_category = 2 and json_extract(pr.extra_value, '$.rejectionCategory') = 1 and pi.cod_enabled = 1, pr.pno, null)) cod_no_buy_count
            ,count(distinct if(pr.marker_category = 2 and pi.state = 7 and pi2.created_at < date_add(date(convert_tz(pr.routed_at, '+00:00', '+07:00')), interval 17 hour) and pi2.created_at >= date_sub(date(convert_tz(pr.routed_at, '+00:00', '+07:00')), interval 7 hour), pi.pno, null)) reurn_reject_count
            ,count(distinct if(pr.marker_category = 2 and pi.state = 7 and pi2.created_at < date_add(date(convert_tz(pr.routed_at, '+00:00', '+07:00')), interval 17 hour) and pi2.created_at >= date_sub(date(convert_tz(pr.routed_at, '+00:00', '+07:00')), interval 7 hour) and pi.cod_enabled = 1, pi.pno, null)) cod_reurn_reject_count
        from rot_pro.parcel_route pr
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
        left join fle_staging.parcel_info pi2 on pi2.pno = pi.returned_pno
        where
            pr.routed_at > '2023-10-31 17:00:00'
            and pr.routed_at < '2023-11-30 17:00:00'
            and pr.route_action = 'DELIVERY_MARKER'
        group by 1,2
    ) rej on rej.client_id = t.client_id and rej.pr_date = t.date
left join
    (
        select
           t1.client_id
            ,t1.pr_date
            ,count(distinct t1.pno) other_reason_count
            ,count(distinct if(t1.cod_enabled = 1, t1.pno, null)) cod_other_reason_count
        from
           (
                select
                    date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pr_date
                    ,t.client_id
                    ,pr.pno
                    ,pi.cod_enabled
                from rot_pro.parcel_route pr
                left join fle_staging.parcel_info pi on pi.pno = pr.pno
                join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
                where
                    pr.routed_at > '2023-10-31 17:00:00'
                    and pr.routed_at < '2023-11-30 17:00:00'
                    and pr.marker_category = 2
                    and ( json_extract(pr.extra_value, '$.rejectionCategory') > 1  or json_extract(pr.extra_value, '$.rejectionCategory') is null )
                group by 1,2,3
           ) t1
        left join
            (
                select
                    date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pr_date
                    ,t.client_id
                    ,pr.pno
                from rot_pro.parcel_route pr
                left join fle_staging.parcel_info pi on pi.pno = pr.pno
                join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
                where
                    pr.routed_at > '2023-10-31 17:00:00'
                    and pr.routed_at < '2023-11-30 17:00:00'
                    and pr.marker_category = 2
                    and json_extract(pr.extra_value, '$.rejectionCategory') = 1
                group by 1,2,3
            ) t2 on t1.client_id = t2.client_id and t1.pr_date = t2.pr_date and t1.pno = t2.pno
        where
            t2.pno is null
        group by 1,2
    ) rej2 on rej2.client_id = t.client_id and rej2.pr_date = t.date
left join
    (
        select
            t.client_id
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
            ,count(distinct pi.pno) sign_count
            ,count(distinct if(pi.cod_enabled = 1, pi.pno, null)) cod_sign_count
        from fle_staging.parcel_info pi
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
        where
            pi.finished_at > '2023-10-31 17:00:00'
            and pi.finished_at < '2023-11-30 17:00:00'
            and pi.state = 5
        group by 1,2
    ) sign on sign.client_id = t.client_id and sign.fin_date = t.date
left join
    (
        select
            pi.client_id
            ,count(distinct date(convert_tz(pi.created_at, '+00:00', '+07:00'))) days_count
        from fle_staging.parcel_info pi
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
        where
            pi.created_at >= '2023-10-31 17:00:00'
            and pi.created_at < '2023-11-30 17:00:00'
            and pi.state < 9
        group by 1
    ) 11d on 11d.client_id = t.client_id;
;-- -. . -..- - / . -. - .-. -.--
select
    plt.id
    ,plt.pno
    ,plt.source_id
    ,substring_index(plt.source_id, '_', -1)
from bi_pro.parcel_lose_task plt

where
    plt.source = 2 -- B来源
    and plt.created_at > '2023-10-01'
    and ( plt.source_id like 'return_visit_1_%' or plt.source_id like'return_visit_3_%');
;-- -. . -..- - / . -. - .-. -.--
select
    plt.id
    ,plt.pno
    ,plt.source_id
    ,substring_index(plt.source_id, '_', -1)
from bi_pro.parcel_lose_task plt
left join bi_pro.abnormal_customer_complaint acc on acc.abnormal_message_id = substring_index(plt.source_id, '_', -1)
where
    plt.source = 2 -- B来源
    and plt.created_at > '2023-10-01'
    and ( plt.source_id like 'return_visit_1_%' or plt.source_id like'return_visit_3_%')
    and acc.complaints_type != 1;
;-- -. . -..- - / . -. - .-. -.--
select
    plt.id
    ,plt.pno
from bi_pro.parcel_lose_task plt
where
    plt.source = 2 -- B来源
    and plt.created_at > '2023-10-01'
    and plt.source_id like 'return_visit_2_%'
    and plt.state < 5

union 

-- 2. 回访结果为未收到包裹的非虚假妥投-投诉原因
select
    plt.id
    ,plt.pno
from bi_pro.parcel_lose_task plt
left join bi_pro.abnormal_customer_complaint acc on acc.abnormal_message_id = substring_index(plt.source_id, '_', -1)
where
    plt.source = 2 -- B来源
    and plt.created_at > '2023-10-01'
    and ( plt.source_id like 'return_visit_1_%' or plt.source_id like'return_visit_3_%')
    and acc.complaints_type != 1 -- 非虚假妥投
    and plt.state < 5

union
-- 3.平台包裹
select
    plt.id
    ,plt.pno
from bi_pro.parcel_lose_task plt
left join bi_pro.parcel_claim_task pct on pct.pno = plt.pno and pct.state = 6
where
    plt.source = 2 -- B来源
    and plt.created_at > '2023-11-01'
    and plt.state < 5
    and pct.pno is null
union

select
    plt.id
    ,plt.pno
from bi_pro.parcel_lose_task plt
left join fle_staging.parcel_info pi on pi.pno = plt.pno
where
    plt.source = 2 -- B来源
    and plt.created_at > '2023-10-01'
    and pi.state not in (5,7,8);
;-- -. . -..- - / . -. - .-. -.--
select
            a.*
            ,row_number() over (partition by a.pno order by a.diff_time desc) rk
        from
            (
                select
                    plt.id
                    ,plt.pno
                    ,pssn.store_id
                    ,pssn.store_name
                    ,timestampdiff(minute, pssn.first_valid_routed_at, pssn.last_valid_routed_at) diff_time
                from bi_pro.parcel_lose_task plt
                left join dw_dmd.parcel_store_stage_new pssn on pssn.pno = plt.pno and pssn.valid_store_order is not null and pssn.created_at < plt.created_at
                where
                    plt.source = 11
                    and plt.state < 5
            ) a;
;-- -. . -..- - / . -. - .-. -.--
select
            a.*
            ,row_number() over (partition by a.pno order by a.diff_time desc) rk
        from
            (
                select
                    plt.id
                    ,plt.pno
                    ,pssn.store_id
                    ,pssn.store_name
                    ,pssn.valid_store_order
                    ,timestampdiff(minute, pssn.van_arrived_at, pssn.van_left_at) diff_time
                from bi_pro.parcel_lose_task plt
                left join dw_dmd.parcel_store_stage_new pssn on pssn.pno = plt.pno and pssn.valid_store_order is not null and pssn.created_at < plt.created_at
                where
                    plt.source = 11
                    and plt.state < 5
            ) a;
;-- -. . -..- - / . -. - .-. -.--
select
            a.*
            ,row_number() over (partition by a.pno order by a.diff_time desc) rk
        from
            (
                select
                    plt.id
                    ,plt.pno
                    ,pssn.store_id
                    ,pssn.store_name
                    ,pssn.valid_store_order
                    ,timestampdiff(minute, coalesce(pssn.van_arrived_at, pssn.first_valid_routed_at), coalesce(pssn.van_left_at, pssn.last_valid_routed_at)) diff_time
                from bi_pro.parcel_lose_task plt
                left join dw_dmd.parcel_store_stage_new pssn on pssn.pno = plt.pno and pssn.valid_store_order is not null and pssn.created_at < plt.created_at
                where
                    plt.source = 11
                    and plt.state < 5
            ) a;
;-- -. . -..- - / . -. - .-. -.--
select
            a.*
            ,row_number() over (partition by a.pno order by a.diff_time desc) rk
        from
            (
                select
                    plt.id
                    ,plt.pno
                    ,pssn.store_id
                    ,pssn.store_name
                    ,pssn.valid_store_order
                    ,timestampdiff(minute, coalesce(pssn.van_arrived_at, pssn.first_valid_routed_at), coalesce(pssn.van_left_at, pssn.last_valid_routed_at)) diff_time
                from bi_pro.parcel_lose_task plt
                left join dw_dmd.parcel_store_stage_new pssn on pssn.pno = plt.pno and pssn.valid_store_order is not null and pssn.created_at < plt.created_at
                where
                    plt.source = 11
                    and plt.state < 5
                    and plt.pno = 'TH01174VQ72X8B'
            ) a;
;-- -. . -..- - / . -. - .-. -.--
select
    plt.pno
    ,count(plt.id) plt_count
from bi_pro.parcel_lose_task plt
where
    plt.source = 11
    and plt.state < 5
group by 1
having count(plt.id) > 1;
;-- -. . -..- - / . -. - .-. -.--
select
    min(srd.created_at)
from fle_staging.store_receivable_bill_detail srd
where
    srd.state = 0
    and srd.staff_info_id in ('61494','653169','627214','650090','39964','656386','632567','648047','651999','655704','655667','659777','658435','658661','654346','645047','655891','618607','637021','620399','48038','644053','648546','657447','618968','660593','639639','622795','627801','659673','24406','613455','654212','650475','647326','659383','657798','642610','650805','636467','650664','654743','622644','625045','662161','631540','627161','634814','69245','651689','662432','657854','59330','657976','662234','659083','654544','659031','657849','656078','630686','656794','31290','651028','58887','634947','634947','644811','643004','641828','657385','658305','644046','653498','656000','648058','654246','619653','3638483','617193','657671','659104','620272','657317','660678','636883','631839','652235','625787','656284','658421','654043','662865','22826','648430','648430','652386','21306','657929','612148','653343','65667')
    and srd.receivable_type_category = 5;
;-- -. . -..- - / . -. - .-. -.--
select
    min(srd.created_at)
    ,max(srd.created_at)
from fle_staging.store_receivable_bill_detail srd
where
    srd.state = 0
    and srd.staff_info_id in ('61494','653169','627214','650090','39964','656386','632567','648047','651999','655704','655667','659777','658435','658661','654346','645047','655891','618607','637021','620399','48038','644053','648546','657447','618968','660593','639639','622795','627801','659673','24406','613455','654212','650475','647326','659383','657798','642610','650805','636467','650664','654743','622644','625045','662161','631540','627161','634814','69245','651689','662432','657854','59330','657976','662234','659083','654544','659031','657849','656078','630686','656794','31290','651028','58887','634947','634947','644811','643004','641828','657385','658305','644046','653498','656000','648058','654246','619653','3638483','617193','657671','659104','620272','657317','660678','636883','631839','652235','625787','656284','658421','654043','662865','22826','648430','648430','652386','21306','657929','612148','653343','65667')
    and srd.receivable_type_category = 5;
;-- -. . -..- - / . -. - .-. -.--
select
    min(srd.created_at)
    ,max(srd.created_at)
    ,count(srd.pno)
from fle_staging.store_receivable_bill_detail srd
where
    srd.state = 0
    and srd.staff_info_id in ('61494','653169','627214','650090','39964','656386','632567','648047','651999','655704','655667','659777','658435','658661','654346','645047','655891','618607','637021','620399','48038','644053','648546','657447','618968','660593','639639','622795','627801','659673','24406','613455','654212','650475','647326','659383','657798','642610','650805','636467','650664','654743','622644','625045','662161','631540','627161','634814','69245','651689','662432','657854','59330','657976','662234','659083','654544','659031','657849','656078','630686','656794','31290','651028','58887','634947','634947','644811','643004','641828','657385','658305','644046','653498','656000','648058','654246','619653','3638483','617193','657671','659104','620272','657317','660678','636883','631839','652235','625787','656284','658421','654043','662865','22826','648430','648430','652386','21306','657929','612148','653343','65667')
    and srd.receivable_type_category = 5;
;-- -. . -..- - / . -. - .-. -.--
select
    t.pno 单号
    ,pi2.pno 正向单号
    ,pi2.returned_pno 逆向单号
    ,las.CN_element  最后有效路由
    ,las.store_name 最后有效路由网点
    ,convert_tz(las.routed_at, '+00:00', '+07:00') 最后有效路由操作时间
    ,las.staff_info_id 最后有效路由操作人
    ,if(plt.pno is not null, '是', '否') 是否判责遗失
    ,plt.handle_time 判责遗失时间
    ,pi.client_id 客户ID
    ,pi.dst_name 收件人姓名
    ,pi.dst_phone 收件人手机号
    ,pi.src_name 寄件人姓名
    ,pi.src_phone 寄件人手机号
    ,case pct.state
        when 1 then '待协商'
        when 2 then '协商不一致，待重新协商'
        when 3 then '待财务核实'
        when 4 then '核实通过，待财务支付'
        when 5 then '财务驳回'
        when 6 then '理赔完成'
        when 7 then '理赔终止'
        when 8 then '异常关闭'
        when 9 then' 待协商（搁置）'
        when 10 then '等待再次联系'
    end 理赔状态
from fle_staging.parcel_info pi
join tmpale.tmp_th_pno_lj_1226 t on t.pno = pi.pno
left join  fle_staging.parcel_info pi2 on pi2.pno = if(pi.returned = 1, pi.customary_pno, pi.pno)
left join
    (
        select
            ddd.CN_element
            ,pr.pno
            ,pr.routed_at
            ,pr.store_name
            ,pr.staff_info_id
            ,row_number() over (partition by pr.pno order by pr.routed_at desc) rk
        from rot_pro.parcel_route pr
        join tmpale.tmp_th_pno_lj_1226 t on t.pno = pr.pno
        left join dwm.dwd_dim_dict ddd on ddd.db = 'rot_pro' and ddd.tablename = 'parcel_route' and ddd.fieldname = 'route_action'
        where
            pr.routed_at > date_sub(curdate(), interval 2 month )
            and pr.route_action in ('RECEIVED','STAFF_INFO_UPDATE_WEIGHT','RECEIVE_WAREHOUSE_SCAN','STORE_KEEPER_UPDATE_WEIGHT','STORE_SORTER_UPDATE_WEIGHT','DELIVERY_TICKET_CREATION_SCAN','ARRIVAL_WAREHOUSE_SCAN','ARRIVAL_WAREHOUSE_SCAN','SHIPMENT_WAREHOUSE_SCAN','DETAIN_WAREHOUSE','DELIVERY_CONFIRM','DIFFICULTY_HANDOVER','DELIVERY_MARKER', 'REPLACE_PNO','PRINTING','SEAL','UNSEAL','PARCEL_HEADLESS_PRINTED','THIRD_EXPRESS_ROUTE','PICKUP_RETURN_RECEIPT','FLASH_HOME_SCAN', 'SORTING_SCAN', 'CANCEL_SHIPMENT_WAREHOUSE','INVENTORY','REFUND_CONFIRM', 'DISTRIBUTION_INVENTORY','DELIVERY_TRANSFER','DELIVERY_PICKUP_STORE_SCAN', 'ACCEPT_PARCEL','DIFFICULTY_HANDOVER')
    ) las on las.pno = pi.pno and las.rk = 1
left join
    (
        select
            plt.pno
            ,min(plt.updated_at) handle_time
        from bi_pro.parcel_lose_task plt
        join tmpale.tmp_th_pno_lj_1226 t on t.pno = plt.pno
        where
            plt.state = 6
            and plt.duty_result = 1
        group by 1
    ) plt on plt.pno = pi.pno
left join bi_pro.parcel_claim_task pct on pct.pno = t.pno;
;-- -. . -..- - / . -. - .-. -.--
select
    t.pno
    ,case pct.state
        when 1 then '待协商'
        when 2 then '协商不一致，待重新协商'
        when 3 then '待财务核实'
        when 4 then '核实通过，待财务支付'
        when 5 then '财务驳回'
        when 6 then '理赔完成'
        when 7 then '理赔终止'
        when 8 then '异常关闭'
        when 9 then' 待协商（搁置）'
        when 10 then '等待再次联系'
    end 理赔状态
from tmpale.tmp_th_pno_lj_1226 t
left join bi_pro.parcel_claim_task pct on pct.pno = t.pno;
;-- -. . -..- - / . -. - .-. -.--
select
    *
from
    (
        select
            case
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('Bulky BD') then 'Bulky Business Development'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('Group VIP Customer') then 'Retail Management'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('LAZADA','TikTok','Shopee','KAM CN','THAI KAM') then 'PMD'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('FFM') then 'FFM'
              when di.organization_type=2 and di.vip_enable=0 then '总部cs'
              when ((di.organization_type=1 and (di.service_type != 3 or di.service_type is null) and di.vip_enable=0)
                    or (di.organization_type=1 and di.vip_enable=0 and di.service_type = 3)) then 'Mini CS'
            end 部门
            ,case when di.organization_type=2 and di.vip_enable=1 then cg.name
              when di.organization_type=2 and di.vip_enable=0 then '总部cs'
              when coalesce(ss.category,ss2.category) in (11) then 'FFM'
              when coalesce(ss.category,ss2.category) in (4,5,7) then 'SHOP'
              when coalesce(ss.category,ss2.category) in (1,9,10,13,14) then 'NW'
              when coalesce(ss.category,ss2.category) = 6 or (di.organization_type=1 and di.vip_enable=0 and di.service_type = 3) then 'FH'
              when coalesce(ss.category,ss2.category) in (8,12) then 'HUB'
            end as 处理组织
            ,di.CN_element
            ,count(if(di.state in (2,3,4),di.id,null)) 未处理总计
            ,count(if(datediff(current_date,date(di.created_at))<=1,di.id,null)) D0任务量
            ,count(if(datediff(current_date,date(di.created_at))<=1 and di.state=1,di.id,null)) D0已完成
            ,count(if(datediff(current_date,date(di.created_at))<=1 and di.state in (2,3,4),di.id,null)) 'D0沟通中ระหว่างเจรจา'
            ,count(if(datediff(current_date,date(di.created_at))<=1 and di.state=0,di.id,null)) 'D0未处理ยังไม่จัดการ'
            ,concat(round(
            (
            count(if(datediff(current_date,date(di.created_at))<=1 and di.state in (2,3,4),di.id,null))
            +count(if(datediff(current_date,date(di.created_at))<=1 and di.state=0,di.id,null))
            )/count(if(datediff(current_date,date(di.created_at))<=1,di.id,null))*100
                    ,2),'%') D0未处理完成占比

            ,count(if(datediff(current_date,date(di.created_at))=2,di.id,null)) D1任务量
            ,count(if(datediff(current_date,date(di.created_at))=2 and di.state=1,di.id,null)) D1已完成
            ,count(if(datediff(current_date,date(di.created_at))=2 and di.state in (2,3,4),di.id,null)) 'D1沟通中ระหว่างเจรจา'
            ,count(if(datediff(current_date,date(di.created_at))=2 and di.state=0,di.id,null)) 'D1未处理ยังไม่จัดการ'
            ,concat(round(
            (
            count(if(datediff(current_date,date(di.created_at))=2 and di.state in (2,3,4),di.id,null))
            +count(if(datediff(current_date,date(di.created_at))=2 and di.state=0,di.id,null))
            )/count(if(datediff(current_date,date(di.created_at))=2,di.id,null))*100
                    ,2),'%') D1未处理完成占比

            ,count(if(datediff(current_date,date(di.created_at))=3,di.id,null)) D2任务量
            ,count(if(datediff(current_date,date(di.created_at))=3 and di.state=1,di.id,null)) D2已完成
            ,count(if(datediff(current_date,date(di.created_at))=3 and di.state in (2,3,4),di.id,null)) 'D2沟通中ระหว่างเจรจา'
            ,count(if(datediff(current_date,date(di.created_at))=3 and di.state=0,di.id,null)) 'D2未处理ยังไม่จัดการ'
            ,concat(round(
            (
            count(if(datediff(current_date,date(di.created_at))=3 and di.state in (2,3,4),di.id,null))
            +count(if(datediff(current_date,date(di.created_at))=3 and di.state=0,di.id,null))
            )/count(if(datediff(current_date,date(di.created_at))=3,di.id,null))*100
                    ,2),'%') D2未处理完成占比

            ,count(if(datediff(current_date,date(di.created_at))=4,di.id,null)) D3任务量
            ,count(if(datediff(current_date,date(di.created_at))=4 and di.state=1,di.id,null)) D3已完成
            ,count(if(datediff(current_date,date(di.created_at))=4 and di.state in (2,3,4),di.id,null)) 'D3沟通中ระหว่างเจรจา'
            ,count(if(datediff(current_date,date(di.created_at))=4 and di.state=0,di.id,null)) 'D3未处理ยังไม่จัดการ'
            ,concat(round(
            (
            count(if(datediff(current_date,date(di.created_at))=4 and di.state in (2,3,4),di.id,null))
            +count(if(datediff(current_date,date(di.created_at))=4 and di.state=0,di.id,null))
            )/count(if(datediff(current_date,date(di.created_at))=4,di.id,null))*100
                    ,2),'%') D3未处理完成占比

            ,count(if(datediff(current_date,date(di.created_at)) in (5,6,7,8),di.id,null)) D4_7任务量
            ,count(if(datediff(current_date,date(di.created_at)) in (5,6,7,8) and di.state=1,di.id,null)) D4_7已完成
            ,count(if(datediff(current_date,date(di.created_at)) in (5,6,7,8) and di.state in (2,3,4),di.id,null)) 'D4_7沟通中ระหว่างเจรจา'
            ,count(if(datediff(current_date,date(di.created_at)) in (5,6,7,8) and di.state=0,di.id,null)) 'D4_7未处理ยังไม่จัดการ'
            ,concat(round(
            (
            count(if(datediff(current_date,date(di.created_at)) in (5,6,7,8) and di.state in (2,3,4),di.id,null))
            +count(if(datediff(current_date,date(di.created_at)) in (5,6,7,8) and di.state=0,di.id,null))
            )/count(if(datediff(current_date,date(di.created_at)) in (5,6,7,8),di.id,null))*100
                    ,2),'%') D4_7未处理完成占比

            ,count(if(datediff(current_date,date(di.created_at)) in (9,10,11,12,13,14,15,16),di.id,null)) D8_15任务量
            ,count(if(datediff(current_date,date(di.created_at)) in (9,10,11,12,13,14,15,16) and di.state=1,di.id,null)) D8_15已完成
            ,count(if(datediff(current_date,date(di.created_at)) in (9,10,11,12,13,14,15,16) and di.state in (2,3,4),di.id,null)) 'D8_15沟通中ระหว่างเจรจา'
            ,count(if(datediff(current_date,date(di.created_at)) in (9,10,11,12,13,14,15,16) and di.state=0,di.id,null)) 'D8_15未处理ยังไม่จัดการ'
            ,concat(round(
            (
            count(if(datediff(current_date,date(di.created_at)) in (9,10,11,12,13,14,15,16) and di.state in (2,3,4),di.id,null))
            +count(if(datediff(current_date,date(di.created_at)) in (9,10,11,12,13,14,15,16) and di.state=0,di.id,null))
            )/count(if(datediff(current_date,date(di.created_at)) in (9,10,11,12,13,14,15,16),di.id,null))*100
                    ,2),'%') D8_15未处理完成占比

            ,count(if(datediff(current_date,date(di.created_at))>=17,di.id,null)) 'D16+任务量'
            ,count(if(datediff(current_date,date(di.created_at))>=17 and di.state=1,di.id,null)) 'D16+已完成'
            ,count(if(datediff(current_date,date(di.created_at))>=17 and di.state in (2,3,4),di.id,null)) 'D16+沟通中ระหว่างเจรจา'
            ,count(if(datediff(current_date,date(di.created_at))>=17 and di.state=0,di.id,null)) 'D16+未处理ยังไม่จัดการ'
            ,concat(round(
            (
            count(if(datediff(current_date,date(di.created_at))>=17 and di.state in (2,3,4),di.id,null))
            +count(if(datediff(current_date,date(di.created_at))>=17 and di.state=0,di.id,null))
            )/count(if(datediff(current_date,date(di.created_at))>=17,di.id,null))*100
                    ,2),'%') 'D16+未处理完成占比'

        from
            (
                select
                    di.id
                    ,convert_tz(di.created_at,'+00:00','+07:00') created_at
                    ,di.pno
                    ,ddd.cn_element
                    ,pi.ticket_pickup_store_id
                    ,pi.client_id
                    ,cdt.state
                    ,cdt.organization_type
                    ,cdt.organization_id
                    ,cdt.vip_enable
                    ,cdt.service_type
                    ,convert_tz(cdt.updated_at,'+00:00','+07:00') updated_at
                    ,convert_tz(cdt.first_operated_at,'+00:00','+07:00') first_operated_at
                from fle_staging.diff_info di
                join fle_staging.parcel_info pi on di.pno=pi.pno
                left join fle_staging.customer_diff_ticket cdt on cdt.diff_info_id=di.id
                join dwm.dwd_dim_dict ddd on ddd.element=di.diff_marker_category and ddd.db='fle_staging' and ddd.tablename='diff_info' and ddd.fieldname='diff_marker_category'
                where
                    pi.created_at>=date_sub(current_date,interval 3 month)
                    and di.created_at<=date_sub(current_date,interval 7 hour)
                    and (pi.state=6 or (cdt.state=1 and date(convert_tz(cdt.updated_at,'+00:00','+07:00'))=date_sub(current_date,interval 1 day)))
                    and cdt.state in (0,1,2,3,4)
                    and (cdt.operator_id not in (10001,10000) or  cdt.operator_id is null)
            ) di
        left join fle_staging.sys_store ss on di.ticket_pickup_store_id=ss.id
        left join fle_staging.sys_store ss2 on di.organization_id=ss2.id
        left join fle_staging.customer_group_ka_relation cgk on cgk.ka_id=di.client_id and cgk.deleted=0
        left join fle_staging.customer_group cg on cg.id=cgk.customer_group_id
        group by 1,2,3
    ) a1
left join
    (
        select
            case
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('Bulky BD') then 'Bulky Business Development'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('Group VIP Customer') then 'Retail Management'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('LAZADA','TikTok','Shopee','KAM CN','THAI KAM') then 'PMD'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('FFM') then 'FFM'
              when di.organization_type=2 and di.vip_enable=0 then '总部cs'
              when ((di.organization_type=1 and (di.service_type != 3 or di.service_type is null) and di.vip_enable=0)
                    or (di.organization_type=1 and di.vip_enable=0 and di.service_type = 3)) then 'Mini CS'
            end 部门
            ,case when di.organization_type=2 and di.vip_enable=1 then cg.name
              when di.organization_type=2 and di.vip_enable=0 then '总部cs'
              when coalesce(ss.category,ss2.category) in (11) then 'FFM'
              when coalesce(ss.category,ss2.category) in (4,5,7) then 'SHOP'
              when coalesce(ss.category,ss2.category) in (1,9,10,13,14) then 'NW'
              when coalesce(ss.category,ss2.category) = 6 or (di.organization_type=1 and di.vip_enable=0 and di.service_type = 3) then 'FH'
              when coalesce(ss.category,ss2.category) in (8,12) then 'HUB'
            end as 处理组织
            ,di.CN_element
            ,count(di.id) 总任务量
        from
            (
                select
                    di.id
                    ,convert_tz(di.created_at,'+00:00','+07:00') created_at
                    ,di.pno
                    ,ddd.cn_element
                    ,pi.ticket_pickup_store_id
                    ,pi.client_id
                    ,cdt.state
                    ,cdt.organization_type
                    ,cdt.organization_id
                    ,cdt.vip_enable
                    ,cdt.service_type
                    ,convert_tz(cdt.updated_at,'+00:00','+07:00') updated_at
                    ,convert_tz(cdt.first_operated_at,'+00:00','+07:00') first_operated_at
                from fle_staging.diff_info di
                join fle_staging.parcel_info pi on di.pno=pi.pno
                left join fle_staging.customer_diff_ticket cdt on cdt.diff_info_id=di.id
                join dwm.dwd_dim_dict ddd on ddd.element=di.diff_marker_category and ddd.db='fle_staging' and ddd.tablename='diff_info' and ddd.fieldname='diff_marker_category'
                where
                    pi.created_at>=date_sub(current_date,interval 3 month)
                    and di.created_at<=date_sub(current_date,interval 7 hour)
#                     and (pi.state=6 or (cdt.state=1 and date(convert_tz(cdt.updated_at,'+00:00','+07:00'))=date_sub(current_date,interval 1 day)))
#                     and cdt.state in (0,1,2,3,4)
                    and (cdt.operator_id not in (10001,10000) or  cdt.operator_id is null)
            )di
        left join fle_staging.sys_store ss on di.ticket_pickup_store_id=ss.id
        left join fle_staging.sys_store ss2 on di.organization_id=ss2.id
        left join fle_staging.customer_group_ka_relation cgk on cgk.ka_id=di.client_id and cgk.deleted=0
        left join fle_staging.customer_group cg on cg.id=cgk.customer_group_id
        group by 1,2,3
    ) a2 on a1.部门=a2.部门 and a1.处理组织 = a2.处理组织 and a1.CN_element = a2.CN_element
left join
    (
        select
            case
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('Bulky BD') then 'Bulky Business Development'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('Group VIP Customer') then 'Retail Management'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('LAZADA','TikTok','Shopee','KAM CN','THAI KAM') then 'PMD'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('FFM') then 'FFM'
              when di.organization_type=2 and di.vip_enable=0 then '总部cs'
              when ((di.organization_type=1 and (di.service_type != 3 or di.service_type is null) and di.vip_enable=0)
                    or (di.organization_type=1 and di.vip_enable=0 and di.service_type = 3)) then 'Mini CS'
            end 部门
            ,case when di.organization_type=2 and di.vip_enable=1 then cg.name
              when di.organization_type=2 and di.vip_enable=0 then '总部cs'
              when coalesce(ss.category,ss2.category) in (11) then 'FFM'
              when coalesce(ss.category,ss2.category) in (4,5,7) then 'SHOP'
              when coalesce(ss.category,ss2.category) in (1,9,10,13,14) then 'NW'
              when coalesce(ss.category,ss2.category) = 6 or (di.organization_type=1 and di.vip_enable=0 and di.service_type = 3) then 'FH'
              when coalesce(ss.category,ss2.category) in (8,12) then 'HUB'
            end as 处理组织
            ,di.CN_element
            ,count(di.id) 昨日已完成任务量
        from
            (
                select
                    di.id
                    ,convert_tz(di.created_at,'+00:00','+07:00') created_at
                    ,di.pno
                    ,ddd.cn_element
                    ,pi.ticket_pickup_store_id
                    ,pi.client_id
                    ,cdt.state
                    ,cdt.organization_type
                    ,cdt.organization_id
                    ,cdt.vip_enable
                    ,cdt.service_type
                    ,convert_tz(cdt.updated_at,'+00:00','+07:00') updated_at
                    ,convert_tz(cdt.first_operated_at,'+00:00','+07:00') first_operated_at
                from fle_staging.diff_info di
                join fle_staging.parcel_info pi on di.pno=pi.pno
                left join fle_staging.customer_diff_ticket cdt on cdt.diff_info_id=di.id
                join dwm.dwd_dim_dict ddd on ddd.element=di.diff_marker_category and ddd.db='fle_staging' and ddd.tablename='diff_info' and ddd.fieldname='diff_marker_category'
                where
                    pi.created_at>=date_sub(current_date,interval 3 month)
                    and cdt.updated_at <= date_sub(current_date,interval 7 hour)
                    and cdt.updated_at >= date_sub(curdate(), interval 31 hour)
#                     and (pi.state=6 or (cdt.state=1 and date(convert_tz(cdt.updated_at,'+00:00','+07:00'))=date_sub(current_date,interval 1 day)))
#                     and cdt.state in (0,1,2,3,4)
                    and cdt.state = 1
                    and (cdt.operator_id not in (10001,10000) or  cdt.operator_id is null)
            )di
        left join fle_staging.sys_store ss on di.ticket_pickup_store_id=ss.id
        left join fle_staging.sys_store ss2 on di.organization_id=ss2.id
        left join fle_staging.customer_group_ka_relation cgk on cgk.ka_id=di.client_id and cgk.deleted=0
        left join fle_staging.customer_group cg on cg.id=cgk.customer_group_id
        group by 1,2,3
    ) a3 on a1.部门=a3.部门 and a1.处理组织 = a3.处理组织 and a1.CN_element = a3.CN_element;
;-- -. . -..- - / . -. - .-. -.--
select
    a1.部门,
    a1.处理组织,
    a1.CN_element '问题件类型ประเภทคำร้อง',
    a2.总任务量,
    a3.昨日已完成任务量,
    a1.未处理总计,
    a1.D0沟通中ระหว่างเจรจา,
    a1.D0未处理ยังไม่จัดการ,
    a1.D1沟通中ระหว่างเจรจา,
    a1.D1未处理ยังไม่จัดการ,
    a1.D2沟通中ระหว่างเจรจา,
    a1.D2未处理ยังไม่จัดการ,
    a1.D3沟通中ระหว่างเจรจา,
    a1.D3未处理ยังไม่จัดการ,
    a1.D4_7沟通中ระหว่างเจรจา,
    a1.D4_7未处理ยังไม่จัดการ,
    a1.D8_15沟通中ระหว่างเจรจา,
    a1.D8_15未处理ยังไม่จัดการ,
    a1.`D16+沟通中ระหว่างเจรจา`,
    a1.`D16+未处理ยังไม่จัดการ`
from
    (
        select
            case
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('Bulky BD') then 'Bulky Business Development'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('Group VIP Customer') then 'Retail Management'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('LAZADA','TikTok','Shopee','KAM CN','THAI KAM') then 'PMD'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('FFM') then 'FFM'
              when di.organization_type=2 and di.vip_enable=0 then '总部cs'
              when ((di.organization_type=1 and (di.service_type != 3 or di.service_type is null) and di.vip_enable=0)
                    or (di.organization_type=1 and di.vip_enable=0 and di.service_type = 3)) then 'Mini CS'
            end 部门
            ,case when di.organization_type=2 and di.vip_enable=1 then cg.name
              when di.organization_type=2 and di.vip_enable=0 then '总部cs'
              when coalesce(ss.category,ss2.category) in (11) then 'FFM'
              when coalesce(ss.category,ss2.category) in (4,5,7) then 'SHOP'
              when coalesce(ss.category,ss2.category) in (1,9,10,13,14) then 'NW'
              when coalesce(ss.category,ss2.category) = 6 or (di.organization_type=1 and di.vip_enable=0 and di.service_type = 3) then 'FH'
              when coalesce(ss.category,ss2.category) in (8,12) then 'HUB'
            end as 处理组织
            ,di.CN_element
            ,count(if(di.state in (2,3,4),di.id,null)) 未处理总计
            ,count(if(datediff(current_date,date(di.created_at))<=1,di.id,null)) D0任务量
            ,count(if(datediff(current_date,date(di.created_at))<=1 and di.state=1,di.id,null)) D0已完成
            ,count(if(datediff(current_date,date(di.created_at))<=1 and di.state in (2,3,4),di.id,null)) 'D0沟通中ระหว่างเจรจา'
            ,count(if(datediff(current_date,date(di.created_at))<=1 and di.state=0,di.id,null)) 'D0未处理ยังไม่จัดการ'
            ,concat(round(
            (
            count(if(datediff(current_date,date(di.created_at))<=1 and di.state in (2,3,4),di.id,null))
            +count(if(datediff(current_date,date(di.created_at))<=1 and di.state=0,di.id,null))
            )/count(if(datediff(current_date,date(di.created_at))<=1,di.id,null))*100
                    ,2),'%') D0未处理完成占比

            ,count(if(datediff(current_date,date(di.created_at))=2,di.id,null)) D1任务量
            ,count(if(datediff(current_date,date(di.created_at))=2 and di.state=1,di.id,null)) D1已完成
            ,count(if(datediff(current_date,date(di.created_at))=2 and di.state in (2,3,4),di.id,null)) 'D1沟通中ระหว่างเจรจา'
            ,count(if(datediff(current_date,date(di.created_at))=2 and di.state=0,di.id,null)) 'D1未处理ยังไม่จัดการ'
            ,concat(round(
            (
            count(if(datediff(current_date,date(di.created_at))=2 and di.state in (2,3,4),di.id,null))
            +count(if(datediff(current_date,date(di.created_at))=2 and di.state=0,di.id,null))
            )/count(if(datediff(current_date,date(di.created_at))=2,di.id,null))*100
                    ,2),'%') D1未处理完成占比

            ,count(if(datediff(current_date,date(di.created_at))=3,di.id,null)) D2任务量
            ,count(if(datediff(current_date,date(di.created_at))=3 and di.state=1,di.id,null)) D2已完成
            ,count(if(datediff(current_date,date(di.created_at))=3 and di.state in (2,3,4),di.id,null)) 'D2沟通中ระหว่างเจรจา'
            ,count(if(datediff(current_date,date(di.created_at))=3 and di.state=0,di.id,null)) 'D2未处理ยังไม่จัดการ'
            ,concat(round(
            (
            count(if(datediff(current_date,date(di.created_at))=3 and di.state in (2,3,4),di.id,null))
            +count(if(datediff(current_date,date(di.created_at))=3 and di.state=0,di.id,null))
            )/count(if(datediff(current_date,date(di.created_at))=3,di.id,null))*100
                    ,2),'%') D2未处理完成占比

            ,count(if(datediff(current_date,date(di.created_at))=4,di.id,null)) D3任务量
            ,count(if(datediff(current_date,date(di.created_at))=4 and di.state=1,di.id,null)) D3已完成
            ,count(if(datediff(current_date,date(di.created_at))=4 and di.state in (2,3,4),di.id,null)) 'D3沟通中ระหว่างเจรจา'
            ,count(if(datediff(current_date,date(di.created_at))=4 and di.state=0,di.id,null)) 'D3未处理ยังไม่จัดการ'
            ,concat(round(
            (
            count(if(datediff(current_date,date(di.created_at))=4 and di.state in (2,3,4),di.id,null))
            +count(if(datediff(current_date,date(di.created_at))=4 and di.state=0,di.id,null))
            )/count(if(datediff(current_date,date(di.created_at))=4,di.id,null))*100
                    ,2),'%') D3未处理完成占比

            ,count(if(datediff(current_date,date(di.created_at)) in (5,6,7,8),di.id,null)) D4_7任务量
            ,count(if(datediff(current_date,date(di.created_at)) in (5,6,7,8) and di.state=1,di.id,null)) D4_7已完成
            ,count(if(datediff(current_date,date(di.created_at)) in (5,6,7,8) and di.state in (2,3,4),di.id,null)) 'D4_7沟通中ระหว่างเจรจา'
            ,count(if(datediff(current_date,date(di.created_at)) in (5,6,7,8) and di.state=0,di.id,null)) 'D4_7未处理ยังไม่จัดการ'
            ,concat(round(
            (
            count(if(datediff(current_date,date(di.created_at)) in (5,6,7,8) and di.state in (2,3,4),di.id,null))
            +count(if(datediff(current_date,date(di.created_at)) in (5,6,7,8) and di.state=0,di.id,null))
            )/count(if(datediff(current_date,date(di.created_at)) in (5,6,7,8),di.id,null))*100
                    ,2),'%') D4_7未处理完成占比

            ,count(if(datediff(current_date,date(di.created_at)) in (9,10,11,12,13,14,15,16),di.id,null)) D8_15任务量
            ,count(if(datediff(current_date,date(di.created_at)) in (9,10,11,12,13,14,15,16) and di.state=1,di.id,null)) D8_15已完成
            ,count(if(datediff(current_date,date(di.created_at)) in (9,10,11,12,13,14,15,16) and di.state in (2,3,4),di.id,null)) 'D8_15沟通中ระหว่างเจรจา'
            ,count(if(datediff(current_date,date(di.created_at)) in (9,10,11,12,13,14,15,16) and di.state=0,di.id,null)) 'D8_15未处理ยังไม่จัดการ'
            ,concat(round(
            (
            count(if(datediff(current_date,date(di.created_at)) in (9,10,11,12,13,14,15,16) and di.state in (2,3,4),di.id,null))
            +count(if(datediff(current_date,date(di.created_at)) in (9,10,11,12,13,14,15,16) and di.state=0,di.id,null))
            )/count(if(datediff(current_date,date(di.created_at)) in (9,10,11,12,13,14,15,16),di.id,null))*100
                    ,2),'%') D8_15未处理完成占比

            ,count(if(datediff(current_date,date(di.created_at))>=17,di.id,null)) 'D16+任务量'
            ,count(if(datediff(current_date,date(di.created_at))>=17 and di.state=1,di.id,null)) 'D16+已完成'
            ,count(if(datediff(current_date,date(di.created_at))>=17 and di.state in (2,3,4),di.id,null)) 'D16+沟通中ระหว่างเจรจา'
            ,count(if(datediff(current_date,date(di.created_at))>=17 and di.state=0,di.id,null)) 'D16+未处理ยังไม่จัดการ'
            ,concat(round(
            (
            count(if(datediff(current_date,date(di.created_at))>=17 and di.state in (2,3,4),di.id,null))
            +count(if(datediff(current_date,date(di.created_at))>=17 and di.state=0,di.id,null))
            )/count(if(datediff(current_date,date(di.created_at))>=17,di.id,null))*100
                    ,2),'%') 'D16+未处理完成占比'

        from
            (
                select
                    di.id
                    ,convert_tz(di.created_at,'+00:00','+07:00') created_at
                    ,di.pno
                    ,ddd.cn_element
                    ,pi.ticket_pickup_store_id
                    ,pi.client_id
                    ,cdt.state
                    ,cdt.organization_type
                    ,cdt.organization_id
                    ,cdt.vip_enable
                    ,cdt.service_type
                    ,convert_tz(cdt.updated_at,'+00:00','+07:00') updated_at
                    ,convert_tz(cdt.first_operated_at,'+00:00','+07:00') first_operated_at
                from fle_staging.diff_info di
                join fle_staging.parcel_info pi on di.pno=pi.pno
                left join fle_staging.customer_diff_ticket cdt on cdt.diff_info_id=di.id
                join dwm.dwd_dim_dict ddd on ddd.element=di.diff_marker_category and ddd.db='fle_staging' and ddd.tablename='diff_info' and ddd.fieldname='diff_marker_category'
                where
                    pi.created_at>=date_sub(current_date,interval 3 month)
                    and di.created_at<=date_sub(current_date,interval 7 hour)
                    and (pi.state=6 or (cdt.state=1 and date(convert_tz(cdt.updated_at,'+00:00','+07:00'))=date_sub(current_date,interval 1 day)))
                    and cdt.state in (0,1,2,3,4)
                    and (cdt.operator_id not in (10001,10000) or  cdt.operator_id is null)
            ) di
        left join fle_staging.sys_store ss on di.ticket_pickup_store_id=ss.id
        left join fle_staging.sys_store ss2 on di.organization_id=ss2.id
        left join fle_staging.customer_group_ka_relation cgk on cgk.ka_id=di.client_id and cgk.deleted=0
        left join fle_staging.customer_group cg on cg.id=cgk.customer_group_id
        group by 1,2,3
    ) a1
left join
    (
        select
            case
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('Bulky BD') then 'Bulky Business Development'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('Group VIP Customer') then 'Retail Management'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('LAZADA','TikTok','Shopee','KAM CN','THAI KAM') then 'PMD'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('FFM') then 'FFM'
              when di.organization_type=2 and di.vip_enable=0 then '总部cs'
              when ((di.organization_type=1 and (di.service_type != 3 or di.service_type is null) and di.vip_enable=0)
                    or (di.organization_type=1 and di.vip_enable=0 and di.service_type = 3)) then 'Mini CS'
            end 部门
            ,case when di.organization_type=2 and di.vip_enable=1 then cg.name
              when di.organization_type=2 and di.vip_enable=0 then '总部cs'
              when coalesce(ss.category,ss2.category) in (11) then 'FFM'
              when coalesce(ss.category,ss2.category) in (4,5,7) then 'SHOP'
              when coalesce(ss.category,ss2.category) in (1,9,10,13,14) then 'NW'
              when coalesce(ss.category,ss2.category) = 6 or (di.organization_type=1 and di.vip_enable=0 and di.service_type = 3) then 'FH'
              when coalesce(ss.category,ss2.category) in (8,12) then 'HUB'
            end as 处理组织
            ,di.CN_element
            ,count(di.id) 总任务量
        from
            (
                select
                    di.id
                    ,convert_tz(di.created_at,'+00:00','+07:00') created_at
                    ,di.pno
                    ,ddd.cn_element
                    ,pi.ticket_pickup_store_id
                    ,pi.client_id
                    ,cdt.state
                    ,cdt.organization_type
                    ,cdt.organization_id
                    ,cdt.vip_enable
                    ,cdt.service_type
                    ,convert_tz(cdt.updated_at,'+00:00','+07:00') updated_at
                    ,convert_tz(cdt.first_operated_at,'+00:00','+07:00') first_operated_at
                from fle_staging.diff_info di
                join fle_staging.parcel_info pi on di.pno=pi.pno
                left join fle_staging.customer_diff_ticket cdt on cdt.diff_info_id=di.id
                join dwm.dwd_dim_dict ddd on ddd.element=di.diff_marker_category and ddd.db='fle_staging' and ddd.tablename='diff_info' and ddd.fieldname='diff_marker_category'
                where
                    pi.created_at>=date_sub(current_date,interval 3 month)
                    and di.created_at<=date_sub(current_date,interval 7 hour)
#                     and (pi.state=6 or (cdt.state=1 and date(convert_tz(cdt.updated_at,'+00:00','+07:00'))=date_sub(current_date,interval 1 day)))
#                     and cdt.state in (0,1,2,3,4)
                    and (cdt.operator_id not in (10001,10000) or  cdt.operator_id is null)
            )di
        left join fle_staging.sys_store ss on di.ticket_pickup_store_id=ss.id
        left join fle_staging.sys_store ss2 on di.organization_id=ss2.id
        left join fle_staging.customer_group_ka_relation cgk on cgk.ka_id=di.client_id and cgk.deleted=0
        left join fle_staging.customer_group cg on cg.id=cgk.customer_group_id
        group by 1,2,3
    ) a2 on a1.部门=a2.部门 and a1.处理组织 = a2.处理组织 and a1.CN_element = a2.CN_element
left join
    (
        select
            case
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('Bulky BD') then 'Bulky Business Development'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('Group VIP Customer') then 'Retail Management'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('LAZADA','TikTok','Shopee','KAM CN','THAI KAM') then 'PMD'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('FFM') then 'FFM'
              when di.organization_type=2 and di.vip_enable=0 then '总部cs'
              when ((di.organization_type=1 and (di.service_type != 3 or di.service_type is null) and di.vip_enable=0)
                    or (di.organization_type=1 and di.vip_enable=0 and di.service_type = 3)) then 'Mini CS'
            end 部门
            ,case when di.organization_type=2 and di.vip_enable=1 then cg.name
              when di.organization_type=2 and di.vip_enable=0 then '总部cs'
              when coalesce(ss.category,ss2.category) in (11) then 'FFM'
              when coalesce(ss.category,ss2.category) in (4,5,7) then 'SHOP'
              when coalesce(ss.category,ss2.category) in (1,9,10,13,14) then 'NW'
              when coalesce(ss.category,ss2.category) = 6 or (di.organization_type=1 and di.vip_enable=0 and di.service_type = 3) then 'FH'
              when coalesce(ss.category,ss2.category) in (8,12) then 'HUB'
            end as 处理组织
            ,di.CN_element
            ,count(di.id) 昨日已完成任务量
        from
            (
                select
                    di.id
                    ,convert_tz(di.created_at,'+00:00','+07:00') created_at
                    ,di.pno
                    ,ddd.cn_element
                    ,pi.ticket_pickup_store_id
                    ,pi.client_id
                    ,cdt.state
                    ,cdt.organization_type
                    ,cdt.organization_id
                    ,cdt.vip_enable
                    ,cdt.service_type
                    ,convert_tz(cdt.updated_at,'+00:00','+07:00') updated_at
                    ,convert_tz(cdt.first_operated_at,'+00:00','+07:00') first_operated_at
                from fle_staging.diff_info di
                join fle_staging.parcel_info pi on di.pno=pi.pno
                left join fle_staging.customer_diff_ticket cdt on cdt.diff_info_id=di.id
                join dwm.dwd_dim_dict ddd on ddd.element=di.diff_marker_category and ddd.db='fle_staging' and ddd.tablename='diff_info' and ddd.fieldname='diff_marker_category'
                where
                    pi.created_at>=date_sub(current_date,interval 3 month)
                    and cdt.updated_at <= date_sub(current_date,interval 7 hour)
                    and cdt.updated_at >= date_sub(curdate(), interval 31 hour)
#                     and (pi.state=6 or (cdt.state=1 and date(convert_tz(cdt.updated_at,'+00:00','+07:00'))=date_sub(current_date,interval 1 day)))
#                     and cdt.state in (0,1,2,3,4)
                    and cdt.state = 1
                    and (cdt.operator_id not in (10001,10000) or  cdt.operator_id is null)
            )di
        left join fle_staging.sys_store ss on di.ticket_pickup_store_id=ss.id
        left join fle_staging.sys_store ss2 on di.organization_id=ss2.id
        left join fle_staging.customer_group_ka_relation cgk on cgk.ka_id=di.client_id and cgk.deleted=0
        left join fle_staging.customer_group cg on cg.id=cgk.customer_group_id
        group by 1,2,3
    ) a3 on a1.部门=a3.部门 and a1.处理组织 = a3.处理组织 and a1.CN_element = a3.CN_element;
;-- -. . -..- - / . -. - .-. -.--
select
    a1.部门,
    a1.处理组织,
    a1.CN_element '问题件类型ประเภทคำร้อง',
    a2.总任务量,
    a3.昨日已完成任务量,
    a1.未处理总计,
    a1.D0沟通中ระหว่างเจรจา,
    a1.D0未处理ยังไม่จัดการ,
    a1.D1沟通中ระหว่างเจรจา,
    a1.D1未处理ยังไม่จัดการ,
    a1.D2沟通中ระหว่างเจรจา,
    a1.D2未处理ยังไม่จัดการ,
    a1.D3沟通中ระหว่างเจรจา,
    a1.D3未处理ยังไม่จัดการ,
    a1.D4_7沟通中ระหว่างเจรจา,
    a1.D4_7未处理ยังไม่จัดการ,
    a1.D8_15沟通中ระหว่างเจรจา,
    a1.D8_15未处理ยังไม่จัดการ,
    a1.`D16+沟通中ระหว่างเจรจา`,
    a1.`D16+未处理ยังไม่จัดการ`
from
    (
        select
            case
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('Bulky BD') then 'Bulky Business Development'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('Group VIP Customer') then 'Retail Management'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('LAZADA','TikTok','Shopee','KAM CN','THAI KAM') then 'PMD'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('FFM') then 'FFM'
              when di.organization_type=2 and di.vip_enable=0 then '总部cs'
              when ((di.organization_type=1 and (di.service_type != 3 or di.service_type is null) and di.vip_enable=0)
                    or (di.organization_type=1 and di.vip_enable=0 and di.service_type = 3)) then 'Mini CS'
            end 部门
            ,case when di.organization_type=2 and di.vip_enable=1 then cg.name
              when di.organization_type=2 and di.vip_enable=0 then '总部cs'
              when coalesce(ss.category,ss2.category) in (11) then 'FFM'
              when coalesce(ss.category,ss2.category) in (4,5,7) then 'SHOP'
              when coalesce(ss.category,ss2.category) in (1,9,10,13,14) then 'NW'
              when coalesce(ss.category,ss2.category) = 6 or (di.organization_type=1 and di.vip_enable=0 and di.service_type = 3) then 'FH'
              when coalesce(ss.category,ss2.category) in (8,12) then 'HUB'
            end as 处理组织
            ,di.CN_element
            ,count(if(di.state in (2,3,4),di.id,null)) 未处理总计
            ,count(if(datediff(current_date,date(di.created_at))<=1,di.id,null)) D0任务量
            ,count(if(datediff(current_date,date(di.created_at))<=1 and di.state=1,di.id,null)) D0已完成
            ,count(if(datediff(current_date,date(di.created_at))<=1 and di.state in (2,3,4),di.id,null)) 'D0沟通中ระหว่างเจรจา'
            ,count(if(datediff(current_date,date(di.created_at))<=1 and di.state=0,di.id,null)) 'D0未处理ยังไม่จัดการ'
            ,concat(round(
            (
            count(if(datediff(current_date,date(di.created_at))<=1 and di.state in (2,3,4),di.id,null))
            +count(if(datediff(current_date,date(di.created_at))<=1 and di.state=0,di.id,null))
            )/count(if(datediff(current_date,date(di.created_at))<=1,di.id,null))*100
                    ,2),'%') D0未处理完成占比

            ,count(if(datediff(current_date,date(di.created_at))=2,di.id,null)) D1任务量
            ,count(if(datediff(current_date,date(di.created_at))=2 and di.state=1,di.id,null)) D1已完成
            ,count(if(datediff(current_date,date(di.created_at))=2 and di.state in (2,3,4),di.id,null)) 'D1沟通中ระหว่างเจรจา'
            ,count(if(datediff(current_date,date(di.created_at))=2 and di.state=0,di.id,null)) 'D1未处理ยังไม่จัดการ'
            ,concat(round(
            (
            count(if(datediff(current_date,date(di.created_at))=2 and di.state in (2,3,4),di.id,null))
            +count(if(datediff(current_date,date(di.created_at))=2 and di.state=0,di.id,null))
            )/count(if(datediff(current_date,date(di.created_at))=2,di.id,null))*100
                    ,2),'%') D1未处理完成占比

            ,count(if(datediff(current_date,date(di.created_at))=3,di.id,null)) D2任务量
            ,count(if(datediff(current_date,date(di.created_at))=3 and di.state=1,di.id,null)) D2已完成
            ,count(if(datediff(current_date,date(di.created_at))=3 and di.state in (2,3,4),di.id,null)) 'D2沟通中ระหว่างเจรจา'
            ,count(if(datediff(current_date,date(di.created_at))=3 and di.state=0,di.id,null)) 'D2未处理ยังไม่จัดการ'
            ,concat(round(
            (
            count(if(datediff(current_date,date(di.created_at))=3 and di.state in (2,3,4),di.id,null))
            +count(if(datediff(current_date,date(di.created_at))=3 and di.state=0,di.id,null))
            )/count(if(datediff(current_date,date(di.created_at))=3,di.id,null))*100
                    ,2),'%') D2未处理完成占比

            ,count(if(datediff(current_date,date(di.created_at))=4,di.id,null)) D3任务量
            ,count(if(datediff(current_date,date(di.created_at))=4 and di.state=1,di.id,null)) D3已完成
            ,count(if(datediff(current_date,date(di.created_at))=4 and di.state in (2,3,4),di.id,null)) 'D3沟通中ระหว่างเจรจา'
            ,count(if(datediff(current_date,date(di.created_at))=4 and di.state=0,di.id,null)) 'D3未处理ยังไม่จัดการ'
            ,concat(round(
            (
            count(if(datediff(current_date,date(di.created_at))=4 and di.state in (2,3,4),di.id,null))
            +count(if(datediff(current_date,date(di.created_at))=4 and di.state=0,di.id,null))
            )/count(if(datediff(current_date,date(di.created_at))=4,di.id,null))*100
                    ,2),'%') D3未处理完成占比

            ,count(if(datediff(current_date,date(di.created_at)) in (5,6,7,8),di.id,null)) D4_7任务量
            ,count(if(datediff(current_date,date(di.created_at)) in (5,6,7,8) and di.state=1,di.id,null)) D4_7已完成
            ,count(if(datediff(current_date,date(di.created_at)) in (5,6,7,8) and di.state in (2,3,4),di.id,null)) 'D4_7沟通中ระหว่างเจรจา'
            ,count(if(datediff(current_date,date(di.created_at)) in (5,6,7,8) and di.state=0,di.id,null)) 'D4_7未处理ยังไม่จัดการ'
            ,concat(round(
            (
            count(if(datediff(current_date,date(di.created_at)) in (5,6,7,8) and di.state in (2,3,4),di.id,null))
            +count(if(datediff(current_date,date(di.created_at)) in (5,6,7,8) and di.state=0,di.id,null))
            )/count(if(datediff(current_date,date(di.created_at)) in (5,6,7,8),di.id,null))*100
                    ,2),'%') D4_7未处理完成占比

            ,count(if(datediff(current_date,date(di.created_at)) in (9,10,11,12,13,14,15,16),di.id,null)) D8_15任务量
            ,count(if(datediff(current_date,date(di.created_at)) in (9,10,11,12,13,14,15,16) and di.state=1,di.id,null)) D8_15已完成
            ,count(if(datediff(current_date,date(di.created_at)) in (9,10,11,12,13,14,15,16) and di.state in (2,3,4),di.id,null)) 'D8_15沟通中ระหว่างเจรจา'
            ,count(if(datediff(current_date,date(di.created_at)) in (9,10,11,12,13,14,15,16) and di.state=0,di.id,null)) 'D8_15未处理ยังไม่จัดการ'
            ,concat(round(
            (
            count(if(datediff(current_date,date(di.created_at)) in (9,10,11,12,13,14,15,16) and di.state in (2,3,4),di.id,null))
            +count(if(datediff(current_date,date(di.created_at)) in (9,10,11,12,13,14,15,16) and di.state=0,di.id,null))
            )/count(if(datediff(current_date,date(di.created_at)) in (9,10,11,12,13,14,15,16),di.id,null))*100
                    ,2),'%') D8_15未处理完成占比

            ,count(if(datediff(current_date,date(di.created_at))>=17,di.id,null)) 'D16+任务量'
            ,count(if(datediff(current_date,date(di.created_at))>=17 and di.state=1,di.id,null)) 'D16+已完成'
            ,count(if(datediff(current_date,date(di.created_at))>=17 and di.state in (2,3,4),di.id,null)) 'D16+沟通中ระหว่างเจรจา'
            ,count(if(datediff(current_date,date(di.created_at))>=17 and di.state=0,di.id,null)) 'D16+未处理ยังไม่จัดการ'
            ,concat(round(
            (
            count(if(datediff(current_date,date(di.created_at))>=17 and di.state in (2,3,4),di.id,null))
            +count(if(datediff(current_date,date(di.created_at))>=17 and di.state=0,di.id,null))
            )/count(if(datediff(current_date,date(di.created_at))>=17,di.id,null))*100
                    ,2),'%') 'D16+未处理完成占比'

        from
            (
                select
                    di.id
                    ,convert_tz(di.created_at,'+00:00','+07:00') created_at
                    ,di.pno
                    ,ddd.cn_element
                    ,pi.ticket_pickup_store_id
                    ,pi.client_id
                    ,cdt.state
                    ,cdt.organization_type
                    ,cdt.organization_id
                    ,cdt.vip_enable
                    ,cdt.service_type
                    ,convert_tz(cdt.updated_at,'+00:00','+07:00') updated_at
                    ,convert_tz(cdt.first_operated_at,'+00:00','+07:00') first_operated_at
                from fle_staging.diff_info di
                join fle_staging.parcel_info pi on di.pno=pi.pno
                left join fle_staging.customer_diff_ticket cdt on cdt.diff_info_id=di.id
                join dwm.dwd_dim_dict ddd on ddd.element=di.diff_marker_category and ddd.db='fle_staging' and ddd.tablename='diff_info' and ddd.fieldname='diff_marker_category'
                where
                    pi.created_at>=date_sub(current_date,interval 3 month)
                    and di.created_at<=date_sub(current_date,interval 7 hour)
                    and (pi.state=6 or (cdt.state=1 and date(convert_tz(cdt.updated_at,'+00:00','+07:00'))=date_sub(current_date,interval 1 day)))
                    and cdt.state in (0,1,2,3,4)
                    and (cdt.operator_id not in (10001,10000) or  cdt.operator_id is null)
            ) di
        left join fle_staging.sys_store ss on di.ticket_pickup_store_id=ss.id
        left join fle_staging.sys_store ss2 on di.organization_id=ss2.id
        left join fle_staging.customer_group_ka_relation cgk on cgk.ka_id=di.client_id and cgk.deleted=0
        left join fle_staging.customer_group cg on cg.id=cgk.customer_group_id
        group by 1,2,3
    ) a1
left join
    (
        select
            case
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('Bulky BD') then 'Bulky Business Development'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('Group VIP Customer') then 'Retail Management'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('LAZADA','TikTok','Shopee','KAM CN','THAI KAM') then 'PMD'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('FFM') then 'FFM'
              when di.organization_type=2 and di.vip_enable=0 then '总部cs'
              when ((di.organization_type=1 and (di.service_type != 3 or di.service_type is null) and di.vip_enable=0)
                    or (di.organization_type=1 and di.vip_enable=0 and di.service_type = 3)) then 'Mini CS'
            end 部门
            ,case when di.organization_type=2 and di.vip_enable=1 then cg.name
              when di.organization_type=2 and di.vip_enable=0 then '总部cs'
              when coalesce(ss.category,ss2.category) in (11) then 'FFM'
              when coalesce(ss.category,ss2.category) in (4,5,7) then 'SHOP'
              when coalesce(ss.category,ss2.category) in (1,9,10,13,14) then 'NW'
              when coalesce(ss.category,ss2.category) = 6 or (di.organization_type=1 and di.vip_enable=0 and di.service_type = 3) then 'FH'
              when coalesce(ss.category,ss2.category) in (8,12) then 'HUB'
            end as 处理组织
            ,di.CN_element
            ,count(di.id) 总任务量
        from
            (
                select
                    di.id
                    ,convert_tz(di.created_at,'+00:00','+07:00') created_at
                    ,di.pno
                    ,ddd.cn_element
                    ,pi.ticket_pickup_store_id
                    ,pi.client_id
                    ,cdt.state
                    ,cdt.organization_type
                    ,cdt.organization_id
                    ,cdt.vip_enable
                    ,cdt.service_type
                    ,convert_tz(cdt.updated_at,'+00:00','+07:00') updated_at
                    ,convert_tz(cdt.first_operated_at,'+00:00','+07:00') first_operated_at
                from fle_staging.diff_info di
                join fle_staging.parcel_info pi on di.pno=pi.pno
                left join fle_staging.customer_diff_ticket cdt on cdt.diff_info_id=di.id
                join dwm.dwd_dim_dict ddd on ddd.element=di.diff_marker_category and ddd.db='fle_staging' and ddd.tablename='diff_info' and ddd.fieldname='diff_marker_category'
                where
                    pi.created_at>=date_sub(current_date,interval 3 month)
                    and di.created_at<=date_sub(current_date,interval 7 hour)
#                     and (pi.state=6 or (cdt.state=1 and date(convert_tz(cdt.updated_at,'+00:00','+07:00'))=date_sub(current_date,interval 1 day)))
                    and cdt.state = 0
                    and (cdt.operator_id not in (10001,10000) or  cdt.operator_id is null)
            )di
        left join fle_staging.sys_store ss on di.ticket_pickup_store_id=ss.id
        left join fle_staging.sys_store ss2 on di.organization_id=ss2.id
        left join fle_staging.customer_group_ka_relation cgk on cgk.ka_id=di.client_id and cgk.deleted=0
        left join fle_staging.customer_group cg on cg.id=cgk.customer_group_id
        group by 1,2,3
    ) a2 on a1.部门=a2.部门 and a1.处理组织 = a2.处理组织 and a1.CN_element = a2.CN_element
left join
    (
        select
            case
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('Bulky BD') then 'Bulky Business Development'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('Group VIP Customer') then 'Retail Management'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('LAZADA','TikTok','Shopee','KAM CN','THAI KAM') then 'PMD'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('FFM') then 'FFM'
              when di.organization_type=2 and di.vip_enable=0 then '总部cs'
              when ((di.organization_type=1 and (di.service_type != 3 or di.service_type is null) and di.vip_enable=0)
                    or (di.organization_type=1 and di.vip_enable=0 and di.service_type = 3)) then 'Mini CS'
            end 部门
            ,case when di.organization_type=2 and di.vip_enable=1 then cg.name
              when di.organization_type=2 and di.vip_enable=0 then '总部cs'
              when coalesce(ss.category,ss2.category) in (11) then 'FFM'
              when coalesce(ss.category,ss2.category) in (4,5,7) then 'SHOP'
              when coalesce(ss.category,ss2.category) in (1,9,10,13,14) then 'NW'
              when coalesce(ss.category,ss2.category) = 6 or (di.organization_type=1 and di.vip_enable=0 and di.service_type = 3) then 'FH'
              when coalesce(ss.category,ss2.category) in (8,12) then 'HUB'
            end as 处理组织
            ,di.CN_element
            ,count(di.id) 昨日已完成任务量
        from
            (
                select
                    di.id
                    ,convert_tz(di.created_at,'+00:00','+07:00') created_at
                    ,di.pno
                    ,ddd.cn_element
                    ,pi.ticket_pickup_store_id
                    ,pi.client_id
                    ,cdt.state
                    ,cdt.organization_type
                    ,cdt.organization_id
                    ,cdt.vip_enable
                    ,cdt.service_type
                    ,convert_tz(cdt.updated_at,'+00:00','+07:00') updated_at
                    ,convert_tz(cdt.first_operated_at,'+00:00','+07:00') first_operated_at
                from fle_staging.diff_info di
                join fle_staging.parcel_info pi on di.pno=pi.pno
                left join fle_staging.customer_diff_ticket cdt on cdt.diff_info_id=di.id
                join dwm.dwd_dim_dict ddd on ddd.element=di.diff_marker_category and ddd.db='fle_staging' and ddd.tablename='diff_info' and ddd.fieldname='diff_marker_category'
                where
                    pi.created_at>=date_sub(current_date,interval 3 month)
                    and cdt.updated_at <= date_sub(current_date,interval 7 hour)
                    and cdt.updated_at >= date_sub(curdate(), interval 31 hour)
#                     and (pi.state=6 or (cdt.state=1 and date(convert_tz(cdt.updated_at,'+00:00','+07:00'))=date_sub(current_date,interval 1 day)))
#                     and cdt.state in (0,1,2,3,4)
                    and cdt.state = 1
                    and (cdt.operator_id not in (10001,10000) or  cdt.operator_id is null)
            )di
        left join fle_staging.sys_store ss on di.ticket_pickup_store_id=ss.id
        left join fle_staging.sys_store ss2 on di.organization_id=ss2.id
        left join fle_staging.customer_group_ka_relation cgk on cgk.ka_id=di.client_id and cgk.deleted=0
        left join fle_staging.customer_group cg on cg.id=cgk.customer_group_id
        group by 1,2,3
    ) a3 on a1.部门=a3.部门 and a1.处理组织 = a3.处理组织 and a1.CN_element = a3.CN_element;
;-- -. . -..- - / . -. - .-. -.--
select
    a1.部门,
    a1.处理组织,
    a1.CN_element '问题件类型ประเภทคำร้อง',
    a2.总任务量,
    a3.昨日已完成任务量,
    a1.未处理总计,
    a1.D0沟通中ระหว่างเจรจา,
    a1.D0未处理ยังไม่จัดการ,
    a1.D1沟通中ระหว่างเจรจา,
    a1.D1未处理ยังไม่จัดการ,
    a1.D2沟通中ระหว่างเจรจา,
    a1.D2未处理ยังไม่จัดการ,
    a1.D3沟通中ระหว่างเจรจา,
    a1.D3未处理ยังไม่จัดการ,
    a1.D4_7沟通中ระหว่างเจรจา,
    a1.D4_7未处理ยังไม่จัดการ,
    a1.D8_15沟通中ระหว่างเจรจา,
    a1.D8_15未处理ยังไม่จัดการ,
    a1.`D16+沟通中ระหว่างเจรจา`,
    a1.`D16+未处理ยังไม่จัดการ`
from
    (
        select
            case
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('Bulky BD') then 'Bulky Business Development'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('Group VIP Customer') then 'Retail Management'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('LAZADA','TikTok','Shopee','KAM CN','THAI KAM') then 'PMD'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('FFM') then 'FFM'
              when di.organization_type=2 and di.vip_enable=0 then '总部cs'
              when ((di.organization_type=1 and (di.service_type != 3 or di.service_type is null) and di.vip_enable=0)
                    or (di.organization_type=1 and di.vip_enable=0 and di.service_type = 3)) then 'Mini CS'
            end 部门
            ,case when di.organization_type=2 and di.vip_enable=1 then cg.name
              when di.organization_type=2 and di.vip_enable=0 then '总部cs'
              when coalesce(ss.category,ss2.category) in (11) then 'FFM'
              when coalesce(ss.category,ss2.category) in (4,5,7) then 'SHOP'
              when coalesce(ss.category,ss2.category) in (1,9,10,13,14) then 'NW'
              when coalesce(ss.category,ss2.category) = 6 or (di.organization_type=1 and di.vip_enable=0 and di.service_type = 3) then 'FH'
              when coalesce(ss.category,ss2.category) in (8,12) then 'HUB'
            end as 处理组织
            ,di.CN_element
            ,count(if(di.state = 0,di.id,null)) 未处理总计
            ,count(if(datediff(current_date,date(di.created_at))<=1,di.id,null)) D0任务量
            ,count(if(datediff(current_date,date(di.created_at))<=1 and di.state=1,di.id,null)) D0已完成
            ,count(if(datediff(current_date,date(di.created_at))<=1 and di.state in (2,3,4),di.id,null)) 'D0沟通中ระหว่างเจรจา'
            ,count(if(datediff(current_date,date(di.created_at))<=1 and di.state=0,di.id,null)) 'D0未处理ยังไม่จัดการ'
            ,concat(round(
            (
            count(if(datediff(current_date,date(di.created_at))<=1 and di.state in (2,3,4),di.id,null))
            +count(if(datediff(current_date,date(di.created_at))<=1 and di.state=0,di.id,null))
            )/count(if(datediff(current_date,date(di.created_at))<=1,di.id,null))*100
                    ,2),'%') D0未处理完成占比

            ,count(if(datediff(current_date,date(di.created_at))=2,di.id,null)) D1任务量
            ,count(if(datediff(current_date,date(di.created_at))=2 and di.state=1,di.id,null)) D1已完成
            ,count(if(datediff(current_date,date(di.created_at))=2 and di.state in (2,3,4),di.id,null)) 'D1沟通中ระหว่างเจรจา'
            ,count(if(datediff(current_date,date(di.created_at))=2 and di.state=0,di.id,null)) 'D1未处理ยังไม่จัดการ'
            ,concat(round(
            (
            count(if(datediff(current_date,date(di.created_at))=2 and di.state in (2,3,4),di.id,null))
            +count(if(datediff(current_date,date(di.created_at))=2 and di.state=0,di.id,null))
            )/count(if(datediff(current_date,date(di.created_at))=2,di.id,null))*100
                    ,2),'%') D1未处理完成占比

            ,count(if(datediff(current_date,date(di.created_at))=3,di.id,null)) D2任务量
            ,count(if(datediff(current_date,date(di.created_at))=3 and di.state=1,di.id,null)) D2已完成
            ,count(if(datediff(current_date,date(di.created_at))=3 and di.state in (2,3,4),di.id,null)) 'D2沟通中ระหว่างเจรจา'
            ,count(if(datediff(current_date,date(di.created_at))=3 and di.state=0,di.id,null)) 'D2未处理ยังไม่จัดการ'
            ,concat(round(
            (
            count(if(datediff(current_date,date(di.created_at))=3 and di.state in (2,3,4),di.id,null))
            +count(if(datediff(current_date,date(di.created_at))=3 and di.state=0,di.id,null))
            )/count(if(datediff(current_date,date(di.created_at))=3,di.id,null))*100
                    ,2),'%') D2未处理完成占比

            ,count(if(datediff(current_date,date(di.created_at))=4,di.id,null)) D3任务量
            ,count(if(datediff(current_date,date(di.created_at))=4 and di.state=1,di.id,null)) D3已完成
            ,count(if(datediff(current_date,date(di.created_at))=4 and di.state in (2,3,4),di.id,null)) 'D3沟通中ระหว่างเจรจา'
            ,count(if(datediff(current_date,date(di.created_at))=4 and di.state=0,di.id,null)) 'D3未处理ยังไม่จัดการ'
            ,concat(round(
            (
            count(if(datediff(current_date,date(di.created_at))=4 and di.state in (2,3,4),di.id,null))
            +count(if(datediff(current_date,date(di.created_at))=4 and di.state=0,di.id,null))
            )/count(if(datediff(current_date,date(di.created_at))=4,di.id,null))*100
                    ,2),'%') D3未处理完成占比

            ,count(if(datediff(current_date,date(di.created_at)) in (5,6,7,8),di.id,null)) D4_7任务量
            ,count(if(datediff(current_date,date(di.created_at)) in (5,6,7,8) and di.state=1,di.id,null)) D4_7已完成
            ,count(if(datediff(current_date,date(di.created_at)) in (5,6,7,8) and di.state in (2,3,4),di.id,null)) 'D4_7沟通中ระหว่างเจรจา'
            ,count(if(datediff(current_date,date(di.created_at)) in (5,6,7,8) and di.state=0,di.id,null)) 'D4_7未处理ยังไม่จัดการ'
            ,concat(round(
            (
            count(if(datediff(current_date,date(di.created_at)) in (5,6,7,8) and di.state in (2,3,4),di.id,null))
            +count(if(datediff(current_date,date(di.created_at)) in (5,6,7,8) and di.state=0,di.id,null))
            )/count(if(datediff(current_date,date(di.created_at)) in (5,6,7,8),di.id,null))*100
                    ,2),'%') D4_7未处理完成占比

            ,count(if(datediff(current_date,date(di.created_at)) in (9,10,11,12,13,14,15,16),di.id,null)) D8_15任务量
            ,count(if(datediff(current_date,date(di.created_at)) in (9,10,11,12,13,14,15,16) and di.state=1,di.id,null)) D8_15已完成
            ,count(if(datediff(current_date,date(di.created_at)) in (9,10,11,12,13,14,15,16) and di.state in (2,3,4),di.id,null)) 'D8_15沟通中ระหว่างเจรจา'
            ,count(if(datediff(current_date,date(di.created_at)) in (9,10,11,12,13,14,15,16) and di.state=0,di.id,null)) 'D8_15未处理ยังไม่จัดการ'
            ,concat(round(
            (
            count(if(datediff(current_date,date(di.created_at)) in (9,10,11,12,13,14,15,16) and di.state in (2,3,4),di.id,null))
            +count(if(datediff(current_date,date(di.created_at)) in (9,10,11,12,13,14,15,16) and di.state=0,di.id,null))
            )/count(if(datediff(current_date,date(di.created_at)) in (9,10,11,12,13,14,15,16),di.id,null))*100
                    ,2),'%') D8_15未处理完成占比

            ,count(if(datediff(current_date,date(di.created_at))>=17,di.id,null)) 'D16+任务量'
            ,count(if(datediff(current_date,date(di.created_at))>=17 and di.state=1,di.id,null)) 'D16+已完成'
            ,count(if(datediff(current_date,date(di.created_at))>=17 and di.state in (2,3,4),di.id,null)) 'D16+沟通中ระหว่างเจรจา'
            ,count(if(datediff(current_date,date(di.created_at))>=17 and di.state=0,di.id,null)) 'D16+未处理ยังไม่จัดการ'
            ,concat(round(
            (
            count(if(datediff(current_date,date(di.created_at))>=17 and di.state in (2,3,4),di.id,null))
            +count(if(datediff(current_date,date(di.created_at))>=17 and di.state=0,di.id,null))
            )/count(if(datediff(current_date,date(di.created_at))>=17,di.id,null))*100
                    ,2),'%') 'D16+未处理完成占比'

        from
            (
                select
                    di.id
                    ,convert_tz(di.created_at,'+00:00','+07:00') created_at
                    ,di.pno
                    ,ddd.cn_element
                    ,pi.ticket_pickup_store_id
                    ,pi.client_id
                    ,cdt.state
                    ,cdt.organization_type
                    ,cdt.organization_id
                    ,cdt.vip_enable
                    ,cdt.service_type
                    ,convert_tz(cdt.updated_at,'+00:00','+07:00') updated_at
                    ,convert_tz(cdt.first_operated_at,'+00:00','+07:00') first_operated_at
                from fle_staging.diff_info di
                join fle_staging.parcel_info pi on di.pno=pi.pno
                left join fle_staging.customer_diff_ticket cdt on cdt.diff_info_id=di.id
                join dwm.dwd_dim_dict ddd on ddd.element=di.diff_marker_category and ddd.db='fle_staging' and ddd.tablename='diff_info' and ddd.fieldname='diff_marker_category'
                where
                    pi.created_at>=date_sub(current_date,interval 3 month)
                    and di.created_at<=date_sub(current_date,interval 7 hour)
                    and (pi.state=6 or (cdt.state=1 and date(convert_tz(cdt.updated_at,'+00:00','+07:00'))=date_sub(current_date,interval 1 day)))
                    and cdt.state in (0,1,2,3,4)
                    and (cdt.operator_id not in (10001,10000) or  cdt.operator_id is null)
            ) di
        left join fle_staging.sys_store ss on di.ticket_pickup_store_id=ss.id
        left join fle_staging.sys_store ss2 on di.organization_id=ss2.id
        left join fle_staging.customer_group_ka_relation cgk on cgk.ka_id=di.client_id and cgk.deleted=0
        left join fle_staging.customer_group cg on cg.id=cgk.customer_group_id
        group by 1,2,3
    ) a1
left join
    (
        select
            case
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('Bulky BD') then 'Bulky Business Development'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('Group VIP Customer') then 'Retail Management'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('LAZADA','TikTok','Shopee','KAM CN','THAI KAM') then 'PMD'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('FFM') then 'FFM'
              when di.organization_type=2 and di.vip_enable=0 then '总部cs'
              when ((di.organization_type=1 and (di.service_type != 3 or di.service_type is null) and di.vip_enable=0)
                    or (di.organization_type=1 and di.vip_enable=0 and di.service_type = 3)) then 'Mini CS'
            end 部门
            ,case when di.organization_type=2 and di.vip_enable=1 then cg.name
              when di.organization_type=2 and di.vip_enable=0 then '总部cs'
              when coalesce(ss.category,ss2.category) in (11) then 'FFM'
              when coalesce(ss.category,ss2.category) in (4,5,7) then 'SHOP'
              when coalesce(ss.category,ss2.category) in (1,9,10,13,14) then 'NW'
              when coalesce(ss.category,ss2.category) = 6 or (di.organization_type=1 and di.vip_enable=0 and di.service_type = 3) then 'FH'
              when coalesce(ss.category,ss2.category) in (8,12) then 'HUB'
            end as 处理组织
            ,di.CN_element
            ,count(di.id) 总任务量
        from
            (
                select
                    di.id
                    ,convert_tz(di.created_at,'+00:00','+07:00') created_at
                    ,di.pno
                    ,ddd.cn_element
                    ,pi.ticket_pickup_store_id
                    ,pi.client_id
                    ,cdt.state
                    ,cdt.organization_type
                    ,cdt.organization_id
                    ,cdt.vip_enable
                    ,cdt.service_type
                    ,convert_tz(cdt.updated_at,'+00:00','+07:00') updated_at
                    ,convert_tz(cdt.first_operated_at,'+00:00','+07:00') first_operated_at
                from fle_staging.diff_info di
                join fle_staging.parcel_info pi on di.pno=pi.pno
                left join fle_staging.customer_diff_ticket cdt on cdt.diff_info_id=di.id
                join dwm.dwd_dim_dict ddd on ddd.element=di.diff_marker_category and ddd.db='fle_staging' and ddd.tablename='diff_info' and ddd.fieldname='diff_marker_category'
                where
                    pi.created_at>=date_sub(current_date,interval 3 month)
                    and di.created_at<=date_sub(current_date,interval 7 hour)
#                     and (pi.state=6 or (cdt.state=1 and date(convert_tz(cdt.updated_at,'+00:00','+07:00'))=date_sub(current_date,interval 1 day)))
#                     and cdt.state = 0
                    and (cdt.operator_id not in (10001,10000) or  cdt.operator_id is null)
            )di
        left join fle_staging.sys_store ss on di.ticket_pickup_store_id=ss.id
        left join fle_staging.sys_store ss2 on di.organization_id=ss2.id
        left join fle_staging.customer_group_ka_relation cgk on cgk.ka_id=di.client_id and cgk.deleted=0
        left join fle_staging.customer_group cg on cg.id=cgk.customer_group_id
        group by 1,2,3
    ) a2 on a1.部门=a2.部门 and a1.处理组织 = a2.处理组织 and a1.CN_element = a2.CN_element
left join
    (
        select
            case
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('Bulky BD') then 'Bulky Business Development'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('Group VIP Customer') then 'Retail Management'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('LAZADA','TikTok','Shopee','KAM CN','THAI KAM') then 'PMD'
              when di.organization_type=2 and di.vip_enable=1 and cg.name in ('FFM') then 'FFM'
              when di.organization_type=2 and di.vip_enable=0 then '总部cs'
              when ((di.organization_type=1 and (di.service_type != 3 or di.service_type is null) and di.vip_enable=0)
                    or (di.organization_type=1 and di.vip_enable=0 and di.service_type = 3)) then 'Mini CS'
            end 部门
            ,case when di.organization_type=2 and di.vip_enable=1 then cg.name
              when di.organization_type=2 and di.vip_enable=0 then '总部cs'
              when coalesce(ss.category,ss2.category) in (11) then 'FFM'
              when coalesce(ss.category,ss2.category) in (4,5,7) then 'SHOP'
              when coalesce(ss.category,ss2.category) in (1,9,10,13,14) then 'NW'
              when coalesce(ss.category,ss2.category) = 6 or (di.organization_type=1 and di.vip_enable=0 and di.service_type = 3) then 'FH'
              when coalesce(ss.category,ss2.category) in (8,12) then 'HUB'
            end as 处理组织
            ,di.CN_element
            ,count(di.id) 昨日已完成任务量
        from
            (
                select
                    di.id
                    ,convert_tz(di.created_at,'+00:00','+07:00') created_at
                    ,di.pno
                    ,ddd.cn_element
                    ,pi.ticket_pickup_store_id
                    ,pi.client_id
                    ,cdt.state
                    ,cdt.organization_type
                    ,cdt.organization_id
                    ,cdt.vip_enable
                    ,cdt.service_type
                    ,convert_tz(cdt.updated_at,'+00:00','+07:00') updated_at
                    ,convert_tz(cdt.first_operated_at,'+00:00','+07:00') first_operated_at
                from fle_staging.diff_info di
                join fle_staging.parcel_info pi on di.pno=pi.pno
                left join fle_staging.customer_diff_ticket cdt on cdt.diff_info_id=di.id
                join dwm.dwd_dim_dict ddd on ddd.element=di.diff_marker_category and ddd.db='fle_staging' and ddd.tablename='diff_info' and ddd.fieldname='diff_marker_category'
                where
                    pi.created_at>=date_sub(current_date,interval 3 month)
                    and cdt.updated_at <= date_sub(current_date,interval 7 hour)
                    and cdt.updated_at >= date_sub(curdate(), interval 31 hour)
#                     and (pi.state=6 or (cdt.state=1 and date(convert_tz(cdt.updated_at,'+00:00','+07:00'))=date_sub(current_date,interval 1 day)))
#                     and cdt.state in (0,1,2,3,4)
                    and cdt.state = 1
                    and (cdt.operator_id not in (10001,10000) or  cdt.operator_id is null)
            )di
        left join fle_staging.sys_store ss on di.ticket_pickup_store_id=ss.id
        left join fle_staging.sys_store ss2 on di.organization_id=ss2.id
        left join fle_staging.customer_group_ka_relation cgk on cgk.ka_id=di.client_id and cgk.deleted=0
        left join fle_staging.customer_group cg on cg.id=cgk.customer_group_id
        group by 1,2,3
    ) a3 on a1.部门=a3.部门 and a1.处理组织 = a3.处理组织 and a1.CN_element = a3.CN_element;
;-- -. . -..- - / . -. - .-. -.--
select
    case
      when di.organization_type=2 and di.vip_enable=1 and cg.name in ('Bulky BD') then 'Bulky Business Development'
      when di.organization_type=2 and di.vip_enable=1 and cg.name in ('Group VIP Customer') then 'Retail Management'
      when di.organization_type=2 and di.vip_enable=1 and cg.name in ('LAZADA','TikTok','Shopee','KAM CN','THAI KAM') then 'PMD'
      when di.organization_type=2 and di.vip_enable=1 and cg.name in ('FFM') then 'FFM'
      when di.organization_type=2 and di.vip_enable=0 then '总部cs'
      when ((di.organization_type=1 and (di.service_type != 3 or di.service_type is null) and di.vip_enable=0)
            or (di.organization_type=1 and di.vip_enable=0 and di.service_type = 3)) then 'Mini CS'
    end '部门แผนกที่จัดการ'
    ,case when di.organization_type=2 and di.vip_enable=1 then cg.name
      when di.organization_type=2 and di.vip_enable=0 then '总部cs'
      when coalesce(ss.category,ss2.category) in (11) then 'FFM'
      when coalesce(ss.category,ss2.category) in (4,5,7) then 'SHOP'
      when coalesce(ss.category,ss2.category) in (1,9,10,13,14) then 'NW'
      when coalesce(ss.category,ss2.category) = 6 or (di.organization_type=1 and di.vip_enable=0 and di.service_type = 3) then 'FH'
      when coalesce(ss.category,ss2.category) in (8,12) then 'HUB'
    end as '处理组织ทีมที่จัดการ'
    ,ss.name '问题件待处理网点สาขาที่จัดการ'
    ,di.pno '包裹号เลขพัสดุ'
    ,di.client_id
    ,di.pi_created_at '揽收时间เวลารับงาน'
    ,case di.article_category
        when 0 then '文件/document'
        when 1 then '干燥食品/dry food'
        when 2 then '日用品/daily necessities'
        when 3 then '数码产品/digital product'
        when 4 then '衣物/clothes'
        when 5 then '书刊/Books'
        when 6 then '汽车配件/auto parts'
        when 7 then '鞋包/shoe bag'
        when 8 then '体育器材/sports equipment'
        when 9 then '化妆品/cosmetics'
        when 10 then '家居用具/Houseware'
        when 11 then '水果/fruit'
        when 99 then '其它/other'
    end '包裹类型ประเภทพัสดุ'
    ,di.customary_pno '退件前单号'
    ,dt.store_name '当前所处网点'
    ,dt.piece_name '当前所处片区'
    ,dt.region_name '当前所处大区'
    ,di.CN_element  '问题件类型ประเภทคำร้อง'
    ,di.created_at '问题件生成时间เวลาที่ติดปัญหาเข้าระบบ'
    ,case di.state
     when 0 then '客服未处理'
     when 1 then '已处理完毕'
     when 2 then '正在沟通中'
     when 3 then '财务驳回'
     when 4 then '客户未处理'
     when 5 then '转交闪速系统'
     when 6 then '转交QAQC'
     end as '处理状态สถานะจัดการปัจจุบัน'
    ,datediff(current_date,date(di.created_at)) '问题件生成天数'
from
    (
        select
            di.id
            ,convert_tz(di.created_at,'+00:00','+07:00') created_at
            ,convert_tz(pi.created_at,'+00:00','+07:00') pi_created_at
            ,di.pno
            ,ddd.cn_element
            ,pi.ticket_pickup_store_id
            ,pi.client_id
            ,cdt.state
            ,cdt.organization_type
            ,cdt.organization_id
            ,cdt.vip_enable
            ,cdt.service_type
            ,pi.customary_pno
            ,pi.article_category
            ,pd.last_valid_store_id
            ,convert_tz(cdt.updated_at,'+00:00','+07:00') updated_at
            ,convert_tz(cdt.first_operated_at,'+00:00','+07:00') first_operated_at
        from fle_staging.diff_info di
        join fle_staging.parcel_info pi on di.pno=pi.pno
        left join fle_staging.customer_diff_ticket cdt on cdt.diff_info_id=di.id
        join dwm.dwd_dim_dict ddd on ddd.element=di.diff_marker_category and ddd.db='fle_staging' and ddd.tablename='diff_info' and ddd.fieldname='diff_marker_category'
        left join bi_pro.parcel_detail pd on pd.pno = pi.pno
        where
            pi.created_at>=date_sub(current_date,interval 3 month)
            and di.created_at<=date_sub(current_date,interval 7 hour)
            and (pi.state=6 or (cdt.state=1 and date(convert_tz(cdt.updated_at,'+00:00','+07:00'))=date_sub(current_date,interval 1 day)))
            and cdt.state in (0,2,3,4)
            and (cdt.operator_id not in (10001,10000) or  cdt.operator_id is null)
    )di
left join fle_staging.sys_store ss on di.ticket_pickup_store_id=ss.id
left join fle_staging.sys_store ss2 on di.organization_id=ss2.id
left join fle_staging.customer_group_ka_relation cgk on cgk.ka_id=di.client_id and cgk.deleted=0
left join fle_staging.customer_group cg on cg.id=cgk.customer_group_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = di.last_valid_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
group by 1,2,3,4,5;
;-- -. . -..- - / . -. - .-. -.--
select
    pr.pno
from rot_pro.parcel_route pr
join fle_staging.parcel_info pi on pi.pno = pr.pno
where
    pr.routed_at > '2023-11-14 17:00:00'
    and pr.routed_at < '2023-11-15 17:00:00'
    and pr.route_action = 'DELIVERY_MARKER'
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
    t.date 日期
    ,t.客户类型
    ,t.client_id
    ,t.归属部门
    ,t.归属网点
    ,t.销售代表
    ,t.项目经理
    ,t.运费结算方式
    ,t.目前下单状态
    ,t.账号创建日期
    ,11d.days_count 11月寄件天数
    ,pi.pick_count 当日揽收数量
    ,shd.should_count 当日揽收数量
    ,scan.scan_count 当日交接量
    ,scan.cod_scan_count 当日COD交接量
    ,rej.rej_count 当日标记拒收数量
    ,rej.cod_rej_count 当日COD标记拒收数量
    ,rej.reurn_reject_count 当日拒收且生成退件数量
    ,rej.cod_reurn_reject_count 当日COD拒收且生成退件数量
    ,rej.no_buy_count '拒收原因为“未购买”量'
    ,rej.cod_no_buy_count 'COD拒收原因为“未购买”量'
    ,rej2.other_reason_count 当日标记其他原因
    ,rej2.cod_other_reason_count 当日COD标记其他原因
    ,sign.sign_count 当日妥投数量
    ,sign.cod_sign_count 当日COD妥投数量
from
    (
        select
            c.*
            ,d.date
        from
            (
                select
                     t.client_id
                    ,'KA' 客户类型
                    ,if(kp.forbid_call_order = 0, '否', '是') 目前下单状态
                    ,sd.name 归属部门
                    ,ss2.name 归属网点
                    ,kp.staff_info_name 销售代表
                    ,si.name 项目经理
                    ,case kp.settlement_category
                        when 1 then '现结'
                        when 2 then '定结'
                    end  运费结算方式
                    ,date(convert_tz(kp.created_at, '+00:00', '+07:00')) 账号创建日期
                from fle_staging.ka_profile kp
                join tmpale.tmp_th_client_lj_1213 t on t.client_id = kp.id
                left join fle_staging.sys_department sd on sd.id = kp.department_id
                left join fle_staging.sys_store ss2 on ss2.id = kp.store_id
                left join fle_staging.staff_info si on si.id = kp.project_manager_id

                union all

                select
                   t.client_id
                    ,'小c' 客户类型
                    ,if(ui.forbid_call_order = 0, '否', '是') 目前下单状态
                    ,'' 归属部门
                    ,'' 归属网点
                    ,'' 销售代表
                    ,'' 项目经理
                    ,'现结' 运费结算方式
                    ,date(convert_tz(ui.created_at, '+00:00', '+07:00')) 账号创建日期
                from fle_staging.user_info ui
                join tmpale.tmp_th_client_lj_1213 t on t.client_id = ui.id
            ) c
        cross join
            (
                select
                    ot.date
                from tmpale.ods_th_dim_date ot
                where
                    ot.date >= '2023-11-01'
                    and ot.date < '2023-12-01'
            ) d
    ) t
left join
    ( -- 揽收
        select
            t.client_id
            ,date(convert_tz(pi.created_at, '+00:00', '+07:00')) pick_date
            ,count(distinct pi.pno) pick_count
        from fle_staging.parcel_info pi
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
        where
            pi.created_at > '2023-10-31 17:00:00'
            and pi.created_at < '2023-11-30 17:00:00'
            and pi.state < 9
        group by 1,2
    ) pi on pi.client_id = t.client_id and pi.pick_date = t.date
left join
    (
        select
            t.client_id
            ,11d.stat_date
            ,count(distinct 11d.pno) should_count
           -- ,count(distinct if(11d.handover_scan_route_at != '1970-01-01 00:00:00', 11d.pno, null)) handover_count
        from bi_pro.dc_should_delivery_2023_11 11d
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = 11d.client_id
        group by 1,2
    ) shd on shd.client_id = t.client_id and shd.stat_date = t.date
left join
    (
        select
            date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pr_date
            ,t.client_id
            ,count(distinct pr.pno) scan_count
            ,count(distinct if(pi.cod_enabled = 1, pr.pno, null)) cod_scan_count
            ,count(distinct if(pr.marker_category = 2, pr.pno, null)) rej_count
            ,count(distinct if(pr.marker_category = 2 and pi.cod_enabled = 1, pr.pno, null)) cod_rej_count
            ,count(distinct if(pr.marker_category = 2 and json_extract(pr.extra_value, '$.rejectionCategory') = 1, pr.pno, null)) no_buy_count
            ,count(distinct if(pr.marker_category = 2 and json_extract(pr.extra_value, '$.rejectionCategory') = 1 and pi.cod_enabled = 1, pr.pno, null)) cod_no_buy_count
            ,count(distinct if(pr.marker_category = 2 and pi.state = 7 and pi2.created_at < date_add(date(convert_tz(pr.routed_at, '+00:00', '+07:00')), interval 17 hour) and pi2.created_at >= date_sub(date(convert_tz(pr.routed_at, '+00:00', '+07:00')), interval 7 hour), pi.pno, null)) reurn_reject_count
            ,count(distinct if(pr.marker_category = 2 and pi.state = 7 and pi2.created_at < date_add(date(convert_tz(pr.routed_at, '+00:00', '+07:00')), interval 17 hour) and pi2.created_at >= date_sub(date(convert_tz(pr.routed_at, '+00:00', '+07:00')), interval 7 hour) and pi.cod_enabled = 1, pi.pno, null)) cod_reurn_reject_count
        from rot_pro.parcel_route pr
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
        left join fle_staging.parcel_info pi2 on pi2.pno = pi.returned_pno
        where
            pr.routed_at > '2023-10-31 17:00:00'
            and pr.routed_at < '2023-11-30 17:00:00'
            and pr.route_action = 'DELIVERY_MARKER'
        group by 1,2
    ) rej on rej.client_id = t.client_id and rej.pr_date = t.date
left join
    (
        select
            date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pr_date
            ,t.client_id
            ,count(distinct pr.pno) scan_count
            ,count(distinct if(pi.cod_enabled = 1, pr.pno, null)) cod_scan_count
        from rot_pro.parcel_route pr
        left join fle_staging.parcel_info pi on pi.pno = pr.pno
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
        where
            pr.routed_at > '2023-10-31 17:00:00'
            and pr.routed_at < '2023-11-30 17:00:00'
            and pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
        group by 1,2
    ) scan on scan.client_id = t.client_id and scan.pr_date = t.date
left join
    (
        select
           t1.client_id
            ,t1.pr_date
            ,count(distinct t1.pno) other_reason_count
            ,count(distinct if(t1.cod_enabled = 1, t1.pno, null)) cod_other_reason_count
        from
           (
                select
                    date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pr_date
                    ,t.client_id
                    ,pr.pno
                    ,pi.cod_enabled
                from rot_pro.parcel_route pr
                left join fle_staging.parcel_info pi on pi.pno = pr.pno
                join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
                where
                    pr.routed_at > '2023-10-31 17:00:00'
                    and pr.routed_at < '2023-11-30 17:00:00'
                    and pr.marker_category = 2
                    and ( json_extract(pr.extra_value, '$.rejectionCategory') > 1  or json_extract(pr.extra_value, '$.rejectionCategory') is null )
                group by 1,2,3
           ) t1
        left join
            (
                select
                    date(convert_tz(pr.routed_at, '+00:00', '+07:00')) pr_date
                    ,t.client_id
                    ,pr.pno
                from rot_pro.parcel_route pr
                left join fle_staging.parcel_info pi on pi.pno = pr.pno
                join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
                where
                    pr.routed_at > '2023-10-31 17:00:00'
                    and pr.routed_at < '2023-11-30 17:00:00'
                    and pr.marker_category = 2
                    and json_extract(pr.extra_value, '$.rejectionCategory') = 1
                group by 1,2,3
            ) t2 on t1.client_id = t2.client_id and t1.pr_date = t2.pr_date and t1.pno = t2.pno
        where
            t2.pno is null
        group by 1,2
    ) rej2 on rej2.client_id = t.client_id and rej2.pr_date = t.date
left join
    (
        select
            t.client_id
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
            ,count(distinct pi.pno) sign_count
            ,count(distinct if(pi.cod_enabled = 1, pi.pno, null)) cod_sign_count
        from fle_staging.parcel_info pi
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
        where
            pi.finished_at > '2023-10-31 17:00:00'
            and pi.finished_at < '2023-11-30 17:00:00'
            and pi.state = 5
        group by 1,2
    ) sign on sign.client_id = t.client_id and sign.fin_date = t.date
left join
    (
        select
            pi.client_id
            ,count(distinct date(convert_tz(pi.created_at, '+00:00', '+07:00'))) days_count
        from fle_staging.parcel_info pi
        join tmpale.tmp_th_client_lj_1213 t on t.client_id = pi.client_id
        where
            pi.created_at >= '2023-10-31 17:00:00'
            and pi.created_at < '2023-11-30 17:00:00'
            and pi.state < 9
        group by 1
    ) 11d on 11d.client_id = t.client_id;
;-- -. . -..- - / . -. - .-. -.--
select
    pr.pno
from rot_pro.parcel_route pr
join fle_staging.parcel_info pi on pi.pno = pr.pno
where
    pr.routed_at > '2023-11-14 17:00:00'
    and pr.routed_at < '2023-11-15 17:00:00'
    and pr.route_action = 'DELIVERY_MARKER'
    and pi.client_id = 'CAZ5422'
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
    pi.pno
from fle_staging.parcel_info pi
where
    pi.client_id = 'CAZ5422'
    and pi.finished_at >= '2023-11-14 17:00:00'
    and pi.finished_at < '2023-11-15 17:00:00'
    and pi.state = 5;
;-- -. . -..- - / . -. - .-. -.--
select
    a2.id
    ,a2.pno
    ,a2.store_name 网点
    ,if(a2.rk = 1, datediff(a2.min_created_at, a2.begin_time), datediff(a2.end_time, a2.begin_time))  停留时长
from
    (
        select
            a1.id
            ,a1.pno
            ,a1.min_created_at
            ,pssn.store_name
            ,coalesce(pssn.van_arrived_at, pssn.first_valid_routed_at) begin_time
            ,coalesce(pssn.van_left_at, pssn.last_valid_routed_at) end_time
            ,row_number() over (partition by a1.id order by pssn.valid_store_order desc ) rk
        from
            (
                select
                    plt.pno
                    ,plt.id
                    ,min(plt.created_at) min_created_at
                from bi_pro.parcel_lose_task plt
                where
                    plt.source = 11
                    and plt.state < 5
                group by 1,2
            ) a1
        left join dw_dmd.parcel_store_stage_new pssn on pssn.pno = a1.pno and pssn.valid_store_order is not null and pssn.first_valid_routed_at < a1.min_created_at
    ) a2;
;-- -. . -..- - / . -. - .-. -.--
select
    a2.id
    ,a2.pno
    ,a2.store_name 网点
    ,if(a2.rk = 1, timestampdiff(hour, a2.begin_time, a2.min_created_at)/24, timestampdiff(hour, a2.begin_time, a2.end_time)/24) 停留时长
from
    (
        select
            a1.id
            ,a1.pno
            ,a1.min_created_at
            ,pssn.store_name
            ,coalesce(pssn.van_arrived_at, pssn.first_valid_routed_at) begin_time
            ,coalesce(pssn.van_left_at, pssn.last_valid_routed_at) end_time
            ,row_number() over (partition by a1.id order by pssn.valid_store_order desc ) rk
        from
            (
                select
                    plt.pno
                    ,plt.id
                    ,min(plt.created_at) min_created_at
                from bi_pro.parcel_lose_task plt
                where
                    plt.source = 11
                    and plt.state < 5
                group by 1,2
            ) a1
        left join dw_dmd.parcel_store_stage_new pssn on pssn.pno = a1.pno and pssn.valid_store_order is not null and pssn.first_valid_routed_at < a1.min_created_at
    ) a2;
;-- -. . -..- - / . -. - .-. -.--
select
    plt.id
    ,plt.pno
from rot_pro.parcel_route pr
join bi_pro.parcel_lose_task plt on plt.pno = pr.pno and plt.source = 11 and plt.state < 5
where
    pr.route_action = 'DELIVERY_CONFIRM'
    and pr.store_id = 'TH02030307'
group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
    pct.parcel_created_at
    ,plt.updated_at
    ,pct.client_id
    ,case pct.self_claim
        when 1 then '是'
        when 0 then '否'
    end 自主理赔
    ,case plt.duty_result
        when 1 then '丢失'
        when 2 then '破损'
        when 3 then '超时效'
    end 判责类型
    ,oi.remark
    ,t2.t_value 判责原因
    ,pct.area
    ,group_concat(distinct ss.name) 判责网点
from bi_pro.parcel_claim_task pct
join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = pct.client_id and bc.client_name = 'shein'
left join bi_pro.parcel_lose_task plt on plt.id = pct.lose_task_id
left join fle_staging.parcel_info pi on pi.pno = pct.pno
left join fle_staging.order_info oi on oi.pno = if(pi.returned = 1, pi.customary_pno, pi.pno)
left join bi_pro.parcel_lose_responsible plr on plr.lose_task_id = pct.lose_task_id
left join fle_staging.sys_store ss on ss.id = plr.store_id
left join bi_pro.translations t2 on t2.t_key = plt.duty_reasons and  t2.lang ='zh-CN'
where
    pct.state = 6
    and pct.updated_at > date_sub(curdate(), interval 1 month)
    and oi.pno = 'TH01014ZEDH69C';
;-- -. . -..- - / . -. - .-. -.--
select
    oi.pno
    ,oi.remark
from fle_staging.order_info oi
where
    oi.pno = 'TH01014ZEDH69C';
;-- -. . -..- - / . -. - .-. -.--
select
    oi.pno
    ,oi.remark
    ,substring_index(oi.remark, ',', 1)
from fle_staging.order_info oi
where
    oi.pno = 'TH01014ZEDH69C';
;-- -. . -..- - / . -. - .-. -.--
select
    oi.pno
    ,oi.remark
    ,substring_index(oi.remark, '，', 1)
from fle_staging.order_info oi
where
    oi.pno = 'TH01014ZEDH69C';
;-- -. . -..- - / . -. - .-. -.--
select
    oi.pno
    ,oi.remark
    ,substring_index(substring_index(oi.remark, '，', 1), '：', -1)
from fle_staging.order_info oi
where
    oi.pno = 'TH01014ZEDH69C';
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
            pct.id
            ,pct.parcel_created_at
            ,plt.updated_at
            ,pct.client_id
            ,pct.pno
        #     ,case pct.self_claim
        #         when 1 then '是'
        #         when 0 then '否'
        #     end 自主理赔
            ,pct.self_claim
            ,pct.duty_result
        #     ,case plt.duty_result
        #         when 1 then '丢失'
        #         when 2 then '破损'
        #         when 3 then '超时效'
        #     end 判责类型
            ,substring_index(substring_index(oi.remark, '，', 1), '：', -1) COGS
            ,t2.t_value reasons
            ,pct.area
            ,group_concat(distinct ss.name) duty_stores

        from bi_pro.parcel_claim_task pct
        join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = pct.client_id and bc.client_name = 'shein'
        left join bi_pro.parcel_lose_task plt on plt.id = pct.lose_task_id
        left join fle_staging.parcel_info pi on pi.pno = pct.pno
        left join fle_staging.order_info oi on oi.pno = if(pi.returned = 1, pi.customary_pno, pi.pno)
        left join bi_pro.parcel_lose_responsible plr on plr.lose_task_id = pct.lose_task_id
        left join fle_staging.sys_store ss on ss.id = plr.store_id
        left join bi_pro.translations t2 on t2.t_key = plt.duty_reasons and  t2.lang ='zh-CN'
        where
            pct.state = 6
            and pct.updated_at > date_sub(curdate(), interval 1 month)
        group by 1
    )
select
    t1.parcel_created_at 揽收时间
    ,t1.updated_at 判责时间
    ,t1.client_id 客户ID
    ,t1.pno 运单号
    ,case t1.self_claim
        when 1 then '是'
        when 0 then '否'
    end 自主理赔
    ,case t1.duty_result
        when 1 then '丢失'
        when 2 then '破损'
        when 3 then '超时效'
    end 判责类型
    ,json_extract(pcn.neg_result,'$.money') 理赔金额
    ,t1.COGS
    ,t1.duty_stores 判责网点
    ,t1.reasons 判责原因
    ,t1.area 区域
from t t1
left join
    (
        select
            pcn.task_id
            ,pcn.neg_result
            ,row_number() over (partition by pcn.task_id order by pcn.created_at desc ) rk
        from bi_pro.parcel_claim_negotiation pcn
        join t t1 on t1.id = pcn.task_id
        where
            pcn.created_at > date_sub(curdate(), interval 1 month)
    ) pcn on pcn.task_id = t1.id and pcn.rk = 1;
;-- -. . -..- - / . -. - .-. -.--
select
            pct.id
            ,pct.parcel_created_at
            ,plt.updated_at
            ,pct.client_id
            ,pct.pno
        #     ,case pct.self_claim
        #         when 1 then '是'
        #         when 0 then '否'
        #     end 自主理赔
            ,pct.self_claim
            ,pct.duty_result
        #     ,case plt.duty_result
        #         when 1 then '丢失'
        #         when 2 then '破损'
        #         when 3 then '超时效'
        #     end 判责类型
            ,substring_index(substring_index(oi.remark, '，', 1), '：', -1) COGS
            ,t2.t_value reasons
            ,pct.area
            ,group_concat(distinct ss.name) duty_stores

        from bi_pro.parcel_claim_task pct
        join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = pct.client_id and bc.client_name = 'shein'
        left join bi_pro.parcel_lose_task plt on plt.id = pct.lose_task_id
        left join fle_staging.parcel_info pi on pi.pno = pct.pno
        left join fle_staging.order_info oi on oi.pno = if(pi.returned = 1, pi.customary_pno, pi.pno)
        left join bi_pro.parcel_lose_responsible plr on plr.lose_task_id = pct.lose_task_id
        left join fle_staging.sys_store ss on ss.id = plr.store_id
        left join bi_pro.translations t2 on t2.t_key = plt.duty_reasons and  t2.lang ='zh-CN'
        where
            pct.state = 6
            and pct.updated_at > date_sub(curdate(), interval 1 month)
        group by 1;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
            pct.id
            ,pct.parcel_created_at
            ,plt.updated_at
            ,pct.client_id
            ,pct.pno
        #     ,case pct.self_claim
        #         when 1 then '是'
        #         when 0 then '否'
        #     end 自主理赔
            ,pct.self_claim
            ,pct.duty_result
        #     ,case plt.duty_result
        #         when 1 then '丢失'
        #         when 2 then '破损'
        #         when 3 then '超时效'
        #     end 判责类型
            ,substring_index(substring_index(oi.remark, '，', 1), '：', -1) COGS
            ,t2.t_value reasons
            ,pct.area
            ,group_concat(distinct ss.name) duty_stores

        from bi_pro.parcel_claim_task pct
        join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = pct.client_id and bc.client_name = 'shein'
        left join bi_pro.parcel_lose_task plt on plt.id = pct.lose_task_id
        left join fle_staging.parcel_info pi on pi.pno = pct.pno
        left join fle_staging.order_info oi on oi.pno = if(pi.returned = 1, pi.customary_pno, pi.pno)
        left join bi_pro.parcel_lose_responsible plr on plr.lose_task_id = pct.lose_task_id
        left join fle_staging.sys_store ss on ss.id = plr.store_id
        left join bi_pro.translations t2 on t2.t_key = plt.duty_reasons and  t2.lang ='zh-CN'
        where
            pct.updated_at > date_sub(curdate(), interval 2 month)
        group by 1
    )
select
    t1.parcel_created_at 揽收时间
    ,t1.updated_at 判责时间
    ,t1.client_id 客户ID
    ,t1.pno 运单号
    ,case t1.self_claim
        when 1 then '是'
        when 0 then '否'
    end 自主理赔
    ,case t1.duty_result
        when 1 then '丢失'
        when 2 then '破损'
        when 3 then '超时效'
    end 判责类型
    ,json_extract(pcn.neg_result,'$.money') 理赔金额
    ,t1.COGS
    ,t1.duty_stores 判责网点
    ,t1.reasons 判责原因
    ,t1.area 区域
from t t1
left join
    (
        select
            pcn.task_id
            ,pcn.neg_result
            ,row_number() over (partition by pcn.task_id order by pcn.created_at desc ) rk
        from bi_pro.parcel_claim_negotiation pcn
        join t t1 on t1.id = pcn.task_id
        where
            pcn.created_at > date_sub(curdate(), interval 1 month)
    ) pcn on pcn.task_id = t1.id and pcn.rk = 1;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
            pct.id
            ,pct.parcel_created_at
            ,plt.updated_at
            ,pct.client_id
            ,pct.pno
        #     ,case pct.self_claim
        #         when 1 then '是'
        #         when 0 then '否'
        #     end 自主理赔
            ,pct.self_claim
            ,pct.duty_result
        #     ,case plt.duty_result
        #         when 1 then '丢失'
        #         when 2 then '破损'
        #         when 3 then '超时效'
        #     end 判责类型
            ,substring_index(substring_index(oi.remark, '，', 1), '：', -1) COGS
            ,t2.t_value reasons
            ,pct.area
            ,group_concat(distinct ss.name) duty_stores

        from bi_pro.parcel_claim_task pct
        join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = pct.client_id and bc.client_name = 'shein'
        left join bi_pro.parcel_lose_task plt on plt.id = pct.lose_task_id
        left join fle_staging.parcel_info pi on pi.pno = pct.pno
        left join fle_staging.order_info oi on oi.pno = if(pi.returned = 1, pi.customary_pno, pi.pno)
        left join bi_pro.parcel_lose_responsible plr on plr.lose_task_id = pct.lose_task_id
        left join fle_staging.sys_store ss on ss.id = plr.store_id
        left join bi_pro.translations t2 on t2.t_key = plt.duty_reasons and  t2.lang ='zh-CN'
        where
            pct.updated_at > date_sub(curdate(), interval 1 month)
        group by 1
    )
select
    t1.parcel_created_at 揽收时间
    ,t1.updated_at 判责时间
    ,t1.client_id 客户ID
    ,t1.pno 运单号
    ,case t1.self_claim
        when 1 then '是'
        when 0 then '否'
    end 自主理赔
    ,case t1.duty_result
        when 1 then '丢失'
        when 2 then '破损'
        when 3 then '超时效'
    end 判责类型
    ,json_extract(pcn.neg_result,'$.money') 理赔金额
    ,t1.COGS
    ,t1.duty_stores 判责网点
    ,t1.reasons 判责原因
    ,t1.area 区域
from t t1
left join
    (
        select
            pcn.task_id
            ,pcn.neg_result
            ,row_number() over (partition by pcn.task_id order by pcn.created_at desc ) rk
        from bi_pro.parcel_claim_negotiation pcn
        join t t1 on t1.id = pcn.task_id
        where
            pcn.created_at > date_sub(curdate(), interval 2 month)
    ) pcn on pcn.task_id = t1.id and pcn.rk = 1;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
            pct.id
            ,pct.parcel_created_at
            ,plt.updated_at
            ,pct.client_id
            ,pct.pno
        #     ,case pct.self_claim
        #         when 1 then '是'
        #         when 0 then '否'
        #     end 自主理赔
            ,pct.self_claim
            ,pct.duty_result
        #     ,case plt.duty_result
        #         when 1 then '丢失'
        #         when 2 then '破损'
        #         when 3 then '超时效'
        #     end 判责类型
            ,substring_index(substring_index(oi.remark, '，', 1), '：', -1) COGS
            ,t2.t_value reasons
            ,pct.area
            ,group_concat(distinct ss.name) duty_stores

        from bi_pro.parcel_claim_task pct
        join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = pct.client_id and bc.client_name = 'shein'
        left join bi_pro.parcel_lose_task plt on plt.id = pct.lose_task_id
        left join fle_staging.parcel_info pi on pi.pno = pct.pno
        left join fle_staging.order_info oi on oi.pno = if(pi.returned = 1, pi.customary_pno, pi.pno)
        left join bi_pro.parcel_lose_responsible plr on plr.lose_task_id = pct.lose_task_id
        left join fle_staging.sys_store ss on ss.id = plr.store_id
        left join bi_pro.translations t2 on t2.t_key = plt.duty_reasons and  t2.lang ='zh-CN'
        where
            plt.updated_at > date_sub(curdate(), interval 1 month)
        group by 1
    )
select
    t1.parcel_created_at 揽收时间
    ,t1.updated_at 判责时间
    ,t1.client_id 客户ID
    ,t1.pno 运单号
    ,case t1.self_claim
        when 1 then '是'
        when 0 then '否'
    end 自主理赔
    ,case t1.duty_result
        when 1 then '丢失'
        when 2 then '破损'
        when 3 then '超时效'
    end 判责类型
    ,json_extract(pcn.neg_result,'$.money') 理赔金额
    ,t1.COGS
    ,t1.duty_stores 判责网点
    ,t1.reasons 判责原因
    ,t1.area 区域
from t t1
left join
    (
        select
            pcn.task_id
            ,pcn.neg_result
            ,row_number() over (partition by pcn.task_id order by pcn.created_at desc ) rk
        from bi_pro.parcel_claim_negotiation pcn
        join t t1 on t1.id = pcn.task_id
        where
            pcn.created_at > date_sub(curdate(), interval 2 month)
    ) pcn on pcn.task_id = t1.id and pcn.rk = 1;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
            pct.id
            ,pct.parcel_created_at
            ,plt.updated_at
            ,pct.client_id
            ,pct.pno
        #     ,case pct.self_claim
        #         when 1 then '是'
        #         when 0 then '否'
        #     end 自主理赔
            ,pct.self_claim
            ,pct.duty_result
        #     ,case plt.duty_result
        #         when 1 then '丢失'
        #         when 2 then '破损'
        #         when 3 then '超时效'
        #     end 判责类型
            ,substring_index(substring_index(oi.remark, '，', 1), '：', -1) COGS
            ,t2.t_value reasons
            ,pct.area
            ,group_concat(distinct ss.name) duty_stores

        from bi_pro.parcel_claim_task pct
        join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = pct.client_id and bc.client_name = 'shein'
        left join bi_pro.parcel_lose_task plt on plt.id = pct.lose_task_id
        left join fle_staging.parcel_info pi on pi.pno = pct.pno
        left join fle_staging.order_info oi on oi.pno = if(pi.returned = 1, pi.customary_pno, pi.pno)
        left join bi_pro.parcel_lose_responsible plr on plr.lose_task_id = pct.lose_task_id
        left join fle_staging.sys_store ss on ss.id = plr.store_id
        left join bi_pro.translations t2 on t2.t_key = plt.duty_reasons and  t2.lang ='zh-CN'
        where
            plt.updated_at >= date_sub(curdate(), interval 40 day)
            and plt.updated_at < curdate()
        group by 1
    )
select
    t1.parcel_created_at 揽收时间
    ,t1.updated_at 判责时间
    ,t1.client_id 客户ID
    ,t1.id task_id
    ,t1.pno 运单号
    ,case t1.self_claim
        when 1 then '是'
        when 0 then '否'
    end 自主理赔
    ,case t1.duty_result
        when 1 then '丢失'
        when 2 then '破损'
        when 3 then '超时效'
    end 判责类型
    ,t1.COGS
    ,t1.duty_stores 判责网点
    ,t1.reasons 判责原因
    ,t1.area 区域
    ,date(t1.updated_at) p_date
from t t1;
;-- -. . -..- - / . -. - .-. -.--
select
    t.*
    ,a1.money 待理赔金额
from tmpale.tmp_th_qaqc_claim t
left join
    (
        select
            pcn.task_id
            ,json_extract(pcn.neg_result,'$.money') money
            ,row_number() over (partition by pcn.task_id order by pcn.created_at ) rk
        from bi_pro.parcel_claim_negotiation pcn
        join tmpale.tmp_th_qaqc_claim t on t.task_id = pcn.task_id
    ) a1 on a1.task_id = t.task_id and a1.rk = 1;
;-- -. . -..- - / . -. - .-. -.--
select
    a2.id
    ,a2.pno
    ,a2.store_name 网点
    ,a2.client_id
    ,if(a2.rk = 1, timestampdiff(hour, a2.begin_time, a2.min_created_at)/24, timestampdiff(hour, a2.begin_time, a2.end_time)/24) 停留时长
from
    (
        select
            a1.id
            ,a1.pno
            ,a1.min_created_at
            ,pssn.store_name
            ,a1.client_id
            ,coalesce(pssn.van_arrived_at, pssn.first_valid_routed_at) begin_time
            ,coalesce(pssn.van_left_at, pssn.last_valid_routed_at) end_time
            ,row_number() over (partition by a1.id order by pssn.valid_store_order desc ) rk
        from
            (
                select
                    plt.pno
                    ,plt.id
                    ,plt.client_id
                    ,min(plt.created_at) min_created_at
                from bi_pro.parcel_lose_task plt
                where
                    plt.source = 11
                    and plt.state < 5
                group by 1,2,3
            ) a1
        left join dw_dmd.parcel_store_stage_new pssn on pssn.pno = a1.pno and pssn.valid_store_order is not null and pssn.first_valid_routed_at < a1.min_created_at
    ) a2;
;-- -. . -..- - / . -. - .-. -.--
select
    a2.id
    ,a2.pno
    ,a2.store_name 网点
    ,a2.client_id
    ,bc.client_name
    ,if(a2.rk = 1, timestampdiff(hour, a2.begin_time, a2.min_created_at)/24, timestampdiff(hour, a2.begin_time, a2.end_time)/24) 停留时长
from
    (
        select
            a1.id
            ,a1.pno
            ,a1.min_created_at
            ,pssn.store_name
            ,a1.client_id
            ,coalesce(pssn.van_arrived_at, pssn.first_valid_routed_at) begin_time
            ,coalesce(pssn.van_left_at, pssn.last_valid_routed_at) end_time
            ,row_number() over (partition by a1.id order by pssn.valid_store_order desc ) rk
        from
            (
                select
                    plt.pno
                    ,plt.id
                    ,plt.client_id
                    ,min(plt.created_at) min_created_at
                from bi_pro.parcel_lose_task plt
                where
                    plt.source = 11
                    and plt.state < 5
                group by 1,2,3
            ) a1
        left join dw_dmd.parcel_store_stage_new pssn on pssn.pno = a1.pno and pssn.valid_store_order is not null and pssn.first_valid_routed_at < a1.min_created_at
    ) a2
left join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = a2.client_id;
;-- -. . -..- - / . -. - .-. -.--
select
    plt.id
    ,plt.pno
from rot_pro.parcel_route pr
join bi_pro.parcel_lose_task plt on plt.pno = pr.pno and plt.source = 11 and plt.state in (1,2,3,4)
where
    pr.route_action = 'DELIVERY_CONFIRM'
    and pr.store_id = 'TH02030307'
group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select  * from tmpale.tmp_th_qaqc_claim;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
            pct.id
            ,pct.parcel_created_at
            ,plt.updated_at
            ,pct.client_id
            ,pct.pno
        #     ,case pct.self_claim
        #         when 1 then '是'
        #         when 0 then '否'
        #     end 自主理赔
            ,pct.self_claim
            ,pct.duty_result
        #     ,case plt.duty_result
        #         when 1 then '丢失'
        #         when 2 then '破损'
        #         when 3 then '超时效'
        #     end 判责类型
            ,substring_index(substring_index(oi.remark, '，', 1), '：', -1) COGS
            ,t2.t_value reasons
            ,pct.area
            ,group_concat(distinct ss.name) duty_stores

        from bi_pro.parcel_claim_task pct
        join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = pct.client_id and bc.client_name = 'shein'
        left join bi_pro.parcel_lose_task plt on plt.id = pct.lose_task_id
        left join fle_staging.parcel_info pi on pi.pno = pct.pno
        left join fle_staging.order_info oi on oi.pno = if(pi.returned = 1, pi.customary_pno, pi.pno)
        left join bi_pro.parcel_lose_responsible plr on plr.lose_task_id = pct.lose_task_id
        left join fle_staging.sys_store ss on ss.id = plr.store_id
        left join bi_pro.translations t2 on t2.t_key = plt.duty_reasons and  t2.lang ='zh-CN'
        where
            plt.updated_at >= date_sub(curdate(), interval 1 day)
            and plt.updated_at < curdate()
        group by 1
    )
select
    t1.parcel_created_at 揽收时间
    ,t1.updated_at 判责时间
    ,t1.client_id 客户ID
    ,t1.id task_id
    ,t1.pno 运单号
    ,case t1.self_claim
        when 1 then '是'
        when 0 then '否'
    end 自主理赔
    ,case t1.duty_result
        when 1 then '丢失'
        when 2 then '破损'
        when 3 then '超时效'
    end 判责类型
    ,t1.COGS
    ,t1.duty_stores 判责网点
    ,t1.reasons 判责原因
    ,t1.area 区域
    ,date(t1.updated_at) p_date
from t t1;
;-- -. . -..- - / . -. - .-. -.--
select
            t.return_pno
            ,t.pno
            ,pi.ticket_pickup_store_id return_ticket_pickup_store_id
            ,pi.dst_store_id renturn_dst_store_id
            ,pi.state return_state
            ,pi.dst_name return_dst_name
        from fle_staging.parcel_info pi
        join tmpale.tmp_th_pno_lj_1222 t on t.return_pno = pi.pno
        where
            pi.created_at > date_sub(curdate(), interval 2 month );
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
            t.return_pno
            ,t.pno
            ,pi.ticket_pickup_store_id return_ticket_pickup_store_id
            ,pi.dst_store_id renturn_dst_store_id
            ,pi.state return_state
            ,pi.dst_name return_dst_name
        from fle_staging.parcel_info pi
        join tmpale.tmp_th_pno_lj_1222 t on t.return_pno = pi.pno
        where
            pi.created_at > date_sub(curdate(), interval 2 month )
    )

select
    t1.pno
    ,t1.return_pno
    ,case cod.forward_state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end 正向包裹最后状态
    ,cod.cod cod金额
    ,pick_ss.name 退件包裹揽收网点
    ,convert_tz(ship.routed_at, '+00:00', '+08:00') 退件包裹发件出仓时间
    ,convert_tz(los.routed_at, '+00:00', '+08:00') 退件包裹上报丢失时间
    ,los.staff_info_id 上报丢失员工工号
    ,if(los.remark = 'SS Judge Auto Created For Overtime', '是', '否') 是否系统自动上报
    ,los.ss_name 退件包裹上报丢失员工所属网点
    ,dst_ss.name 退件包裹目的地网点
    ,coalesce(dst_time.van_arrived_at, dst_time.first_valid_routed_at) 退件包裹到达目的地网点时间
    ,sca.scan_count 退件包裹交接次数
    ,convert_tz(sca.routed_at, '+00:00', '+08:00') 退件包裹第一次交接时间
    ,sca.staff_info_id 退件包裹第一次交接员工工号
    ,sca.ss_name 退件包裹第一次交接员工所属网点
    ,case t1.return_state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end 退件包裹最后状态
    ,t1.return_dst_name  退件包裹收件人姓名
    ,dif.CN_element '退件包裹最后一次疑难件/留仓件提交原因'
    ,convert_tz(dif.created_at, '+00:00', '+08:00') '退件包裹最后一次疑难件/留仓件提交时间'
    ,dif.staff_info_id '退件包裹最后一次疑难件/留仓件提交员工'
    ,dif.ss_name '退件包裹最后一次疑难件/留仓件提交员工所属网点'
    ,if(clo.return_pno is not null, '是', '否')  退件包裹是否在LAS妥投
from t t1
left join
    (
        select
            t.pno
            ,pi.cod_amount/100 cod
            ,pi.state forward_state
        from fle_staging.parcel_info pi
        join tmpale.tmp_th_pno_lj_1222 t on t.pno = pi.pno
    ) cod on cod.pno = t1.pno
left join fle_staging.sys_store pick_ss on pick_ss.id = t1.return_ticket_pickup_store_id
left join
    (
        select
            t1.return_pno
            ,pr.routed_at
            ,row_number() over (partition by t1.return_pno order by pr.routed_at desc) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.return_pno = pr.pno and pr.store_id = t1.return_ticket_pickup_store_id
        where
            pr.routed_at > date_sub(curdate(), interval 2 month )
            and pr.route_action = 'SHIPMENT_WAREHOUSE_SCAN'
    ) ship on ship.return_pno = t1.return_pno and ship.rk = 1
left join
    (
        select
            t1.return_pno
            ,pr.routed_at
            ,pr.remark
            ,pr.staff_info_id
            ,ss.name ss_name
            ,row_number() over (partition by t1.return_pno order by pr.routed_at ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.return_pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = pr.staff_info_id
        left join fle_staging.sys_store ss on ss.id = hsi.sys_store_id
        where
            pr.routed_at > date_sub(curdate(), interval 2 month )
            and pr.route_action = 'DIFFICULTY_HANDOVER'
            and pr.marker_category = 22
    ) los on los.return_pno = t1.return_pno and los.rk = 1
left join fle_staging.sys_store dst_ss on dst_ss.id = t1.renturn_dst_store_id
left join
    (
        select
            t1.return_pno
            ,pssn.first_valid_routed_at
            ,pssn.van_arrived_at
            ,row_number() over (partition by t1.return_pno order by pssn.first_valid_routed_at) rk
        from dw_dmd.parcel_store_stage_new pssn
        join t t1 on t1.return_pno = pssn.pno and t1.renturn_dst_store_id = pssn.store_id
        where
            pssn.created_at > date_sub(curdate(), interval 2 month )
    ) dst_time on dst_time.return_pno = t1.return_pno and dst_time.rk = 1
left join
    (
        select
            t1.return_pno
            ,pr.routed_at
            ,pr.staff_info_id
            ,ss.name ss_name
            ,count() over (partition by t1.return_pno) scan_count
            ,row_number() over (partition by t1.return_pno order by pr.routed_at) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.return_pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = pr.staff_info_id
        left join fle_staging.sys_store ss on ss.id = hsi.sys_store_id
        where
            pr.routed_at > date_sub(curdate(), interval 2 month )
            and pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
    ) sca on sca.return_pno = t1.return_pno and sca.rk = 1
left join
    (
        select
            t1.return_pno
            ,pr.created_at
            ,pr.staff_info_id
            ,ss.name ss_name
            ,ddd.CN_element
            ,row_number() over (partition by t1.return_pno order by pr.created_at desc) rk
        from fle_staging.parcel_problem_detail pr
        join t t1 on t1.return_pno = pr.pno
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = pr.staff_info_id
        left join fle_staging.sys_store ss on ss.id = hsi.sys_store_id
        left join dwm.dwd_dim_dict ddd on ddd.db = 'fle_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
        where
            pr.created_at > date_sub(curdate(), interval 2 month )
    ) dif on dif.return_pno = t1.return_pno and dif.rk = 1
left join
    (
        select
            t1.return_pno
        from rot_pro.parcel_route pr
        join t t1 on t1.return_pno = pr.pno
        where
            pr.routed_at > date_sub(curdate(), interval 2 month )
            and pr.store_id = 'TH02030204'
            and pr.route_action = 'CHANGE_PARCEL_CLOSE'
        group by 1
    ) clo on clo.return_pno = t1.return_pno;
;-- -. . -..- - / . -. - .-. -.--
select
    stat_date 统计日期
#     ,cod_ref_par_cnt/cod_pickup_par_cnt COD全网拒收率
#     ,sc_cod_ref_par_cnt/sc_cod_pickup_par_cnt 小cCOD拒收率
#     ,ka_cod_ref_par_cnt/ka_cod_pickup_par_cnt KACOD拒收率
#     ,plt_cod_ref_par_cnt/plt_cod_pickup_par_cnt 平台CDO拒收率
#     ,kap_cod_ref_par_cnt/kap_cod_pickup_par_cnt KAMVIP组COD拒收率
#     ,alo_cod_ref_par_cnt 'COD当日拒收单量(独立)'
#     ,alo_plt_cod_ref_par_cnt '平台cod拒收包裹数(独立)'
#     ,alo_kap_cod_ref_par_cnt 'KAPcod拒收包裹数(独立)'
#     ,alo_ka_cod_ref_par_cnt 'KAcod拒收包裹数(独立)'
#     ,alo_sc_cod_ref_par_cnt '小Ccod拒收包裹数(独立)'
#     ,alo_clm_par_amt/alo_clm_par_cnt '单票平均理赔金额'
#     ,clm_par_cnt/pickup_par_cnt 理赔票数占比
#     ,sc_clm_par_cnt/pickup_par_cnt '理赔票数占比（小C）'
#     ,ka_clm_par_cnt/pickup_par_cnt '理赔票数占比（KA）'
#     ,plt_clm_par_cnt/pickup_par_cnt '理赔票数占比（平台）'
#     ,kap_clm_par_cnt/pickup_par_cnt '理赔票数占比（KAM VIP组）'
#     ,alo_clm_par_amt '理赔金额(独立)'
#     ,alo_clm_par_cnt '理赔包裹数(独立)'
#     ,alo_plt_clm_par_cnt '平台理赔包裹数(独立)'
#     ,alo_kap_clm_par_cnt 'KAP理赔包裹数(独立)'
#     ,alo_ka_clm_par_cnt 'KA理赔包裹数(独立)'
#     ,alo_sc_clm_par_cnt '小C理赔包裹数(独立)'
    ,pickup_par_amt/pos_pickup_par_cnt '全网单均价格'
    ,retail_pickup_par_amt/retail_pickup_par_cnt 'Retail单均价格'
    ,fh_pickup_par_amt/fh_pickup_par_cnt 'FH单均价格'
    ,pos_pickup_par_cnt '全网单量'
    ,fh_pickup_par_cnt 'FH单量'
    ,retail_pickup_par_cnt 'Retail单量'
    ,plt_pickup_par_cnt '平台单量'
    ,kam_pickup_par_cnt 'KAM非平台单量'
#     ,lost_par_cnt/pos_pickup_par_cnt 遗失率
#     ,dam_par_cnt/pos_pickup_par_cnt 破损率
#     ,alo_lost_par_cnt '丢失包裹数(独立)'
#     ,alo_dam_par_cnt '破损包裹数(独立)'
#     ,over_sla_par_cnt/plt_pickup_par_cnt 超时效率
#     ,am_task_cnt/pickup_task_cnt 揽收客诉率
#     ,am_par_cnt/delivery_par_cnt 派送客诉率
#     ,alo_am_task_cnt '客诉生成处罚的任务数(独立)'
#     ,alo_am_par_cnt '客诉生成处罚的包裹数(独立)'

from dwm.dws_th_high_item_monitor_d
where stat_date >= '2023-10-01'
order by 1;
;-- -. . -..- - / . -. - .-. -.--
select min(a.stat_date) from dwm.dws_th_high_item_monitor_d a;
;-- -. . -..- - / . -. - .-. -.--
with
 handover2 as
(
    select
        fn.pno
        ,fn.pno_type
        ,fn.store_id
        ,fn.staff_info_id
        ,fn.finished_at
        ,fn.pi_state
    from
        (
            select
                    pr.pno
                    ,pr.store_id
                    ,pr.staff_info_id
                    ,pr.sub_staff_info_id
                    ,pi.state pi_state
                    ,convert_tz(pi.updated_at,'+00:00','+08:00') as pi_updated_at
                    ,if(pi.returned=1,'退件','正向件') as pno_type
                    ,convert_tz(pi.finished_at,'+00:00','+08:00') as finished_at
                from
                    ( # 所有22点前交接包裹找到最后一次交接的人
                        select
                            pr.*
                        from
                            (
                                select
                                    pr.pno
                                    ,rid.staff_info_id
                                    ,pr.store_id
                                    ,rid.sub_staff_info_id
                                    ,row_number() over(partition by pr.pno order by convert_tz(pr.created_at,'+00:00','+08:00') desc) as rnk
                                from fle_staging.`ticket_delivery`  pr
                               join tmpale.staff_info_record_info_day rid on pr.staff_info_id=rid.sub_staff_info_id
                                where
                                pr.created_at >=concat(date_sub(current_date,interval 1 day), ' 16:00:00')
                                and pr.created_at <concat(date_sub(current_date,interval 0 day), ' 14:00:00')
                            ) pr
                            where  pr.rnk=1
                    ) pr
                    left join fle_staging.parcel_info pi on pr.pno = pi.pno and pi.created_at >=concat(date_sub(current_date,interval 60 day), ' 16:00:00') and pi.created_at <concat(date_sub(current_date,interval 0 day), ' 09:00:00')
        )fn
)
,
 al as
     (
         select
            t1.网点
            ,t1.大区
            ,t1.片区
            ,t1.员工ID
            ,t1.快递员姓名
            ,t1.work_days  在职时长
            ,t1.快递员类型
            ,ifnull(f2.交接量_非退件, 0)+ifnull(ff2.ct, 0) 交接量_非退件
            ,ifnull(f6.非退件妥投量, 0) 非退件妥投量
            ,ifnull(f6.退件妥投量_按地址转换, 0) 退件妥投量_按地址转换
            ,ifnull(f6.非退件妥投量_大件折算, 0 ) 非退件妥投量_大件折算
            ,ifnull(pk.ticket_pickup_cn,0) 揽收任务数
            ,ifnull(pk.pickup_pno_cn,0) 揽收包裹量
            ,f6.finished_at as 22点前快递员结束派件时间
            ,if((ifnull(f2.交接量_非退件,0)+ ifnull(ff2.ct,0))<>0 ,concat(round(f6.非退件妥投量/(ifnull(f2.交接量_非退件,0)+ ifnull(ff2.ct,0))*100,2),'%'),0) as 妥投率
            ,row_number() over (partition by t1.网点 order by ifnull(f6.非退件妥投量, 0)) rk
#                         ,if(f5.staff_info_id is not null, '是', null) 是否出勤不达标
            ,case
                when (ifnull(f6.非退件妥投量_大件折算,0)+ifnull(f6.退件妥投量_按地址转换,0))=0 then '是'
                when t1.网点类型=1 and sdt.total_should_delivery_pno/ss.attendance_staff_cn>=100 and (ifnull(f6.非退件妥投量_大件折算,0)+ifnull(f6.退件妥投量_按地址转换,0))<80  then '是'
                when t1.网点类型=1 and sdt.total_should_delivery_pno/ss.attendance_staff_cn<100 and (ifnull(f6.非退件妥投量_大件折算,0)+ifnull(f6.退件妥投量_按地址转换,0))<sdt.total_should_delivery_pno/ss.attendance_staff_cn*0.8  then '是'
                when t1.网点类型=10 and sdt.total_should_delivery_pno/ss.attendance_staff_cn>=80 and (ifnull(f6.非退件妥投量_大件折算,0)+ifnull(f6.退件妥投量_按地址转换,0))<65  then '是'
                when t1.网点类型=10 and sdt.total_should_delivery_pno/ss.attendance_staff_cn<80 and (ifnull(f6.非退件妥投量_大件折算,0)+ifnull(f6.退件妥投量_按地址转换,0))<sdt.total_should_delivery_pno/ss.attendance_staff_cn*0.8  then '是'
                else null
            end as 是否低人效
        from
            (
                select
                    dt.region_name 大区
                    ,dt.piece_name 片区
                    ,dt.store_name 网点
                    ,dt.store_category as 网点类型
                    ,rid.staff_info_id as 员工ID
                    ,rid.store_id
                    ,hsi.name as  快递员姓名
                    ,rid.work_days
                    ,case when rid.job_title=13 then 'bike' when rid.job_title=110 then 'van' when rid.job_title=452 then 'boat' when rid.job_title=1497 then 'Van Feeder'  else '' end as 快递员类型
                    #,datediff(curdate(), hsi.hire_date)  在职时长
                from tmpale.staff_info_record_info_day rid
                join bi_pro.hr_staff_info hsi on hsi.staff_info_id =rid.staff_info_id
                left join dwm.dim_th_sys_store_rd dt on dt.store_id =rid.store_id and dt.stat_date = current_date
                left join tmpale.staff_info_record_info_day rid1 on rid.staff_info_id=rid1.staff_info_id and rid1.if_support='Y'
                where rid.if_support='N' and rid1.staff_info_id is null
            ) t1
        left join
            (-- 非子母件交接量
                select
                    fn.staff_info_id as 员工ID
                    ,count(distinct if(fn.pno_type='正向件', fn.pno ,null)) as 交接量_非退件
                from  handover2 fn
                group by 1
            )f2 on f2.员工ID = t1.员工ID
        left join
            (-- 子母件交接量
                select
                    ff.staff_info_id
                    ,sum(ff.mps_count) ct
                from
                (
                    select
                        pr.pno
                        ,rid.staff_info_id
                        ,pim.mps_count
                        ,sum(pim.mps_count) as 1mps_count
                    from fle_staging.`ticket_delivery`  pr
                    join tmpale.staff_info_record_info_day rid on pr.staff_info_id=rid.sub_staff_info_id
                    left join fle_staging.parcel_info_mps_relation pim on pim.mother_pno =pr.pno -- 子母单关联
                    left join fle_staging.parcel_info pi on pr.pno=pi.pno
                    where
                        pr.created_at >=concat(date_sub(current_date,interval 1 day), ' 17:00:00')
                        and pr.created_at <concat(date_sub(current_date,interval 0 day), ' 10:00:00')
                        and pr.mps_delivery_category=1 -- 母件
                    #	and pr.pno='TH01124THEGB0A'
                        and pi.returned=0 -- 非退件
                    group by 1,2,3

                )ff
                group by 1
            )ff2 on ff2.staff_info_id= t1.员工ID
        left join
            (
                select
                    pi.ticket_pickup_staff_info_id
                    ,count(distinct pi.ticket_pickup_id) as ticket_pickup_cn
                    ,count(distinct pi.pno) as pickup_pno_cn
                from fle_staging.parcel_info pi
                where pi.state<9
                and pi.returned=0
                and pi.created_at >=concat(date_sub(curdate(), interval 1 day),' 17:00:00')
                and pi.created_at <=concat(curdate(),' 17:00:00')
                group by 1
            )pk on pk.ticket_pickup_staff_info_id = t1.员工ID
        left join
            ( -- 22点前最后一个妥投包裹时间
                select
                    rid.staff_info_id
                    ,max(convert_tz(pi.finished_at,'+00:00','+07:00')) as finished_at
                    ,count(distinct case when pi.returned=0  then pi.pno else null end) as 非退件妥投量
                    ,count(distinct case when pi.returned=1  then pi.dst_detail_address else null end) as 退件妥投量_按地址转换
                    ,sum(case when pi.returned=0 and if(floor(pi.weight/10000)=0,1,floor(pi.weight/10000))<if(floor((((pi.width+pi.height+pi.length) DIV 5)*5-5)/50)-1<1,1,floor((((pi.width+pi.height+pi.length) DIV 5)*5-5)/50)-1)
                                then if(floor((((pi.width+pi.height+pi.length) DIV 5)*5-5)/50)-1<1,1,floor((((pi.width+pi.height+pi.length) DIV 5)*5-5)/50)-1)
                               when pi.returned=0  then if(floor(pi.weight/10000)=0,1,floor(pi.weight/10000)) else null end) as 非退件妥投量_大件折算
                from fle_staging.parcel_info pi
                join tmpale.staff_info_record_info_day rid on pi.ticket_delivery_staff_info_id=rid.sub_staff_info_id
                left join fle_staging.parcel_info_mps_relation pimr on pimr.mother_pno =pi.pno
                where
                    pi.state=5
                    and pi.finished_at>=concat(date_sub(current_date,interval 1 day), ' 17:00:00')
                    and pi.finished_at<=concat(date_sub(current_date,interval 0 day), ' 15:00:00')
                    and pimr.id is null  -- 母件单号不算做妥投包裹，子件才算妥投包裹
                    #and pi.ticket_delivery_staff_info_id='637320'
                group by 1
             ) f6 on f6.staff_info_id = t1.员工ID
        left join
            (
                select
                    sdt.store_id
                    ,count(distinct sdt.pno) as total_should_delivery_pno
                from bi_pro.dc_should_delivery_today sdt
                where sdt.stat_date= current_date
                group by 1
            )sdt on t1.store_id=sdt.store_id
        left join
            (#网点今日出勤人数
                select
                    ss.store_id
                    ,count(distinct ss.staff_info_id) as attendance_staff_cn
                from
                    (
                        select
                            adv.staff_info_id
                            ,if(hsa.staff_info_id is null,adv.sys_store_id,hsa.store_id) as store_id
                            ,if(hsa.staff_info_id is null,hsi.job_title,hsa.job_title_id) as job_title_id
                        from bi_pro.attendance_data_v2 adv
                        join bi_pro.hr_staff_info hsi on hsi.staff_info_id =adv.staff_info_id
                        left join backyard_pro.hr_staff_apply_support_store hsa on adv.staff_info_id=hsa.staff_info_id
                            and hsa.status = 2 #支援审核通过
                            and hsa.actual_begin_date <=current_date
                            and coalesce(hsa.actual_end_date, curdate())>= current_date
                            and hsa.employment_begin_date<=current_date
                            and hsa.employment_end_date>=current_date
                        where  adv.stat_date=current_date and (adv.attendance_started_at is not null or adv.attendance_end_at is not null)
                    )ss
                where ss.job_title_id in(13,110,452,1497)
                group by 1
            )ss on t1.store_id =ss.store_id
     )
select
    a.*
from
    (
        select
            current_date p_date
            ,fn.网点
            ,fn.大区
            ,fn.片区
            ,fn.员工ID
            ,fn.快递员姓名
            ,convert_tz(swa.started_at, '+00:00', '+07:00') 上班时间
            ,convert_tz(swa.end_at, '+00:00', '+07:00') 下班时间
            ,fn.快递员类型
            ,fn.在职时长
            ,fn.交接量_非退件
            ,fn.非退件妥投量
            ,fn.非退件妥投量_大件折算
            ,fn.退件妥投量_按地址转换
            ,fn.揽收任务数
            ,fn.揽收包裹量
            ,fn.22点前快递员结束派件时间
            ,fn.妥投率
            ,fn.是否出勤不达标
            ,fn.是否低人效v2 是否低人效
           ,if(fn.虚假行为>0,'是',null) as 是否虚假
        from
        (
            select
                a1.*
                ,a2.是否低人效 是否低人效v2
                ,fg.虚假行为
                ,if(f5.staff_info_id is not null, '是', null) 是否出勤不达标
            from al a1
            left join al a2 on a2.员工ID = a1.员工ID and a2.rk <= 2
            left join
                (
                    select
                        a.staff_info_id
                        ,sum(a.揽件虚假量) 虚假揽件量
                        ,sum(a.妥投虚假量) 虚假妥投量
                        ,sum(a.派件标记虚假量) 虚假派件标记量
                        ,sum(a.揽件虚假量)+sum(a.妥投虚假量)+sum(a.派件标记虚假量) as 虚假行为
                    from
                        (
                            select
                                vrv.staff_info_id
                                ,'回访' type
                                ,count(distinct if(vrv.visit_result  in (6), vrv.link_id, null)) 妥投虚假量
                                ,count(distinct if(vrv.visit_result in (18,8,19,20,21,31,32,22,23,24), vrv.link_id, null)) 派件标记虚假量
                                ,count(distinct if(vrv.visit_result in (37,39,3), vrv.link_id, null)) 揽件虚假量
                            from nl_production.violation_return_visit vrv
                            where
                                vrv.visit_state = 4
                                and vrv.updated_at >= date_sub(curdate(), interval 7 hour)
                                and vrv.updated_at < date_add(curdate(), interval 17 hour) -- 昨天
                                and vrv.visit_staff_id not in (10000,10001) -- 非ivr回访
                                and vrv.type in (1,2,3,4,5,6)
                            group by 1

                            union all
                            select
                                acca.staff_info_id
                                ,'投诉' type
                                ,count(distinct if(acca.complaints_type = 2, acca.merge_column, null)) 揽件虚假量
                                ,count(distinct if(acca.complaints_type = 1, acca.merge_column, null)) 妥投虚假量
                                ,count(distinct if(acca.complaints_type = 3, acca.merge_column, null)) 派件标记虚假量
                            from nl_production.abnormal_customer_complaint_authentic acca
                            where
                                acca.callback_state = 2
                                and acca.qaqc_callback_result in (2,3)
                                and acca.qaqc_callback_at >=date_sub(curdate(), interval 7 hour)
                                and acca.qaqc_callback_at <  date_add(curdate(), interval 17 hour)  -- 昨天
                                and acca.type = 1
                                and acca.complaints_type in (1,2,3)
                            group by 1
                        ) a
                    group by 1
                )fg on fg.staff_info_id = a1.员工ID
            left join
                ( --
                    select
                        a2.staff_info_id
                        ,a2.sys_store_id
                        ,a2.attendance_started_at
                        ,a2.shift_start
                        ,a2.attendance_end_at
                    from
                        (
                            select
                                ad.staff_info_id
                                ,hsi.sys_store_id
                                ,ad.shift_start
                                ,ad.attendance_started_at
                                ,ad.attendance_end_at
                                ,row_number() over (partition by hsi.sys_store_id order by timestampdiff(minute , concat(ad.stat_date, ' ', ad.shift_start), ad.attendance_started_at) desc) rk
                            from bi_pro.attendance_data_v2 ad
                            left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = ad.staff_info_id
                            where
                                ad.stat_date = curdate()
                                and ad.attendance_started_at > concat(ad.stat_date, ' ', ad.shift_start)
                                and hsi.sys_store_id != -1
                                and hsi.is_sub_staff = 0
                                and hsi.job_title in (13,110,452)
                                and hsi.state = 1
                                and timestampdiff(minute , concat(ad.stat_date, ' ', ad.shift_start), ad.attendance_started_at) > 30

                        ) a2
                    where
                        a2.rk <= 2
                ) f5 on f5.staff_info_id = a1.员工ID
        )fn
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = fn.员工ID and swa.attendance_date = curdate()
) a
where
a.是否虚假 is not null
or a.是否低人效 is not null
or a.是否出勤不达标 is not null

union all

select
    curdate() p_date
    ,dt.store_name 网点
    ,dt.region_name 大区
    ,dt.piece_name 片区
    ,ad.staff_info_id 员工ID
    ,hsi.name 快递员姓名
    ,ad.attendance_started_at 上班时间
    ,ad.attendance_end_at 下班时间
    ,case hsi.job_title
        when 13 then  'bike'
        when 110 then 'van'
        when 452 then'boat'
    end 快递员类型
    ,datediff(curdate(), hsi.hire_date) 在职时长
    ,'' 交接量_非退件
    ,'' 非退件妥投量
    ,'' 非退件妥投量_大件折算
    ,'' 退件妥投量_按地址转换
    ,'' 揽收任务数
    ,'' 揽收包裹量
    ,'' 22点前快递员结束派件时间
    ,'' 妥投率
    ,'是' 是否出勤不达标
    ,'' 是否低人效
    ,'' 是否虚假
from bi_pro.attendance_data_v2 ad
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = ad.staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
where ad.attendance_time + ad.BT+ ad.BT_Y + ad.AB >0 -- 应出勤
    and ad.stat_date = curdate()
    and ad.attendance_started_at is null
    and ad.attendance_end_at is null
    and hsi.sys_store_id != -1
    and hsi.is_sub_staff = 0
    and hsi.job_title in (13,110,452)
    and hsi.state = 1;
;-- -. . -..- - / . -. - .-. -.--
select
    a2.id
    ,a2.pno
    ,a2.store_name 网点
    ,a2.client_id
    ,bc.client_name
    ,if(pi.returned = 1, '退件', '正向') 包裹流向
    ,if(a2.rk = 1, timestampdiff(hour, a2.begin_time, a2.min_created_at)/24, timestampdiff(hour, a2.begin_time, a2.end_time)/24) 停留时长
from
    (
        select
            a1.id
            ,a1.pno
            ,a1.min_created_at
            ,pssn.store_name
            ,a1.client_id
            ,coalesce(pssn.van_arrived_at, pssn.first_valid_routed_at) begin_time
            ,coalesce(pssn.van_left_at, pssn.last_valid_routed_at) end_time
            ,row_number() over (partition by a1.id order by pssn.valid_store_order desc ) rk
        from
            (
                select
                    plt.pno
                    ,plt.id
                    ,plt.client_id
                    ,min(plt.created_at) min_created_at
                from bi_pro.parcel_lose_task plt
                where
                    plt.source = 11
                    and plt.state < 5
                group by 1,2,3
            ) a1
        left join dw_dmd.parcel_store_stage_new pssn on pssn.pno = a1.pno and pssn.valid_store_order is not null and pssn.first_valid_routed_at < a1.min_created_at
    ) a2
left join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = a2.client_id
left join fle_staging.parcel_info pi on pi.pno = a2.pno;
;-- -. . -..- - / . -. - .-. -.--
select
    t.pno 单号
    ,case pi.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,pi2.pno 正向单号
    ,pi2.returned_pno 逆向单号
    ,las.CN_element  最后有效路由
    ,las.store_name 最后有效路由网点
    ,convert_tz(las.routed_at, '+00:00', '+07:00') 最后有效路由操作时间
    ,las.staff_info_id 最后有效路由操作人
    ,if(plt.pno is not null, '是', '否') 是否判责遗失
    ,plt.handle_time 判责遗失时间
    ,pi.client_id 客户ID
    ,pi.dst_name 收件人姓名
    ,pi.dst_phone 收件人手机号
    ,pi.src_name 寄件人姓名
    ,pi.src_phone 寄件人手机号
    ,case pct.state
        when 1 then '待协商'
        when 2 then '协商不一致，待重新协商'
        when 3 then '待财务核实'
        when 4 then '核实通过，待财务支付'
        when 5 then '财务驳回'
        when 6 then '理赔完成'
        when 7 then '理赔终止'
        when 8 then '异常关闭'
        when 9 then' 待协商（搁置）'
        when 10 then '等待再次联系'
    end 理赔状态
from fle_staging.parcel_info pi
join tmpale.tmp_th_pno_lj_1226 t on t.pno = pi.pno
left join  fle_staging.parcel_info pi2 on pi2.pno = if(pi.returned = 1, pi.customary_pno, pi.pno)
left join
    (
        select
            ddd.CN_element
            ,pr.pno
            ,pr.routed_at
            ,pr.store_name
            ,pr.staff_info_id
            ,row_number() over (partition by pr.pno order by pr.routed_at desc) rk
        from rot_pro.parcel_route pr
        join tmpale.tmp_th_pno_lj_1226 t on t.pno = pr.pno
        left join dwm.dwd_dim_dict ddd on ddd.db = 'rot_pro' and ddd.tablename = 'parcel_route' and ddd.fieldname = 'route_action'
        where
            pr.routed_at > date_sub(curdate(), interval 2 month )
            and pr.route_action in ('RECEIVED','STAFF_INFO_UPDATE_WEIGHT','RECEIVE_WAREHOUSE_SCAN','STORE_KEEPER_UPDATE_WEIGHT','STORE_SORTER_UPDATE_WEIGHT','DELIVERY_TICKET_CREATION_SCAN','ARRIVAL_WAREHOUSE_SCAN','ARRIVAL_WAREHOUSE_SCAN','SHIPMENT_WAREHOUSE_SCAN','DETAIN_WAREHOUSE','DELIVERY_CONFIRM','DIFFICULTY_HANDOVER','DELIVERY_MARKER', 'REPLACE_PNO','PRINTING','SEAL','UNSEAL','PARCEL_HEADLESS_PRINTED','THIRD_EXPRESS_ROUTE','PICKUP_RETURN_RECEIPT','FLASH_HOME_SCAN', 'SORTING_SCAN', 'CANCEL_SHIPMENT_WAREHOUSE','INVENTORY','REFUND_CONFIRM', 'DISTRIBUTION_INVENTORY','DELIVERY_TRANSFER','DELIVERY_PICKUP_STORE_SCAN', 'ACCEPT_PARCEL','DIFFICULTY_HANDOVER')
    ) las on las.pno = pi.pno and las.rk = 1
left join
    (
        select
            plt.pno
            ,min(plt.updated_at) handle_time
        from bi_pro.parcel_lose_task plt
        join tmpale.tmp_th_pno_lj_1226 t on t.pno = plt.pno
        where
            plt.state = 6
            and plt.duty_result = 1
        group by 1
    ) plt on plt.pno = pi.pno
left join bi_pro.parcel_claim_task pct on pct.pno = t.pno;
;-- -. . -..- - / . -. - .-. -.--
select
    plt.id
    ,plt.pno
from bi_pro.parcel_lose_task plt
join bi_pro.parcel_lose_task plt2 on plt2.pno = plt.pno and plt.state = 6
where
    plt.source = 2
    and plt.state in (1,2,3,4)
group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
    plt.id
    ,plt.pno
from bi_pro.parcel_lose_task plt
join bi_pro.parcel_lose_task plt2 on plt2.pno = plt.pno and plt2.state = 6
where
    plt.source = 2
    and plt.state in (1,2,3,4)
group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
    plt.id
    ,plt.pno
from bi_pro.parcel_lose_task plt
join bi_pro.parcel_claim_task pct on pct.pno = plt.pno and pct.state = 6
where
    plt.source = 2
    and plt.state in (1,2,3,4)
group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
    plt.id
    ,plt.pno
from bi_pro.parcel_lose_task plt
join bi_pro.parcel_lose_task plt2 on plt2.pno = plt.pno and plt2.state = 6
where
    plt.source = 2
    and plt.state in (1,2,3,4)
group by 1,2

union

select
    plt.id
    ,plt.pno
from bi_pro.parcel_lose_task plt
join bi_pro.parcel_claim_task pct on pct.pno = plt.pno and pct.state = 6
where
    plt.source = 2
    and plt.state in (1,2,3,4)
group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
    t.pno
    ,if(acc.pno is not null, '是', '否') 是否被投诉虚假拒收
from tmpale.tmp_th_pno_lj_240103 t
left join bi_pro.abnormal_customer_complaint acc on t.pno = acc.pno and acc.complaints_sub_type in (61,62,66)
group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
    a2.id
    ,a2.pno
    ,a2.store_name 网点
    ,a2.client_id
    ,bc.client_name
    ,if(pi.returned = 1, '退件', '正向') 包裹流向
    ,if(a2.rk = 1, timestampdiff(hour, a2.begin_time, a2.min_created_at)/24, timestampdiff(hour, a2.begin_time, a2.end_time)/24) 停留时长
from
    (
        select
            a1.id
            ,a1.pno
            ,a1.min_created_at
            ,pssn.store_name
            ,a1.client_id
            ,coalesce(pssn.van_arrived_at, pssn.first_valid_routed_at) begin_time
            ,coalesce(pssn.van_left_at, pssn.last_valid_routed_at) end_time
            ,row_number() over (partition by a1.id order by pssn.valid_store_order desc ) rk
        from
            (
                select
                    plt.pno
                    ,plt.id
                    ,plt.client_id
                    ,min(plt.created_at) min_created_at
                from bi_pro.parcel_lose_task plt
                where
                    plt.source = 11
                    and plt.state < 5
                group by 1,2,3
            ) a1
        left join dw_dmd.parcel_store_stage_new pssn on pssn.pno = a1.pno and pssn.valid_store_order is not null and pssn.first_valid_routed_at < a1.min_created_at
    ) a2
left join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = a2.client_id
left join fle_staging.parcel_info pi on pi.pno = a2.pno

union all

select
    a2.id
    ,a2.plt_pno pno
    ,a2.store_name 网点
    ,a2.client_id
    ,bc.client_name
    ,if(pi.returned = 1, '退件', '正向') 包裹流向
    ,timestampdiff(hour, a2.begin_time, a2.end_time)/24 停留时长
from
    (
        select
            a1.id
            ,a1.pno
            ,a1.plt_pno
            ,a1.min_created_at
            ,pssn.store_name
            ,a1.client_id
            ,coalesce(pssn.van_arrived_at, pssn.first_valid_routed_at) begin_time
            ,coalesce(pssn.van_left_at, pssn.last_valid_routed_at) end_time
            ,row_number() over (partition by a1.id order by pssn.valid_store_order desc ) rk
        from
            (
                select
                    pi.pno
                    ,plt.pno plt_pno
                    ,plt.id
                    ,plt.client_id
                    ,min(plt.created_at) min_created_at
                from bi_pro.parcel_lose_task plt
                join fle_staging.parcel_info pi on pi.returned_pno = plt.pno
                where
                    plt.source = 11
                    and plt.state < 5
                group by 1,2,3
            ) a1
        left join dw_dmd.parcel_store_stage_new pssn on pssn.pno = a1.pno and pssn.valid_store_order is not null and pssn.first_valid_routed_at < a1.min_created_at
    ) a2
left join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = a2.client_id
left join fle_staging.parcel_info pi on pi.pno = a2.pno;
;-- -. . -..- - / . -. - .-. -.--
select
    t.*
    ,st_distance_sphere(point(ss.lng, ss.lat), point(ss2.lng, ss2.lat)) 网点之间距离
from tmpale.tmp_th_store_0105 t
left join fle_staging.sys_store ss on ss.name = t.sys_store
left join fle_staging.sys_store ss2 on ss2.name = t.support_store;
;-- -. . -..- - / . -. - .-. -.--
select
    plt.id
    ,plt.pno
from bi_pro.parcel_lose_task plt
where
    plt.source = 2 -- B来源
    and plt.created_at > '2023-10-01'
    and plt.source_id like 'return_visit_2_%'
    and plt.state < 5

union

-- 2. 回访结果为未收到包裹的非虚假妥投-投诉原因
select
    plt.id
    ,plt.pno
from bi_pro.parcel_lose_task plt
left join bi_pro.abnormal_customer_complaint acc on acc.abnormal_message_id = substring_index(plt.source_id, '_', -1)
where
    plt.source = 2 -- B来源
    and plt.created_at > '2023-10-01'
    and ( plt.source_id like 'return_visit_1_%' or plt.source_id like'return_visit_3_%')
    and acc.complaints_type != 1 -- 非虚假妥投
    and plt.state < 5

union
-- 3.平台包裹
select
    plt.id
    ,plt.pno
from bi_pro.parcel_lose_task plt
left join bi_pro.parcel_claim_task pct on pct.pno = plt.pno and pct.state = 6
where
    plt.source = 2 -- B来源
    and plt.created_at > '2023-11-01'
    and plt.state < 5
    and pct.pno is null
union

select
    plt.id
    ,plt.pno
from bi_pro.parcel_lose_task plt
left join fle_staging.parcel_info pi on pi.pno = plt.pno
where
    plt.source = 2 -- B来源
    and plt.created_at > '2023-10-01'
    and pi.state not in (5,7,8);
;-- -. . -..- - / . -. - .-. -.--
select
    ci.pno
    ,ci.created_at 询问任务创建时间
    ,convert_tz(pi.created_at, '+00:00', '+07:00') 揽收时间
from fle_staging.customer_issue ci
left join bi_center.parcel_complaint_inquiry pci on pci.source_id = ci.id
left join fle_staging.parcel_info pi on pi.pno = ci.pno
where
    (
        (ci.request_sup_type = 22 and ci.request_sub_type in (221,300))
        or (ci.request_sup_type = 16 and ci.request_sub_type = 160 and ci.request_sul_type = 55)
    )
    and pci.created_at >=  '2023-12-29';
;-- -. . -..- - / . -. - .-. -.--
select
    ci.pno
    ,ci.created_at 询问任务创建时间
    ,if(pi.state = 5, convert_tz(pi.finished_at, '+00:00', '+07:00'), null) 签收时间
from fle_staging.customer_issue ci
left join bi_center.parcel_complaint_inquiry pci on pci.source_id = ci.id
left join fle_staging.parcel_info pi on pi.pno = ci.pno
where
    (
        (ci.request_sup_type = 22 and ci.request_sub_type in (221,300))
        or (ci.request_sup_type = 16 and ci.request_sub_type = 160 and ci.request_sul_type = 55)
    )
    and pci.created_at >=  '2023-12-29';
;-- -. . -..- - / . -. - .-. -.--
select
    t.*
from bi_pro.parcel_lose_task plt
join tmpale.tmp_th_plt_id_0108 t on t.id = plt.id
where
    plt.created_at >= '2024-01-01';
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
            pct.id
            ,pct.parcel_created_at
            ,plt.updated_at
            ,pct.client_id
            ,pct.pno
        #     ,case pct.self_claim
        #         when 1 then '是'
        #         when 0 then '否'
        #     end 自主理赔
            ,pct.self_claim
            ,pct.duty_result
        #     ,case plt.duty_result
        #         when 1 then '丢失'
        #         when 2 then '破损'
        #         when 3 then '超时效'
        #     end 判责类型
            ,substring_index(substring_index(oi.remark, '，', 1), '：', -1) COGS
            ,t2.t_value reasons
            ,pct.area
            ,group_concat(distinct ss.name) duty_stores

        from bi_pro.parcel_claim_task pct
#         join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = pct.client_id and bc.client_name = 'shein'
        left join bi_pro.parcel_lose_task plt on plt.id = pct.lose_task_id
        left join fle_staging.parcel_info pi on pi.pno = pct.pno
        left join fle_staging.order_info oi on oi.pno = if(pi.returned = 1, pi.customary_pno, pi.pno)
        left join bi_pro.parcel_lose_responsible plr on plr.lose_task_id = pct.lose_task_id
        left join fle_staging.sys_store ss on ss.id = plr.store_id
        left join bi_pro.translations t2 on t2.t_key = plt.duty_reasons and  t2.lang ='zh-CN'
        where
            -- 查询最近一次更新时间在今天之前一天及之后的数据
            plt.updated_at >= date_sub(curdate(), interval 2 month)
            and plt.updated_at < curdate()
            and plt.client_id in ('AA0622','AA0649','AA0650','AA0662')
        group by 1
    )
select
    t1.parcel_created_at 揽收时间
    ,t1.updated_at 判责时间
    ,t1.client_id 客户ID
    ,t1.id task_id
    ,t1.pno 运单号
    ,case t1.self_claim
        when 1 then '是'
        when 0 then '否'
    end 自主理赔
    ,case t1.duty_result
        when 1 then '丢失'
        when 2 then '破损'
        when 3 then '超时效'
    end 判责类型
    ,t1.COGS
    ,t1.duty_stores 判责网点
    ,t1.reasons 判责原因
    ,t1.area 区域
    ,date(t1.updated_at) p_date
from t t1;
;-- -. . -..- - / . -. - .-. -.--
select
            pct.id
            ,pct.parcel_created_at
            ,plt.updated_at
            ,pct.client_id
            ,pct.pno
        #     ,case pct.self_claim
        #         when 1 then '是'
        #         when 0 then '否'
        #     end 自主理赔
            ,pct.self_claim
            ,pct.duty_result
        #     ,case plt.duty_result
        #         when 1 then '丢失'
        #         when 2 then '破损'
        #         when 3 then '超时效'
        #     end 判责类型
            ,substring_index(substring_index(substring_index(oi.remark, '，', 1), '：', -1),  'THB', -1) COGS
            ,t2.t_value reasons
            ,pct.area
            ,group_concat(distinct ss.name) duty_stores

        from bi_pro.parcel_claim_task pct
#         join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = pct.client_id and bc.client_name = 'shein'
        left join bi_pro.parcel_lose_task plt on plt.id = pct.lose_task_id
        left join fle_staging.parcel_info pi on pi.pno = pct.pno
        left join fle_staging.order_info oi on oi.pno = if(pi.returned = 1, pi.customary_pno, pi.pno)
        left join bi_pro.parcel_lose_responsible plr on plr.lose_task_id = pct.lose_task_id
        left join fle_staging.sys_store ss on ss.id = plr.store_id
        left join bi_pro.translations t2 on t2.t_key = plt.duty_reasons and  t2.lang ='zh-CN'
        where
            -- 查询最近一次更新时间在今天之前一天及之后的数据
            plt.updated_at >= date_sub(curdate(), interval 2 month)
            and plt.updated_at < curdate()
            and plt.client_id in ('AA0622','AA0649','AA0650','AA0662')
        group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
            pct.id
            ,pct.parcel_created_at
            ,plt.updated_at
            ,pct.client_id
            ,pct.pno
        #     ,case pct.self_claim
        #         when 1 then '是'
        #         when 0 then '否'
        #     end 自主理赔
            ,pct.self_claim
            ,pct.duty_result
        #     ,case plt.duty_result
        #         when 1 then '丢失'
        #         when 2 then '破损'
        #         when 3 then '超时效'
        #     end 判责类型
            ,substring_index(substring_index(substring_index(oi.remark, '，', 1), '：', -1),  'THB', 1) COGS
            ,t2.t_value reasons
            ,pct.area
            ,group_concat(distinct ss.name) duty_stores

        from bi_pro.parcel_claim_task pct
#         join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = pct.client_id and bc.client_name = 'shein'
        left join bi_pro.parcel_lose_task plt on plt.id = pct.lose_task_id
        left join fle_staging.parcel_info pi on pi.pno = pct.pno
        left join fle_staging.order_info oi on oi.pno = if(pi.returned = 1, pi.customary_pno, pi.pno)
        left join bi_pro.parcel_lose_responsible plr on plr.lose_task_id = pct.lose_task_id
        left join fle_staging.sys_store ss on ss.id = plr.store_id
        left join bi_pro.translations t2 on t2.t_key = plt.duty_reasons and  t2.lang ='zh-CN'
        where
            -- 查询最近一次更新时间在今天之前一天及之后的数据
            plt.updated_at >= date_sub(curdate(), interval 2 month)
            and plt.updated_at < curdate()
            and plt.client_id in ('AA0622','AA0649','AA0650','AA0662')
        group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
            pct.id
            ,pct.parcel_created_at
            ,plt.updated_at
            ,pct.client_id
            ,pct.pno
        #     ,case pct.self_claim
        #         when 1 then '是'
        #         when 0 then '否'
        #     end 自主理赔
            ,pct.self_claim
            ,pct.duty_result
        #     ,case plt.duty_result
        #         when 1 then '丢失'
        #         when 2 then '破损'
        #         when 3 then '超时效'
        #     end 判责类型
            ,replace(substring_index(substring_index(substring_index(oi.remark, '，', 1), '：', -1),  'THB', 1), ' ', '') COGS
            ,t2.t_value reasons
            ,pct.area
            ,group_concat(distinct ss.name) duty_stores

        from bi_pro.parcel_claim_task pct
#         join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = pct.client_id and bc.client_name = 'shein'
        left join bi_pro.parcel_lose_task plt on plt.id = pct.lose_task_id
        left join fle_staging.parcel_info pi on pi.pno = pct.pno
        left join fle_staging.order_info oi on oi.pno = if(pi.returned = 1, pi.customary_pno, pi.pno)
        left join bi_pro.parcel_lose_responsible plr on plr.lose_task_id = pct.lose_task_id
        left join fle_staging.sys_store ss on ss.id = plr.store_id
        left join bi_pro.translations t2 on t2.t_key = plt.duty_reasons and  t2.lang ='zh-CN'
        where
            -- 查询最近一次更新时间在今天之前一天及之后的数据
            plt.updated_at >= date_sub(curdate(), interval 2 month)
            and plt.updated_at < curdate()
            and plt.client_id in ('AA0622','AA0649','AA0650','AA0662')
        group by 1;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
            pct.id
            ,pct.parcel_created_at
            ,plt.updated_at
            ,pct.client_id
            ,pct.pno
        #     ,case pct.self_claim
        #         when 1 then '是'
        #         when 0 then '否'
        #     end 自主理赔
            ,pct.self_claim
            ,pct.duty_result
        #     ,case plt.duty_result
        #         when 1 then '丢失'
        #         when 2 then '破损'
        #         when 3 then '超时效'
        #     end 判责类型
            ,replace(substring_index(substring_index(substring_index(oi.remark, '，', 1), '：', -1),  'THB', 1), ' ', '') COGS
            ,t2.t_value reasons
            ,pct.area
            ,group_concat(distinct ss.name) duty_stores

        from bi_pro.parcel_claim_task pct
#         join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = pct.client_id and bc.client_name = 'shein'
        left join bi_pro.parcel_lose_task plt on plt.id = pct.lose_task_id
        left join fle_staging.parcel_info pi on pi.pno = pct.pno
        left join fle_staging.order_info oi on oi.pno = if(pi.returned = 1, pi.customary_pno, pi.pno)
        left join bi_pro.parcel_lose_responsible plr on plr.lose_task_id = pct.lose_task_id
        left join fle_staging.sys_store ss on ss.id = plr.store_id
        left join bi_pro.translations t2 on t2.t_key = plt.duty_reasons and  t2.lang ='zh-CN'
        where
            -- 查询最近一次更新时间在今天之前一天及之后的数据
            plt.updated_at >= date_sub(curdate(), interval 2 month)
            and plt.updated_at < curdate()
            and plt.client_id in ('AA0622','AA0649','AA0650','AA0662')
        group by 1
    )
select
    t1.parcel_created_at 揽收时间
    ,t1.updated_at 判责时间
    ,t1.client_id 客户ID
    ,t1.id task_id
    ,t1.pno 运单号
    ,case t1.self_claim
        when 1 then '是'
        when 0 then '否'
    end 自主理赔
    ,case t1.duty_result
        when 1 then '丢失'
        when 2 then '破损'
        when 3 then '超时效'
    end 判责类型
    ,t1.COGS
    ,t1.duty_stores 判责网点
    ,t1.reasons 判责原因
    ,t1.area 区域
    ,date(t1.updated_at) p_date
from t t1;
;-- -. . -..- - / . -. - .-. -.--
select
    ci.pno
    ,pci.created_at 询问任务创建时间
    ,if(pi.state = 5, convert_tz(pi.finished_at, '+00:00', '+07:00'), null) 签收时间
    ,case ci.channel_category # 渠道
         when 0 then '电话'
         when 1 then '电子邮件'
         when 2 then '网页'
         when 3 then '网点'
         when 4 then '自主投诉页面'
         when 5 then '网页（facebook）'
         when 6 then 'APPSTORE'
         when 7 then 'Lazada系统'
         when 8 then 'Shopee系统'
         when 9 then 'TikTok'
    end  任务来源
    ,datediff(pci.created_at, if(pi.state = 5, convert_tz(pi.finished_at, '+00:00', '+07:00'), null)) 间隔天数
    ,case  pci.client_type
        when 1 then 'lazada'
        when 2 then 'shopee'
        when 3 then 'tiktok'
        when 4 then 'shein'
        when 5 then 'otherKAM'
        when 6 then 'otherKA'
        when 7 then '小C'
    end 客户类型
    ,pi.cod_amount/100 COD金额
    ,if(pci.callback_state = 4 or (pci.callback_state = 2 and qaqc_is_receive_parcel = 3), '是', '否') 是否丢失
    ,if(ci2.pno is not null, '是', '否') 是否索赔
from fle_staging.customer_issue ci
left join bi_center.parcel_complaint_inquiry pci on pci.source_id = ci.id
left join fle_staging.parcel_info pi on pi.pno = ci.pno
left join fle_staging.customer_issue ci2 on ci2.pno = ci.pno and ci2.request_sup_type = 14 and ci2.request_sub_type = 140
where
    (
        (ci.request_sup_type = 22 and ci.request_sub_type in (221,300))
        or (ci.request_sup_type = 16 and ci.request_sub_type = 160 and ci.request_sul_type = 55)
    )
    and pci.created_at >=  '2023-12-29'
group by 1;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
            pct.source
            ,pct.pno
            ,pct.state pct_state
            ,pct.client_id
            ,pct.created_at
        from bi_pro.parcel_claim_task pct
        join fle_staging.parcel_info pi on pct.pno = pi.pno
        where
            pct.created_at >= '2023-11-30 17:00:00'
            and pct.created_at < '2023-12-31 17:00:00'
            and pi.returned = 1
    )
select
    a1.pno
    ,case a1.source
        WHEN 1 THEN 'A-问题件-丢失'
        WHEN 2 THEN 'B-记录本-丢失'
        WHEN 3 THEN 'C-包裹状态未更新'
        WHEN 4 THEN 'D-问题件-破损/短少'
        WHEN 5 THEN 'E-记录本-索赔-丢失'
        WHEN 6 THEN 'F-记录本-索赔-破损/短少'
        WHEN 7 THEN 'G-记录本-索赔-其他'
        WHEN 8 THEN 'H-包裹状态未更新-IPC计数'
        WHEN 9 THEN 'I-问题件-外包装破损险'
        WHEN 10 THEN 'J-问题记录本-外包装破损险'
        when 11 then 'K-超时效包裹'
        when 12 then 'L-高度疑似丢失'
    end 问题来源渠道
    ,pi.cod_amount/100 COD
    ,if(sct.pno is not null, '是', '否') 是否有判责属实
    ,case a1.pct_state
        when 1 then '待协商'
        when 2 then '协商不一致，待重新协商'
        when 3 then '待财务核实'
        when 4 then '核实通过，待财务支付'
        when 5 then '财务驳回'
        when 6 then '理赔完成'
        when 7 then '理赔终止'
        when 8 then '异常关闭'
        when 9 then' 待协商（搁置）'
        when 10 then '等待再次联系'
    end 理赔状态
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as 客户类型
from
    (
        select
            a.*
        from
            (
                select
                    pr.state
                    ,t1.*
                    ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
                from rot_pro.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.routed_at < date_sub(t1.created_at, interval 8 hour)
            ) a
        where
            a.rk = 1
    ) a1
left join fle_staging.parcel_info pi on pi.returned_pno = a1.pno
left join bi_pro.ss_court_task sct on sct.pno = a1.pno  and sct.state = 3
left join fle_staging.ka_profile kp on kp.id = a1.client_id
left join dwm.tmp_ex_big_clients_id_detail  bc on bc.client_id = a1.client_id
where
    a1.state in (1,2,3,4,6);
;-- -. . -..- - / . -. - .-. -.--
select
    t.pno
    ,t.return_pno
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as 客户类型
    ,if(f.pno is not null, '是', '否') 正向单号是否有理赔任务
    ,case f.source
        WHEN 1 THEN 'A-问题件-丢失'
        WHEN 2 THEN 'B-记录本-丢失'
        WHEN 3 THEN 'C-包裹状态未更新'
        WHEN 4 THEN 'D-问题件-破损/短少'
        WHEN 5 THEN 'E-记录本-索赔-丢失'
        WHEN 6 THEN 'F-记录本-索赔-破损/短少'
        WHEN 7 THEN 'G-记录本-索赔-其他'
        WHEN 8 THEN 'H-包裹状态未更新-IPC计数'
        WHEN 9 THEN 'I-问题件-外包装破损险'
        WHEN 10 THEN 'J-问题记录本-外包装破损险'
        when 11 then 'K-超时效包裹'
        when 12 then 'L-高度疑似丢失'
    end 正向单号问题来源渠道
    ,case f.state
        when 1 then '待协商'
        when 2 then '协商不一致，待重新协商'
        when 3 then '待财务核实'
        when 4 then '核实通过，待财务支付'
        when 5 then '财务驳回'
        when 6 then '理赔完成'
        when 7 then '理赔终止'
        when 8 then '异常关闭'
        when 9 then' 待协商（搁置）'
        when 10 then '等待再次联系'
    end 正向单号理赔状态
    ,if(r.pno is not null, '是', '否') 退件单号是否有理赔任务
    ,case r.source
        WHEN 1 THEN 'A-问题件-丢失'
        WHEN 2 THEN 'B-记录本-丢失'
        WHEN 3 THEN 'C-包裹状态未更新'
        WHEN 4 THEN 'D-问题件-破损/短少'
        WHEN 5 THEN 'E-记录本-索赔-丢失'
        WHEN 6 THEN 'F-记录本-索赔-破损/短少'
        WHEN 7 THEN 'G-记录本-索赔-其他'
        WHEN 8 THEN 'H-包裹状态未更新-IPC计数'
        WHEN 9 THEN 'I-问题件-外包装破损险'
        WHEN 10 THEN 'J-问题记录本-外包装破损险'
        when 11 then 'K-超时效包裹'
        when 12 then 'L-高度疑似丢失'
    end 退件单号问题来源渠道
    ,case r.state
        when 1 then '待协商'
        when 2 then '协商不一致，待重新协商'
        when 3 then '待财务核实'
        when 4 then '核实通过，待财务支付'
        when 5 then '财务驳回'
        when 6 then '理赔完成'
        when 7 then '理赔终止'
        when 8 then '异常关闭'
        when 9 then' 待协商（搁置）'
        when 10 then '等待再次联系'
    end 退件单号理赔状态
from tmpale.tmp_th_pno_lj_0110 t
left join
    (
        select
            pct.pno
            ,pct.state
            ,pct.source
        from bi_pro.parcel_claim_task pct
        join tmpale.tmp_th_pno_lj_0110 t on t.pno = pct.pno
    ) f on f.pno = t.pno
left join
    (
        select
            pct.pno
            ,pct.state
            ,pct.source
        from bi_pro.parcel_claim_task pct
        join tmpale.tmp_th_pno_lj_0110 t on t.return_pno = pct.pno
    ) r on r.pno = t.return_pno
left join fle_staging.parcel_info pi on pi.pno = t.pno
left join fle_staging.ka_profile kp on kp.id = pi.client_id
left join dwm.tmp_ex_big_clients_id_detail  bc on bc.client_id = pi.client_id;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
            acc.pno
            ,am.abnormal_time
            ,am.punish_category
            ,acc.complaints_type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
        from bi_pro.abnormal_customer_complaint acc
        left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id
        left join fle_staging.parcel_info pi on pi.pno = acc.pno  and pi.created_at > date_sub(curdate(), interval 3 month)
        where
            am.abnormal_time >= '2024-01-04'
            and am.abnormal_time <= '2024-01-05'
            and
                (
                    am.punish_category = 7
                    or acc.complaints_type = 1
                )
        and pi.state = 5
        group by 1,2,3,4,5,6
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > date_sub(curdate(), interval 2 month)
            and pr.routed_at < t1.finished_at
    )
select
    t1.pno
    ,pi.dst_store_id 目的地网点ID
    ,pi.ticket_delivery_staff_info_id 妥投快递员
    ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
    ,pi.cod_amount cod金额
    ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
    ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
    ,pi.exhibition_weight 重量
    ,pi.exhibition_length 长
    ,pi.exhibition_width 宽
    ,pi.exhibition_height 高
    ,pi.dst_phone 收件人电话
    ,pi.dst_province_code 收件省ID
    ,pi.dst_city_code 收件城市ID
    ,pi.dst_district_code 收件乡ID
    ,pi.dst_postal_code 收件邮编
    ,pi.src_phone 寄件人电话
    ,pi.src_province_code 发件省ID
    ,pi.src_city_code 发件城市ID
    ,pi.src_district_code 发件乡ID
    ,pi.src_postal_code 发件邮编
    ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
    ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
    ,scan.scan_count 当日交接量
    ,scan.del_count 当日妥投量
    ,scan.del_rate 当日妥投率
    ,dis.distance/1000 当日行驶里程km
    ,pi.client_id 客户ID
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null
        and bc.id is null then '普通ka'
        when kp.`id` is null then '小c'
      end as 客户类型
    ,case
        when t1.`punish_category` = 7 then '已妥投未收到包裹'
        when t1.complaints_type = 1 then '虚假妥投'
      end as '判责类型'
    ,p1.call_num 最后一次电话通话
    ,p1.diao_num 最后一次电话响铃
    ,if(p2.pno is not null , 'y', 'n')  是否沟通
    ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
    ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
    ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
    ,ab.abnormal_count 近三月处罚次数
from fle_staging.parcel_info pi
join t t1 on t1.pno = pi.pno
left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.abnormal_time
left join
    (
        select
            t1.ticket_delivery_staff_info_id
            ,t1.abnormal_time
            ,count(distinct pr.pno) scan_count
            ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.abnormal_time, interval 7 hour) and pi.finished_at < date_add(t1.abnormal_time, interval 17 hour), pr.pno, null)) del_count
            ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.abnormal_time, interval 7 hour) and pi.finished_at < date_add(t1.abnormal_time, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
        from rot_pro.parcel_route pr
        join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
        left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 3 month)
        where
            pr.routed_at > '2024-01-01'
            and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
            and pr.routed_at >= date_sub(t1.abnormal_time, interval 7 hour)
            and pr.routed_at < date_add(t1.abnormal_time, interval 17 hour)
            and pr.staff_info_id = t1.ticket_delivery_staff_info_id
        group by 1,2
    ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.abnormal_time = t1.abnormal_time
left join
    (
        select
            t1.abnormal_time
            ,t1.ticket_delivery_staff_info_id
            ,max(ccd.coordinate_distance) distance
        from rev_pro.courier_coordinate_distance ccd
        join t t1 on t1.abnormal_time = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
        where
            ccd.created_at > '2024-01-01'
        group by 1,2
    ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.abnormal_time = t1.abnormal_time
left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
left join fle_staging.ka_profile kp on pi.client_id = kp.id
left join pho p1 on p1.pno = t1.pno and p1.rk = 1
left join
    (
        select
            p1.pno
        from pho p1
        where
            p1.call_num > 0
        group by 1
    ) p2 on p2.pno = t1.pno
left join
    (-- 近3月处罚次数
        select
            am.staff_info_id
            ,count(distinct case when am.punish_category = 7 then am.id when acc.complaints_type = 1 then acc.abnormal_message_id end ) abnormal_count
        from bi_pro.abnormal_message am
        join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
        left join bi_pro.abnormal_customer_complaint acc on am.id = acc.abnormal_message_id
        where
            am.created_at >= date_sub(curdate(), interval 3 month)
            and am.isdel = 0 -- 未删除
            and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
        group by 1
    ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
        select
            acc.pno
            ,am.abnormal_time
            ,am.punish_category
            ,acc.complaints_type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
        from bi_pro.abnormal_customer_complaint acc
        left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id
        left join fle_staging.parcel_info pi on pi.pno = acc.pno  and pi.created_at > date_sub(curdate(), interval 3 month)
        where
            am.abnormal_time >= '2023-12-01'
            and am.abnormal_time <= '2024-01-10'
            and
                (
                    am.punish_category = 7
                    or acc.complaints_type = 1
                )
        and pi.state = 5
        group by 1,2,3,4,5,6
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > date_sub(curdate(), interval 2 month)
            and pr.routed_at < t1.finished_at
    )
select
    t1.pno
    ,pi.dst_store_id 目的地网点ID
    ,pi.ticket_delivery_staff_info_id 妥投快递员
    ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
    ,pi.cod_amount cod金额
    ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
    ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
    ,pi.exhibition_weight 重量
    ,pi.exhibition_length 长
    ,pi.exhibition_width 宽
    ,pi.exhibition_height 高
    ,pi.dst_phone 收件人电话
    ,pi.dst_province_code 收件省ID
    ,pi.dst_city_code 收件城市ID
    ,pi.dst_district_code 收件乡ID
    ,pi.dst_postal_code 收件邮编
    ,pi.src_phone 寄件人电话
    ,pi.src_province_code 发件省ID
    ,pi.src_city_code 发件城市ID
    ,pi.src_district_code 发件乡ID
    ,pi.src_postal_code 发件邮编
    ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
    ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
    ,scan.scan_count 当日交接量
    ,scan.del_count 当日妥投量
    ,scan.del_rate 当日妥投率
    ,dis.distance/1000 当日行驶里程km
    ,pi.client_id 客户ID
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null
        and bc.id is null then '普通ka'
        when kp.`id` is null then '小c'
      end as 客户类型
    ,case
        when t1.`punish_category` = 7 then '已妥投未收到包裹'
        when t1.complaints_type = 1 then '虚假妥投'
      end as '判责类型'
    ,p1.call_num 最后一次电话通话
    ,p1.diao_num 最后一次电话响铃
    ,if(p2.pno is not null , 'y', 'n')  是否沟通
    ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
    ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
    ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
    ,ab.abnormal_count 近三月处罚次数
from fle_staging.parcel_info pi
join t t1 on t1.pno = pi.pno
left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.abnormal_time
left join
    (
        select
            t1.ticket_delivery_staff_info_id
            ,t1.abnormal_time
            ,count(distinct pr.pno) scan_count
            ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.abnormal_time, interval 7 hour) and pi.finished_at < date_add(t1.abnormal_time, interval 17 hour), pr.pno, null)) del_count
            ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.abnormal_time, interval 7 hour) and pi.finished_at < date_add(t1.abnormal_time, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
        from rot_pro.parcel_route pr
        join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
        left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 3 month)
        where
            pr.routed_at > '2023-11-01'
            and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
            and pr.routed_at >= date_sub(t1.abnormal_time, interval 7 hour)
            and pr.routed_at < date_add(t1.abnormal_time, interval 17 hour)
            and pr.staff_info_id = t1.ticket_delivery_staff_info_id
        group by 1,2
    ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.abnormal_time = t1.abnormal_time
left join
    (
        select
            t1.abnormal_time
            ,t1.ticket_delivery_staff_info_id
            ,max(ccd.coordinate_distance) distance
        from rev_pro.courier_coordinate_distance ccd
        join t t1 on t1.abnormal_time = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
        where
            ccd.created_at > '2023-11-01'
        group by 1,2
    ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.abnormal_time = t1.abnormal_time
left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
left join fle_staging.ka_profile kp on pi.client_id = kp.id
left join pho p1 on p1.pno = t1.pno and p1.rk = 1
left join
    (
        select
            p1.pno
        from pho p1
        where
            p1.call_num > 0
        group by 1
    ) p2 on p2.pno = t1.pno
left join
    (-- 近3月处罚次数
        select
            am.staff_info_id
            ,count(distinct case when am.punish_category = 7 then am.id when acc.complaints_type = 1 then acc.abnormal_message_id end ) abnormal_count
        from bi_pro.abnormal_message am
        join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
        left join bi_pro.abnormal_customer_complaint acc on am.id = acc.abnormal_message_id
        where
            am.created_at >= date_sub(curdate(), interval 3 month)
            and am.isdel = 0 -- 未删除
            and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
        group by 1
    ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
select
            pi.pno
            ,date_format(pi.finished_at,"%Y%m%d") abnormal_time
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
        from fle_staging.parcel_info pi
        left join bi_pro.abnormal_customer_complaint acc on pi.pno = acc.pno
        left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id
        where
            pi.finished_at >= '2023-11-30 17:00:00'
            and pi.finished_at <= '2023-12-10 17:00:00'
            and pi.state = 5
            -- and pi.pno='TH03054WMWGM5A'
            and (am.punish_category != 7 or am.punish_category is null)
            and (acc.complaints_type != 1 or am.punish_category is null)
            and pi.created_at > date_sub(curdate(), interval 3 month)
        group by 1 LIMIT 15000;
;-- -. . -..- - / . -. - .-. -.--
with
#     t as
#     (
#         select
#             pi.pno
#             ,date_format(pi.finished_at,"%Y%m%d") abnormal_time
#             ,pi.ticket_delivery_staff_info_id
#             ,pi.finished_at
#         from fle_staging.parcel_info pi
#         left join bi_pro.abnormal_customer_complaint acc on pi.pno = acc.pno
#         left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id
#         where
#             pi.finished_at >= '2023-11-30 17:00:00'
#             and pi.finished_at <= '2023-12-10 17:00:00'
#             and pi.state = 5
#             -- and pi.pno='TH03054WMWGM5A'
#             and (am.punish_category != 7 or am.punish_category is null)
#             and (acc.complaints_type != 1 or am.punish_category is null)
#             and pi.created_at > date_sub(curdate(), interval 3 month)
#         group by 1 LIMIT 15000
#     )
# ,
    pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join tmpale.tmp_th_pno_lj_0111 t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > date_sub(curdate(), interval 2 month)
            and pr.routed_at < t1.finished_at
    )

select
    t1.pno
    ,pi.dst_store_id 目的地网点ID
    ,pi.ticket_delivery_staff_info_id 妥投快递员
    ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
    ,pi.cod_amount cod金额
    ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
    ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
    ,pi.exhibition_weight 重量
    ,pi.exhibition_length 长
    ,pi.exhibition_width 宽
    ,pi.exhibition_height 高
    ,pi.dst_phone 收件人电话
    ,pi.dst_province_code 收件省ID
    ,pi.dst_city_code 收件城市ID
    ,pi.dst_district_code 收件乡ID
    ,pi.dst_postal_code 收件邮编
    ,pi.src_phone 寄件人电话
    ,pi.src_province_code 发件省ID
    ,pi.src_city_code 发件城市ID
    ,pi.src_district_code 发件乡ID
    ,pi.src_postal_code 发件邮编
    ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
    ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
    ,scan.scan_count 当日交接量
    ,scan.del_count 当日妥投量
    ,scan.del_rate 当日妥投率
    ,dis.distance/1000 当日行驶里程km
    ,pi.client_id 客户ID
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null
        and bc.id is null then '普通ka'
        when kp.`id` is null then '小c'
      end as 客户类型
    ,'未投诉' as '判责类型'
    ,p1.call_num 最后一次电话通话
    ,p1.diao_num 最后一次电话响铃
    ,if(p2.pno is not null , 'y', 'n')  是否沟通
    ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
    ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
    ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
    ,ab.abnormal_count 近三月处罚次数
from fle_staging.parcel_info pi
join tmpale.tmp_th_pno_lj_0111 t1 on t1.pno = pi.pno
left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.abnormal_time
left join
    (
        select
            t1.ticket_delivery_staff_info_id
            ,t1.abnormal_time
            ,count(distinct pr.pno) scan_count
            ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.abnormal_time, interval 7 hour) and pi.finished_at < date_add(t1.abnormal_time, interval 17 hour), pr.pno, null)) del_count
            ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.abnormal_time, interval 7 hour) and pi.finished_at < date_add(t1.abnormal_time, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
        from rot_pro.parcel_route pr
        join tmpale.tmp_th_pno_lj_0111 t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
        left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 3 month)
        where
            pr.routed_at > '2023-10-25'
            and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
            and pr.routed_at >= date_sub(t1.abnormal_time, interval 7 hour)
            and pr.routed_at < date_add(t1.abnormal_time, interval 17 hour)
            and pr.staff_info_id = t1.ticket_delivery_staff_info_id
        group by 1,2
    ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.abnormal_time = t1.abnormal_time
left join
    (
        select
            t1.abnormal_time
            ,t1.ticket_delivery_staff_info_id
            ,max(ccd.coordinate_distance) distance
        from rev_pro.courier_coordinate_distance ccd
        join tmpale.tmp_th_pno_lj_0111 t1 on t1.abnormal_time = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
        where
            ccd.created_at > '2023-11-20'
        group by 1,2
    ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.abnormal_time = t1.abnormal_time
left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
left join fle_staging.ka_profile kp on pi.client_id = kp.id
left join pho p1 on p1.pno = t1.pno and p1.rk = 1
left join
    (
        select
            p1.pno
        from pho p1
        where
            p1.call_num > 0
        group by 1
    ) p2 on p2.pno = t1.pno
left join
    (
        select
            am.staff_info_id
            ,count(distinct case when am.punish_category = 7 then am.id when acc.complaints_type = 1 then acc.abnormal_message_id end ) abnormal_count
        from bi_pro.abnormal_message am
        join tmpale.tmp_th_pno_lj_0111 t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
        left join bi_pro.abnormal_customer_complaint acc on am.id = acc.abnormal_message_id
        where
            am.created_at >= date_sub(curdate(), interval 3 month)
            and am.isdel = 0
            and (am.isappeal < 5 or am.isappeal is null )
        group by 1
    ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
select
    a.merge_column 单号
    ,a.client_name 客户类型
    ,a.apology_staff_info_id 上传凭证人
    ,dt.piece_name 片区
    ,dt.region_name 大区
    ,a.call_back_period 回访时效节点
    ,timestampdiff(minute, a.call_back_period, a.apology_at)/60 '上传证据时间-回访时效时间差'
    ,a.client_period 平台时效节点
from
    (
        select
            pci.merge_column
            ,case  pci.client_type
                when 1 then 'lazada'
                when 2 then 'shopee'
                when 3 then 'tiktok'
                when 4 then 'shein'
                when 5 then 'otherKAM'
                when 6 then 'otherKA'
                when 7 then '小C'
            end client_name
            ,case
                when pci.client_type = 1 and pci.created_at <= date_add(date(pci.created_at), interval 16 hour) then date_add(date(pci.created_at), interval 24 hour)
                when pci.client_type = 1 and pci.created_at > date_add(date(pci.created_at), interval 16 hour) then date_add(date(pci.created_at), interval 32 hour)
                when pci.client_type != 1 then date_add(pci.created_at, interval 48 hour)
            end call_back_period
            ,case
                when pci.client_type = 1  then date_add(pci.created_at, interval 48 hour)
                when pci.client_type != 1 then date_add(pci.created_at, interval 72 hour)
            end client_period
            ,pci.apology_at
            ,pci.apology_staff_info_id
        from bi_center.parcel_complaint_inquiry pci
        where
            pci.callback_state != 0
            and pci.apology_evidence is not null
            and pci.created_at >= '2023-12-29'
    ) a
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a.apology_staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id;
;-- -. . -..- - / . -. - .-. -.--
select
            pci.merge_column
            ,case  pci.client_type
                when 1 then 'lazada'
                when 2 then 'shopee'
                when 3 then 'tiktok'
                when 4 then 'shein'
                when 5 then 'otherKAM'
                when 6 then 'otherKA'
                when 7 then '小C'
            end client_name
            ,case
                when pci.client_type = 1 and pci.created_at <= date_add(date(pci.created_at), interval 16 hour) then date_add(date(pci.created_at), interval 24 hour)
                when pci.client_type = 1 and pci.created_at > date_add(date(pci.created_at), interval 16 hour) then date_add(date(pci.created_at), interval 32 hour)
                when pci.client_type != 1 then date_add(pci.created_at, interval 48 hour)
            end call_back_period
            ,case
                when pci.client_type = 1  then date_add(pci.created_at, interval 48 hour)
                when pci.client_type != 1 then date_add(pci.created_at, interval 72 hour)
            end client_period
            ,pci.apology_at
            ,pci.apology_staff_info_id
        from bi_center.parcel_complaint_inquiry pci
        where
            pci.callback_state != 0
            and pci.apology_evidence is not null
            and pci.created_at >= '2023-12-29';
;-- -. . -..- - / . -. - .-. -.--
select
    a.merge_column 单号
    ,a.client_name 客户类型
    ,a.apology_staff_info_id 上传凭证人
    ,dt.piece_name 片区
    ,dt.region_name 大区
    ,a.call_back_period 回访时效节点
    ,timestampdiff(minute, a.call_back_period, a.apology_at)/60 '上传证据时间-回访时效时间差'
    ,a.client_period 平台时效节点
from
    (
        select
            pci.merge_column
            ,case  pci.client_type
                when 1 then 'lazada'
                when 2 then 'shopee'
                when 3 then 'tiktok'
                when 4 then 'shein'
                when 5 then 'otherKAM'
                when 6 then 'otherKA'
                when 7 then '小C'
            end client_name
            ,case
                when pci.client_type = 1 and pci.created_at <= date_add(date(pci.created_at), interval 16 hour) then date_add(date(pci.created_at), interval 24 hour)
                when pci.client_type = 1 and pci.created_at > date_add(date(pci.created_at), interval 16 hour) then date_add(date(pci.created_at), interval 32 hour)
                when pci.client_type != 1 then date_add(pci.created_at, interval 48 hour)
            end call_back_period
            ,case
                when pci.client_type = 1  then date_add(pci.created_at, interval 48 hour)
                when pci.client_type != 1 then date_add(pci.created_at, interval 72 hour)
            end client_period
            ,pci.apology_at
            ,pci.apology_staff_info_id
        from bi_center.parcel_complaint_inquiry pci
        where
            pci.callback_state != 0
            and pci.apology_evidence is not null
            and pci.created_at >= '2023-12-29'
    ) a
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a.apology_staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and DT.stat_date = '2024-01-10';
;-- -. . -..- - / . -. - .-. -.--
select
    a.merge_column 单号
    ,a.client_name 客户类型
    ,a.apology_staff_info_id 上传凭证人
    ,dt.piece_name 片区
    ,dt.region_name 大区
    ,a.call_back_period 回访时效节点
    ,timestampdiff(minute, a.call_back_period, a.apology_at)/60 '上传证据时间-回访时效时间差'
    ,a.client_period 平台时效节点
from
    (
        select
            pci.merge_column
            ,case  pci.client_type
                when 1 then 'lazada'
                when 2 then 'shopee'
                when 3 then 'tiktok'
                when 4 then 'shein'
                when 5 then 'otherKAM'
                when 6 then 'otherKA'
                when 7 then '小C'
            end client_name
            ,case
                when pci.client_type = 1 and pci.created_at <= date_add(date(pci.created_at), interval 16 hour) then date_add(date(pci.created_at), interval 24 hour)
                when pci.client_type = 1 and pci.created_at > date_add(date(pci.created_at), interval 16 hour) then date_add(date(pci.created_at), interval 32 hour)
                when pci.client_type != 1 then date_add(pci.created_at, interval 48 hour)
            end call_back_period
            ,case
                when pci.client_type = 1  then date_add(pci.created_at, interval 48 hour)
                when pci.client_type != 1 then date_add(pci.created_at, interval 72 hour)
            end client_period
            ,pci.apology_at
            ,pci.apology_staff_info_id
        from bi_center.parcel_complaint_inquiry pci
        where
            pci.callback_state != 0
            and pci.apology_evidence != ''
            and pci.created_at >= '2023-12-29'
    ) a
left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = a.apology_staff_info_id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = hsi.sys_store_id and DT.stat_date = '2024-01-10';
;-- -. . -..- - / . -. - .-. -.--
select
    a2.*
from
    (
        select
              pc.*
              ,client_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
                    and sc.cfg_value = 'all'
            ) pc
        lateral view explode(split(pc.cfg_value, ',')) id as client_id
    ) a1
join
    (
        select
            pi.client_id
            ,count(distinct prr.pno) pno_count
        from fle_staging.parcel_reject_report_info prr
        left join fle_staging.parcel_info pi on pi.pno = prr.pno
        where
            prr.created_at >= '2024-01-14 16:00:00'
            and prr.state = 2
        group by 1
    ) a2 on a2.client_id = a1.client_id;
;-- -. . -..- - / . -. - .-. -.--
select
              pc.*
              ,client_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
                    and sc.cfg_value = 'all'
            ) pc
        lateral view explode(split(pc.cfg_value, ',')) id as client_id;
;-- -. . -..- - / . -. - .-. -.--
select
              pc.*
              ,client_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
                    and sc.cfg_value != 'all'
            ) pc
        lateral view explode(split(pc.cfg_value, ',')) id as client_id;
;-- -. . -..- - / . -. - .-. -.--
select
    a2.*
from
    (
        select
              pc.*
              ,client_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
                    and sc.cfg_value != 'all'
            ) pc
        lateral view explode(split(pc.cfg_value, ',')) id as client_id
    ) a1
join
    (
        select
            pi.client_id
            ,count(distinct prr.pno) pno_count
        from fle_staging.parcel_reject_report_info prr
        left join fle_staging.parcel_info pi on pi.pno = prr.pno
        where
            prr.created_at >= '2024-01-14 16:00:00'
            and prr.state = 2
        group by 1
    ) a2 on a2.client_id = a1.client_id;
;-- -. . -..- - / . -. - .-. -.--
select
            pi.client_id
            ,count(distinct prr.pno) pno_count
        from fle_staging.parcel_reject_report_info prr
        left join fle_staging.parcel_info pi on pi.pno = prr.pno
        where
            prr.created_at >= '2024-01-14 16:00:00'
            and prr.state = 2
        group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
    a2.*
from
    (
        select
            sc.cfg_value
        from fle_staging.sys_configuration sc
        where
            sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
            and sc.cfg_value = 'all'
    ) a1
cross join
    (
        select
            pi.client_id
            ,count(distinct if(prr.state in (1,2), prr.pno, null)) 当日拒收问题件量
            ,count(distinct if(prr.state in (2), prr.pno, null)) 当日提交拒收复核单量
        from fle_staging.parcel_reject_report_info prr
        left join fle_staging.parcel_info pi on pi.pno = prr.pno
        where
            prr.created_at >= '2024-01-14 16:00:00'
           -- and prr.state = 2
        group by 1
    ) a2

union all

select
    a2.*
from
    (
        select
              pc.*
              ,client_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
                    and sc.cfg_value != 'all'
            ) pc
        lateral view explode(split(pc.cfg_value, ',')) id as client_id
    ) a1
join
    (
        select
            pi.client_id
            ,count(distinct if(prr.state in (1,2), prr.pno, null)) 当日拒收问题件量
            ,count(distinct if(prr.state in (2), prr.pno, null)) 当日提交拒收复核单量
        from fle_staging.parcel_reject_report_info prr
        left join fle_staging.parcel_info pi on pi.pno = prr.pno
        where
            prr.created_at >= '2024-01-14 16:00:00'
           -- and prr.state = 2
        group by 1
    ) a2 on a2.client_id = a1.client_id;
;-- -. . -..- - / . -. - .-. -.--
select
    dt.region_name
    ,dt.piece_name
    ,dt.store_name
    ,a3.store_id
    ,count(distinct if(a3.state in (1,2), a3.pno, null)) 当日拒收问题件数量
    ,count(distinct if(a3.state in (1,2) and ( a3.cod_amount > val.cfg_value or a3.insure_declare_value > val.cfg_value or pai.cogs_amount > val.cfg_value ), a3.pno, null)) 当日满足强制拒收复核需上报的量
    ,count(distinct if(a3.state in (2), a3.pno, null)) 当日提交拒收复核单数量
from
    (
        select
              pc.*
              ,store_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.storeId.enabled'
            ) pc
        lateral view explode(split(pc.cfg_value, ',')) id as store_id
    ) a1
cross join
    (
        select
              pc.*
              ,client_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
                    and sc.cfg_value != 'all'
            ) pc
        lateral view explode(split(pc.cfg_value, ',')) id as client_id
    ) a2
join
    (
        select
            prr.pno
            ,prr.store_id
            ,prr.state
            ,pi.client_id
            ,pi.cod_amount
            ,pi.insure_declare_value
        from fle_staging.parcel_reject_report_info prr
        left join fle_staging.parcel_info pi on pi.pno = prr.pno
        where
            prr.created_at >= '2024-01-14 16:00:00'
            and prr.state = 2
        group by 1
    ) a3 on a3.store_id = a1.store_id and a3.client_id = a2.client_id
cross join
    (
        select
            sc.cfg_value
        from fle_staging.sys_configuration sc
        where
            sc.cfg_key = 'reject.force.report.high.value.min.config'
    ) val
left join dwm.dim_th_sys_store_rd dt on dt.store_id = a3.store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join fle_staging.parcel_additional_info pai on pai.pno = a3.pno;
;-- -. . -..- - / . -. - .-. -.--
select
    dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a3.store_id 网点ID
    ,count(distinct if(a3.state in (1,2), a3.pno, null)) 当日拒收问题件数量
    ,count(distinct if(a3.state in (1,2) and ( a3.cod_amount > val.cfg_value or a3.insure_declare_value > val.cfg_value or pai.cogs_amount > val.cfg_value ), a3.pno, null)) 当日满足强制拒收复核需上报的量
    ,count(distinct if(a3.state in (2), a3.pno, null)) 当日提交拒收复核单数量
from
    (
        select
              pc.*
              ,store_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.storeId.enabled'
            ) pc
        lateral view explode(split(pc.cfg_value, ',')) id as store_id
    ) a1
cross join
    (
        select
              pc.*
              ,client_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
                    and sc.cfg_value != 'all'
            ) pc
        lateral view explode(split(pc.cfg_value, ',')) id as client_id
    ) a2
join
    (
        select
            prr.pno
            ,prr.store_id
            ,prr.state
            ,pi.client_id
            ,pi.cod_amount
            ,pi.insure_declare_value
        from fle_staging.parcel_reject_report_info prr
        left join fle_staging.parcel_info pi on pi.pno = prr.pno
        where
            prr.created_at >= '2024-01-14 16:00:00'
            and prr.state = 2
        group by 1
    ) a3 on a3.store_id = a1.store_id and a3.client_id = a2.client_id
cross join
    (
        select
            sc.cfg_value
        from fle_staging.sys_configuration sc
        where
            sc.cfg_key = 'reject.force.report.high.value.min.config'
    ) val
left join dwm.dim_th_sys_store_rd dt on dt.store_id = a3.store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join fle_staging.parcel_additional_info pai on pai.pno = a3.pno
group by 1,2,3,4;
;-- -. . -..- - / . -. - .-. -.--
select
    dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.store_id 网点ID
    ,count(distinct if(a3.state in (1,2), a3.pno, null)) 当日拒收问题件数量
    ,count(distinct if(a3.state in (1,2) and ( a3.cod_amount > val.cfg_value or a3.insure_declare_value > val.cfg_value or pai.cogs_amount > val.cfg_value ), a3.pno, null)) 当日满足强制拒收复核需上报的量
    ,count(distinct if(a3.state in (2), a3.pno, null)) 当日提交拒收复核单数量
from
    (
        select
              pc.*
              ,store_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.storeId.enabled'
            ) pc
        lateral view explode(split(pc.cfg_value, ',')) id as store_id
    ) a1
cross join
    (
        select
              pc.*
              ,client_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
                    and sc.cfg_value != 'all'
            ) pc
        lateral view explode(split(pc.cfg_value, ',')) id as client_id
    ) a2
left join
    (
        select
            prr.pno
            ,prr.store_id
            ,prr.state
            ,pi.client_id
            ,pi.cod_amount
            ,pi.insure_declare_value
        from fle_staging.parcel_reject_report_info prr
        left join fle_staging.parcel_info pi on pi.pno = prr.pno
        where
            prr.created_at >= '2024-01-14 16:00:00'
            and prr.state = 2
        group by 1
    ) a3 on a3.store_id = a1.store_id and a3.client_id = a2.client_id
cross join
    (
        select
            sc.cfg_value
        from fle_staging.sys_configuration sc
        where
            sc.cfg_key = 'reject.force.report.high.value.min.config'
    ) val
left join dwm.dim_th_sys_store_rd dt on dt.store_id = a1.store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join fle_staging.parcel_additional_info pai on pai.pno = a3.pno
group by 1,2,3,4;
;-- -. . -..- - / . -. - .-. -.--
select
    dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.store_id 网点ID
    ,a2.client_id 客户ID
    ,count(distinct if(a3.state in (1,2), a3.pno, null)) 当日拒收问题件数量
    ,count(distinct if(a3.state in (1,2) and ( a3.cod_amount > val.cfg_value or a3.insure_declare_value > val.cfg_value or pai.cogs_amount > val.cfg_value ), a3.pno, null)) 当日满足强制拒收复核需上报的量
    ,count(distinct if(a3.state in (2), a3.pno, null)) 当日提交拒收复核单数量
from
    (
        select
              pc.*
              ,store_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.storeId.enabled'
            ) pc
        lateral view explode(split(pc.cfg_value, ',')) id as store_id
    ) a1
cross join
    (
        select
              pc.*
              ,client_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
                    and sc.cfg_value != 'all'
            ) pc
        lateral view explode(split(pc.cfg_value, ',')) id as client_id
    ) a2
left join
    (
        select
            prr.pno
            ,prr.store_id
            ,prr.state
            ,pi.client_id
            ,pi.cod_amount
            ,pi.insure_declare_value
        from fle_staging.parcel_reject_report_info prr
        left join fle_staging.parcel_info pi on pi.pno = prr.pno
        where
            prr.created_at >= '2024-01-14 16:00:00'
            and prr.state = 2
        group by 1
    ) a3 on a3.store_id = a1.store_id and a3.client_id = a2.client_id
cross join
    (
        select
            sc.cfg_value
        from fle_staging.sys_configuration sc
        where
            sc.cfg_key = 'reject.force.report.high.value.min.config'
    ) val
left join dwm.dim_th_sys_store_rd dt on dt.store_id = a1.store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join fle_staging.parcel_additional_info pai on pai.pno = a3.pno
group by 1,2,3,4,5;
;-- -. . -..- - / . -. - .-. -.--
select
    a2.client_id 客户ID
    ,a2.当日拒收问题件量
    ,a2.当日提交拒收复核单量
from
    (
        select
            sc.cfg_value
        from fle_staging.sys_configuration sc
        where
            sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
            and sc.cfg_value = 'all'
    ) a1
cross join
    (
        select
            pi.client_id
            ,count(distinct if(prr.state in (1,2), prr.pno, null)) 当日拒收问题件量
            ,count(distinct if(prr.state in (2), prr.pno, null)) 当日提交拒收复核单量
        from fle_staging.parcel_reject_report_info prr
        left join fle_staging.parcel_info pi on pi.pno = prr.pno
        where
            prr.created_at >= '2024-01-14 16:00:00'
           -- and prr.state = 2
        group by 1
    ) a2

union all

select
    a2.client_id 客户ID
    ,a2.当日拒收问题件量
    ,a2.当日提交拒收复核单量
from
    (
        select
              pc.*
              ,client_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
                    and sc.cfg_value != 'all'
            ) pc
        lateral view explode(split(pc.cfg_value, ',')) id as client_id
    ) a1
join
    (
        select
            pi.client_id
            ,count(distinct if(prr.state in (1,2), prr.pno, null)) 当日拒收问题件量
            ,count(distinct if(prr.state in (2), prr.pno, null)) 当日提交拒收复核单量
        from fle_staging.parcel_reject_report_info prr
        left join fle_staging.parcel_info pi on pi.pno = prr.pno
        where
            prr.created_at >= '2024-01-14 16:00:00'
           -- and prr.state = 2
        group by 1
    ) a2 on a2.client_id = a1.client_id;
;-- -. . -..- - / . -. - .-. -.--
select
    dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.store_id 网点ID
    ,a2.client_id 客户ID
    ,count(distinct if(a3.state in (1,2), a3.pno, null)) 当日拒收问题件数量
    ,count(distinct if(a3.state in (1,2) and ( a3.cod_amount > val.cfg_value or a3.insure_declare_value > val.cfg_value or pai.cogs_amount > val.cfg_value ), a3.pno, null)) 当日满足强制拒收复核需上报的量
    ,count(distinct if(a3.state in (2), a3.pno, null)) 当日提交拒收复核单数量
from
    (
        select
            a.*
        from
            (
                select
                      pc.*
                      ,store_id
                from
                    (
                        select
                            *
                        from fle_staging.sys_configuration sc
                        where
                            sc.cfg_key = 'reject.warehouse.report.by.storeId.enabled'
                            and sc.cfg_value != 'all'
                    ) pc
                lateral view explode(split(pc.cfg_value, ',')) id as store_id
            ) a

        union all

        select
            pc.*
            ,ss.id store_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.storeId.enabled'
                    and cfg_value = 'all'
            ) pc
        cross join fle_staging.sys_store ss
    ) a1
cross join
    (
        select
              pc.*
              ,client_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
                    and sc.cfg_value != 'all'
            ) pc
        lateral view explode(split(pc.cfg_value, ',')) id as client_id
    ) a2
join
    (
        select
            prr.pno
            ,prr.store_id
            ,prr.state
            ,coalesce(pi.client_id, pi2.client_id) client_id
            ,coalesce(pi.cod_amount, pi2.cod_amount) cod_amount
            ,coalesce(pi.insure_declare_value, pi2.insure_declare_value) insure_declare_value
        from fle_staging.parcel_reject_report_info prr
        left join fle_staging.parcel_info pi on pi.pno = upper(prr.pno)
        left join fle_staging.parcel_info pi2 on pi2.recent_pno = upper(prr.pno)
        where
            prr.created_at >= '2024-01-14 16:00:00'
    ) a3 on a3.store_id = a1.store_id and a3.client_id = a2.client_id
cross join
    (
        select
            sc.cfg_value
        from fle_staging.sys_configuration sc
        where
            sc.cfg_key = 'reject.force.report.high.value.min.config'
    ) val
left join dwm.dim_th_sys_store_rd dt on dt.store_id = a1.store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join fle_staging.parcel_additional_info pai on pai.pno = a3.pno
group by 1,2,3,4,5

union all


select
    dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.store_id 网点ID
    ,a3.client_id 客户ID
    ,count(distinct if(a3.state in (1,2), a3.pno, null)) 当日拒收问题件数量
    ,count(distinct if(a3.state in (1,2) and ( a3.cod_amount > val.cfg_value or a3.insure_declare_value > val.cfg_value or pai.cogs_amount > val.cfg_value ), a3.pno, null)) 当日满足强制拒收复核需上报的量
    ,count(distinct if(a3.state in (2), a3.pno, null)) 当日提交拒收复核单数量
from
    (
        select
            a.*
        from
            (
                select
                      pc.*
                      ,store_id
                from
                    (
                        select
                            *
                        from fle_staging.sys_configuration sc
                        where
                            sc.cfg_key = 'reject.warehouse.report.by.storeId.enabled'
                            and sc.cfg_value != 'all'
                    ) pc
                lateral view explode(split(pc.cfg_value, ',')) id as store_id
            ) a

        union all

        select
            pc.*
            ,ss.id store_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.storeId.enabled'
                    and cfg_value = 'all'
            ) pc
        cross join fle_staging.sys_store ss
    ) a1
cross join
    (
        select
            *
        from fle_staging.sys_configuration sc
        where
            sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
            and sc.cfg_value = 'all'
    ) a2
cross join
    (
        select
            prr.pno
            ,prr.store_id
            ,prr.state
            ,coalesce(pi.client_id, pi2.client_id) client_id
            ,coalesce(pi.cod_amount, pi2.cod_amount) cod_amount
            ,coalesce(pi.insure_declare_value, pi2.insure_declare_value) insure_declare_value
        from fle_staging.parcel_reject_report_info prr
        left join fle_staging.parcel_info pi on pi.pno = upper(prr.pno)
        left join fle_staging.parcel_info pi2 on pi2.recent_pno = upper(prr.pno)
        where
            prr.created_at >= '2024-01-14 16:00:00'
           -- and prr.state = 2
    ) a3 on a3.store_id = a1.store_id
cross join
    (
        select
            sc.cfg_value
        from fle_staging.sys_configuration sc
        where
            sc.cfg_key = 'reject.force.report.high.value.min.config'
    ) val
left join dwm.dim_th_sys_store_rd dt on dt.store_id = a1.store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join fle_staging.parcel_additional_info pai on pai.pno = a3.pno
group by 1,2,3,4,5;
;-- -. . -..- - / . -. - .-. -.--
select
    a2.client_id 客户ID
    ,a2.当日拒收问题件量
    ,a2.当日提交拒收复核单量
from
    (
        select
            sc.cfg_value
        from fle_staging.sys_configuration sc
        where
            sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
            and sc.cfg_value = 'all'
    ) a1
cross join
    (
        select
            pi.client_id
            ,count(distinct if(prr.state in (1,2), prr.pno, null)) 当日拒收问题件量
            ,count(distinct if(prr.state in (2), prr.pno, null)) 当日提交拒收复核单量
        from fle_staging.parcel_reject_report_info prr
        left join fle_staging.parcel_pno_log ppl on ppl.replace_pno = upper(prr.pno)
        left join fle_staging.parcel_info pi on coalesce(ppl.initial_pno, upper(prr.pno)) = pi.pno
        where
            prr.created_at >= '2024-01-14 16:00:00'
           -- and prr.state = 2
        group by 1
    ) a2

union all

select
    a2.client_id 客户ID
    ,a2.当日拒收问题件量
    ,a2.当日提交拒收复核单量
from
    (
        select
              pc.*
              ,client_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
                    and sc.cfg_value != 'all'
            ) pc
        lateral view explode(split(pc.cfg_value, ',')) id as client_id
    ) a1
join
    (
        select
            pi.client_id
            ,count(distinct if(prr.state in (1,2), prr.pno, null)) 当日拒收问题件量
            ,count(distinct if(prr.state in (2), prr.pno, null)) 当日提交拒收复核单量
        from fle_staging.parcel_reject_report_info prr
        left join fle_staging.parcel_pno_log ppl on ppl.replace_pno = upper(prr.pno)
        left join fle_staging.parcel_info pi on coalesce(ppl.initial_pno, upper(prr.pno)) = pi.pno
        where
            prr.created_at >= '2024-01-14 16:00:00'
           -- and prr.state = 2
        group by 1
    ) a2 on a2.client_id = a1.client_id;
;-- -. . -..- - / . -. - .-. -.--
select
    dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.store_id 网点ID
    ,a2.client_id 客户ID
    ,count(distinct if(a3.state in (1,2), a3.pno, null)) 当日拒收问题件数量
    ,count(distinct if(a3.state in (1,2) and ( a3.cod_amount > val.cfg_value or a3.insure_declare_value > val.cfg_value or pai.cogs_amount > val.cfg_value ), a3.pno, null)) 当日满足强制拒收复核需上报的量
    ,count(distinct if(a3.state in (2), a3.pno, null)) 当日提交拒收复核单数量
from
    (
        select
            a.*
        from
            (
                select
                      pc.*
                      ,store_id
                from
                    (
                        select
                            *
                        from fle_staging.sys_configuration sc
                        where
                            sc.cfg_key = 'reject.warehouse.report.by.storeId.enabled'
                            and sc.cfg_value != 'all'
                    ) pc
                lateral view explode(split(pc.cfg_value, ',')) id as store_id
            ) a

        union all

        select
            pc.*
            ,ss.id store_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.storeId.enabled'
                    and cfg_value = 'all'
            ) pc
        cross join fle_staging.sys_store ss
    ) a1
cross join
    (
        select
              pc.*
              ,client_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
                    and sc.cfg_value != 'all'
            ) pc
        lateral view explode(split(pc.cfg_value, ',')) id as client_id
    ) a2
join
    (
        select
            prr.pno
            ,prr.store_id
            ,prr.state
            ,pi.client_id
            ,pi.cod_amount
            ,pi.insure_declare_value
        from fle_staging.parcel_reject_report_info prr
        left join fle_staging.parcel_pno_log ppl on ppl.replace_pno = upper(prr.pno)
        left join fle_staging.parcel_info pi on coalesce(ppl.initial_pno, upper(prr.pno)) = pi.pno
        where
            prr.created_at >= '2024-01-14 16:00:00'
    ) a3 on a3.store_id = a1.store_id and a3.client_id = a2.client_id
cross join
    (
        select
            sc.cfg_value
        from fle_staging.sys_configuration sc
        where
            sc.cfg_key = 'reject.force.report.high.value.min.config'
    ) val
left join dwm.dim_th_sys_store_rd dt on dt.store_id = a1.store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join fle_staging.parcel_additional_info pai on pai.pno = a3.pno
group by 1,2,3,4,5

union all


select
    dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.store_id 网点ID
    ,a3.client_id 客户ID
    ,count(distinct if(a3.state in (1,2), a3.pno, null)) 当日拒收问题件数量
    ,count(distinct if(a3.state in (1,2) and ( a3.cod_amount > val.cfg_value or a3.insure_declare_value > val.cfg_value or pai.cogs_amount > val.cfg_value ), a3.pno, null)) 当日满足强制拒收复核需上报的量
    ,count(distinct if(a3.state in (2), a3.pno, null)) 当日提交拒收复核单数量
from
    (
        select
            a.*
        from
            (
                select
                      pc.*
                      ,store_id
                from
                    (
                        select
                            *
                        from fle_staging.sys_configuration sc
                        where
                            sc.cfg_key = 'reject.warehouse.report.by.storeId.enabled'
                            and sc.cfg_value != 'all'
                    ) pc
                lateral view explode(split(pc.cfg_value, ',')) id as store_id
            ) a

        union all

        select
            pc.*
            ,ss.id store_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.storeId.enabled'
                    and cfg_value = 'all'
            ) pc
        cross join fle_staging.sys_store ss
    ) a1
cross join
    (
        select
            *
        from fle_staging.sys_configuration sc
        where
            sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
            and sc.cfg_value = 'all'
    ) a2
cross join
    (
        select
            prr.pno
            ,prr.store_id
            ,prr.state
            ,pi.client_id
            ,pi.cod_amount
            ,pi.insure_declare_value
        from fle_staging.parcel_reject_report_info prr
        left join fle_staging.parcel_pno_log ppl on ppl.replace_pno = upper(prr.pno)
        left join fle_staging.parcel_info pi on coalesce(ppl.initial_pno, upper(prr.pno)) = pi.pno
        where
            prr.created_at >= '2024-01-14 16:00:00'
    ) a3 on a3.store_id = a1.store_id
cross join
    (
        select
            sc.cfg_value
        from fle_staging.sys_configuration sc
        where
            sc.cfg_key = 'reject.force.report.high.value.min.config'
    ) val
left join dwm.dim_th_sys_store_rd dt on dt.store_id = a1.store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join fle_staging.parcel_additional_info pai on pai.pno = a3.pno
group by 1,2,3,4,5;
;-- -. . -..- - / . -. - .-. -.--
select
    a2.client_id 客户ID
    ,a2.当日拒收问题件量
    ,a2.当日提交拒收复核单量
from
    (
        select
            sc.cfg_value
        from fle_staging.sys_configuration sc
        where
            sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
            and sc.cfg_value = 'all'
    ) a1
cross join
    (
        select
            pi.client_id
            ,count(distinct if(prr.state in (1,2), prr.pno, null)) 当日拒收问题件量
            ,count(distinct if(prr.state in (2), prr.pno, null)) 当日提交拒收复核单量
        from fle_staging.parcel_reject_report_info prr
        left join fle_staging.parcel_pno_log ppl on ppl.replace_pno = upper(prr.pno)
        left join fle_staging.parcel_info pi on coalesce(ppl.initial_pno, upper(prr.pno)) = pi.pno
        where
            prr.created_at >= '2024-01-14 17:00:00'
           -- and prr.state = 2
        group by 1
    ) a2

union all

select
    a2.client_id 客户ID
    ,a2.当日拒收问题件量
    ,a2.当日提交拒收复核单量
from
    (
        select
              pc.*
              ,client_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
                    and sc.cfg_value != 'all'
            ) pc
        lateral view explode(split(pc.cfg_value, ',')) id as client_id
    ) a1
join
    (
        select
            pi.client_id
            ,count(distinct if(prr.state in (1,2), prr.pno, null)) 当日拒收问题件量
            ,count(distinct if(prr.state in (2), prr.pno, null)) 当日提交拒收复核单量
        from fle_staging.parcel_reject_report_info prr
        left join fle_staging.parcel_pno_log ppl on ppl.replace_pno = upper(prr.pno)
        left join fle_staging.parcel_info pi on coalesce(ppl.initial_pno, upper(prr.pno)) = pi.pno
        where
            prr.created_at >= '2024-01-14 17:00:00'
           -- and prr.state = 2
        group by 1
    ) a2 on a2.client_id = a1.client_id;
;-- -. . -..- - / . -. - .-. -.--
select
    dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.store_id 网点ID
    ,a2.client_id 客户ID
    ,count(distinct if(a3.state in (1,2), a3.pno, null)) 当日拒收问题件数量
    ,count(distinct if(a3.state in (1,2) and ( a3.cod_amount > val.cfg_value or a3.insure_declare_value > val.cfg_value or pai.cogs_amount > val.cfg_value ), a3.pno, null)) 当日满足强制拒收复核需上报的量
    ,count(distinct if(a3.state in (2), a3.pno, null)) 当日提交拒收复核单数量
from
    (
        select
            a.*
        from
            (
                select
                      pc.*
                      ,store_id
                from
                    (
                        select
                            *
                        from fle_staging.sys_configuration sc
                        where
                            sc.cfg_key = 'reject.warehouse.report.by.storeId.enabled'
                            and sc.cfg_value != 'all'
                    ) pc
                lateral view explode(split(pc.cfg_value, ',')) id as store_id
            ) a

        union all

        select
            pc.*
            ,ss.id store_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.storeId.enabled'
                    and cfg_value = 'all'
            ) pc
        cross join fle_staging.sys_store ss
    ) a1
cross join
    (
        select
              pc.*
              ,client_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
                    and sc.cfg_value != 'all'
            ) pc
        lateral view explode(split(pc.cfg_value, ',')) id as client_id
    ) a2
join
    (
        select
            prr.pno
            ,prr.store_id
            ,prr.state
            ,pi.client_id
            ,pi.cod_amount
            ,pi.insure_declare_value
        from fle_staging.parcel_reject_report_info prr
        left join fle_staging.parcel_pno_log ppl on ppl.replace_pno = upper(prr.pno)
        left join fle_staging.parcel_info pi on coalesce(ppl.initial_pno, upper(prr.pno)) = pi.pno
        where
            prr.created_at >= '2024-01-14 17:00:00'
    ) a3 on a3.store_id = a1.store_id and a3.client_id = a2.client_id
cross join
    (
        select
            sc.cfg_value
        from fle_staging.sys_configuration sc
        where
            sc.cfg_key = 'reject.force.report.high.value.min.config'
    ) val
left join dwm.dim_th_sys_store_rd dt on dt.store_id = a1.store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join fle_staging.parcel_additional_info pai on pai.pno = a3.pno
group by 1,2,3,4,5

union all


select
    dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.store_id 网点ID
    ,a3.client_id 客户ID
    ,count(distinct if(a3.state in (1,2), a3.pno, null)) 当日拒收问题件数量
    ,count(distinct if(a3.state in (1,2) and ( a3.cod_amount > val.cfg_value or a3.insure_declare_value > val.cfg_value or pai.cogs_amount > val.cfg_value ), a3.pno, null)) 当日满足强制拒收复核需上报的量
    ,count(distinct if(a3.state in (2), a3.pno, null)) 当日提交拒收复核单数量
from
    (
        select
            a.*
        from
            (
                select
                      pc.*
                      ,store_id
                from
                    (
                        select
                            *
                        from fle_staging.sys_configuration sc
                        where
                            sc.cfg_key = 'reject.warehouse.report.by.storeId.enabled'
                            and sc.cfg_value != 'all'
                    ) pc
                lateral view explode(split(pc.cfg_value, ',')) id as store_id
            ) a

        union all

        select
            pc.*
            ,ss.id store_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.storeId.enabled'
                    and cfg_value = 'all'
            ) pc
        cross join fle_staging.sys_store ss
    ) a1
cross join
    (
        select
            *
        from fle_staging.sys_configuration sc
        where
            sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
            and sc.cfg_value = 'all'
    ) a2
cross join
    (
        select
            prr.pno
            ,prr.store_id
            ,prr.state
            ,pi.client_id
            ,pi.cod_amount
            ,pi.insure_declare_value
        from fle_staging.parcel_reject_report_info prr
        left join fle_staging.parcel_pno_log ppl on ppl.replace_pno = upper(prr.pno)
        left join fle_staging.parcel_info pi on coalesce(ppl.initial_pno, upper(prr.pno)) = pi.pno
        where
            prr.created_at >= '2024-01-14 17:00:00'
    ) a3 on a3.store_id = a1.store_id
cross join
    (
        select
            sc.cfg_value
        from fle_staging.sys_configuration sc
        where
            sc.cfg_key = 'reject.force.report.high.value.min.config'
    ) val
left join dwm.dim_th_sys_store_rd dt on dt.store_id = a1.store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join fle_staging.parcel_additional_info pai on pai.pno = a3.pno
group by 1,2,3,4,5;
;-- -. . -..- - / . -. - .-. -.--
select
    t.pno
    ,pi2.cod_amount/100 cod
    ,pai.cogs_amount/100 cogs
from tmpale.tmp_th_pno_lj_0115 t
left join fle_staging.parcel_info pi on t.pno = pi.pno
left join fle_staging.parcel_info pi2 on  pi2.pno = if(pi.returned = 1, pi.customary_pno, pi.pno)
left join fle_staging.parcel_additional_info pai on pai.pno = pi2.pno;
;-- -. . -..- - / . -. - .-. -.--
select
    pi.pno
    ,if(pi.state = 5, convert_tz(pi.finished_at, '+00:00', '+07:00'), null) 妥投时间
from fle_staging.parcel_info pi
where
    pi.pno in ('SSLT730019683513','TH680552357S1A','TH1906525YVB2C','TH160152923Q6M','SSLT730019605259','TH441650ZS470E','TH670150SFD89G','TH680551Z82D4A','TH02035252WY5A0','TH6703516VH46B','TH330651T18S7E','LEXPU0286239505','TH581051WGSF1C','LEXDO0086634037','TH013952GKK72D1','FEPU0000307071','TH014251NFQM2C','TH1906525YVC0C','TH010552594S2E','SSLT730019540612','TH680552188F4A','TH200452C6FJ6B2','TH68055241HD6B','TH6805527T2Z1A','TH01494YKY906D','TH200751BXZU2A','TH350651534H8D','SSLT730019637093','TH6805509YJM5A','TH350451GW680B','TH0112520H0T6B','TH49014ZR4S23F','TH39014X75YR1A','TH1906525YVB5C','TH6805522SYK8A','SSLT730019663957','SSLT730019858798','TH30164ZCYGY0C','TH060151Q6JR9B','TH680552CX2F1A','TH1906525YVA7C','SSLT730019553257','TH010652CHKR7C','SSLT730019784941','LEXPU0289295081','TH04034ZYBB28A2','TH16015225CG5Q','TH020151MFBJ3C','TH120152C8QP9U','TH0405522QBD9G','TH121051KFCS1D','TH6103505T558E','TH6701525NU86G','TH6207525MZB0C','TH200852D9V01D','TH040251WGAN0C1','SSLT730019709077','TH0302526K3N4F','TH70035259PW4C','TH570851R3KZ7A','TH720150BY973A','TH270150JS1Z7A','TH0126520J087A1','TH560551WHA40B','TH012350YSQV1D','TH570851R3KZ7A','TH310951D46Z7G','TH6703516VH46B','TH471552JR7S2H','TH200452C6FJ6B2','TH68055241HD6B','TH6805527T2Z1A','TH01494YKY906D','TH040352FU3W6A0','TH015052J94R4A','SSLT730019731779','TH0146523V2D6C','TH391052PPHW7A','SSLT730019540612','TH680552188F4A','TH6805529B918A','TH050352RPXN5G','TH680552CX2F1A','TH1906525YVA7C','SSLT730019553257','TH6804525F5J0F0','TH64115289TA9G','TH6805522SYK8A','TH380152WK145R','SSLT730020036981','SSLT730019839133','TH030253AZ903F','SSLT730019911390','TH1906525YVB5C','SSLT730019731866','TH0306538BC24F','TH441252FZZQ5A','TH670150SFD89G','TH680551Z82D4A','TH040452D40Y7E','TH68044ZJAEG4F0','TH680552357S1A','TH1906525YVB2C','TH030452SDRP7B','SSLT730020027140','TH200553603G8E','TH650751B3NF9A','TH020151MFBJ3C','TH012351QQZ67D','TH020152ZHHK4E0','TH38015255P30I','TH38195150FE9B','TH360151B3NE6J','TH040252WGUM5A0','TH01184ZVVA94B1','SSLT730019683513','TH014352QCW57A1','TH040251QWMC5C0','TH70035259PW4C','TH680552JQ020A','TH012351QFGD1D','TH68055214S57A','TH39014X75YR1A','TH012350YSQV1D','SSLT730019912792','TH190652TF7M8E','TH27154XDVHV5L','SSLT730019607490','TH6805519FV67A','TH590750XH168A','TH641350SCTR0F','TH012751XJ6R6C','TPLPU0001299328','TH30164ZCYGY0C','TH060151Q6JR9B','TH680451CMJT3F0','TH441650ZS470E','TH01425356N85A0','TH020352FJSS3D0','TH013453300Q4A1','TH680452CNBE8F0','TH220151KR168F','TH680550T3A45A','TH014650R6KN2C','TH010652CHKR7C','SSLT730019784941','TH260651BNM77A','TH31144ZTPTD3E','TH3003511FGS1G','TH200451XE1C6B1','SSLT730019725348','TH160152923Q6M','SSLT730019605259','TH014552Q7583A','TH012851YJ821C','TH011852KUWD8A','TH030252WRDA5E','TH121051KFCS1D','TH6103505T558E','TH6701525NU86G','TH6207525MZB0C','TH200852D9V01D','TH200450162P3B0','TH680552J57G4A','TH020152566N9B0','TH680452QEP94F0','TH43015326VY3G','SSLT730019709077','TH190152KHK30F','TH560851BVRN5F','TH330651T18S7E','TH70055160KR1C','TH370152X9G56A0','SSLT730019341577','TH67035376H43C','TH350651534H8D','SSLT730019637093','TH350451GW680B','SSLT730019316129','TH014151K4696B0','TH3701500K6Z6A0','TH470151WK510E','LEXDO0086634037','TH0302526K3N4F','TH710351G8766G','TH02015271V70C','TH020452J2MP8B','TH680551WU7M8A','TH680552HD7N5A','TH540451R90M7A','TH014251QV8C4A0','TH200751BXZU2A','TH4706527AJ15G','TH040251WGAN0C1','TH450552SH3E4C','TH2004532Q8M9B4','TH02035252WY5A0','TH680551X2QP3A','TH01385314WP6A','TH690150SP2B5F','TH120152C8QP9U','TH0405522QBD9G','TH7008528M2R9B','TH1402510EY26A','LEXPU0289295081','TH04034ZYBB28A2','TH2007516B9T4A','TH581051WGSF1C','TH680450MYZR1F0','TH1001538UCJ9A','TH013952GKK72D1','FEPU0000307071','TH010250CECP2A','TH010152Y6N28B0','TH6804524M344F0','SSLT730020115855','SSLT730019858798','TH550451US176A','TH013352J9SC5A','TH642152BQF25B','TH020452Z0679B','TH160250SKQA8B1','TH670152ZUQJ0F','TH010352MMNV1E','TH680452JWF44F0','LEXPU0286239505','TH0103520RC85C0','TH131150CF608C','TH051052FQ5G2F','TH380152QHM49D','TH680551GR8N6A','SSLT730019663957','TH040252SB2T6A4','SSLT730018943101','TH0112520H0T6B','TH49014ZR4S23F','TH680552JQ027A','TH05064ZVSUN6A','TH012352W5C73C','TH01055268HK4D1','TH190151C5MU9E','TH16015225CG5Q','TH015152QUFH8C0','TH270150JS1Z7A','TH0126520J087A1','TH560551WHA40B','TH270152CPEK1A0','TH271552ZAZG9F','TH014452CD5K6C','TH010552594S2E','TH2715526GKK1C','TH670152Q9H57G','TH0306509FP87G');
;-- -. . -..- - / . -. - .-. -.--
select
    t.pno
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as 客户类型
    ,pi2.cod_amount/100 cod
    ,pai.cogs_amount/100 cogs
from tmpale.tmp_th_pno_lj_0115 t
left join fle_staging.parcel_info pi on t.pno = pi.pno
left join fle_staging.parcel_info pi2 on  pi2.pno = if(pi.returned = 1, pi.customary_pno, pi.pno)
left join fle_staging.parcel_additional_info pai on pai.pno = pi2.pno
left join fle_staging.ka_profile kp on kp.id = pi.client_id
left join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = pi.client_id;
;-- -. . -..- - / . -. - .-. -.--
select
            acc.pno
            ,am.abnormal_time
            ,am.punish_category
            ,acc.complaints_type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
        from bi_pro.abnormal_customer_complaint acc
        left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id
        left join fle_staging.parcel_info pi on pi.pno = acc.pno  and pi.created_at > date_sub(curdate(), interval 3 month)
        where
            am.abnormal_time >= '2023-11-11'
            and am.abnormal_time <= '2023-11-20'
            and
                (
                    am.punish_category = 7
                    or acc.complaints_type = 1
                )
        and pi.state = 5
        -- and acc.pno  ='TH01184UQNTE6B1'
        group by 1,2,3,4,5,6;
;-- -. . -..- - / . -. - .-. -.--
select
            acc.pno
            ,am.abnormal_time
            ,am.punish_category
            ,acc.complaints_type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
        from bi_pro.abnormal_customer_complaint acc
        left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id
        left join fle_staging.parcel_info pi on pi.pno = acc.pno  and pi.created_at > date_sub(curdate(), interval 3 month)
        where
            am.abnormal_time >= '2023-11-11'
            and am.abnormal_time <= '2023-11-20'
            and
                (
                    am.punish_category = 7
                    or acc.complaints_type = 1
                )
#         and pi.state = 5
        -- and acc.pno  ='TH01184UQNTE6B1'
        group by 1,2,3,4,5,6;
;-- -. . -..- - / . -. - .-. -.--
select
    a.handle_time 处理日期
    ,a.handle_staff_id 工号
    ,a.name 姓名
    ,count(if(a.type = 1 and a.punish_category not in (7,8,21), a.id, null)) 集体处罚个数
    ,count(if(a.type = 2 and a.punish_category not in (7,8,21,58,60), a.id, null)) 个人处罚个数
    ,count(if(a.punish_category = 8, a.id, null)) 包裹破损个数
    ,count(if(a.punish_category = 7, a.id, null)) 包裹丢失个数
    ,count(if(a.punish_category = 21, a.id, null)) 客户投诉个数
    ,count(if(a.punish_category = 58, a.id, null)) 虚假取消揽件任务个数
    ,count(if(a.punish_category = 60, a.id, null)) 虚假标记拒收个数
    ,count(a.id) 总处理合计
    ,sum(a.个人处罚得分) + sum(a.包裹丢失得分) + sum(a.包裹破损得分) + sum(a.客户投诉得分) + sum(a.虚假取消揽件任务得分) + sum(a.虚假标记拒收得分) + sum(a.集体处罚得分) 综合人效得分
    ,(sum(a.个人处罚得分) + sum(a.包裹丢失得分) + sum(a.包裹破损得分) + sum(a.客户投诉得分) + sum(a.虚假取消揽件任务得分) + sum(a.虚假标记拒收得分) + sum(a.集体处罚得分))/300 完成情况
from
    (
        select
            if(am.isdel = 1 and aq.handle_staff_id is null,am.last_edit_staff_info_id, aq.handle_staff_id) handle_staff_id
            ,hsi.name
            ,coalesce(am.punish_category, amd.punish_category) punish_category
            ,if(am.isdel = 1 and aq.handle_time is null,date(am.del_date), date(aq.handle_time)) handle_time
            ,aq.type
            ,if(aq.type = 1 and coalesce(am.punish_category, amd.punish_category) not in (7,8,21), 1, 0) 集体处罚得分
            ,if(aq.type = 2 and coalesce(am.punish_category, amd.punish_category) not in (7,8,21,58,60), 1, 0) 个人处罚得分
            ,if(coalesce(am.punish_category, amd.punish_category) = 8, 8, 0) 包裹破损得分
            ,if(coalesce(am.punish_category, amd.punish_category) = 7, 8, 0) 包裹丢失得分
            ,if(coalesce(am.punish_category, amd.punish_category) = 21, 4, 0) 客户投诉得分
            ,if(coalesce(am.punish_category, amd.punish_category) = 58, 4, 0) 虚假取消揽件任务得分
            ,if(coalesce(am.punish_category, amd.punish_category) = 60, 4, 0) 虚假标记拒收得分
            ,aq.id
        from bi_pro.abnormal_qaqc aq
        left join bi_pro.abnormal_message am on aq.abnormal_message_id = am.id
        left join nl_production.abnormal_message_del amd on aq.abnormal_message_id = amd.id
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = coalesce(aq.handle_staff_id, am.last_edit_staff_info_id)
        join dwm.dwd_hr_organizational_structure_detail sd on sd.id=hsi.node_department_id and sd.一级部门='QAQC'
        where
            aq.type = 2
            and (
                    (date(aq.handle_time) >= '2024-01-14' and date(aq.handle_time) <= '2024-01-14' and aq.handle_time is not null) or
                    ( am.isdel = 1 and am.del_reason_desc = 'cs_change_duty' and aq.handle_time is null and date(am.del_date) >= '2024-01-14' and date(am.del_date) <= '2024-01-14' )
                )

        union

        select
            if(am.isdel = 1 and aq.handle_staff_id is null,am.last_edit_staff_info_id, aq.handle_staff_id) handle_staff_id
            ,hsi.name
            ,coalesce(am.punish_category, amd.punish_category) punish_category
            ,if(am.isdel = 1 and aq.handle_time is null,date(am.del_date), date(aq.handle_time)) handle_time
            ,aq.type
            ,if(aq.type = 1 and coalesce(am.punish_category, amd.punish_category) not in (7,8,21), 1, 0) 集体处罚得分
            ,if(aq.type = 2 and coalesce(am.punish_category, amd.punish_category) not in (7,8,21,58,60), 1, 0) 个人处罚得分
            ,if(coalesce(am.punish_category, amd.punish_category) = 8, 8, 0) 包裹破损得分
            ,if(coalesce(am.punish_category, amd.punish_category)= 7, 8, 0) 包裹丢失得分
            ,if(coalesce(am.punish_category, amd.punish_category) = 21, 4, 0) 客户投诉得分
            ,if(coalesce(am.punish_category, amd.punish_category) = 58, 4, 0) 虚假取消揽件任务得分
            ,if(coalesce(am.punish_category, amd.punish_category) = 60, 4, 0) 虚假标记拒收得分
            ,aq.id
        from bi_pro.abnormal_qaqc aq
        left join bi_pro.abnormal_message am on aq.qaqc_merge_key = am.average_merge_key
        left join nl_production.abnormal_message_del amd on aq.qaqc_merge_key = amd.average_merge_key
        left join bi_pro.hr_staff_info hsi on hsi.staff_info_id = coalesce(aq.handle_staff_id, am.last_edit_staff_info_id)
        join dwm.dwd_hr_organizational_structure_detail sd on sd.id=hsi.node_department_id and sd.一级部门='QAQC'
        where
            aq.type = 1
            and (
                    (aq.handle_time is not null and date(aq.handle_time) >= '2024-01-14' and date(aq.handle_time) <= '2024-01-14') or
                     (am.isdel = 1 and am.del_reason_desc = 'cs_change_duty' and  aq.handle_time is null and date(am.del_date) >= '2024-01-14' and date(am.del_date) <= '2024-01-14' )
                )
        group by 1,2,3,4,5,6,7,8,9,10,11,12,13
    ) a
    where a.handle_staff_id is not null  
group by 1,2,3
order by 1,2;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
#         select
#             acc.pno
#             ,am.abnormal_time
#             ,am.punish_category
#             ,acc.complaints_type
#             ,pi.ticket_delivery_staff_info_id
#             ,pi.finished_at
#         from bi_pro.abnormal_customer_complaint acc
#         left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id
#         left join fle_staging.parcel_info pi on pi.pno = acc.pno  and pi.created_at > date_sub(curdate(), interval 3 month)
#         where
#             am.abnormal_time >= '2023-11-11'
#             and am.abnormal_time <= '2023-11-20'
#             and
#                 (
#                     am.punish_category = 7
#                     or acc.complaints_type = 1
#                 )
#         and pi.state = 5
#         -- and acc.pno  ='TH01184UQNTE6B1'
#         group by 1,2,3,4,5,6
        select
            t.pno
            ,pci.complaints_at abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
        from tmpale.tmp_th_pno_lj_0116 t
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = t.pno
        left join fle_staging.customer_issue ci on ci.id = pci.source_id
        left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)

        union all

        select
            t.pno
            ,case
                when pci.merge_column is not null then pci.complaints_at
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then am.abnormal_time
                else null
            end abnormal_time
            ,case
                when pci.merge_column is not null then '虚假妥投'
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                else '未投诉'
            end type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
        from tmpale.tmp_th_pno_lj_0116 t
        left join
            (
                select
                    t.pno
                from tmpale.tmp_th_pno_lj_0116 t
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = t.pno
                left join fle_staging.customer_issue ci on ci.id = pci.source_id
                where
                    ci.request_sub_type in (221,300)
                group by 1
            ) t2 on t2.pno = t.pno
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = t.pno and pci.created_at > '2024-01-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2024-01-01'
        left join bi_pro.abnormal_customer_complaint acc on acc.pno = t.pno and acc.created_at > '2024-01-01'
        left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2024-01-01'
        left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
        where
            t2.pno is null
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > date_sub(curdate(), interval 2 month)
            and pr.routed_at < t1.finished_at
    )
select
    t1.pno
    ,pi.dst_store_id 目的地网点ID
    ,pi.ticket_delivery_staff_info_id 妥投快递员
    ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
    ,pi.cod_amount cod金额
    ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
    ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
    ,pi.exhibition_weight 重量
    ,pi.exhibition_length 长
    ,pi.exhibition_width 宽
    ,pi.exhibition_height 高
    ,pi.dst_phone 收件人电话
    ,pi.dst_province_code 收件省ID
    ,pi.dst_city_code 收件城市ID
    ,pi.dst_district_code 收件乡ID
    ,pi.dst_postal_code 收件邮编
    ,pi.src_phone 寄件人电话
    ,pi.src_province_code 发件省ID
    ,pi.src_city_code 发件城市ID
    ,pi.src_district_code 发件乡ID
    ,pi.src_postal_code 发件邮编
    ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
    ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
    ,scan.scan_count 当日交接量
    ,scan.del_count 当日妥投量
    ,scan.del_rate 当日妥投率
    ,dis.distance/1000 当日行驶里程km
    ,pi.client_id 客户ID
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null
        and bc.id is null then '普通ka'
        when kp.`id` is null then '小c'
      end as 客户类型
    ,t1.type '判责类型'
    ,p1.call_num 最后一次电话通话
    ,p1.diao_num 最后一次电话响铃
    ,if(p2.pno is not null , 'y', 'n')  是否沟通
    ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
    ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
    ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
    ,ab.abnormal_count 近三月处罚次数
from fle_staging.parcel_info pi
join t t1 on t1.pno = pi.pno
left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.abnormal_time
left join
    (
        select
            t1.ticket_delivery_staff_info_id
            ,t1.abnormal_time
            ,count(distinct pr.pno) scan_count
            ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.abnormal_time, interval 7 hour) and pi.finished_at < date_add(t1.abnormal_time, interval 17 hour), pr.pno, null)) del_count
            ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.abnormal_time, interval 7 hour) and pi.finished_at < date_add(t1.abnormal_time, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
        from rot_pro.parcel_route pr
        join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
        left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 3 month)
        where
            pr.routed_at > '2024-01-01'
            and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
            and pr.routed_at >= date_sub(t1.abnormal_time, interval 7 hour)
            and pr.routed_at < date_add(t1.abnormal_time, interval 17 hour)
            and pr.staff_info_id = t1.ticket_delivery_staff_info_id
        group by 1,2
    ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.abnormal_time = t1.abnormal_time
left join
    (
        select
            t1.abnormal_time
            ,t1.ticket_delivery_staff_info_id
            ,max(ccd.coordinate_distance) distance
        from rev_pro.courier_coordinate_distance ccd
        join t t1 on t1.abnormal_time = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
        where
            ccd.created_at > '2024-01-01'
        group by 1,2
    ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.abnormal_time = t1.abnormal_time
left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
left join fle_staging.ka_profile kp on pi.client_id = kp.id
left join pho p1 on p1.pno = t1.pno and p1.rk = 1
left join
    (
        select
            p1.pno
        from pho p1
        where
            p1.call_num > 0
        group by 1
    ) p2 on p2.pno = t1.pno
left join
    (-- 近3月处罚次数
        select
            am.staff_info_id
            ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
        from bi_pro.abnormal_message am
        join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
        where
            am.created_at >= date_sub(curdate(), interval 3 month)
            and am.isdel = 0 -- 未删除
            and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
        group by 1
    ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
select
            t.pno
            ,pci.complaints_at abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
        from tmpale.tmp_th_pno_lj_0116 t
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = t.pno
        left join fle_staging.customer_issue ci on ci.id = pci.source_id
        left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)

        union all

        select
            t.pno
            ,case
                when pci.merge_column is not null then pci.complaints_at
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then am.abnormal_time
                else null
            end abnormal_time
            ,case
                when pci.merge_column is not null then '虚假妥投'
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                else '未投诉'
            end type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
        from tmpale.tmp_th_pno_lj_0116 t
        left join
            (
                select
                    t.pno
                from tmpale.tmp_th_pno_lj_0116 t
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = t.pno
                left join fle_staging.customer_issue ci on ci.id = pci.source_id
                where
                    ci.request_sub_type in (221,300)
                group by 1
            ) t2 on t2.pno = t.pno
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = t.pno and pci.created_at > '2024-01-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2024-01-01'
        left join bi_pro.abnormal_customer_complaint acc on acc.pno = t.pno and acc.created_at > '2024-01-01'
        left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2024-01-01'
        left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
        where
            t2.pno is null;
;-- -. . -..- - / . -. - .-. -.--
select
            t.pno
            ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
        from tmpale.tmp_th_pno_lj_0116 t
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = t.pno
        left join fle_staging.customer_issue ci on ci.id = pci.source_id
        left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)

        union all

        select
            t.pno
            ,case
                when pci.merge_column is not null then date(pci.complaints_at)
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
                else null
            end abnormal_time
            ,case
                when pci.merge_column is not null then '虚假妥投'
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                else '未投诉'
            end type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
        from tmpale.tmp_th_pno_lj_0116 t
        left join
            (
                select
                    t.pno
                from tmpale.tmp_th_pno_lj_0116 t
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = t.pno
                left join fle_staging.customer_issue ci on ci.id = pci.source_id
                where
                    ci.request_sub_type in (221,300)
                group by 1
            ) t2 on t2.pno = t.pno
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = t.pno and pci.created_at > '2024-01-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2024-01-01'
        left join bi_pro.abnormal_customer_complaint acc on acc.pno = t.pno and acc.created_at > '2024-01-01'
        left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2024-01-01'
        left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
        where
            t2.pno is null;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
#         select
#             acc.pno
#             ,am.abnormal_time
#             ,am.punish_category
#             ,acc.complaints_type
#             ,pi.ticket_delivery_staff_info_id
#             ,pi.finished_at
#         from bi_pro.abnormal_customer_complaint acc
#         left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id
#         left join fle_staging.parcel_info pi on pi.pno = acc.pno  and pi.created_at > date_sub(curdate(), interval 3 month)
#         where
#             am.abnormal_time >= '2023-11-11'
#             and am.abnormal_time <= '2023-11-20'
#             and
#                 (
#                     am.punish_category = 7
#                     or acc.complaints_type = 1
#                 )
#         and pi.state = 5
#         -- and acc.pno  ='TH01184UQNTE6B1'
#         group by 1,2,3,4,5,6
        select
            t.pno
            ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
        from tmpale.tmp_th_pno_lj_0116 t
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = t.pno
        left join fle_staging.customer_issue ci on ci.id = pci.source_id
        left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)

        union all

        select
            t.pno
            ,case
                when pci.merge_column is not null then date(pci.complaints_at)
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
                else null
            end abnormal_time
            ,case
                when pci.merge_column is not null then '虚假妥投'
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                else '未投诉'
            end type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
        from tmpale.tmp_th_pno_lj_0116 t
        left join
            (
                select
                    t.pno
                from tmpale.tmp_th_pno_lj_0116 t
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = t.pno
                left join fle_staging.customer_issue ci on ci.id = pci.source_id
                where
                    ci.request_sub_type in (221,300)
                group by 1
            ) t2 on t2.pno = t.pno
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = t.pno and pci.created_at > '2024-01-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2024-01-01'
        left join bi_pro.abnormal_customer_complaint acc on acc.pno = t.pno and acc.created_at > '2024-01-01'
        left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2024-01-01'
        left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
        where
            t2.pno is null
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > date_sub(curdate(), interval 2 month)
            and pr.routed_at < t1.finished_at
    )
select
    t1.pno
    ,pi.dst_store_id 目的地网点ID
    ,pi.ticket_delivery_staff_info_id 妥投快递员
    ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
    ,pi.cod_amount cod金额
    ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
    ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
    ,pi.exhibition_weight 重量
    ,pi.exhibition_length 长
    ,pi.exhibition_width 宽
    ,pi.exhibition_height 高
    ,pi.dst_phone 收件人电话
    ,pi.dst_province_code 收件省ID
    ,pi.dst_city_code 收件城市ID
    ,pi.dst_district_code 收件乡ID
    ,pi.dst_postal_code 收件邮编
    ,pi.src_phone 寄件人电话
    ,pi.src_province_code 发件省ID
    ,pi.src_city_code 发件城市ID
    ,pi.src_district_code 发件乡ID
    ,pi.src_postal_code 发件邮编
    ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
    ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
    ,scan.scan_count 当日交接量
    ,scan.del_count 当日妥投量
    ,scan.del_rate 当日妥投率
    ,dis.distance/1000 当日行驶里程km
    ,pi.client_id 客户ID
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null
        and bc.id is null then '普通ka'
        when kp.`id` is null then '小c'
      end as 客户类型
    ,t1.type '判责类型'
    ,p1.call_num 最后一次电话通话
    ,p1.diao_num 最后一次电话响铃
    ,if(p2.pno is not null , 'y', 'n')  是否沟通
    ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
    ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
    ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
    ,ab.abnormal_count 近三月处罚次数
from fle_staging.parcel_info pi
join t t1 on t1.pno = pi.pno
left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.abnormal_time
left join
    (
        select
            t1.ticket_delivery_staff_info_id
            ,t1.abnormal_time
            ,count(distinct pr.pno) scan_count
            ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.abnormal_time, interval 7 hour) and pi.finished_at < date_add(t1.abnormal_time, interval 17 hour), pr.pno, null)) del_count
            ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.abnormal_time, interval 7 hour) and pi.finished_at < date_add(t1.abnormal_time, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
        from rot_pro.parcel_route pr
        join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
        left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 3 month)
        where
            pr.routed_at > '2024-01-01'
            and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
            and pr.routed_at >= date_sub(t1.abnormal_time, interval 7 hour)
            and pr.routed_at < date_add(t1.abnormal_time, interval 17 hour)
            and pr.staff_info_id = t1.ticket_delivery_staff_info_id
        group by 1,2
    ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.abnormal_time = t1.abnormal_time
left join
    (
        select
            t1.abnormal_time
            ,t1.ticket_delivery_staff_info_id
            ,max(ccd.coordinate_distance) distance
        from rev_pro.courier_coordinate_distance ccd
        join t t1 on t1.abnormal_time = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
        where
            ccd.created_at > '2024-01-01'
        group by 1,2
    ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.abnormal_time = t1.abnormal_time
left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
left join fle_staging.ka_profile kp on pi.client_id = kp.id
left join pho p1 on p1.pno = t1.pno and p1.rk = 1
left join
    (
        select
            p1.pno
        from pho p1
        where
            p1.call_num > 0
        group by 1
    ) p2 on p2.pno = t1.pno
left join
    (-- 近3月处罚次数
        select
            am.staff_info_id
            ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
        from bi_pro.abnormal_message am
        join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
        where
            am.created_at >= date_sub(curdate(), interval 3 month)
            and am.isdel = 0 -- 未删除
            and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
        group by 1
    ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
#         select
#             acc.pno
#             ,am.abnormal_time
#             ,am.punish_category
#             ,acc.complaints_type
#             ,pi.ticket_delivery_staff_info_id
#             ,pi.finished_at
#         from bi_pro.abnormal_customer_complaint acc
#         left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id
#         left join fle_staging.parcel_info pi on pi.pno = acc.pno  and pi.created_at > date_sub(curdate(), interval 3 month)
#         where
#             am.abnormal_time >= '2023-11-11'
#             and am.abnormal_time <= '2023-11-20'
#             and
#                 (
#                     am.punish_category = 7
#                     or acc.complaints_type = 1
#                 )
#         and pi.state = 5
#         -- and acc.pno  ='TH01184UQNTE6B1'
#         group by 1,2,3,4,5,6
        select
            t.pno
            ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from tmpale.tmp_th_pno_lj_0116 t
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = t.pno
        left join fle_staging.customer_issue ci on ci.id = pci.source_id
        left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)

        union all

        select
            t.pno
            ,case
                when pci.merge_column is not null then date(pci.complaints_at)
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
                else null
            end abnormal_time
            ,case
                when pci.merge_column is not null then '虚假妥投'
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                else '未投诉'
            end type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from tmpale.tmp_th_pno_lj_0116 t
        left join
            (
                select
                    t.pno
                from tmpale.tmp_th_pno_lj_0116 t
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = t.pno
                left join fle_staging.customer_issue ci on ci.id = pci.source_id
                where
                    ci.request_sub_type in (221,300)
                group by 1
            ) t2 on t2.pno = t.pno
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = t.pno and pci.created_at > '2024-01-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2024-01-01'
        left join bi_pro.abnormal_customer_complaint acc on acc.pno = t.pno and acc.created_at > '2024-01-01'
        left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2024-01-01'
        left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
        where
            t2.pno is null
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > date_sub(curdate(), interval 2 month)
            and pr.routed_at < t1.finished_at
    )
select
    t1.pno
    ,pi.dst_store_id 目的地网点ID
    ,pi.ticket_delivery_staff_info_id 妥投快递员
    ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
    ,pi.cod_amount cod金额
    ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
    ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
    ,pi.exhibition_weight 重量
    ,pi.exhibition_length 长
    ,pi.exhibition_width 宽
    ,pi.exhibition_height 高
    ,pi.dst_phone 收件人电话
    ,pi.dst_province_code 收件省ID
    ,pi.dst_city_code 收件城市ID
    ,pi.dst_district_code 收件乡ID
    ,pi.dst_postal_code 收件邮编
    ,pi.src_phone 寄件人电话
    ,pi.src_province_code 发件省ID
    ,pi.src_city_code 发件城市ID
    ,pi.src_district_code 发件乡ID
    ,pi.src_postal_code 发件邮编
    ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
    ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
    ,scan.scan_count 当日交接量
    ,scan.del_count 当日妥投量
    ,scan.del_rate 当日妥投率
    ,dis.distance/1000 当日行驶里程km
    ,pi.client_id 客户ID
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null
        and bc.id is null then '普通ka'
        when kp.`id` is null then '小c'
      end as 客户类型
    ,t1.type '判责类型'
    ,p1.call_num 最后一次电话通话
    ,p1.diao_num 最后一次电话响铃
    ,if(p2.pno is not null , 'y', 'n')  是否沟通
    ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
    ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
    ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
    ,ab.abnormal_count 近三月处罚次数
from fle_staging.parcel_info pi
join t t1 on t1.pno = pi.pno
left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
left join
    (
        select
            t1.ticket_delivery_staff_info_id
            ,t1.abnormal_time
            ,count(distinct pr.pno) scan_count
            ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
            ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
        from rot_pro.parcel_route pr
        join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
        left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 3 month)
        where
            pr.routed_at > '2024-01-01'
            and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
            and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
            and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
            and pr.staff_info_id = t1.ticket_delivery_staff_info_id
        group by 1,2
    ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.abnormal_time = t1.abnormal_time
left join
    (
        select
            t1.abnormal_time
            ,t1.ticket_delivery_staff_info_id
            ,max(ccd.coordinate_distance) distance
        from rev_pro.courier_coordinate_distance ccd
        join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
        where
            ccd.created_at > '2024-01-01'
        group by 1,2
    ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.abnormal_time = t1.abnormal_time
left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
left join fle_staging.ka_profile kp on pi.client_id = kp.id
left join pho p1 on p1.pno = t1.pno and p1.rk = 1
left join
    (
        select
            p1.pno
        from pho p1
        where
            p1.call_num > 0
        group by 1
    ) p2 on p2.pno = t1.pno
left join
    (-- 近3月处罚次数
        select
            am.staff_info_id
            ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
        from bi_pro.abnormal_message am
        join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
        where
            am.created_at >= date_sub(curdate(), interval 3 month)
            and am.isdel = 0 -- 未删除
            and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
        group by 1
    ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
select
            t.pno
            ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from tmpale.tmp_th_pno_lj_0116 t
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = t.pno
        left join fle_staging.customer_issue ci on ci.id = pci.source_id
        left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)

        union all

        select
            t.pno
            ,case
                when pci.merge_column is not null then date(pci.complaints_at)
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
                else null
            end abnormal_time
            ,case
                when pci.merge_column is not null then '虚假妥投'
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                else '未投诉'
            end type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from tmpale.tmp_th_pno_lj_0116 t
        left join
            (
                select
                    t.pno
                from tmpale.tmp_th_pno_lj_0116 t
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = t.pno
                left join fle_staging.customer_issue ci on ci.id = pci.source_id
                where
                    ci.request_sub_type in (221,300)
                group by 1
            ) t2 on t2.pno = t.pno
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = t.pno and pci.created_at > '2024-01-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2024-01-01'
        left join bi_pro.abnormal_customer_complaint acc on acc.pno = t.pno and acc.created_at > '2024-01-01'
        left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2024-01-01'
        left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
        where
            t2.pno is null;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
#         select
#             acc.pno
#             ,am.abnormal_time
#             ,am.punish_category
#             ,acc.complaints_type
#             ,pi.ticket_delivery_staff_info_id
#             ,pi.finished_at
#         from bi_pro.abnormal_customer_complaint acc
#         left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id
#         left join fle_staging.parcel_info pi on pi.pno = acc.pno  and pi.created_at > date_sub(curdate(), interval 3 month)
#         where
#             am.abnormal_time >= '2023-11-11'
#             and am.abnormal_time <= '2023-11-20'
#             and
#                 (
#                     am.punish_category = 7
#                     or acc.complaints_type = 1
#                 )
#         and pi.state = 5
#         -- and acc.pno  ='TH01184UQNTE6B1'
#         group by 1,2,3,4,5,6
        select
            t.pno
            ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from tmpale.tmp_th_pno_lj_0116 t
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = t.pno
        left join fle_staging.customer_issue ci on ci.id = pci.source_id
        left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)

        union all

        select
            t.pno
            ,case
                when pci.merge_column is not null then date(pci.complaints_at)
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
                else null
            end abnormal_time
            ,case
                when pci.merge_column is not null then '虚假妥投'
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                else '未投诉'
            end type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from tmpale.tmp_th_pno_lj_0116 t
        left join
            (
                select
                    t.pno
                from tmpale.tmp_th_pno_lj_0116 t
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = t.pno
                left join fle_staging.customer_issue ci on ci.id = pci.source_id
                where
                    ci.request_sub_type in (221,300)
                group by 1
            ) t2 on t2.pno = t.pno
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = t.pno and pci.created_at > '2024-01-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2024-01-01'
        left join bi_pro.abnormal_customer_complaint acc on acc.pno = t.pno and acc.created_at > '2024-01-01'
        left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2024-01-01'
        left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
        where
            t2.pno is null
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > date_sub(curdate(), interval 2 month)
            and pr.routed_at < t1.finished_at
    )
select
    t1.pno
    ,pi.dst_store_id 目的地网点ID
    ,pi.ticket_delivery_staff_info_id 妥投快递员
    ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
    ,pi.cod_amount cod金额
    ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
    ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
    ,pi.exhibition_weight 重量
    ,pi.exhibition_length 长
    ,pi.exhibition_width 宽
    ,pi.exhibition_height 高
    ,pi.dst_phone 收件人电话
    ,pi.dst_province_code 收件省ID
    ,pi.dst_city_code 收件城市ID
    ,pi.dst_district_code 收件乡ID
    ,pi.dst_postal_code 收件邮编
    ,pi.src_phone 寄件人电话
    ,pi.src_province_code 发件省ID
    ,pi.src_city_code 发件城市ID
    ,pi.src_district_code 发件乡ID
    ,pi.src_postal_code 发件邮编
    ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
    ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
    ,scan.scan_count 当日交接量
    ,scan.del_count 当日妥投量
    ,scan.del_rate 当日妥投率
    ,dis.distance/1000 当日行驶里程km
    ,pi.client_id 客户ID
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null
        and bc.id is null then '普通ka'
        when kp.`id` is null then '小c'
      end as 客户类型
    ,t1.type '判责类型'
    ,p1.call_num 最后一次电话通话
    ,p1.diao_num 最后一次电话响铃
    ,if(p2.pno is not null , 'y', 'n')  是否沟通
    ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
    ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
    ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
    ,ab.abnormal_count 近三月处罚次数
from fle_staging.parcel_info pi
join t t1 on t1.pno = pi.pno
left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
left join
    (
        select
            t1.ticket_delivery_staff_info_id
            ,t1.fin_date
            ,count(distinct pr.pno) scan_count
            ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
            ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
        from rot_pro.parcel_route pr
        join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
        left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 3 month)
        where
            pr.routed_at > '2024-01-01'
            and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
            and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
            and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
            and pr.staff_info_id = t1.ticket_delivery_staff_info_id
        group by 1,2
    ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
left join
    (
        select
            t1.abnormal_time
            ,t1.ticket_delivery_staff_info_id
            ,max(ccd.coordinate_distance) distance
        from rev_pro.courier_coordinate_distance ccd
        join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
        where
            ccd.created_at > '2024-01-01'
        group by 1,2
    ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.abnormal_time = t1.abnormal_time
left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
left join fle_staging.ka_profile kp on pi.client_id = kp.id
left join pho p1 on p1.pno = t1.pno and p1.rk = 1
left join
    (
        select
            p1.pno
        from pho p1
        where
            p1.call_num > 0
        group by 1
    ) p2 on p2.pno = t1.pno
left join
    (-- 近3月处罚次数
        select
            am.staff_info_id
            ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
        from bi_pro.abnormal_message am
        join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
        where
            am.created_at >= date_sub(curdate(), interval 3 month)
            and am.isdel = 0 -- 未删除
            and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
        group by 1
    ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
#         select
#             acc.pno
#             ,am.abnormal_time
#             ,am.punish_category
#             ,acc.complaints_type
#             ,pi.ticket_delivery_staff_info_id
#             ,pi.finished_at
#         from bi_pro.abnormal_customer_complaint acc
#         left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id
#         left join fle_staging.parcel_info pi on pi.pno = acc.pno  and pi.created_at > date_sub(curdate(), interval 3 month)
#         where
#             am.abnormal_time >= '2023-11-11'
#             and am.abnormal_time <= '2023-11-20'
#             and
#                 (
#                     am.punish_category = 7
#                     or acc.complaints_type = 1
#                 )
#         and pi.state = 5
#         -- and acc.pno  ='TH01184UQNTE6B1'
#         group by 1,2,3,4,5,6
        select
            t.pno
            ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from tmpale.tmp_th_pno_lj_0116 t
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = t.pno
        left join fle_staging.customer_issue ci on ci.id = pci.source_id
        left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)

        union all

        select
            t.pno
            ,case
                when pci.merge_column is not null then date(pci.complaints_at)
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
                else null
            end abnormal_time
            ,case
                when pci.merge_column is not null then '虚假妥投'
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                else '未投诉'
            end type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from tmpale.tmp_th_pno_lj_0116 t
        left join
            (
                select
                    t.pno
                from tmpale.tmp_th_pno_lj_0116 t
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = t.pno
                left join fle_staging.customer_issue ci on ci.id = pci.source_id
                where
                    ci.request_sub_type in (221,300)
                group by 1
            ) t2 on t2.pno = t.pno
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = t.pno and pci.created_at > '2024-01-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2024-01-01'
        left join bi_pro.abnormal_customer_complaint acc on acc.pno = t.pno and acc.created_at > '2024-01-01'
        left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2024-01-01'
        left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
        where
            t2.pno is null
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > date_sub(curdate(), interval 2 month)
            and pr.routed_at < t1.finished_at
    )
select
    t1.pno
    ,pi.dst_store_id 目的地网点ID
    ,pi.ticket_delivery_staff_info_id 妥投快递员
    ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
    ,pi.cod_amount cod金额
    ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
    ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
    ,pi.exhibition_weight 重量
    ,pi.exhibition_length 长
    ,pi.exhibition_width 宽
    ,pi.exhibition_height 高
    ,pi.dst_phone 收件人电话
    ,pi.dst_province_code 收件省ID
    ,pi.dst_city_code 收件城市ID
    ,pi.dst_district_code 收件乡ID
    ,pi.dst_postal_code 收件邮编
    ,pi.src_phone 寄件人电话
    ,pi.src_province_code 发件省ID
    ,pi.src_city_code 发件城市ID
    ,pi.src_district_code 发件乡ID
    ,pi.src_postal_code 发件邮编
    ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
    ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
    ,scan.scan_count 当日交接量
    ,scan.del_count 当日妥投量
    ,scan.del_rate 当日妥投率
    ,dis.distance/1000 当日行驶里程km
    ,pi.client_id 客户ID
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null
        and bc.id is null then '普通ka'
        when kp.`id` is null then '小c'
      end as 客户类型
    ,t1.type '判责类型'
    ,p1.call_num 最后一次电话通话
    ,p1.diao_num 最后一次电话响铃
    ,if(p2.pno is not null , 'y', 'n')  是否沟通
    ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
    ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
    ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
    ,ab.abnormal_count 近三月处罚次数
from fle_staging.parcel_info pi
join t t1 on t1.pno = pi.pno
left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
left join
    (
        select
            t1.ticket_delivery_staff_info_id
            ,t1.fin_date
            ,count(distinct pr.pno) scan_count
            ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
            ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
        from rot_pro.parcel_route pr
        join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
        left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 3 month)
        where
            pr.routed_at > '2024-01-01'
            and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
            and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
            and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
            and pr.staff_info_id = t1.ticket_delivery_staff_info_id
        group by 1,2
    ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
left join
    (
        select
            t1.fin_date
            ,t1.ticket_delivery_staff_info_id
            ,max(ccd.coordinate_distance) distance
        from rev_pro.courier_coordinate_distance ccd
        join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
        where
            ccd.created_at > '2024-01-01'
        group by 1,2
    ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
left join fle_staging.ka_profile kp on pi.client_id = kp.id
left join pho p1 on p1.pno = t1.pno and p1.rk = 1
left join
    (
        select
            p1.pno
        from pho p1
        where
            p1.call_num > 0
        group by 1
    ) p2 on p2.pno = t1.pno
left join
    (-- 近3月处罚次数
        select
            am.staff_info_id
            ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
        from bi_pro.abnormal_message am
        join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
        where
            am.created_at >= date_sub(curdate(), interval 3 month)
            and am.isdel = 0 -- 未删除
            and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
        group by 1
    ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
#         select
#             acc.pno
#             ,am.abnormal_time
#             ,am.punish_category
#             ,acc.complaints_type
#             ,pi.ticket_delivery_staff_info_id
#             ,pi.finished_at
#         from bi_pro.abnormal_customer_complaint acc
#         left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id
#         left join fle_staging.parcel_info pi on pi.pno = acc.pno  and pi.created_at > date_sub(curdate(), interval 3 month)
#         where
#             am.abnormal_time >= '2023-11-11'
#             and am.abnormal_time <= '2023-11-20'
#             and
#                 (
#                     am.punish_category = 7
#                     or acc.complaints_type = 1
#                 )
#         and pi.state = 5
#         -- and acc.pno  ='TH01184UQNTE6B1'
#         group by 1,2,3,4,5,6
        select
            t.pno
            ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from tmpale.tmp_th_pno_lj_0116 t
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = t.pno and pci.created_at > '2023-12-30'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-30'
        left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)

        union all

        select
            t.pno
            ,case
                when pci.merge_column is not null then date(pci.complaints_at)
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
                else null
            end abnormal_time
            ,case
                when pci.merge_column is not null then '虚假妥投'
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                else '未投诉'
            end type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from tmpale.tmp_th_pno_lj_0116 t
        left join
            (
                select
                    t.pno
                from tmpale.tmp_th_pno_lj_0116 t
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = t.pno and pci.created_at > '2024-01-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2024-01-01'
                where
                    ci.request_sub_type in (221,300)
                group by 1
            ) t2 on t2.pno = t.pno
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = t.pno and pci.created_at > '2024-01-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2024-01-01'
        left join bi_pro.abnormal_customer_complaint acc on acc.pno = t.pno and acc.created_at > '2024-01-01'
        left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2024-01-01'
        left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
        where
            t2.pno is null
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > date_sub(curdate(), interval 1 month)
            and pr.routed_at < t1.finished_at
    )
select
    t1.pno
    ,pi.dst_store_id 目的地网点ID
    ,pi.ticket_delivery_staff_info_id 妥投快递员
    ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
    ,pi.cod_amount cod金额
    ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
    ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
    ,pi.exhibition_weight 重量
    ,pi.exhibition_length 长
    ,pi.exhibition_width 宽
    ,pi.exhibition_height 高
    ,pi.dst_phone 收件人电话
    ,pi.dst_province_code 收件省ID
    ,pi.dst_city_code 收件城市ID
    ,pi.dst_district_code 收件乡ID
    ,pi.dst_postal_code 收件邮编
    ,pi.src_phone 寄件人电话
    ,pi.src_province_code 发件省ID
    ,pi.src_city_code 发件城市ID
    ,pi.src_district_code 发件乡ID
    ,pi.src_postal_code 发件邮编
    ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
    ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
    ,scan.scan_count 当日交接量
    ,scan.del_count 当日妥投量
    ,scan.del_rate 当日妥投率
    ,dis.distance/1000 当日行驶里程km
    ,pi.client_id 客户ID
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null
        and bc.id is null then '普通ka'
        when kp.`id` is null then '小c'
      end as 客户类型
    ,t1.type '判责类型'
    ,p1.call_num 最后一次电话通话
    ,p1.diao_num 最后一次电话响铃
    ,if(p2.pno is not null , 'y', 'n')  是否沟通
    ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
    ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
    ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
    ,ab.abnormal_count 近三月处罚次数
from fle_staging.parcel_info pi
join t t1 on t1.pno = pi.pno
left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date and swa.attendance_date >= '2024-01-01'
left join
    (
        select
            t1.ticket_delivery_staff_info_id
            ,t1.fin_date
            ,count(distinct pr.pno) scan_count
            ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
            ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
        from rot_pro.parcel_route pr
        join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
        left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 1 month)
        where
            pr.routed_at > '2024-01-01'
            and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
            and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
            and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
            and pr.staff_info_id = t1.ticket_delivery_staff_info_id
        group by 1,2
    ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
left join
    (
        select
            t1.fin_date
            ,t1.ticket_delivery_staff_info_id
            ,max(ccd.coordinate_distance) distance
        from rev_pro.courier_coordinate_distance ccd
        join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
        where
            ccd.created_at > '2024-01-01'
        group by 1,2
    ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
left join fle_staging.ka_profile kp on pi.client_id = kp.id
left join pho p1 on p1.pno = t1.pno and p1.rk = 1
left join
    (
        select
            p1.pno
        from pho p1
        where
            p1.call_num > 0
        group by 1
    ) p2 on p2.pno = t1.pno
left join
    (-- 近3月处罚次数
        select
            am.staff_info_id
            ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
        from bi_pro.abnormal_message am
        join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
        where
            am.created_at >= date_sub(curdate(), interval 3 month)
            and am.isdel = 0 -- 未删除
            and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
        group by 1
    ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
select
    pci.merge_column
from bi_center.parcel_complaint_inquiry pci
join bi_pro.abnormal_message am on json_extract(am.extra_info, '$.id') = pci.id
where
    pci.created_at > '2023-12-30'
    and pci.created_at < '2024-01-12'
    and json_extract(am.extra_info, '$.src') = 'parcel_complaint_inquiry'
    and am.punish_category = 7;
;-- -. . -..- - / . -. - .-. -.--
select
    t.pno
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as 客户类型
    ,pi2.cod_amount/100 cod
    ,pai.cogs_amount/100 cogs
    ,pci.created_at 询问任务提交时间
from tmpale.tmp_th_pno_lj_0115 t
left join fle_staging.parcel_info pi on t.pno = pi.pno
left join fle_staging.parcel_info pi2 on  pi2.pno = if(pi.returned = 1, pi.customary_pno, pi.pno)
left join fle_staging.parcel_additional_info pai on pai.pno = pi2.pno
left join fle_staging.ka_profile kp on kp.id = pi.client_id
left join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = pi.client_id
left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = t.pno;
;-- -. . -..- - / . -. - .-. -.--
select
    min(pi.created_at)
from fle_staging.parcel_info pi
where
    pi.state = 5;
;-- -. . -..- - / . -. - .-. -.--
select
    count(pi.pno)
from fle_staging.parcel_info pi
where
    pi.state = 5
    and pi.created_at < '2023-10-02'
    and pi.created_at >= '2023-10-01';
;-- -. . -..- - / . -. - .-. -.--
select
    pi.pno
    ,pi.ticket_delivery_staff_lng 妥投经度
    ,pi.ticket_delivery_staff_lat 妥投纬度
    ,ss.lng 妥投网点经度
    ,ss.lat  妥投网点纬度
    ,st_distance_sphere(point(pi.ticket_delivery_staff_lng, pi.ticket_delivery_staff_lat), point(ss.lng, ss.lat)) 距离
from fle_staging.parcel_info pi
left join fle_staging.sys_store ss on ss.id = pi.ticket_delivery_store_id
where
    pi.pno in ('TH670153D48E9G','TH030253FGBB9I','TH011853NHS89A1','TH030453DK2U9E','TH190753HPJ77A1','TH014552TZC11C','THT0403Q2YCP3Z','TH2004530VEZ8B','TH200453CFEW2B','THT0108Q1HWV4Z','TH040553H2JW5D','TH011853CY2F7A1','TH030253GYFG6I','TH670153MEPJ8G','THT2506PY5BN8Z','TH250653Q8JT4D','THT0109PX19W2Z','TH020553JDBP3B','TH040653NKWF8B1','TH200453JPTS9B5','TH020351TSZG5A','TH020652VJKQ9A','TH020553JFDY6B','TH380153FWYN9D','TH040653PVWY7B1','TH010853PPS87A1','THT0302Q1ZGX0Z','TH380153G4YW5A','TH020553J1HX6B','THT0406Q2E6S3Z');
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
#         select
#             acc.pno
#             ,am.abnormal_time
#             ,am.punish_category
#             ,acc.complaints_type
#             ,pi.ticket_delivery_staff_info_id
#             ,pi.finished_at
#         from bi_pro.abnormal_customer_complaint acc
#         left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id
#         left join fle_staging.parcel_info pi on pi.pno = acc.pno  and pi.created_at > date_sub(curdate(), interval 3 month)
#         where
#             am.abnormal_time >= '2023-11-11'
#             and am.abnormal_time <= '2023-11-20'
#             and
#                 (
#                     am.punish_category = 7
#                     or acc.complaints_type = 1
#                 )
#         and pi.state = 5
#         -- and acc.pno  ='TH01184UQNTE6B1'
#         group by 1,2,3,4,5,6
        select
            pi.pno
            ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-12-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
            and pi.ticket_delivery_store_id in ('TH01270302','TH38011701','TH03020900','TH25060300','TH20040212','TH37040100','TH01090101','TH67010700','TH01080144','TH04011119','TH03040503','TH04050201','TH18040800','TH38130200','TH01180117','TH01080109','TH04060232','TH13050401','TH02060111','TH76050100','TH01050401','TH02050101','TH01050214','TH67010614','TH25060103','TH01050203','TH18040105','TH02050102','TH01180102','TH01080204','TH01470308','TH20040248','TH01080114','TH02060149','TH03020503','TH13050405','TH67010525','TH38011200','TH13050200','TH20040271','TH04060700','TH01290102','TH20040301','TH01180105','TH04030115','TH01210119','TH20040246','TH01030308','TH72070101','TH01080138','TH38010110','TH03020819','TH20040820')
            and pi.finished_at > '2023-12-05 17:00:00'
            and pi.finished_at < '2023-12-06 17:00:00'
            and pi.state = 5

        union all

        select
            pi.pno
            ,case
                when pci.merge_column is not null then date(pci.complaints_at)
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
                else null
            end abnormal_time
            ,case
                when pci.merge_column is not null then '虚假妥投'
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                else '未投诉'
            end type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from  fle_staging.parcel_info pi
        left join
            (
                select
                    pi.pno
                from fle_staging.parcel_info pi
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-12-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                where
                    ci.request_sub_type in (221,300)
                    and pi.ticket_delivery_store_id in ('TH01270302','TH38011701','TH03020900','TH25060300','TH20040212','TH37040100','TH01090101','TH67010700','TH01080144','TH04011119','TH03040503','TH04050201','TH18040800','TH38130200','TH01180117','TH01080109','TH04060232','TH13050401','TH02060111','TH76050100','TH01050401','TH02050101','TH01050214','TH67010614','TH25060103','TH01050203','TH18040105','TH02050102','TH01180102','TH01080204','TH01470308','TH20040248','TH01080114','TH02060149','TH03020503','TH13050405','TH67010525','TH38011200','TH13050200','TH20040271','TH04060700','TH01290102','TH20040301','TH01180105','TH04030115','TH01210119','TH20040246','TH01030308','TH72070101','TH01080138','TH38010110','TH03020819','TH20040820')
                    and pi.finished_at > '2023-12-05 17:00:00'
                    and pi.finished_at < '2023-12-06 17:00:00'
                    and pi.state = 5
                group by 1
            ) t2 on t2.pno = pi.pno
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-12-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
        left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-12-01'
        left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-12-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
        where
            t2.pno is null
            and pi.ticket_delivery_store_id in ('TH01270302','TH38011701','TH03020900','TH25060300','TH20040212','TH37040100','TH01090101','TH67010700','TH01080144','TH04011119','TH03040503','TH04050201','TH18040800','TH38130200','TH01180117','TH01080109','TH04060232','TH13050401','TH02060111','TH76050100','TH01050401','TH02050101','TH01050214','TH67010614','TH25060103','TH01050203','TH18040105','TH02050102','TH01180102','TH01080204','TH01470308','TH20040248','TH01080114','TH02060149','TH03020503','TH13050405','TH67010525','TH38011200','TH13050200','TH20040271','TH04060700','TH01290102','TH20040301','TH01180105','TH04030115','TH01210119','TH20040246','TH01030308','TH72070101','TH01080138','TH38010110','TH03020819','TH20040820')
            and pi.finished_at > '2023-12-05 17:00:00'
            and pi.finished_at < '2023-12-06 17:00:00'
            and pi.state = 5
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-12-01'
            and pr.routed_at < t1.finished_at
    )
select
    t1.pno
    ,pi.dst_store_id 目的地网点ID
    ,pi.ticket_delivery_staff_info_id 妥投快递员
    ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
    ,pi.cod_amount cod金额
    ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
    ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
    ,pi.exhibition_weight 重量
    ,pi.exhibition_length 长
    ,pi.exhibition_width 宽
    ,pi.exhibition_height 高
    ,pi.dst_phone 收件人电话
    ,pi.dst_province_code 收件省ID
    ,pi.dst_city_code 收件城市ID
    ,pi.dst_district_code 收件乡ID
    ,pi.dst_postal_code 收件邮编
    ,pi.src_phone 寄件人电话
    ,pi.src_province_code 发件省ID
    ,pi.src_city_code 发件城市ID
    ,pi.src_district_code 发件乡ID
    ,pi.src_postal_code 发件邮编
    ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
    ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
    ,scan.scan_count 当日交接量
    ,scan.del_count 当日妥投量
    ,scan.del_rate 当日妥投率
    ,dis.distance/1000 当日行驶里程km
    ,pi.client_id 客户ID
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null
        and bc.id is null then '普通ka'
        when kp.`id` is null then '小c'
      end as 客户类型
    ,t1.type '判责类型'
    ,p1.call_num 最后一次电话通话
    ,p1.diao_num 最后一次电话响铃
    ,if(p2.pno is not null , 'y', 'n')  是否沟通
    ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
    ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
    ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
    ,ab.abnormal_count 近三月处罚次数
from fle_staging.parcel_info pi
join t t1 on t1.pno = pi.pno
left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date and swa.attendance_date >= '2024-01-01'
left join
    (
        select
            t1.ticket_delivery_staff_info_id
            ,t1.fin_date
            ,count(distinct pr.pno) scan_count
            ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
            ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
        from rot_pro.parcel_route pr
        join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
        left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 1 month)
        where
            pr.routed_at > '2024-01-01'
            and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
            and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
            and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
            and pr.staff_info_id = t1.ticket_delivery_staff_info_id
        group by 1,2
    ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
left join
    (
        select
            t1.fin_date
            ,t1.ticket_delivery_staff_info_id
            ,max(ccd.coordinate_distance) distance
        from rev_pro.courier_coordinate_distance ccd
        join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
        where
#             ccd.created_at > '2024-01-01'
            ccd.coordinate_date = '2023-12-06'
        group by 1,2
    ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
left join fle_staging.ka_profile kp on pi.client_id = kp.id
left join pho p1 on p1.pno = t1.pno and p1.rk = 1
left join
    (
        select
            p1.pno
        from pho p1
        where
            p1.call_num > 0
        group by 1
    ) p2 on p2.pno = t1.pno
left join
    (-- 近3月处罚次数
        select
            am.staff_info_id
            ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
        from bi_pro.abnormal_message am
        join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
        where
            am.created_at >= date_sub(curdate(), interval 3 month)
            and am.isdel = 0 -- 未删除
            and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
        group by 1
    ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
#         select
#             acc.pno
#             ,am.abnormal_time
#             ,am.punish_category
#             ,acc.complaints_type
#             ,pi.ticket_delivery_staff_info_id
#             ,pi.finished_at
#         from bi_pro.abnormal_customer_complaint acc
#         left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id
#         left join fle_staging.parcel_info pi on pi.pno = acc.pno  and pi.created_at > date_sub(curdate(), interval 3 month)
#         where
#             am.abnormal_time >= '2023-11-11'
#             and am.abnormal_time <= '2023-11-20'
#             and
#                 (
#                     am.punish_category = 7
#                     or acc.complaints_type = 1
#                 )
#         and pi.state = 5
#         -- and acc.pno  ='TH01184UQNTE6B1'
#         group by 1,2,3,4,5,6
        select
            pi.pno
            ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-12-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
            and pi.ticket_delivery_store_id in ('TH01270302','TH38011701','TH03020900','TH25060300','TH20040212','TH37040100','TH01090101','TH67010700','TH01080144','TH04011119','TH03040503','TH04050201','TH18040800','TH38130200','TH01180117','TH01080109','TH04060232','TH13050401','TH02060111','TH76050100','TH01050401','TH02050101','TH01050214','TH67010614','TH25060103','TH01050203','TH18040105','TH02050102','TH01180102','TH01080204','TH01470308','TH20040248','TH01080114','TH02060149','TH03020503','TH13050405','TH67010525','TH38011200','TH13050200','TH20040271','TH04060700','TH01290102','TH20040301','TH01180105','TH04030115','TH01210119','TH20040246','TH01030308','TH72070101','TH01080138','TH38010110','TH03020819','TH20040820')
            and pi.finished_at > '2023-12-05 17:00:00'
            and pi.finished_at < '2023-12-06 17:00:00'
            and pi.state = 5

        union all

        select
            pi.pno
            ,case
                when pci.merge_column is not null then date(pci.complaints_at)
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
                else null
            end abnormal_time
            ,case
                when pci.merge_column is not null then '虚假妥投'
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                else '未投诉'
            end type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from  fle_staging.parcel_info pi
        left join
            (
                select
                    pi.pno
                from fle_staging.parcel_info pi
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-12-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                where
                    ci.request_sub_type in (221,300)
                    and pi.ticket_delivery_store_id in ('TH01270302','TH38011701','TH03020900','TH25060300','TH20040212','TH37040100','TH01090101','TH67010700','TH01080144','TH04011119','TH03040503','TH04050201','TH18040800','TH38130200','TH01180117','TH01080109','TH04060232','TH13050401','TH02060111','TH76050100','TH01050401','TH02050101','TH01050214','TH67010614','TH25060103','TH01050203','TH18040105','TH02050102','TH01180102','TH01080204','TH01470308','TH20040248','TH01080114','TH02060149','TH03020503','TH13050405','TH67010525','TH38011200','TH13050200','TH20040271','TH04060700','TH01290102','TH20040301','TH01180105','TH04030115','TH01210119','TH20040246','TH01030308','TH72070101','TH01080138','TH38010110','TH03020819','TH20040820')
                    and pi.finished_at > '2023-12-05 17:00:00'
                    and pi.finished_at < '2023-12-06 17:00:00'
                    and pi.state = 5
                group by 1
            ) t2 on t2.pno = pi.pno
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-12-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
        left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-12-01'
        left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-12-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
        where
            t2.pno is null
            and pi.ticket_delivery_store_id in ('TH01270302','TH38011701','TH03020900','TH25060300','TH20040212','TH37040100','TH01090101','TH67010700','TH01080144','TH04011119','TH03040503','TH04050201','TH18040800','TH38130200','TH01180117','TH01080109','TH04060232','TH13050401','TH02060111','TH76050100','TH01050401','TH02050101','TH01050214','TH67010614','TH25060103','TH01050203','TH18040105','TH02050102','TH01180102','TH01080204','TH01470308','TH20040248','TH01080114','TH02060149','TH03020503','TH13050405','TH67010525','TH38011200','TH13050200','TH20040271','TH04060700','TH01290102','TH20040301','TH01180105','TH04030115','TH01210119','TH20040246','TH01030308','TH72070101','TH01080138','TH38010110','TH03020819','TH20040820')
            and pi.finished_at > '2023-12-05 17:00:00'
            and pi.finished_at < '2023-12-06 17:00:00'
            and pi.state = 5
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-12-01'
            and pr.routed_at < t1.finished_at
    )
select
    t1.pno
    ,pi.dst_store_id 目的地网点ID
    ,pi.ticket_delivery_staff_info_id 妥投快递员
    ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
    ,pi.cod_amount cod金额
    ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
    ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
    ,pi.exhibition_weight 重量
    ,pi.exhibition_length 长
    ,pi.exhibition_width 宽
    ,pi.exhibition_height 高
    ,pi.dst_phone 收件人电话
    ,pi.dst_province_code 收件省ID
    ,pi.dst_city_code 收件城市ID
    ,pi.dst_district_code 收件乡ID
    ,pi.dst_postal_code 收件邮编
    ,pi.src_phone 寄件人电话
    ,pi.src_province_code 发件省ID
    ,pi.src_city_code 发件城市ID
    ,pi.src_district_code 发件乡ID
    ,pi.src_postal_code 发件邮编
    ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
    ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
    ,scan.scan_count 当日交接量
    ,scan.del_count 当日妥投量
    ,scan.del_rate 当日妥投率
    ,dis.distance/1000 当日行驶里程km
    ,pi.client_id 客户ID
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null
        and bc.id is null then '普通ka'
        when kp.`id` is null then '小c'
      end as 客户类型
    ,t1.type '判责类型'
    ,p1.call_num 最后一次电话通话
    ,p1.diao_num 最后一次电话响铃
    ,if(p2.pno is not null , 'y', 'n')  是否沟通
    ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
    ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
    ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
    ,ab.abnormal_count 近三月处罚次数
from fle_staging.parcel_info pi
join t t1 on t1.pno = pi.pno
left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date and swa.attendance_date >= '2023-12-01'
left join
    (
        select
            t1.ticket_delivery_staff_info_id
            ,t1.fin_date
            ,count(distinct pr.pno) scan_count
            ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
            ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
        from rot_pro.parcel_route pr
        join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
        left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
        where
            pr.routed_at >= '2023-12-05 17:00:00'
            and pr.routed_at < '2023-12-06 17:00:00'
            and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
#             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
#             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
            and pr.staff_info_id = t1.ticket_delivery_staff_info_id
        group by 1,2
    ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
left join
    (
        select
            t1.fin_date
            ,t1.ticket_delivery_staff_info_id
            ,max(ccd.coordinate_distance) distance
        from rev_pro.courier_coordinate_distance ccd
        join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
        where
#             ccd.created_at > '2024-01-01'
            ccd.coordinate_date = '2023-12-06'
        group by 1,2
    ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
left join fle_staging.ka_profile kp on pi.client_id = kp.id
left join pho p1 on p1.pno = t1.pno and p1.rk = 1
left join
    (
        select
            p1.pno
        from pho p1
        where
            p1.call_num > 0
        group by 1
    ) p2 on p2.pno = t1.pno
left join
    (-- 近3月处罚次数
        select
            am.staff_info_id
            ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
        from bi_pro.abnormal_message am
        join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
        where
            am.created_at >= date_sub(curdate(), interval 3 month)
            and am.isdel = 0 -- 未删除
            and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
        group by 1
    ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
select
    pct.pno
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as 客户类型
    ,case pct.source
        WHEN 1 THEN 'A-问题件-丢失'
        WHEN 2 THEN 'B-记录本-丢失'
        WHEN 3 THEN 'C-包裹状态未更新'
        WHEN 4 THEN 'D-问题件-破损/短少'
        WHEN 5 THEN 'E-记录本-索赔-丢失'
        WHEN 6 THEN 'F-记录本-索赔-破损/短少'
        WHEN 7 THEN 'G-记录本-索赔-其他'
        WHEN 8 THEN 'H-包裹状态未更新-IPC计数'
        WHEN 9 THEN 'I-问题件-外包装破损险'
        WHEN 10 THEN 'J-问题记录本-外包装破损险'
        when 11 then 'K-超时效包裹'
        when 12 then 'L-高度疑似丢失'
    end 问题来源渠道
    ,case pct.state
        when 1 then '待协商'
        when 2 then '协商不一致，待重新协商'
        when 3 then '待财务核实'
        when 4 then '核实通过，待财务支付'
        when 5 then '财务驳回'
        when 6 then '理赔完成'
        when 7 then '理赔终止'
        when 8 then '异常关闭'
        when 9 then' 待协商（搁置）'
        when 10 then '等待再次联系'
    end 理赔状态
    ,pi.cod_amount/100 cod
    ,pai.cogs_amount/100 cogs
    ,case
        when pct.state = 6 and timestampdiff(hour, pct.created_at, pct.updated_at) < 24 then '0-24小时内处理'
        when pct.state = 6 and timestampdiff(hour, pct.created_at, pct.updated_at) >= 24 and timestampdiff(hour, pct.created_at, pct.updated_at) < 48 then '24-48小时内处理'
        when pct.state = 6 and timestampdiff(hour, pct.created_at, pct.updated_at) >= 48 and timestampdiff(hour, pct.created_at, pct.updated_at) < 72 then '48-72小时内处理'
        when pct.state = 6 and timestampdiff(hour, pct.created_at, pct.updated_at) >= 72 then '72小时以上处理'
        else null
    end 理赔处理时间
from bi_pro.parcel_claim_task pct
join fle_staging.parcel_info pi on pi.pno = pct.pno
left join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = pct.client_id
left join fle_staging.ka_profile kp on kp.id = pct.client_id
left join fle_staging.parcel_additional_info pai on pai.pno = pct.pno
where
    pct.created_at > '2023-11-01'
    and pct.created_at < '2024-01-16'
    and pi.state = 5;
;-- -. . -..- - / . -. - .-. -.--
select
    pi.pno
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as 客户类型
from fle_staging.parcel_info pi
left join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = pi.client_id
left join my_staging.ka_profile kp on kp.id = pi.client_id
where
    pi.pno in ('TH0115519GU09A1','TH0203525BCM1A','TH020551VZYF9B','TH020551X9TA9B','TH0205517V5R3B','TH020551X9UV5B','TH020551VB4B1B','TH020551XAWA9B','TH020551V8XU4B','TH020551KH3U9B','TH020551F6H79B','TH0117523R650B','TH020551ZTVF8B','TH0205523U401B','TH0205520PXT8B','TH0205521H296B','TH020552072H6B','TH020551ZKMR4B','TH020551X3Z05B','TH0205521GSJ2B','TH020551ZBW42B','TH020551W9B69B','TH020551W2E70B','TH020551VY3E2B','TH020551V9F73B','TH020551V20H0B','THT0405NTSQJ3Z','THT1601PFKPW7Z','TH300351U9SN8B','TH0405520Y459G','TH311350Z0VW9K','THT5401NXYQ50Z','TH42044Z81Y44A','TH020551W4SX3E1','TH070451NVY44D','TH040551WN8T3G','TH0203527VS95A','THT0506PAH1H2Z','TH0205511ETV5B','TH16015225CG5Q','TH0511521DA86F','TH380151KH2A1R','TH020351UZT00A2','TH020351QD3E0A2','TH020351H43R8A','TH020351UZKX3A','TH24044WTMCZ0D','TH0405522QBD9G','TH02034YZJQG1A2','TH020350AHR24A','TH020350FRJC4A2','LEXPU0289295081','THT6417PD0QT8Z','TH180151W8BM0B','TH02035281ZR6A','TH02035252WY5A0','TH160151S1U67K','TH014351TWAP0A1','TH04055242G53G','TH700151MRFX8D','TH020550W1BF1B','TH0405523PF80G','TH370150GCFY9A','THT0506PDTTZ3Z','TH3712518E8N6A','TH020550NP3R3B','TH014451PUTA0B','TH020351WPKB1A2','TH020351U29W3A2','TH040551RSS98G','TH040551VYFF3G','TH0403509UVR3A0','THT0111NRBW26Z','TH03024V8HWK5H','TH012051VSHF4B','TH020551P1E32B','TH0147501N4J9C','TH014751B6K43B0','TH0306522XJ27A','TH040551ZFQ69G','TH0405520BE45G','TH011650DBTW8A1','TH0141516VPQ2A','TH02054YJ2V60B','TH013951ZCNW7B0','TH040551Y5JT1G','TH013351FD2A6F','TH020351EHG06A','TH020350QVW86A2','TH020351NFXM3A2','TH020352DR8B9B','THT0121NYNR53Z','TH0405520T3S9G','TH04055248B19G','TH040551ZYG16G','THT4705P9XPN7Z','TH380151VBRG0A','TH0203522BM08A','TH020351PJV98A2','TH020351U89A8A2','TH020351VFC95A2','TH020351PXSS1A2','TH020351NK8A4A2','TH020351NSAM9A2','TH020351UZM03A2','TH0405522FY05G','TH237420755167I','TH013352R2KX6F','TH430152NJZQ6C','TH013352QG4D3F','TH013352NC185F','TH0403501W6F3A0','THT0203PDZFU4Z','SSLT730019911390','TH0205528C505B','TH020552EKTJ3B','TH020552CJFU5B','TH020552BWK35B','TH02035116NK0D2','TH0203515UA88D2','TH040551TNN72G','TH16015185J86O','TH040551X5Y18G','TH013352QSET0F','TH02034VACH50B1','TH0201504RSA5M','TH0405521PQJ9G','TH05064ZMQ7D0E','TH0117518K3N7B1','TH300952H2M51E','THT2502P83Y79Z','THT0112NRQBG9Z','TH020552B7VD6B','TH011750U42Q2B','TH271250FWS72A','TH02034ZNECS3A','TH272151H8UP3H','TH0405521F8J9G','TH012352CEN84C','TH02055270HH0E0','TH610151PXWN4C','TH012350YW393C','TH47015111QA0D','TH013352HRJV7F','TH050651PX901L','TH020151SCS09K1','TH050650J9089E','TH0302530YQ98C','THT0133PFH208Z','TH040551BCR57G','TH0203514NQ24D2','TH0123513PGB6C','TH0123515R702C','TH012351JQ2W3C','TH0203507M5R1D2','TH19075257ME4B','TH02034VMTPK9D2','TH02034WSGPN6D2','THT0133PR1QV4Z','TH01014WKUH11B0','TH01014XBU2P1B0','TH01014WRC7H1B0','TH01014WVSQ25B0','TH030252R86N1C','TH030252QU482C','TH013351PGS79E','TH0205523RKP6E0');
;-- -. . -..- - / . -. - .-. -.--
select
    pi.pno
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as 客户类型
from fle_staging.parcel_info pi
left join dwm.tmp_ex_big_clients_id_detail  bc on bc.client_id = pi.client_id
left join fle_staging.ka_profile kp on kp.id = pi.client_id
where
    pi.pno in ('TH0115519GU09A1','TH0203525BCM1A','TH020551VZYF9B','TH020551X9TA9B','TH0205517V5R3B','TH020551X9UV5B','TH020551VB4B1B','TH020551XAWA9B','TH020551V8XU4B','TH020551KH3U9B','TH020551F6H79B','TH0117523R650B','TH020551ZTVF8B','TH0205523U401B','TH0205520PXT8B','TH0205521H296B','TH020552072H6B','TH020551ZKMR4B','TH020551X3Z05B','TH0205521GSJ2B','TH020551ZBW42B','TH020551W9B69B','TH020551W2E70B','TH020551VY3E2B','TH020551V9F73B','TH020551V20H0B','THT0405NTSQJ3Z','THT1601PFKPW7Z','TH300351U9SN8B','TH0405520Y459G','TH311350Z0VW9K','THT5401NXYQ50Z','TH42044Z81Y44A','TH020551W4SX3E1','TH070451NVY44D','TH040551WN8T3G','TH0203527VS95A','THT0506PAH1H2Z','TH0205511ETV5B','TH16015225CG5Q','TH0511521DA86F','TH380151KH2A1R','TH020351UZT00A2','TH020351QD3E0A2','TH020351H43R8A','TH020351UZKX3A','TH24044WTMCZ0D','TH0405522QBD9G','TH02034YZJQG1A2','TH020350AHR24A','TH020350FRJC4A2','LEXPU0289295081','THT6417PD0QT8Z','TH180151W8BM0B','TH02035281ZR6A','TH02035252WY5A0','TH160151S1U67K','TH014351TWAP0A1','TH04055242G53G','TH700151MRFX8D','TH020550W1BF1B','TH0405523PF80G','TH370150GCFY9A','THT0506PDTTZ3Z','TH3712518E8N6A','TH020550NP3R3B','TH014451PUTA0B','TH020351WPKB1A2','TH020351U29W3A2','TH040551RSS98G','TH040551VYFF3G','TH0403509UVR3A0','THT0111NRBW26Z','TH03024V8HWK5H','TH012051VSHF4B','TH020551P1E32B','TH0147501N4J9C','TH014751B6K43B0','TH0306522XJ27A','TH040551ZFQ69G','TH0405520BE45G','TH011650DBTW8A1','TH0141516VPQ2A','TH02054YJ2V60B','TH013951ZCNW7B0','TH040551Y5JT1G','TH013351FD2A6F','TH020351EHG06A','TH020350QVW86A2','TH020351NFXM3A2','TH020352DR8B9B','THT0121NYNR53Z','TH0405520T3S9G','TH04055248B19G','TH040551ZYG16G','THT4705P9XPN7Z','TH380151VBRG0A','TH0203522BM08A','TH020351PJV98A2','TH020351U89A8A2','TH020351VFC95A2','TH020351PXSS1A2','TH020351NK8A4A2','TH020351NSAM9A2','TH020351UZM03A2','TH0405522FY05G','TH237420755167I','TH013352R2KX6F','TH430152NJZQ6C','TH013352QG4D3F','TH013352NC185F','TH0403501W6F3A0','THT0203PDZFU4Z','SSLT730019911390','TH0205528C505B','TH020552EKTJ3B','TH020552CJFU5B','TH020552BWK35B','TH02035116NK0D2','TH0203515UA88D2','TH040551TNN72G','TH16015185J86O','TH040551X5Y18G','TH013352QSET0F','TH02034VACH50B1','TH0201504RSA5M','TH0405521PQJ9G','TH05064ZMQ7D0E','TH0117518K3N7B1','TH300952H2M51E','THT2502P83Y79Z','THT0112NRQBG9Z','TH020552B7VD6B','TH011750U42Q2B','TH271250FWS72A','TH02034ZNECS3A','TH272151H8UP3H','TH0405521F8J9G','TH012352CEN84C','TH02055270HH0E0','TH610151PXWN4C','TH012350YW393C','TH47015111QA0D','TH013352HRJV7F','TH050651PX901L','TH020151SCS09K1','TH050650J9089E','TH0302530YQ98C','THT0133PFH208Z','TH040551BCR57G','TH0203514NQ24D2','TH0123513PGB6C','TH0123515R702C','TH012351JQ2W3C','TH0203507M5R1D2','TH19075257ME4B','TH02034VMTPK9D2','TH02034WSGPN6D2','THT0133PR1QV4Z','TH01014WKUH11B0','TH01014XBU2P1B0','TH01014WRC7H1B0','TH01014WVSQ25B0','TH030252R86N1C','TH030252QU482C','TH013351PGS79E','TH0205523RKP6E0');
;-- -. . -..- - / . -. - .-. -.--
select
    pi.pno
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as 客户类型
from fle_staging.parcel_info pi
left join dwm.tmp_ex_big_clients_id_detail  bc on bc.client_id = pi.client_id
left join fle_staging.ka_profile kp on kp.id = pi.client_id
where
    pi.pno in ('TH0115519GU09A1','TH0203525BCM1A','TH020551VZYF9B','TH020551X9TA9B','TH0205517V5R3B','TH020551X9UV5B','TH020551VB4B1B','TH020551XAWA9B','TH020551V8XU4B','TH020551KH3U9B','TH020551F6H79B','TH0117523R650B','TH020551ZTVF8B','TH0205523U401B','TH0205520PXT8B','TH0205521H296B','TH020552072H6B','TH020551ZKMR4B','TH020551X3Z05B','TH0205521GSJ2B','TH020551ZBW42B','TH020551W9B69B','TH020551W2E70B','TH020551VY3E2B','TH020551V9F73B','TH020551V20H0B','THT0405NTSQJ3Z','THT1601PFKPW7Z','TH300351U9SN8B','TH0405520Y459G','TH311350Z0VW9K','THT5401NXYQ50Z','TH42044Z81Y44A','TH020551W4SX3E1','TH070451NVY44D','TH040551WN8T3G','TH0203527VS95A','THT0506PAH1H2Z','TH0205511ETV5B','TH16015225CG5Q','TH0511521DA86F','TH380151KH2A1R','TH020351UZT00A2','TH020351QD3E0A2','TH020351H43R8A','TH020351UZKX3A','TH24044WTMCZ0D','TH0405522QBD9G','TH02034YZJQG1A2','TH020350AHR24A','TH020350FRJC4A2','LEXPU0289295081','THT6417PD0QT8Z','TH180151W8BM0B','TH02035281ZR6A','TH02035252WY5A0','TH160151S1U67K','TH014351TWAP0A1','TH04055242G53G','TH700151MRFX8D','TH020550W1BF1B','TH0405523PF80G','TH370150GCFY9A','THT0506PDTTZ3Z','TH3712518E8N6A','TH020550NP3R3B','TH014451PUTA0B','TH020351WPKB1A2','TH020351U29W3A2','TH040551RSS98G','TH040551VYFF3G','TH0403509UVR3A0','THT0111NRBW26Z','TH03024V8HWK5H','TH012051VSHF4B','TH020551P1E32B','TH0147501N4J9C','TH014751B6K43B0','TH0306522XJ27A','TH040551ZFQ69G','TH0405520BE45G','TH011650DBTW8A1','TH0141516VPQ2A','TH02054YJ2V60B','TH013951ZCNW7B0','TH040551Y5JT1G','TH013351FD2A6F','TH020351EHG06A','TH020350QVW86A2','TH020351NFXM3A2','TH020352DR8B9B','THT0121NYNR53Z','TH0405520T3S9G','TH04055248B19G','TH040551ZYG16G','THT4705P9XPN7Z','TH380151VBRG0A','TH0203522BM08A','TH020351PJV98A2','TH020351U89A8A2','TH020351VFC95A2','TH020351PXSS1A2','TH020351NK8A4A2','TH020351NSAM9A2','TH020351UZM03A2','TH0405522FY05G','TH237420755167I','TH013352R2KX6F','TH430152NJZQ6C','TH013352QG4D3F','TH013352NC185F','TH0403501W6F3A0','THT0203PDZFU4Z','SSLT730019911390','TH0205528C505B','TH020552EKTJ3B','TH020552CJFU5B','TH020552BWK35B','TH02035116NK0D2','TH0203515UA88D2','TH040551TNN72G','TH16015185J86O','TH040551X5Y18G','TH013352QSET0F','TH02034VACH50B1','TH0201504RSA5M','TH0405521PQJ9G','TH05064ZMQ7D0E','TH0117518K3N7B1','TH300952H2M51E','THT2502P83Y79Z','THT0112NRQBG9Z','TH020552B7VD6B','TH011750U42Q2B','TH271250FWS72A','TH02034ZNECS3A','TH272151H8UP3H','TH0405521F8J9G','TH012352CEN84C','TH02055270HH0E0','TH610151PXWN4C','TH012350YW393C','TH47015111QA0D','TH013352HRJV7F','TH050651PX901L','TH020151SCS09K1','TH050650J9089E','TH0302530YQ98C','THT0133PFH208Z','TH040551BCR57G','TH0203514NQ24D2','TH0123513PGB6C','TH0123515R702C','TH012351JQ2W3C','TH0203507M5R1D2','TH19075257ME4B','TH02034VMTPK9D2','TH02034WSGPN6D2','THT0133PR1QV4Z','TH01014WKUH11B0','TH01014XBU2P1B0','TH01014WRC7H1B0','TH01014WVSQ25B0','TH030252R86N1C','TH030252QU482C','TH013351PGS79E','TH0205523RKP6E0','SSLT730019683513','TH441650ZS470E','TH330651T18S7E','TH581051WGSF1C','TH014251NFQM2C','TH01494YKY906D','TH350651534H8D','TH6805509YJM5A','TH49014ZR4S23F','TH30164ZCYGY0C','TH060151Q6JR9B','TH121051KFCS1D','TH6103505T558E','TH040251WGAN0C1','TH570851R3KZ7A','TH0126520J087A1','TH560551WHA40B','TH570851R3KZ7A','TH310951D46Z7G','TH01494YKY906D','TH040352FU3W6A0','TH650751B3NF9A','TH38195150FE9B','TH360151B3NE6J','TH01184ZVVA94B1','SSLT730019683513','TH040251QWMC5C0','TH27154XDVHV5L','TH590750XH168A','TH641350SCTR0F','TH012751XJ6R6C','TH30164ZCYGY0C','TH060151Q6JR9B','TH441650ZS470E','TH220151KR168F','TH260651BNM77A','TH31144ZTPTD3E','TH3003511FGS1G','TH012851YJ821C','TH030252WRDA5E','TH121051KFCS1D','TH6103505T558E','TH200450162P3B0','TH560851BVRN5F','TH330651T18S7E','TH70055160KR1C','TH350651534H8D','TH014151K4696B0','TH470151WK510E','TH710351G8766G','TH540451R90M7A','TH040251WGAN0C1','TH690150SP2B5F','TH1402510EY26A','TH2007516B9T4A','TH581051WGSF1C','TH010250CECP2A','TH550451US176A','TH160250SKQA8B1','TH0103520RC85C0','TH131150CF608C','TH49014ZR4S23F','TH05064ZVSUN6A','TH01055268HK4D1','TH0126520J087A1','TH560551WHA40B','TH014452CD5K6C','TH0306509FP87G','TH27014Z29Y04J0 ','TH01224ZTWR06B ','TH1005505HFE3A  ','TH20014YKNCN1I ','TH41044YMK905F ','TH01514Z00PW2A ','TH05064ZA9ZS1L ','TH01054YV4XU6B0 ','TH44014YZB648A0 ','TH01014ZDSNA0B1 ','TH01174YWQKV0B2 ','TH77014YVKTA9A ','TH02014ZG6YJ8J ','TH03044ZX6D70H ','TH0107501D0N6B ','TH01254ZS0VV7E ','TH01104ZJE5N5D ','TH10014ZTCCA3A ','TH01394Z1ED38E1 ','TH16024ZJAD38I ','TH29104ZT2BV0D ','TH01434ZEV022B ','TH02014ZX97W8C ','TH0114502K2Y6E ','TH0203508CZ56B0 ','TH04034XYB353A0 ','TH01264YB5TY3B ','TH41094Y1PNG6A ','TH01184YAKWX1A1 ','TH01154Z0CRX9A1 ','TH02034ZW2KQ5D2 ','TH44124WUJRP1J ','TH01284ZQNHX8B ','TH01144ZZ23E8E ','TH55034YE16U8G ','TH01264YPQ0P6B ','TH04024Z0QHZ1D ','TH38014Z013K9A ','TH01284Z6A7T8C ','TH01424XMNKZ0A1 ','TH01174YRHS69A0 ','TH01164Y79D51A1 ','TH21064YN8YB4E0 ','TH01174Z65K47A ','TH01394ZJA4A9F ','TH01374Z1F1B6A ','TH04014ZZV5C4B ','TH01504ZJ7YC8A ','TH01114ZJAMX0A ','TH01394ZRBXH7F ','TH04034ZYXTN8F ','TH0131505HCP2A0 ','TH20074YRJF32E ','TH0118500T1P4A0 ','TH67034ZHRKH6F ','TH2103500W1J3F ','TH2701500WUP7R ','TH01504ZY3PM5B0 ','TH01284ZQNHX8B ','TH01144ZZ23E8E ','TH55034YE16U8G ','TH01264YPQ0P6B ','TH04024Z0QHZ1D ','TH38014Z013K9A ','TH01284Z6A7T8C ','TH01424XMNKZ0A1 ','TH01174YRHS69A0 ','TH01164Y79D51A1 ','TH21064YN8YB4E0 ','TH01174Z65K47A ','TH01394ZJA4A9F ','TH01374Z1F1B6A ','TH04014ZZV5C4B ','TH01504ZJ7YC8A ','TH01114ZJAMX0A ','TH01394ZRBXH7F ','TH04034ZYXTN8F ','TH0131505HCP2A0 ','TH20074YRJF32E ','TH0118500T1P4A0 ','TH67034ZHRKH6F ','TH2103500W1J3F ','TH2701500WUP7R ','TH01504ZY3PM5B0 ','TH01014XQF0C8A ','TH70014XPVH39K ','TH24014XHJFZ9A ','TH01434XSPZK5B ','TH01334Y5QHU4F ','TH01224XGD1Q8C0 ','TH19074XS3YQ1B ','TH01214YA4237A0 ','TH20074XXXZR3H1 ','TH21014Y4ZCM2N ','TH03064XTNKS8C1 ','TH47044Y2KZJ4B ','TH21024Y93YY8A ','TH01284Y8GHK5A0 ','TH24064YKDBG2C ','TH02034YGZYH5B0 ','TH03014YSAM48E0 ','TH01054YNGPV4B0 ','TH56024YGWF60D ','TH01324YV8FD0G ','TH12064YQ9MV1I ','TH04064YMHT72A1 ','TH01284YZH2R3A0 ','TH01174Y4SPG1B0 ','TH35044Y8WH24D ','TH03064YBA907J ','TH24084WH7C11A ','TH04034YVJWA6D ','TH28014Z7S9Z3M ','TH01394XZBAR1B0 ','TH01514Y0RSW3A ','TH18074XKPFR0E ','TH01054YBQBP2A ','TH67034Y181W6F ','TH01204YG0GY7B ','TH01394YGNNT7F ','TH02034YNPR76D1 ','TH02034YGC7Q0D0 ','TH01054YWA0E8B0 ','TH30124YSHG44B ','TH01424Z0UW92A0 ','TH03024YS01V7E ','TH01054RWGTP7B0 ','TH01434YWPDN0B');
;-- -. . -..- - / . -. - .-. -.--
select
    pi.pno
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as 客户类型
from fle_staging.parcel_info pi
left join dwm.tmp_ex_big_clients_id_detail  bc on bc.client_id = pi.client_id
left join fle_staging.ka_profile kp on kp.id = pi.client_id
where
    pi.pno in ('TH0115519GU09A1','TH0203525BCM1A','TH020551VZYF9B','TH020551X9TA9B','TH0205517V5R3B','TH020551X9UV5B','TH020551VB4B1B','TH020551XAWA9B','TH020551V8XU4B','TH020551KH3U9B','TH020551F6H79B','TH0117523R650B','TH020551ZTVF8B','TH0205523U401B','TH0205520PXT8B','TH0205521H296B','TH020552072H6B','TH020551ZKMR4B','TH020551X3Z05B','TH0205521GSJ2B','TH020551ZBW42B','TH020551W9B69B','TH020551W2E70B','TH020551VY3E2B','TH020551V9F73B','TH020551V20H0B','THT0405NTSQJ3Z','THT1601PFKPW7Z','TH300351U9SN8B','TH0405520Y459G','TH311350Z0VW9K','THT5401NXYQ50Z','TH42044Z81Y44A','TH020551W4SX3E1','TH070451NVY44D','TH040551WN8T3G','TH0203527VS95A','THT0506PAH1H2Z','TH0205511ETV5B','TH16015225CG5Q','TH0511521DA86F','TH380151KH2A1R','TH020351UZT00A2','TH020351QD3E0A2','TH020351H43R8A','TH020351UZKX3A','TH24044WTMCZ0D','TH0405522QBD9G','TH02034YZJQG1A2','TH020350AHR24A','TH020350FRJC4A2','LEXPU0289295081','THT6417PD0QT8Z','TH180151W8BM0B','TH02035281ZR6A','TH02035252WY5A0','TH160151S1U67K','TH014351TWAP0A1','TH04055242G53G','TH700151MRFX8D','TH020550W1BF1B','TH0405523PF80G','TH370150GCFY9A','THT0506PDTTZ3Z','TH3712518E8N6A','TH020550NP3R3B','TH014451PUTA0B','TH020351WPKB1A2','TH020351U29W3A2','TH040551RSS98G','TH040551VYFF3G','TH0403509UVR3A0','THT0111NRBW26Z','TH03024V8HWK5H','TH012051VSHF4B','TH020551P1E32B','TH0147501N4J9C','TH014751B6K43B0','TH0306522XJ27A','TH040551ZFQ69G','TH0405520BE45G','TH011650DBTW8A1','TH0141516VPQ2A','TH02054YJ2V60B','TH013951ZCNW7B0','TH040551Y5JT1G','TH013351FD2A6F','TH020351EHG06A','TH020350QVW86A2','TH020351NFXM3A2','TH020352DR8B9B','THT0121NYNR53Z','TH0405520T3S9G','TH04055248B19G','TH040551ZYG16G','THT4705P9XPN7Z','TH380151VBRG0A','TH0203522BM08A','TH020351PJV98A2','TH020351U89A8A2','TH020351VFC95A2','TH020351PXSS1A2','TH020351NK8A4A2','TH020351NSAM9A2','TH020351UZM03A2','TH0405522FY05G','TH237420755167I','TH013352R2KX6F','TH430152NJZQ6C','TH013352QG4D3F','TH013352NC185F','TH0403501W6F3A0','THT0203PDZFU4Z','SSLT730019911390','TH0205528C505B','TH020552EKTJ3B','TH020552CJFU5B','TH020552BWK35B','TH02035116NK0D2','TH0203515UA88D2','TH040551TNN72G','TH16015185J86O','TH040551X5Y18G','TH013352QSET0F','TH02034VACH50B1','TH0201504RSA5M','TH0405521PQJ9G','TH05064ZMQ7D0E','TH0117518K3N7B1','TH300952H2M51E','THT2502P83Y79Z','THT0112NRQBG9Z','TH020552B7VD6B','TH011750U42Q2B','TH271250FWS72A','TH02034ZNECS3A','TH272151H8UP3H','TH0405521F8J9G','TH012352CEN84C','TH02055270HH0E0','TH610151PXWN4C','TH012350YW393C','TH47015111QA0D','TH013352HRJV7F','TH050651PX901L','TH020151SCS09K1','TH050650J9089E','TH0302530YQ98C','THT0133PFH208Z','TH040551BCR57G','TH0203514NQ24D2','TH0123513PGB6C','TH0123515R702C','TH012351JQ2W3C','TH0203507M5R1D2','TH19075257ME4B','TH02034VMTPK9D2','TH02034WSGPN6D2','THT0133PR1QV4Z','TH01014WKUH11B0','TH01014XBU2P1B0','TH01014WRC7H1B0','TH01014WVSQ25B0','TH030252R86N1C','TH030252QU482C','TH013351PGS79E','TH0205523RKP6E0','SSLT730019683513','TH441650ZS470E','TH330651T18S7E','TH581051WGSF1C','TH014251NFQM2C','TH01494YKY906D','TH350651534H8D','TH6805509YJM5A','TH49014ZR4S23F','TH30164ZCYGY0C','TH060151Q6JR9B','TH121051KFCS1D','TH6103505T558E','TH040251WGAN0C1','TH570851R3KZ7A','TH0126520J087A1','TH560551WHA40B','TH310951D46Z7G','TH040352FU3W6A0','TH650751B3NF9A','TH38195150FE9B','TH360151B3NE6J','TH01184ZVVA94B1','TH040251QWMC5C0','TH27154XDVHV5L','TH590750XH168A','TH641350SCTR0F','TH012751XJ6R6C','TH220151KR168F','TH260651BNM77A','TH31144ZTPTD3E','TH3003511FGS1G','TH012851YJ821C','TH030252WRDA5E','TH200450162P3B0','TH560851BVRN5F','TH70055160KR1C','TH014151K4696B0','TH470151WK510E','TH710351G8766G','TH540451R90M7A','TH690150SP2B5F','TH1402510EY26A','TH2007516B9T4A','TH010250CECP2A','TH550451US176A','TH160250SKQA8B1','TH0103520RC85C0','TH131150CF608C','TH05064ZVSUN6A','TH01055268HK4D1','TH014452CD5K6C','TH0306509FP87G','TH27014Z29Y04J0 ','TH01224ZTWR06B ','TH1005505HFE3A  ','TH20014YKNCN1I ','TH41044YMK905F ','TH01514Z00PW2A ','TH05064ZA9ZS1L ','TH01054YV4XU6B0 ','TH44014YZB648A0 ','TH01014ZDSNA0B1 ','TH01174YWQKV0B2 ','TH77014YVKTA9A ','TH02014ZG6YJ8J ','TH03044ZX6D70H ','TH0107501D0N6B ','TH01254ZS0VV7E ','TH01104ZJE5N5D ','TH10014ZTCCA3A ','TH01394Z1ED38E1 ','TH16024ZJAD38I ','TH29104ZT2BV0D ','TH01434ZEV022B ','TH02014ZX97W8C ','TH0114502K2Y6E ','TH0203508CZ56B0 ','TH04034XYB353A0 ','TH01264YB5TY3B ','TH41094Y1PNG6A ','TH01184YAKWX1A1 ','TH01154Z0CRX9A1 ','TH02034ZW2KQ5D2 ','TH44124WUJRP1J ','TH01284ZQNHX8B ','TH01144ZZ23E8E ','TH55034YE16U8G ','TH01264YPQ0P6B ','TH04024Z0QHZ1D ','TH38014Z013K9A ','TH01284Z6A7T8C ','TH01424XMNKZ0A1 ','TH01174YRHS69A0 ','TH01164Y79D51A1 ','TH21064YN8YB4E0 ','TH01174Z65K47A ','TH01394ZJA4A9F ','TH01374Z1F1B6A ','TH04014ZZV5C4B ','TH01504ZJ7YC8A ','TH01114ZJAMX0A ','TH01394ZRBXH7F ','TH04034ZYXTN8F ','TH0131505HCP2A0 ','TH20074YRJF32E ','TH0118500T1P4A0 ','TH67034ZHRKH6F ','TH2103500W1J3F ','TH2701500WUP7R ','TH01504ZY3PM5B0 ','TH01014XQF0C8A ','TH70014XPVH39K ','TH24014XHJFZ9A ','TH01434XSPZK5B ','TH01334Y5QHU4F ','TH01224XGD1Q8C0 ','TH19074XS3YQ1B ','TH01214YA4237A0 ','TH20074XXXZR3H1 ','TH21014Y4ZCM2N ','TH03064XTNKS8C1 ','TH47044Y2KZJ4B ','TH21024Y93YY8A ','TH01284Y8GHK5A0 ','TH24064YKDBG2C ','TH02034YGZYH5B0 ','TH03014YSAM48E0 ','TH01054YNGPV4B0 ','TH56024YGWF60D ','TH01324YV8FD0G ','TH12064YQ9MV1I ','TH04064YMHT72A1 ','TH01284YZH2R3A0 ','TH01174Y4SPG1B0 ','TH35044Y8WH24D ','TH03064YBA907J ','TH24084WH7C11A ','TH04034YVJWA6D ','TH28014Z7S9Z3M ','TH01394XZBAR1B0 ','TH01514Y0RSW3A ','TH18074XKPFR0E ','TH01054YBQBP2A ','TH67034Y181W6F ','TH01204YG0GY7B ','TH01394YGNNT7F ','TH02034YNPR76D1 ','TH02034YGC7Q0D0 ','TH01054YWA0E8B0 ','TH30124YSHG44B ','TH01424Z0UW92A0 ','TH03024YS01V7E ','TH01054RWGTP7B0 ','TH01434YWPDN0B');
;-- -. . -..- - / . -. - .-. -.--
select
    pi.pno
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as 客户类型
from fle_staging.parcel_info pi
left join dwm.tmp_ex_big_clients_id_detail  bc on bc.client_id = pi.client_id
left join fle_staging.ka_profile kp on kp.id = pi.client_id
where
    pi.pno in ('TH0115519GU09A1','TH0203525BCM1A','TH020551VZYF9B','TH020551X9TA9B','TH0205517V5R3B','TH020551X9UV5B','TH020551VB4B1B','TH020551XAWA9B','TH020551V8XU4B','TH020551KH3U9B','TH020551F6H79B','TH0117523R650B','TH020551ZTVF8B','TH0205523U401B','TH0205520PXT8B','TH0205521H296B','TH020552072H6B','TH020551ZKMR4B','TH020551X3Z05B','TH0205521GSJ2B','TH020551ZBW42B','TH020551W9B69B','TH020551W2E70B','TH020551VY3E2B','TH020551V9F73B','TH020551V20H0B','THT0405NTSQJ3Z','THT1601PFKPW7Z','TH300351U9SN8B','TH0405520Y459G','TH311350Z0VW9K','THT5401NXYQ50Z','TH42044Z81Y44A','TH020551W4SX3E1','TH070451NVY44D','TH040551WN8T3G','TH0203527VS95A','THT0506PAH1H2Z','TH0205511ETV5B','TH16015225CG5Q','TH0511521DA86F','TH380151KH2A1R','TH020351UZT00A2','TH020351QD3E0A2','TH020351H43R8A','TH020351UZKX3A','TH24044WTMCZ0D','TH0405522QBD9G','TH02034YZJQG1A2','TH020350AHR24A','TH020350FRJC4A2','LEXPU0289295081','THT6417PD0QT8Z','TH180151W8BM0B','TH02035281ZR6A','TH02035252WY5A0','TH160151S1U67K','TH014351TWAP0A1','TH04055242G53G','TH700151MRFX8D','TH020550W1BF1B','TH0405523PF80G','TH370150GCFY9A','THT0506PDTTZ3Z','TH3712518E8N6A','TH020550NP3R3B','TH014451PUTA0B','TH020351WPKB1A2','TH020351U29W3A2','TH040551RSS98G','TH040551VYFF3G','TH0403509UVR3A0','THT0111NRBW26Z','TH03024V8HWK5H','TH012051VSHF4B','TH020551P1E32B','TH0147501N4J9C','TH014751B6K43B0','TH0306522XJ27A','TH040551ZFQ69G','TH0405520BE45G','TH011650DBTW8A1','TH0141516VPQ2A','TH02054YJ2V60B','TH013951ZCNW7B0','TH040551Y5JT1G','TH013351FD2A6F','TH020351EHG06A','TH020350QVW86A2','TH020351NFXM3A2','TH020352DR8B9B','THT0121NYNR53Z','TH0405520T3S9G','TH04055248B19G','TH040551ZYG16G','THT4705P9XPN7Z','TH380151VBRG0A','TH0203522BM08A','TH020351PJV98A2','TH020351U89A8A2','TH020351VFC95A2','TH020351PXSS1A2','TH020351NK8A4A2','TH020351NSAM9A2','TH020351UZM03A2','TH0405522FY05G','TH237420755167I','TH013352R2KX6F','TH430152NJZQ6C','TH013352QG4D3F','TH013352NC185F','TH0403501W6F3A0','THT0203PDZFU4Z','SSLT730019911390','TH0205528C505B','TH020552EKTJ3B','TH020552CJFU5B','TH020552BWK35B','TH02035116NK0D2','TH0203515UA88D2','TH040551TNN72G','TH16015185J86O','TH040551X5Y18G','TH013352QSET0F','TH02034VACH50B1','TH0201504RSA5M','TH0405521PQJ9G','TH05064ZMQ7D0E','TH0117518K3N7B1','TH300952H2M51E','THT2502P83Y79Z','THT0112NRQBG9Z','TH020552B7VD6B','TH011750U42Q2B','TH271250FWS72A','TH02034ZNECS3A','TH272151H8UP3H','TH0405521F8J9G','TH012352CEN84C','TH02055270HH0E0','TH610151PXWN4C','TH012350YW393C','TH47015111QA0D','TH013352HRJV7F','TH050651PX901L','TH020151SCS09K1','TH050650J9089E','TH0302530YQ98C','THT0133PFH208Z','TH040551BCR57G','TH0203514NQ24D2','TH0123513PGB6C','TH0123515R702C','TH012351JQ2W3C','TH0203507M5R1D2','TH19075257ME4B','TH02034VMTPK9D2','TH02034WSGPN6D2','THT0133PR1QV4Z','TH01014WKUH11B0','TH01014XBU2P1B0','TH01014WRC7H1B0','TH01014WVSQ25B0','TH030252R86N1C','TH030252QU482C','TH013351PGS79E','TH0205523RKP6E0','SSLT730019683513','TH441650ZS470E','TH330651T18S7E','TH581051WGSF1C','TH014251NFQM2C','TH01494YKY906D','TH350651534H8D','TH6805509YJM5A','TH49014ZR4S23F','TH30164ZCYGY0C','TH060151Q6JR9B','TH121051KFCS1D','TH6103505T558E','TH040251WGAN0C1','TH570851R3KZ7A','TH0126520J087A1','TH560551WHA40B','TH310951D46Z7G','TH040352FU3W6A0','TH650751B3NF9A','TH38195150FE9B','TH360151B3NE6J','TH01184ZVVA94B1','TH040251QWMC5C0','TH27154XDVHV5L','TH590750XH168A','TH641350SCTR0F','TH012751XJ6R6C','TH220151KR168F','TH260651BNM77A','TH31144ZTPTD3E','TH3003511FGS1G','TH012851YJ821C','TH030252WRDA5E','TH200450162P3B0','TH560851BVRN5F','TH70055160KR1C','TH014151K4696B0','TH470151WK510E','TH710351G8766G','TH540451R90M7A','TH690150SP2B5F','TH1402510EY26A','TH2007516B9T4A','TH010250CECP2A','TH550451US176A','TH160250SKQA8B1','TH0103520RC85C0','TH131150CF608C','TH05064ZVSUN6A','TH01055268HK4D1','TH014452CD5K6C','TH0306509FP87G','TH27014Z29Y04J0','TH01224ZTWR06B','TH1005505HFE3A','TH20014YKNCN1I','TH41044YMK905F','TH01514Z00PW2A','TH05064ZA9ZS1L','TH01054YV4XU6B0','TH44014YZB648A0','TH01014ZDSNA0B1','TH01174YWQKV0B2','TH77014YVKTA9A','TH02014ZG6YJ8J','TH03044ZX6D70H','TH0107501D0N6B','TH01254ZS0VV7E','TH01104ZJE5N5D','TH10014ZTCCA3A','TH01394Z1ED38E1','TH16024ZJAD38I','TH29104ZT2BV0D','TH01434ZEV022B','TH02014ZX97W8C','TH0114502K2Y6E','TH0203508CZ56B0','TH04034XYB353A0','TH01264YB5TY3B','TH41094Y1PNG6A','TH01184YAKWX1A1','TH01154Z0CRX9A1','TH02034ZW2KQ5D2','TH44124WUJRP1J','TH01284ZQNHX8B','TH01144ZZ23E8E','TH55034YE16U8G','TH01264YPQ0P6B','TH04024Z0QHZ1D','TH38014Z013K9A','TH01284Z6A7T8C','TH01424XMNKZ0A1','TH01174YRHS69A0','TH01164Y79D51A1','TH21064YN8YB4E0','TH01174Z65K47A','TH01394ZJA4A9F','TH01374Z1F1B6A','TH04014ZZV5C4B','TH01504ZJ7YC8A','TH01114ZJAMX0A','TH01394ZRBXH7F','TH04034ZYXTN8F','TH0131505HCP2A0','TH20074YRJF32E','TH0118500T1P4A0','TH67034ZHRKH6F','TH2103500W1J3F','TH2701500WUP7R','TH01504ZY3PM5B0','TH01014XQF0C8A','TH70014XPVH39K','TH24014XHJFZ9A','TH01434XSPZK5B','TH01334Y5QHU4F','TH01224XGD1Q8C0','TH19074XS3YQ1B','TH01214YA4237A0','TH20074XXXZR3H1','TH21014Y4ZCM2N','TH03064XTNKS8C1','TH47044Y2KZJ4B','TH21024Y93YY8A','TH01284Y8GHK5A0','TH24064YKDBG2C','TH02034YGZYH5B0','TH03014YSAM48E0','TH01054YNGPV4B0','TH56024YGWF60D','TH01324YV8FD0G','TH12064YQ9MV1I','TH04064YMHT72A1','TH01284YZH2R3A0','TH01174Y4SPG1B0','TH35044Y8WH24D','TH03064YBA907J','TH24084WH7C11A','TH04034YVJWA6D','TH28014Z7S9Z3M','TH01394XZBAR1B0','TH01514Y0RSW3A','TH18074XKPFR0E','TH01054YBQBP2A','TH67034Y181W6F','TH01204YG0GY7B','TH01394YGNNT7F','TH02034YNPR76D1','TH02034YGC7Q0D0','TH01054YWA0E8B0','TH30124YSHG44B','TH01424Z0UW92A0','TH03024YS01V7E','TH01054RWGTP7B0','TH01434YWPDN0B');
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
#         select
#             acc.pno
#             ,am.abnormal_time
#             ,am.punish_category
#             ,acc.complaints_type
#             ,pi.ticket_delivery_staff_info_id
#             ,pi.finished_at
#         from bi_pro.abnormal_customer_complaint acc
#         left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id
#         left join fle_staging.parcel_info pi on pi.pno = acc.pno  and pi.created_at > date_sub(curdate(), interval 3 month)
#         where
#             am.abnormal_time >= '2023-11-11'
#             and am.abnormal_time <= '2023-11-20'
#             and
#                 (
#                     am.punish_category = 7
#                     or acc.complaints_type = 1
#                 )
#         and pi.state = 5
#         -- and acc.pno  ='TH01184UQNTE6B1'
#         group by 1,2,3,4,5,6
        select
            pi.pno
            ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-12-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
            and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at > '2023-12-05 17:00:00'
            and pi.finished_at < '2023-12-06 17:00:00'
            and pi.state = 5

        union all

        select
            pi.pno
            ,case
                when pci.merge_column is not null then date(pci.complaints_at)
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
                else null
            end abnormal_time
            ,case
                when pci.merge_column is not null then '虚假妥投'
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                else '未投诉'
            end type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from  fle_staging.parcel_info pi
        left join
            (
                select
                    pi.pno
                from fle_staging.parcel_info pi
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-12-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                where
                    ci.request_sub_type in (221,300)
                    and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at > '2023-12-05 17:00:00'
                    and pi.finished_at < '2023-12-06 17:00:00'
                    and pi.state = 5
                group by 1
            ) t2 on t2.pno = pi.pno
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-12-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
        left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-12-01'
        left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-12-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
        where
            t2.pno is null
            and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at > '2023-12-05 17:00:00'
            and pi.finished_at < '2023-12-06 17:00:00'
            and pi.state = 5
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-12-01'
            and pr.routed_at < t1.finished_at
    )
select
    t1.pno
    ,pi.dst_store_id 目的地网点ID
    ,pi.ticket_delivery_staff_info_id 妥投快递员
    ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
    ,pi.cod_amount cod金额
    ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
    ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
    ,pi.exhibition_weight 重量
    ,pi.exhibition_length 长
    ,pi.exhibition_width 宽
    ,pi.exhibition_height 高
    ,pi.dst_phone 收件人电话
    ,pi.dst_province_code 收件省ID
    ,pi.dst_city_code 收件城市ID
    ,pi.dst_district_code 收件乡ID
    ,pi.dst_postal_code 收件邮编
    ,pi.src_phone 寄件人电话
    ,pi.src_province_code 发件省ID
    ,pi.src_city_code 发件城市ID
    ,pi.src_district_code 发件乡ID
    ,pi.src_postal_code 发件邮编
    ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
    ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
    ,scan.scan_count 当日交接量
    ,scan.del_count 当日妥投量
    ,scan.del_rate 当日妥投率
    ,dis.distance/1000 当日行驶里程km
    ,pi.client_id 客户ID
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null
        and bc.id is null then '普通ka'
        when kp.`id` is null then '小c'
      end as 客户类型
    ,t1.type '判责类型'
    ,p1.call_num 最后一次电话通话
    ,p1.diao_num 最后一次电话响铃
    ,if(p2.pno is not null , 'y', 'n')  是否沟通
    ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
    ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
    ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
    ,ab.abnormal_count 近三月处罚次数
from fle_staging.parcel_info pi
join t t1 on t1.pno = pi.pno
left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date and swa.attendance_date >= '2023-12-01'
left join
    (
        select
            t1.ticket_delivery_staff_info_id
            ,t1.fin_date
            ,count(distinct pr.pno) scan_count
            ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
            ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
        from rot_pro.parcel_route pr
        join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
        left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
        where
            pr.routed_at >= '2023-12-05 17:00:00'
            and pr.routed_at < '2023-12-06 17:00:00'
            and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
#             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
#             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
            and pr.staff_info_id = t1.ticket_delivery_staff_info_id
        group by 1,2
    ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
left join
    (
        select
            t1.fin_date
            ,t1.ticket_delivery_staff_info_id
            ,max(ccd.coordinate_distance) distance
        from rev_pro.courier_coordinate_distance ccd
        join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
        where
#             ccd.created_at > '2024-01-01'
            ccd.coordinate_date = '2023-12-06'
        group by 1,2
    ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
left join fle_staging.ka_profile kp on pi.client_id = kp.id
left join pho p1 on p1.pno = t1.pno and p1.rk = 1
left join
    (
        select
            p1.pno
        from pho p1
        where
            p1.call_num > 0
        group by 1
    ) p2 on p2.pno = t1.pno
left join
    (-- 近3月处罚次数
        select
            am.staff_info_id
            ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
        from bi_pro.abnormal_message am
        join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
        where
            am.created_at >= date_sub(curdate(), interval 3 month)
            and am.isdel = 0 -- 未删除
            and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
        group by 1
    ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
select
    t.pno
    ,plt.updated_at 判责时间
    ,convert_tz(pr.routed_at, '+00:00', '+07:00') 换单发往拍卖仓时间
from tmpale.tmp_th_pno_lj_0117 t
left join
    (
        select
            plt.updated_at
            ,plt.pno
        from bi_pro.parcel_lose_task plt
        join tmpale.tmp_th_pno_lj_0117 t on t.pno = plt.pno
        where
            plt.state = 6
        group by 1,2
    ) plt on plt.pno = t.pno
left join
    (
        select
            pr.pno
            ,pr.routed_at
        from rot_pro.parcel_route pr
        join tmpale.tmp_th_pno_lj_0117 t on t.pno = pr.pno
        where
            pr.route_action = 'DISCARD_RETURN_BKK'
        group by 1,2
    ) pr on pr.pno = t.pno;
;-- -. . -..- - / . -. - .-. -.--
select
    a2.client_id 客户ID
    ,a2.当日拒收问题件量
    ,a2.当日提交拒收复核单量
from
    (
        select
            sc.cfg_value
        from fle_staging.sys_configuration sc
        where
            sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
            and sc.cfg_value = 'all'
    ) a1
cross join
    (
        select
            pi.client_id
            ,count(distinct if(prr.state in (1,2), prr.pno, null)) 当日拒收问题件量
            ,count(distinct if(prr.state in (2), prr.pno, null)) 当日提交拒收复核单量
        from fle_staging.parcel_reject_report_info prr
        left join fle_staging.parcel_pno_log ppl on ppl.replace_pno = upper(prr.pno)
        left join fle_staging.parcel_info pi on coalesce(ppl.initial_pno, upper(prr.pno)) = pi.pno
        where
            prr.created_at >= date_sub(curdate(), interval 7 hour)
           -- and prr.state = 2
        group by 1
    ) a2

union all

select
    a2.client_id 客户ID
    ,a2.当日拒收问题件量
    ,a2.当日提交拒收复核单量
from
    (
        select
              pc.*
              ,client_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
                    and sc.cfg_value != 'all'
            ) pc
        lateral view explode(split(pc.cfg_value, ',')) id as client_id
    ) a1
join
    (
        select
            pi.client_id
            ,count(distinct if(prr.state in (1,2), prr.pno, null)) 当日拒收问题件量
            ,count(distinct if(prr.state in (2), prr.pno, null)) 当日提交拒收复核单量
        from fle_staging.parcel_reject_report_info prr
        left join fle_staging.parcel_pno_log ppl on ppl.replace_pno = upper(prr.pno)
        left join fle_staging.parcel_info pi on coalesce(ppl.initial_pno, upper(prr.pno)) = pi.pno
        where
            prr.created_at >= date_sub(curdate(), interval 7 hour)
           -- and prr.state = 2
        group by 1
    ) a2 on a2.client_id = a1.client_id;
;-- -. . -..- - / . -. - .-. -.--
select
    dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.store_id 网点ID
    ,a2.client_id 客户ID
    ,count(distinct if(a3.state in (1,2), a3.pno, null)) 当日拒收问题件数量
    ,count(distinct if(a3.state in (1,2) and ( a3.cod_amount > val.cfg_value or a3.insure_declare_value > val.cfg_value or pai.cogs_amount > val.cfg_value ), a3.pno, null)) 当日满足强制拒收复核需上报的量
    ,count(distinct if(a3.state in (2), a3.pno, null)) 当日提交拒收复核单数量
from
    (
        select
            a.*
        from
            (
                select
                      pc.*
                      ,store_id
                from
                    (
                        select
                            *
                        from fle_staging.sys_configuration sc
                        where
                            sc.cfg_key = 'reject.warehouse.report.by.storeId.enabled'
                            and sc.cfg_value != 'all'
                    ) pc
                lateral view explode(split(pc.cfg_value, ',')) id as store_id
            ) a

        union all

        select
            pc.*
            ,ss.id store_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.storeId.enabled'
                    and cfg_value = 'all'
            ) pc
        cross join fle_staging.sys_store ss
    ) a1
cross join
    (
        select
              pc.*
              ,client_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
                    and sc.cfg_value != 'all'
            ) pc
        lateral view explode(split(pc.cfg_value, ',')) id as client_id
    ) a2
join
    (
        select
            prr.pno
            ,prr.store_id
            ,prr.state
            ,pi.client_id
            ,pi.cod_amount
            ,pi.insure_declare_value
        from fle_staging.parcel_reject_report_info prr
        left join fle_staging.parcel_pno_log ppl on ppl.replace_pno = upper(prr.pno)
        left join fle_staging.parcel_info pi on coalesce(ppl.initial_pno, upper(prr.pno)) = pi.pno
        where
            prr.created_at >= date_sub(curdate(), interval 7 hour)
    ) a3 on a3.store_id = a1.store_id and a3.client_id = a2.client_id
cross join
    (
        select
            sc.cfg_value
        from fle_staging.sys_configuration sc
        where
            sc.cfg_key = 'reject.force.report.high.value.min.config'
    ) val
left join dwm.dim_th_sys_store_rd dt on dt.store_id = a1.store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join fle_staging.parcel_additional_info pai on pai.pno = a3.pno
group by 1,2,3,4,5

union all


select
    dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.store_id 网点ID
    ,a3.client_id 客户ID
    ,count(distinct if(a3.state in (1,2), a3.pno, null)) 当日拒收问题件数量
    ,count(distinct if(a3.state in (1,2) and ( a3.cod_amount > val.cfg_value or a3.insure_declare_value > val.cfg_value or pai.cogs_amount > val.cfg_value ), a3.pno, null)) 当日满足强制拒收复核需上报的量
    ,count(distinct if(a3.state in (2), a3.pno, null)) 当日提交拒收复核单数量
from
    (
        select
            a.*
        from
            (
                select
                      pc.*
                      ,store_id
                from
                    (
                        select
                            *
                        from fle_staging.sys_configuration sc
                        where
                            sc.cfg_key = 'reject.warehouse.report.by.storeId.enabled'
                            and sc.cfg_value != 'all'
                    ) pc
                lateral view explode(split(pc.cfg_value, ',')) id as store_id
            ) a

        union all

        select
            pc.*
            ,ss.id store_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.storeId.enabled'
                    and cfg_value = 'all'
            ) pc
        cross join fle_staging.sys_store ss
    ) a1
cross join
    (
        select
            *
        from fle_staging.sys_configuration sc
        where
            sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
            and sc.cfg_value = 'all'
    ) a2
cross join
    (
        select
            prr.pno
            ,prr.store_id
            ,prr.state
            ,pi.client_id
            ,pi.cod_amount
            ,pi.insure_declare_value
        from fle_staging.parcel_reject_report_info prr
        left join fle_staging.parcel_pno_log ppl on ppl.replace_pno = upper(prr.pno)
        left join fle_staging.parcel_info pi on coalesce(ppl.initial_pno, upper(prr.pno)) = pi.pno
        where
            prr.created_at >= date_sub(curdate(), interval 7 hour)
    ) a3 on a3.store_id = a1.store_id
cross join
    (
        select
            sc.cfg_value
        from fle_staging.sys_configuration sc
        where
            sc.cfg_key = 'reject.force.report.high.value.min.config'
    ) val
left join dwm.dim_th_sys_store_rd dt on dt.store_id = a1.store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join fle_staging.parcel_additional_info pai on pai.pno = a3.pno
group by 1,2,3,4,5;
;-- -. . -..- - / . -. - .-. -.--
select
    t.pno
    ,plt.updated_at 判责时间
    ,convert_tz(pr.routed_at, '+00:00', '+07:00') 换单发往拍卖仓时间
from tmpale.tmp_th_pno_lj_0117 t
left join
    (
        select
            plt.pno
            ,min(plt.updated_at) updated_at
        from bi_pro.parcel_lose_task plt
        join tmpale.tmp_th_pno_lj_0117 t on t.pno = plt.pno
        where
            plt.state = 6
        group by 1
    ) plt on plt.pno = t.pno
left join
    (
        select
            pr.pno
            ,pr.routed_at
        from rot_pro.parcel_route pr
        join tmpale.tmp_th_pno_lj_0117 t on t.pno = pr.pno
        where
            pr.route_action = 'DISCARD_RETURN_BKK'
        group by 1,2
    ) pr on pr.pno = t.pno;
;-- -. . -..- - / . -. - .-. -.--
select
    plt.pno
    ,if(kp.id is null, '小c', '普通KA') 客户类型
    ,case plt2.source
        WHEN 1 THEN 'A-问题件-丢失'
        WHEN 2 THEN 'B-记录本-丢失'
        WHEN 3 THEN 'C-包裹状态未更新'
        WHEN 4 THEN 'D-问题件-破损/短少'
        WHEN 5 THEN 'E-记录本-索赔-丢失'
        WHEN 6 THEN 'F-记录本-索赔-破损/短少'
        WHEN 7 THEN 'G-记录本-索赔-其他'
        WHEN 8 THEN 'H-包裹状态未更新-IPC计数'
        WHEN 9 THEN 'I-问题件-外包装破损险'
        WHEN 10 THEN 'J-问题记录本-外包装破损险'
        when 11 then 'K-超时效包裹'
        when 12 then 'L-高度疑似丢失'
    end 进入A来源外的其他来源
    ,plt.created_at 进入闪速认定的时间
    ,if(plt.state = 6, plt.updated_at, null) 闪速认定判责的时间
    ,case plt.state
        when 1 then '丢失件待处理'
        when 2 then '疑似丢失件待处理'
        when 3 then '待工单回复'
        when 4 then '已工单回复'
        when 5 then '无须追责'
        when 6 then '责任人已认定'
    end 闪速认定状态
    ,if(a.pno is not null, '是', '否') 认定丢失之后是否有丢失件解锁
    ,if(am.isappeal in (2,3,4,5), '是', '否') 认定责任人的丢失处罚是否有申诉
    ,case am.isappeal
        when  1 then '未申诉'
        when  2 then '申诉中'
        when  3 then '保持原判'
        when  4 then '已变更'
        when  5 then '已删除'
    end 申诉结果
from bi_pro.parcel_lose_task plt
left join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = plt.client_id
left join fle_staging.ka_profile kp on kp.id = plt.client_id
left join bi_pro.abnormal_message am on json_extract(am.extra_info, '$.losr_task_id') = plt.id
left join bi_pro.parcel_lose_task plt2 on plt2.pno = plt.pno and plt2.source > 1
left join
    (
        select
            plt.pno
        from bi_pro.parcel_lose_task plt
        left join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = plt.client_id
        join bi_pro.parcel_cs_operation_log pcol on pcol.task_id = plt.id and pcol.action = 4
        left join rot_pro.parcel_route pr on pr.pno = plt.pno and pr.routed_at > '2023-12-31 17:00:00'
        where
            plt.created_at >= '2024-01-01'
            and plt.created_at < '2024-01-02'
            and bc.client_id is null
            and pr.route_action in ('RECEIVED','STAFF_INFO_UPDATE_WEIGHT','RECEIVE_WAREHOUSE_SCAN','STORE_KEEPER_UPDATE_WEIGHT','STORE_SORTER_UPDATE_WEIGHT','DELIVERY_TICKET_CREATION_SCAN','ARRIVAL_WAREHOUSE_SCAN','ARRIVAL_WAREHOUSE_SCAN','SHIPMENT_WAREHOUSE_SCAN','DETAIN_WAREHOUSE','DELIVERY_CONFIRM','DIFFICULTY_HANDOVER','DELIVERY_MARKER', 'REPLACE_PNO','PRINTING','SEAL','UNSEAL','PARCEL_HEADLESS_PRINTED','THIRD_EXPRESS_ROUTE','PICKUP_RETURN_RECEIPT','FLASH_HOME_SCAN', 'SORTING_SCAN', 'CANCEL_SHIPMENT_WAREHOUSE','INVENTORY','REFUND_CONFIRM', 'DISTRIBUTION_INVENTORY','DELIVERY_TRANSFER','DELIVERY_PICKUP_STORE_SCAN', 'ACCEPT_PARCEL','DIFFICULTY_HANDOVER')
            and pr.routed_at > date_sub(pcol.created_at, interval 7 hour)
        group by 1
    ) a on a.pno = plt.pno
where
    plt.created_at >= '2024-01-01'
    and plt.created_at < '2024-01-02'
    and bc.client_id is null;
;-- -. . -..- - / . -. - .-. -.--
select
    a.*
    ,if(a.isappeal_info > 0, 'y', 'n') 是否申诉
    ,if(a.isappeal_flag > 0, 'y', 'n') 是否申诉通过
from
    (
        select
            plt.pno
            ,if(kp.id is null, '小c', '普通KA') 客户类型
            ,case plt2.source
                WHEN 1 THEN 'A-问题件-丢失'
                WHEN 2 THEN 'B-记录本-丢失'
                WHEN 3 THEN 'C-包裹状态未更新'
                WHEN 4 THEN 'D-问题件-破损/短少'
                WHEN 5 THEN 'E-记录本-索赔-丢失'
                WHEN 6 THEN 'F-记录本-索赔-破损/短少'
                WHEN 7 THEN 'G-记录本-索赔-其他'
                WHEN 8 THEN 'H-包裹状态未更新-IPC计数'
                WHEN 9 THEN 'I-问题件-外包装破损险'
                WHEN 10 THEN 'J-问题记录本-外包装破损险'
                when 11 then 'K-超时效包裹'
                when 12 then 'L-高度疑似丢失'
            end 进入A来源外的其他来源
            ,plt.created_at 进入闪速认定的时间
            ,if(plt.state = 6, plt.updated_at, null) 闪速认定判责的时间
            ,case plt.state
                when 1 then '丢失件待处理'
                when 2 then '疑似丢失件待处理'
                when 3 then '待工单回复'
                when 4 then '已工单回复'
                when 5 then '无须追责'
                when 6 then '责任人已认定'
            end 闪速认定状态
            ,if(a.pno is not null, '是', '否') 认定丢失之后是否有丢失件解锁
            ,sum(if(am.isappeal in (2,3,4,5), 1, 0)) isappeal_info
            ,sum(case
                    when  am.isappeal = 1 then 0
                    when  am.isappeal = 2 then 0
                    when  am.isappeal = 3 then 0
                    when  am.isappeal = 4 then 1
                    when  am.isappeal = 5 or am.isdel = 1 then 1
                end ) isappeal_flag
        from bi_pro.parcel_lose_task plt
        left join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = plt.client_id
        left join fle_staging.ka_profile kp on kp.id = plt.client_id
        left join bi_pro.abnormal_message am on json_extract(am.extra_info, '$.losr_task_id') = plt.id
        left join bi_pro.parcel_lose_task plt2 on plt2.pno = plt.pno and plt2.source > 1
        left join
            (
                select
                    plt.pno
                from bi_pro.parcel_lose_task plt
                left join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = plt.client_id
                join bi_pro.parcel_cs_operation_log pcol on pcol.task_id = plt.id and pcol.action = 4
                left join rot_pro.parcel_route pr on pr.pno = plt.pno and pr.routed_at > '2023-12-31 17:00:00'
                where
                    plt.created_at >= '2024-01-01'
                    and plt.created_at < '2024-01-02'
                    and bc.client_id is null
                    and pr.route_action in ('RECEIVED','STAFF_INFO_UPDATE_WEIGHT','RECEIVE_WAREHOUSE_SCAN','STORE_KEEPER_UPDATE_WEIGHT','STORE_SORTER_UPDATE_WEIGHT','DELIVERY_TICKET_CREATION_SCAN','ARRIVAL_WAREHOUSE_SCAN','ARRIVAL_WAREHOUSE_SCAN','SHIPMENT_WAREHOUSE_SCAN','DETAIN_WAREHOUSE','DELIVERY_CONFIRM','DIFFICULTY_HANDOVER','DELIVERY_MARKER', 'REPLACE_PNO','PRINTING','SEAL','UNSEAL','PARCEL_HEADLESS_PRINTED','THIRD_EXPRESS_ROUTE','PICKUP_RETURN_RECEIPT','FLASH_HOME_SCAN', 'SORTING_SCAN', 'CANCEL_SHIPMENT_WAREHOUSE','INVENTORY','REFUND_CONFIRM', 'DISTRIBUTION_INVENTORY','DELIVERY_TRANSFER','DELIVERY_PICKUP_STORE_SCAN', 'ACCEPT_PARCEL','DIFFICULTY_HANDOVER')
                    and pr.routed_at > date_sub(pcol.created_at, interval 7 hour)
                group by 1
            ) a on a.pno = plt.pno
        where
            plt.created_at >= '2024-01-01'
            and plt.created_at < '2024-01-02'
            and bc.client_id is null
        group by 1,2,3,4,5,6,7
    ) a;
;-- -. . -..- - / . -. - .-. -.--
select
    a.*
    ,if(a.isappeal_info > 0, 'y', 'n') 是否申诉
    ,if(a.isappeal_flag > 0, 'y', 'n') 是否申诉通过
from
    (
        select
            plt.pno
            ,if(kp.id is null, '小c', '普通KA') 客户类型
            ,plt.created_at 进入闪速认定的时间
            ,if(plt.state = 6, plt.updated_at, null) 闪速认定判责的时间
            ,case plt.state
                when 1 then '丢失件待处理'
                when 2 then '疑似丢失件待处理'
                when 3 then '待工单回复'
                when 4 then '已工单回复'
                when 5 then '无须追责'
                when 6 then '责任人已认定'
            end 闪速认定状态
            ,if(a.pno is not null, '是', '否') 认定丢失之后是否有丢失件解锁
            ,group_concat(distinct case plt2.source
                WHEN 1 THEN 'A-问题件-丢失'
                WHEN 2 THEN 'B-记录本-丢失'
                WHEN 3 THEN 'C-包裹状态未更新'
                WHEN 4 THEN 'D-问题件-破损/短少'
                WHEN 5 THEN 'E-记录本-索赔-丢失'
                WHEN 6 THEN 'F-记录本-索赔-破损/短少'
                WHEN 7 THEN 'G-记录本-索赔-其他'
                WHEN 8 THEN 'H-包裹状态未更新-IPC计数'
                WHEN 9 THEN 'I-问题件-外包装破损险'
                WHEN 10 THEN 'J-问题记录本-外包装破损险'
                when 11 then 'K-超时效包裹'
                when 12 then 'L-高度疑似丢失'
            end ) 进入A来源外的其他来源
            ,sum(if(am.isappeal in (2,3,4,5), 1, 0)) isappeal_info
            ,sum(case
                    when  am.isappeal = 1 then 0
                    when  am.isappeal = 2 then 0
                    when  am.isappeal = 3 then 0
                    when  am.isappeal = 4 then 1
                    when  am.isappeal = 5 or am.isdel = 1 then 1
                end ) isappeal_flag
        from bi_pro.parcel_lose_task plt
        left join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = plt.client_id
        left join fle_staging.ka_profile kp on kp.id = plt.client_id
        left join bi_pro.abnormal_message am on json_extract(am.extra_info, '$.losr_task_id') = plt.id
        left join bi_pro.parcel_lose_task plt2 on plt2.pno = plt.pno and plt2.source > 1
        left join
            (
                select
                    plt.pno
                from bi_pro.parcel_lose_task plt
                left join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = plt.client_id
                join bi_pro.parcel_cs_operation_log pcol on pcol.task_id = plt.id and pcol.action = 4
                left join rot_pro.parcel_route pr on pr.pno = plt.pno and pr.routed_at > '2023-12-31 17:00:00'
                where
                    plt.created_at >= '2024-01-01'
                    and plt.created_at < '2024-01-02'
                    and bc.client_id is null
                    and pr.route_action in ('RECEIVED','STAFF_INFO_UPDATE_WEIGHT','RECEIVE_WAREHOUSE_SCAN','STORE_KEEPER_UPDATE_WEIGHT','STORE_SORTER_UPDATE_WEIGHT','DELIVERY_TICKET_CREATION_SCAN','ARRIVAL_WAREHOUSE_SCAN','ARRIVAL_WAREHOUSE_SCAN','SHIPMENT_WAREHOUSE_SCAN','DETAIN_WAREHOUSE','DELIVERY_CONFIRM','DIFFICULTY_HANDOVER','DELIVERY_MARKER', 'REPLACE_PNO','PRINTING','SEAL','UNSEAL','PARCEL_HEADLESS_PRINTED','THIRD_EXPRESS_ROUTE','PICKUP_RETURN_RECEIPT','FLASH_HOME_SCAN', 'SORTING_SCAN', 'CANCEL_SHIPMENT_WAREHOUSE','INVENTORY','REFUND_CONFIRM', 'DISTRIBUTION_INVENTORY','DELIVERY_TRANSFER','DELIVERY_PICKUP_STORE_SCAN', 'ACCEPT_PARCEL','DIFFICULTY_HANDOVER')
                    and pr.routed_at > date_sub(pcol.created_at, interval 7 hour)
                group by 1
            ) a on a.pno = plt.pno
        where
            plt.created_at >= '2024-01-01'
            and plt.created_at < '2024-01-02'
            and bc.client_id is null
        group by 1,2,3,4,5,6
    ) a;
;-- -. . -..- - / . -. - .-. -.--
select
    a.*
    ,if(a.isappeal_info > 0, 'y', 'n') 是否申诉
    ,if(a.isappeal_flag > 0, 'y', 'n') 是否申诉通过
from
    (
        select
            plt.pno
            ,if(kp.id is null, '小c', '普通KA') 客户类型
            ,plt.created_at 进入闪速认定的时间
            ,if(plt.state = 6, plt.updated_at, null) 闪速认定判责的时间
            ,case plt.state
                when 1 then '丢失件待处理'
                when 2 then '疑似丢失件待处理'
                when 3 then '待工单回复'
                when 4 then '已工单回复'
                when 5 then '无须追责'
                when 6 then '责任人已认定'
            end 闪速认定状态
            ,if(a.pno is not null, '是', '否') 认定丢失之后是否有丢失件解锁
            ,group_concat(distinct case plt2.source
                WHEN 1 THEN 'A-问题件-丢失'
                WHEN 2 THEN 'B-记录本-丢失'
                WHEN 3 THEN 'C-包裹状态未更新'
                WHEN 4 THEN 'D-问题件-破损/短少'
                WHEN 5 THEN 'E-记录本-索赔-丢失'
                WHEN 6 THEN 'F-记录本-索赔-破损/短少'
                WHEN 7 THEN 'G-记录本-索赔-其他'
                WHEN 8 THEN 'H-包裹状态未更新-IPC计数'
                WHEN 9 THEN 'I-问题件-外包装破损险'
                WHEN 10 THEN 'J-问题记录本-外包装破损险'
                when 11 then 'K-超时效包裹'
                when 12 then 'L-高度疑似丢失'
            end ) 进入A来源外的其他来源
            ,sum(if(am.isappeal in (2,3,4,5), 1, 0)) isappeal_info
            ,sum(case
                    when  am.isappeal = 1 then 0
                    when  am.isappeal = 2 then 0
                    when  am.isappeal = 3 then 0
                    when  am.isappeal = 4 then 1
                    when  am.isappeal = 5 or am.isdel = 1 then 1
                end ) isappeal_flag
        from bi_pro.parcel_lose_task plt
        left join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = plt.client_id
        left join fle_staging.ka_profile kp on kp.id = plt.client_id
        left join bi_pro.abnormal_message am on json_extract(am.extra_info, '$.losr_task_id') = plt.id
        left join bi_pro.parcel_lose_task plt2 on plt2.pno = plt.pno and plt2.source > 1
        left join
            (
                select
                    plt.pno
                from bi_pro.parcel_lose_task plt
                left join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = plt.client_id
                join bi_pro.parcel_cs_operation_log pcol on pcol.task_id = plt.id and pcol.action = 4
                left join rot_pro.parcel_route pr on pr.pno = plt.pno and pr.routed_at > '2023-12-31 17:00:00'
                where
                    plt.created_at >= '2024-01-01'
                    and plt.created_at < '2024-01-02'
                    and plt.source = 1
                    and bc.client_id is null
                    and pr.route_action in ('RECEIVED','STAFF_INFO_UPDATE_WEIGHT','RECEIVE_WAREHOUSE_SCAN','STORE_KEEPER_UPDATE_WEIGHT','STORE_SORTER_UPDATE_WEIGHT','DELIVERY_TICKET_CREATION_SCAN','ARRIVAL_WAREHOUSE_SCAN','ARRIVAL_WAREHOUSE_SCAN','SHIPMENT_WAREHOUSE_SCAN','DETAIN_WAREHOUSE','DELIVERY_CONFIRM','DIFFICULTY_HANDOVER','DELIVERY_MARKER', 'REPLACE_PNO','PRINTING','SEAL','UNSEAL','PARCEL_HEADLESS_PRINTED','THIRD_EXPRESS_ROUTE','PICKUP_RETURN_RECEIPT','FLASH_HOME_SCAN', 'SORTING_SCAN', 'CANCEL_SHIPMENT_WAREHOUSE','INVENTORY','REFUND_CONFIRM', 'DISTRIBUTION_INVENTORY','DELIVERY_TRANSFER','DELIVERY_PICKUP_STORE_SCAN', 'ACCEPT_PARCEL','DIFFICULTY_HANDOVER')
                    and pr.routed_at > date_sub(pcol.created_at, interval 7 hour)
                group by 1
            ) a on a.pno = plt.pno
        where
            plt.created_at >= '2024-01-01'
            and plt.created_at < '2024-01-02'
            and bc.client_id is null
            and plt.source = 1
        group by 1,2,3,4,5,6
    ) a;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
#         select
#             acc.pno
#             ,am.abnormal_time
#             ,am.punish_category
#             ,acc.complaints_type
#             ,pi.ticket_delivery_staff_info_id
#             ,pi.finished_at
#         from bi_pro.abnormal_customer_complaint acc
#         left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id
#         left join fle_staging.parcel_info pi on pi.pno = acc.pno  and pi.created_at > date_sub(curdate(), interval 3 month)
#         where
#             am.abnormal_time >= '2023-11-11'
#             and am.abnormal_time <= '2023-11-20'
#             and
#                 (
#                     am.punish_category = 7
#                     or acc.complaints_type = 1
#                 )
#         and pi.state = 5
#         -- and acc.pno  ='TH01184UQNTE6B1'
#         group by 1,2,3,4,5,6
        select
            pi.pno
            ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-12-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
            and pi.state = 5

        union all

        select
            pi.pno
            ,case
                when pci.merge_column is not null then date(pci.complaints_at)
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
                else null
            end abnormal_time
            ,case
                when pci.merge_column is not null then '虚假妥投'
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                else '未投诉'
            end type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from  fle_staging.parcel_info pi
        left join
            (
                select
                    pi.pno
                from fle_staging.parcel_info pi
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-12-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                where
                    ci.request_sub_type in (221,300)
#                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-01', interval 17 hour)
                    and pi.state = 5
                group by 1
            ) t2 on t2.pno = pi.pno
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
        left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
        left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
        where
            t2.pno is null
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
            and pi.state = 5
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-01'
            and pr.routed_at < t1.finished_at
    )
,  a as
    (
                select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date and swa.attendance_date >= '2023-12-01'
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-01', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-01', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-01'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id
    )

select
    a1.*
from a a1
where
    a1.判责类型 = '已签收未收到'

union all

select
    a1.*
from a a1
where
    a1.判责类型 = '虚假妥投'

union all

select
    a1.*
from a a1
where
    a1.判责类型 = '未投诉'
ORDER BY RAND()
LIMIT 1000;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
#         select
#             acc.pno
#             ,am.abnormal_time
#             ,am.punish_category
#             ,acc.complaints_type
#             ,pi.ticket_delivery_staff_info_id
#             ,pi.finished_at
#         from bi_pro.abnormal_customer_complaint acc
#         left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id
#         left join fle_staging.parcel_info pi on pi.pno = acc.pno  and pi.created_at > date_sub(curdate(), interval 3 month)
#         where
#             am.abnormal_time >= '2023-11-11'
#             and am.abnormal_time <= '2023-11-20'
#             and
#                 (
#                     am.punish_category = 7
#                     or acc.complaints_type = 1
#                 )
#         and pi.state = 5
#         -- and acc.pno  ='TH01184UQNTE6B1'
#         group by 1,2,3,4,5,6
        select
            pi.pno
            ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-12-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
            and pi.state = 5

        union all

        select
            pi.pno
            ,case
                when pci.merge_column is not null then date(pci.complaints_at)
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
                else null
            end abnormal_time
            ,case
                when pci.merge_column is not null then '虚假妥投'
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                else '未投诉'
            end type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from  fle_staging.parcel_info pi
        left join
            (
                select
                    pi.pno
                from fle_staging.parcel_info pi
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-12-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                where
                    ci.request_sub_type in (221,300)
#                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-01', interval 17 hour)
                    and pi.state = 5
                group by 1
            ) t2 on t2.pno = pi.pno
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
        left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
        left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
        where
            t2.pno is null
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
            and pi.state = 5
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
,  a as
    (
                select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date and swa.attendance_date >= '2023-12-01'
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-01', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-01', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
                    and pr.routed_at > '2023-11-25'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-01'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id
    )

select
    a1.*
from a a1
where
    a1.判责类型 = '已签收未收到'

union all

select
    a1.*
from a a1
where
    a1.判责类型 = '虚假妥投'

union all

select
    a1.*
from a a1
where
    a1.判责类型 = '未投诉'
ORDER BY RAND()
LIMIT 1000;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
#         select
#             acc.pno
#             ,am.abnormal_time
#             ,am.punish_category
#             ,acc.complaints_type
#             ,pi.ticket_delivery_staff_info_id
#             ,pi.finished_at
#         from bi_pro.abnormal_customer_complaint acc
#         left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id
#         left join fle_staging.parcel_info pi on pi.pno = acc.pno  and pi.created_at > date_sub(curdate(), interval 3 month)
#         where
#             am.abnormal_time >= '2023-11-11'
#             and am.abnormal_time <= '2023-11-20'
#             and
#                 (
#                     am.punish_category = 7
#                     or acc.complaints_type = 1
#                 )
#         and pi.state = 5
#         -- and acc.pno  ='TH01184UQNTE6B1'
#         group by 1,2,3,4,5,6
        select
            pi.pno
            ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('2023-12-01', interval 1 day)
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01' and ci.created_at < date_add('2023-12-01', interval 10 day)
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
            and pi.state = 5

        union all

        select
            pi.pno
            ,case
                when pci.merge_column is not null then date(pci.complaints_at)
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
                else null
            end abnormal_time
            ,case
                when pci.merge_column is not null then '虚假妥投'
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                else '未投诉'
            end type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from  fle_staging.parcel_info pi
        left join
            (
                select
                    pi.pno
                from fle_staging.parcel_info pi
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
                where
                    ci.request_sub_type in (221,300)
#                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-01', interval 17 hour)
                    and pi.state = 5
                group by 1
            ) t2 on t2.pno = pi.pno
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01' and ci.created_at < date_add('2023-12-01', interval 10 day)
        left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01' and acc.created_at < date_add('2023-12-01', interval 10 day)
        left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01' and am.created_at < date_add('2023-12-01', interval 10 day)
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
        where
            t2.pno is null
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
            and pi.state = 5
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
,  a as
    (
                select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-01', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-01', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-01'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id
    )

select
    a1.*
from a a1
where
    a1.判责类型 = '已签收未收到'

union all

select
    a1.*
from a a1
where
    a1.判责类型 = '虚假妥投'

union all

select
    a1.*
from a a1
where
    a1.判责类型 = '未投诉'
ORDER BY RAND()
limit 1000;
;-- -. . -..- - / . -. - .-. -.--
select
            pi.pno
            ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('2023-12-01', interval 1 day)
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01' and ci.created_at < date_add('2023-12-01', interval 10 day)
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
            and pi.state = 5

        union all

        select
            pi.pno
            ,case
                when pci.merge_column is not null then date(pci.complaints_at)
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
                else null
            end abnormal_time
            ,case
                when pci.merge_column is not null then '虚假妥投'
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                else '未投诉'
            end type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from  fle_staging.parcel_info pi
        left join
            (
                select
                    pi.pno
                from fle_staging.parcel_info pi
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
                where
                    ci.request_sub_type in (221,300)
#                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-01', interval 17 hour)
                    and pi.state = 5
                group by 1
            ) t2 on t2.pno = pi.pno
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01' and ci.created_at < date_add('2023-12-01', interval 10 day)
        left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01' and acc.created_at < date_add('2023-12-01', interval 10 day)
        left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01' and am.created_at < date_add('2023-12-01', interval 10 day)
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
        where
            t2.pno is null
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
            and pi.state = 5;
;-- -. . -..- - / . -. - .-. -.--
with t as
    (
#         select
#             acc.pno
#             ,am.abnormal_time
#             ,am.punish_category
#             ,acc.complaints_type
#             ,pi.ticket_delivery_staff_info_id
#             ,pi.finished_at
#         from bi_pro.abnormal_customer_complaint acc
#         left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id
#         left join fle_staging.parcel_info pi on pi.pno = acc.pno  and pi.created_at > date_sub(curdate(), interval 3 month)
#         where
#             am.abnormal_time >= '2023-11-11'
#             and am.abnormal_time <= '2023-11-20'
#             and
#                 (
#                     am.punish_category = 7
#                     or acc.complaints_type = 1
#                 )
#         and pi.state = 5
#         -- and acc.pno  ='TH01184UQNTE6B1'
#         group by 1,2,3,4,5,6
        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('2023-12-01', interval 1 day)
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01' and ci.created_at < date_add('2023-12-01', interval 10 day)
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
            and pi.state = 5

        union all

        select
            pi.pno
#             ,case
#                 when pci.merge_column is not null then date(pci.complaints_at)
#                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
#                 else null
#             end abnormal_time
            ,case
                when pci.merge_column is not null then '虚假妥投'
                when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                else '未投诉'
            end type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from  fle_staging.parcel_info pi
        left join
            (
                select
                    pi.pno
                from fle_staging.parcel_info pi
                join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
                where
                    ci.request_sub_type in (221,300)
#                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-01', interval 17 hour)
                    and pi.state = 5
                group by 1
            ) t2 on t2.pno = pi.pno
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01' and ci.created_at < date_add('2023-12-01', interval 10 day)
        left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01' and acc.created_at < date_add('2023-12-01', interval 10 day)
        left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01' and am.created_at < date_add('2023-12-01', interval 10 day)
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
        where
            t2.pno is null
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
            and pi.state = 5
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
,  a as
    (
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-01', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-01', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-01'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id
    )

select
    a1.*
from a a1
where
    a1.判责类型 = '已签收未收到'

union all

select
    a1.*
from a a1
where
    a1.判责类型 = '虚假妥投'

union all

select
    a1.*
from a a1
where
    a1.判责类型 = '未投诉'
ORDER BY RAND()
limit 1000;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
    (
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01' and ci.created_at < date_add('2023-12-01', interval 10 day)
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01' and acc.created_at < date_add('2023-12-01', interval 10 day)
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01' and am.created_at < date_add('2023-12-01', interval 10 day)
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-01', interval 17 hour)
                    and pi.state = 5
            )
    )
#     ,t as
#     (
#         select
#             acc.pno
#             ,am.abnormal_time
#             ,am.punish_category
#             ,acc.complaints_type
#             ,pi.ticket_delivery_staff_info_id
#             ,pi.finished_at
#         from bi_pro.abnormal_customer_complaint acc
#         left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id
#         left join fle_staging.parcel_info pi on pi.pno = acc.pno  and pi.created_at > date_sub(curdate(), interval 3 month)
#         where
#             am.abnormal_time >= '2023-11-11'
#             and am.abnormal_time <= '2023-11-20'
#             and
#                 (
#                     am.punish_category = 7
#                     or acc.complaints_type = 1
#                 )
#         and pi.state = 5
#         -- and acc.pno  ='TH01184UQNTE6B1'
#         group by 1,2,3,4,5,6
        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('2023-12-01', interval 1 day)
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01' and ci.created_at < date_add('2023-12-01', interval 10 day)
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            a3.*
        from   a1 a3
        where
            a3.type = '未投诉'
        order by rank()
        limit 1000;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01' and ci.created_at < date_add('2023-12-01', interval 10 day)
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01' and acc.created_at < date_add('2023-12-01', interval 10 day)
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01' and am.created_at < date_add('2023-12-01', interval 10 day)
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-01', interval 17 hour)
                    and pi.state = 5
            )
#     ,t as
#     (
#
        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('2023-12-01', interval 1 day)
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01' and ci.created_at < date_add('2023-12-01', interval 10 day)
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            a3.*
        from   a1 a3
        where
            a3.type = '未投诉'
        order by rank()
        limit 1000;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01' and ci.created_at < date_add('2023-12-01', interval 10 day)
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01' and acc.created_at < date_add('2023-12-01', interval 10 day)
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01' and am.created_at < date_add('2023-12-01', interval 10 day)
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-01', interval 17 hour)
                    and pi.state = 5
            )
#     ,t as
#     (
#
#         select
#             pi.pno
# #             ,date(pci.complaints_at) abnormal_time
#             ,'已签收未收到' type
#             ,pi.ticket_delivery_staff_info_id
#             ,pi.finished_at
#             ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
#         from fle_staging.parcel_info pi
#         left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('${date}', interval 1 day)
#         left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01' and ci.created_at < date_add('${date}', interval 10 day)
# #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
#         where
#             ci.request_sub_type in (221,300)
# #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
#             and pi.finished_at >  date_sub('${date}', interval 7 hour)
#             and pi.finished_at < date_add('${date}', interval 17 hour)
#             and pi.state = 5
#
#         union all
#
#         select
#             a2.*
#         from   a1 a2
#         where
#             a2.type = '虚假妥投'

#         union all

        select
            a3.*
        from   a1 a3
        where
            a3.type = '未投诉'
        order by rank()
        limit 1000;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01' and ci.created_at < date_add('2023-12-01', interval 10 day)
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01' and acc.created_at < date_add('2023-12-01', interval 10 day)
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01' and am.created_at < date_add('2023-12-01', interval 10 day)
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-01', interval 17 hour)
                    and pi.state = 5
            )
#     ,t as
#     (
#
#         select
#             pi.pno
# #             ,date(pci.complaints_at) abnormal_time
#             ,'已签收未收到' type
#             ,pi.ticket_delivery_staff_info_id
#             ,pi.finished_at
#             ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
#         from fle_staging.parcel_info pi
#         left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('${date}', interval 1 day)
#         left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01' and ci.created_at < date_add('${date}', interval 10 day)
# #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
#         where
#             ci.request_sub_type in (221,300)
# #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
#             and pi.finished_at >  date_sub('${date}', interval 7 hour)
#             and pi.finished_at < date_add('${date}', interval 17 hour)
#             and pi.state = 5
#
#         union all
#
#         select
#             a2.*
#         from   a1 a2
#         where
#             a2.type = '虚假妥投'

#         union all

        select
            a3.*
        from   a1 a3
        where
            a3.type = '未投诉'
        order by rand()
        limit 1000;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01' and ci.created_at < date_add('2023-12-01', interval 10 day)
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01' and acc.created_at < date_add('2023-12-01', interval 10 day)
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01' and am.created_at < date_add('2023-12-01', interval 10 day)
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-01', interval 17 hour)
                    and pi.state = 5
            )
    ,t as
    (

        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('2023-12-01', interval 1 day)
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01' and ci.created_at < date_add('2023-12-01', interval 10 day)
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            a3.*
        from   a1 a3
        where
            a3.type = '未投诉'
        order by rand()
        limit 1000
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
,  a as
    (
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-01', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-01', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-01'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id
    )

select
    a1.*
from a a1
where
    a1.判责类型 = '已签收未收到'

union all

select
    a1.*
from a a1
where
    a1.判责类型 = '虚假妥投'

union all

select
    a1.*
from a a1
where
    a1.判责类型 = '未投诉'
limit 1000;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01' and ci.created_at < date_add('2023-12-01', interval 10 day)
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01' and acc.created_at < date_add('2023-12-01', interval 10 day)
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01' and am.created_at < date_add('2023-12-01', interval 10 day)
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-01', interval 17 hour)
                    and pi.state = 5
            )
#     ,t as
#     (

        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('2023-12-01', interval 1 day)
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01' and ci.created_at < date_add('2023-12-01', interval 10 day)
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            a3.*
        from   a1 a3
        where
            a3.type = '未投诉'
        order by rand()
        limit 1000;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('2023-12-01', interval 10 day)
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01' and ci.created_at < date_add('2023-12-01', interval 10 day)
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01' and acc.created_at < date_add('2023-12-01', interval 10 day)
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01' and am.created_at < date_add('2023-12-01', interval 10 day)
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-01', interval 17 hour)
                    and pi.state = 5
            )
#     ,t as
#     (

        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01' and pci.created_at < date_add('2023-12-01', interval 1 day)
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01' and ci.created_at < date_add('2023-12-01', interval 10 day)
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
            and pi.state = 5;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-01', interval 17 hour)
                    and pi.state = 5
            )
#     ,t as
#     (

        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投';
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-01', interval 17 hour)
                    and pi.state = 5
            )
#     ,t as
#     (

        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            a3.*
        from   a1 a3
        where
            a3.type = '未投诉'
        order by rand()
        limit 1000;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-01', interval 17 hour)
                    and pi.state = 5
            )
#     ,t as
#     (

        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-01', interval 17 hour)
                    and pi.state = 5
            )
    ,t as
    (

        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-01', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-01', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-01'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-01', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-01', interval 7 hour)
            and pi.finished_at < date_add('2023-12-01', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
# , pho as
#     (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-01', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-01', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-01'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-02', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-02', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-02', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-02', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-02', interval 7 hour)
            and pi.finished_at < date_add('2023-12-02', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-02', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-02', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-02'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-04', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-04', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-04', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-04', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-04', interval 7 hour)
            and pi.finished_at < date_add('2023-12-04', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-04', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-04', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-04'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-05', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-05', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-05', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-05', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-05', interval 7 hour)
            and pi.finished_at < date_add('2023-12-05', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-05', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-05', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-05'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-06', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-06', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-06', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-06', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-06', interval 7 hour)
            and pi.finished_at < date_add('2023-12-06', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-06', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-06', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-06'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-07', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-07', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-07', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-07', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-07', interval 7 hour)
            and pi.finished_at < date_add('2023-12-07', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
select
            t.*
        from tmpale.tmp_th_pno_lpf t;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-07', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-07', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-07'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-08', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-08', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-08', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-08', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-08', interval 7 hour)
            and pi.finished_at < date_add('2023-12-08', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-08', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-08', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-08'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-09', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-09', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-09', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-09', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-09', interval 7 hour)
            and pi.finished_at < date_add('2023-12-09', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-09', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-09', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-09'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-10', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-10', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-10', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-10', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-10', interval 7 hour)
            and pi.finished_at < date_add('2023-12-10', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-10', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-10', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-10'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-11', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-11', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-11', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-11', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-11', interval 7 hour)
            and pi.finished_at < date_add('2023-12-11', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-11', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-11', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-11'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-12', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-12', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-12', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-12', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-12', interval 7 hour)
            and pi.finished_at < date_add('2023-12-12', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-12', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-12', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-12'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-13', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-13', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-13', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-13', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-13', interval 7 hour)
            and pi.finished_at < date_add('2023-12-13', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-13', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-13', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-13', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-13', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-13', interval 7 hour)
            and pi.finished_at < date_add('2023-12-13', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-13', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-13', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-13'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-14', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-14', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-14', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-14', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-14', interval 7 hour)
            and pi.finished_at < date_add('2023-12-14', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-14', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-14', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-14'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-15', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-15', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-15', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-15', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-15', interval 7 hour)
            and pi.finished_at < date_add('2023-12-15', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-15', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-15', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-15'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-16', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-16', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-16', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-16', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-16', interval 7 hour)
            and pi.finished_at < date_add('2023-12-16', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-16', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-16', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-16'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-17', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-17', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-17', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-17', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-17', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-17', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-17', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-17', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-17', interval 7 hour)
            and pi.finished_at < date_add('2023-12-17', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-17', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-17', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-17'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-18', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-18', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-18', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-18', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-18', interval 7 hour)
            and pi.finished_at < date_add('2023-12-18', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-18', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-18', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-18'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-19', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-19', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-19', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-19', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-19', interval 7 hour)
            and pi.finished_at < date_add('2023-12-19', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-19', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-19', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-19'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-20', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-20', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-20', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-20', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-20', interval 7 hour)
            and pi.finished_at < date_add('2023-12-20', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-20', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-20', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-20'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-21', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-21', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-21', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-21', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-21', interval 7 hour)
            and pi.finished_at < date_add('2023-12-21', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-21', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-21', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-21'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-22', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-22', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-22', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-22', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-22', interval 7 hour)
            and pi.finished_at < date_add('2023-12-22', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-22', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-22', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-22'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-23', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-23', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-23', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-23', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-23', interval 7 hour)
            and pi.finished_at < date_add('2023-12-23', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-23', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-23', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-23'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-24', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-24', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-24', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-24', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-24', interval 7 hour)
            and pi.finished_at < date_add('2023-12-24', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-24', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-24', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-24'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-25', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-25', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-25', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-25', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-25', interval 7 hour)
            and pi.finished_at < date_add('2023-12-25', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-25', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-25', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-25'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-26', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-26', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-26', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-26', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-26', interval 7 hour)
            and pi.finished_at < date_add('2023-12-26', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-26', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-26', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-26'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-27', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-27', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-27', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-27', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-27', interval 7 hour)
            and pi.finished_at < date_add('2023-12-27', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-27', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-27', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-27'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-28', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-28', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-28', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-28', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-28', interval 7 hour)
            and pi.finished_at < date_add('2023-12-28', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-28', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-28', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-28'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-29', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-29', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-29', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-29', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-29', interval 7 hour)
            and pi.finished_at < date_add('2023-12-29', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-29', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-29', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-29'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-30', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-30', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-30', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-30', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-30', interval 7 hour)
            and pi.finished_at < date_add('2023-12-30', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-30', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-30', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-30'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-31', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-31', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-31', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-31', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-31', interval 7 hour)
            and pi.finished_at < date_add('2023-12-31', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-31', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-31', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-31'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
with a1 as
        (
                select
                    pi.pno
        #             ,case
        #                 when pci.merge_column is not null then date(pci.complaints_at)
        #                 when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then date(am.abnormal_time)
        #                 else null
        #             end abnormal_time
                    ,case
                        when pci.merge_column is not null then '虚假妥投'
                        when pci.merge_column is null and ( (acc.complaints_type = 1 and am.punish_category = 21) or am.punish_category = 20 ) then '虚假妥投'
                        else '未投诉'
                    end type
                    ,pi.ticket_delivery_staff_info_id
                    ,pi.finished_at
                    ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
                from  fle_staging.parcel_info pi
                left join
                    (
                        select
                            pi.pno
                        from fle_staging.parcel_info pi
                        join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-12-01'
                        where
                            ci.request_sub_type in (221,300)
        #                     and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                            and pi.finished_at >  date_sub('2023-12-03', interval 7 hour)
                            and pi.finished_at < date_add('2023-12-03', interval 17 hour)
                            and pi.state = 5
                        group by 1
                    ) t2 on t2.pno = pi.pno
                left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
                left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
                left join bi_pro.abnormal_customer_complaint acc on acc.pno = pi.pno and acc.created_at > '2023-11-01'
                left join bi_pro.abnormal_message am on am.id = acc.abnormal_message_id and am.abnormal_time > '2023-11-01'
        #         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2024-01-01'
                where
                    t2.pno is null
        #             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
                    and pi.finished_at >  date_sub('2023-12-03', interval 7 hour)
                    and pi.finished_at < date_add('2023-12-03', interval 17 hour)
                    and pi.state = 5
            )


        select
            pi.pno
#             ,date(pci.complaints_at) abnormal_time
            ,'已签收未收到' type
            ,pi.ticket_delivery_staff_info_id
            ,pi.finished_at
            ,date(convert_tz(pi.finished_at, '+00:00', '+07:00')) fin_date
        from fle_staging.parcel_info pi
        left join bi_center.parcel_complaint_inquiry pci on pci.merge_column = pi.pno and pci.created_at > '2023-11-01'
        left join fle_staging.customer_issue ci on ci.id = pci.source_id and ci.created_at > '2023-11-01'
#         left join fle_staging.parcel_info pi on pi.pno = t.pno and pi.created_at > '2023-12-30'
        where
            ci.request_sub_type in (221,300)
#             and pi.ticket_delivery_store_id in ('TH01270302','TH01080204','TH01290102','TH25060300','TH20040248','TH04060232','TH03040503','TH38010110','TH01080144','TH01080109','TH20040301','TH04050201','TH01050203','TH01470308','TH76050100','TH20040212','TH03020900','TH01030308','TH01210119','TH02050101','TH04060700','TH01180117','TH38130200','TH37040100','TH20040246','TH01050401','TH02060111','TH18040800','TH01050214','TH38011200','TH67010700','TH03020503','TH67010525','TH20040820','TH01080114','TH13050401','TH20040271','TH72070101','TH38011701','TH01180105')
            and pi.finished_at >  date_sub('2023-12-03', interval 7 hour)
            and pi.finished_at < date_add('2023-12-03', interval 17 hour)
            and pi.state = 5

        union all

        select
            a2.*
        from   a1 a2
        where
            a2.type = '虚假妥投'

        union all

        select
            c.*
        from
            (
                select
                    a3.*
                from   a1 a3
                where
                    a3.type = '未投诉'
                order by rand()
                limit 1000
            ) c;
;-- -. . -..- - / . -. - .-. -.--
with  t  as
    (
        select
            t.*
        from tmpale.tmp_th_pno_lpf t
    )
, pho as
    (
        select
            pr.pno
            ,pr.routed_at
            ,cast(json_extract(pr.extra_value, '$.callDuration') as int) call_num -- 通话
            ,cast(json_extract(pr.extra_value, '$.diaboloDuration') as int) diao_num -- 响铃
            ,row_number() over (partition by t1.pno order by pr.routed_at desc ) rk
        from rot_pro.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'PHONE'
            and pr.routed_at > '2023-11-25'
            and pr.routed_at < t1.finished_at
    )
        select
            t1.pno
            ,pi.dst_store_id 目的地网点ID
            ,pi.ticket_delivery_staff_info_id 妥投快递员
            ,if(pi.cod_enabled = 1, 'y', 'n') 是否cod
            ,pi.cod_amount cod金额
            ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
            ,hour(convert_tz(pi.finished_at, '+00:00', '+07:00')) 妥投时间点
            ,pi.exhibition_weight 重量
            ,pi.exhibition_length 长
            ,pi.exhibition_width 宽
            ,pi.exhibition_height 高
            ,pi.dst_phone 收件人电话
            ,pi.dst_province_code 收件省ID
            ,pi.dst_city_code 收件城市ID
            ,pi.dst_district_code 收件乡ID
            ,pi.dst_postal_code 收件邮编
            ,pi.src_phone 寄件人电话
            ,pi.src_province_code 发件省ID
            ,pi.src_city_code 发件城市ID
            ,pi.src_district_code 发件乡ID
            ,pi.src_postal_code 发件邮编
            ,convert_tz(swa.started_at,  '+00:00', '+07:00') 当日上班打卡时间
            ,convert_tz(swa.end_at,  '+00:00', '+07:00') 当日下班打卡时间
            ,scan.scan_count 当日交接量
            ,scan.del_count 当日妥投量
            ,scan.del_rate 当日妥投率
            ,dis.distance/1000 当日行驶里程km
            ,pi.client_id 客户ID
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null
                and bc.id is null then '普通ka'
                when kp.`id` is null then '小c'
              end as 客户类型
            ,t1.type '判责类型'
            ,p1.call_num 最后一次电话通话
            ,p1.diao_num 最后一次电话响铃
            ,if(p2.pno is not null , 'y', 'n')  是否沟通
            ,if(p1.call_num >= 2 and p1.call_num <= 5 and p1.diao_num >= 15 and p1.diao_num <= 18, 'y', 'n') 是否疑似神仙卡
            ,convert_tz(p1.routed_at,  '+00:00', '+07:00') 最后一次打电话时间
            ,timestampdiff(minute, p1.routed_at, t1.finished_at) 最后一次打电话与妥投时间差
            ,ab.abnormal_count 近三月处罚次数
        from fle_staging.parcel_info pi
        join t t1 on t1.pno = pi.pno
        left join backyard_pro.staff_work_attendance swa on swa.staff_info_id = pi.ticket_delivery_staff_info_id and swa.attendance_date = t1.fin_date
        left join
            (
                select
                    t1.ticket_delivery_staff_info_id
                    ,t1.fin_date
                    ,count(distinct pr.pno) scan_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null)) del_count
                    ,count(distinct if(pi.state = 5 and pi.finished_at >= date_sub(t1.fin_date, interval 7 hour) and pi.finished_at < date_add(t1.fin_date, interval 17 hour), pr.pno, null))/count(distinct pr.pno) del_rate
                from rot_pro.parcel_route pr
                join t t1 on t1.ticket_delivery_staff_info_id = pr.staff_info_id
                left join fle_staging.parcel_info pi on pi.pno = pr.pno and pi.created_at > date_sub(curdate(), interval 2 month)
                where
                    pr.routed_at >  date_sub('2023-12-03', interval 7 hour)
                    and pr.routed_at < date_add('2023-12-03', interval 17 hour)
                    and pr.route_action  = 'DELIVERY_TICKET_CREATION_SCAN'
        #             and pr.routed_at >= date_sub(t1.fin_date, interval 7 hour)
        #             and pr.routed_at < date_add(t1.fin_date, interval 17 hour)
                    and pr.staff_info_id = t1.ticket_delivery_staff_info_id
                group by 1,2
            ) scan on scan.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and scan.fin_date = t1.fin_date
        left join
            (
                select
                    t1.fin_date
                    ,t1.ticket_delivery_staff_info_id
                    ,max(ccd.coordinate_distance) distance
                from rev_pro.courier_coordinate_distance ccd
                join t t1 on t1.fin_date = ccd.coordinate_date and t1.ticket_delivery_staff_info_id = ccd.staff_id
                where
        #             ccd.created_at > '2024-01-01'
                    ccd.coordinate_date = '2023-12-03'
                group by 1,2
            ) dis on dis.ticket_delivery_staff_info_id = t1.ticket_delivery_staff_info_id and dis.fin_date = t1.fin_date
        left join dwm.tmp_ex_big_clients_id_detail bc on pi.client_id = bc.client_id
        left join fle_staging.ka_profile kp on pi.client_id = kp.id
        left join pho p1 on p1.pno = t1.pno and p1.rk = 1
        left join
            (
                select
                    p1.pno
                from pho p1
                where
                    p1.call_num > 0
                group by 1
            ) p2 on p2.pno = t1.pno
        left join
            (-- 近3月处罚次数
                select
                    am.staff_info_id
                    ,count(distinct case when am.abnormal_object = 0 then am.id when am.abnormal_object = 1 then am.average_merge_key end ) abnormal_count
                from bi_pro.abnormal_message am
                join t t1 on t1.ticket_delivery_staff_info_id = am.staff_info_id
                where
                    am.created_at >= date_sub(curdate(), interval 3 month)
                    and am.isdel = 0 -- 未删除
                    and (am.isappeal < 5 or am.isappeal is null ) -- 未删除
                group by 1
            ) ab on ab.staff_info_id = t1.ticket_delivery_staff_info_id;
;-- -. . -..- - / . -. - .-. -.--
select
    pi.pno
    ,pi.ticket_delivery_staff_lng 妥投经度
    ,pi.ticket_delivery_staff_lat 妥投纬度
    ,ss.lng 妥投网点经度
    ,ss.lat 妥投网点纬度
    ,ss.name 妥投网点名称
    ,st_distance_sphere(point(pi.ticket_delivery_staff_lng, pi.ticket_delivery_staff_lat), point(ss.lng, ss.lat)) 距离
    ,his.pno_count  近2月妥投包裹数
from fle_staging.parcel_info pi
join tmpale.tmp_th_pno_lj_0120 t on t.pno = pi.pno
left join fle_staging.sys_store ss on ss.id = pi.ticket_delivery_store_id
left join
    (
        select
            pr.staff_info_id
            ,count(distinct pr.pno) pno_count
        from rot_pro.parcel_route pr
        join
            (
                select
                    t.staff
                from tmpale.tmp_th_pno_lj_0120 t
                group by 1
            ) t on t.staff = pr.staff_info_id
        where
            pr.routed_at > date_sub(date_sub(curdate(), interval 2 month), interval 7 hour)
            and pr.route_action = 'DELIVERY_CONFIRM'
        group by 1
    ) his on his.staff_info_id = t.staff;
;-- -. . -..- - / . -. - .-. -.--
select
    a2.client_id 客户ID
    ,a2.当日拒收问题件量
    ,a2.当日提交拒收复核单量
from
    (
        select
            sc.cfg_value
        from fle_staging.sys_configuration sc
        where
            sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
            and sc.cfg_value = 'all'
    ) a1
cross join
    (
        select
            pi.client_id
            ,count(distinct if(prr.state in (1,2), prr.pno, null)) 当日拒收问题件量
            ,count(distinct if(prr.state in (2), prr.pno, null)) 当日提交拒收复核单量
        from fle_staging.parcel_reject_report_info prr
        left join fle_staging.parcel_pno_log ppl on ppl.replace_pno = upper(prr.pno)
        left join fle_staging.parcel_info pi on coalesce(ppl.initial_pno, upper(prr.pno)) = pi.pno
        where
            prr.created_at >= '2024-01-17 17:00:00'
            and prr.created_at < '2024-01-18 17:00:00'
           -- and prr.state = 2
        group by 1
    ) a2

union all

select
    a2.client_id 客户ID
    ,a2.当日拒收问题件量
    ,a2.当日提交拒收复核单量
from
    (
        select
              pc.*
              ,client_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
                    and sc.cfg_value != 'all'
            ) pc
        lateral view explode(split(pc.cfg_value, ',')) id as client_id
    ) a1
join
    (
        select
            pi.client_id
            ,count(distinct if(prr.state in (1,2), prr.pno, null)) 当日拒收问题件量
            ,count(distinct if(prr.state in (2), prr.pno, null)) 当日提交拒收复核单量
        from fle_staging.parcel_reject_report_info prr
        left join fle_staging.parcel_pno_log ppl on ppl.replace_pno = upper(prr.pno)
        left join fle_staging.parcel_info pi on coalesce(ppl.initial_pno, upper(prr.pno)) = pi.pno
        where
            prr.created_at >= '2024-01-17 17:00:00'
            and prr.created_at < '2024-01-18 17:00:00'
           -- and prr.state = 2
        group by 1
    ) a2 on a2.client_id = a1.client_id;
;-- -. . -..- - / . -. - .-. -.--
select
    dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.store_id 网点ID
    ,a2.client_id 客户ID
    ,count(distinct if(a3.state in (1,2), a3.pno, null)) 当日拒收问题件数量
    ,count(distinct if(a3.state in (1,2) and ( a3.cod_amount > val.cfg_value or a3.insure_declare_value > val.cfg_value or pai.cogs_amount > val.cfg_value ), a3.pno, null)) 当日满足强制拒收复核需上报的量
    ,count(distinct if(a3.state in (2), a3.pno, null)) 当日提交拒收复核单数量
from
    (
        select
            a.*
        from
            (
                select
                      pc.*
                      ,store_id
                from
                    (
                        select
                            *
                        from fle_staging.sys_configuration sc
                        where
                            sc.cfg_key = 'reject.warehouse.report.by.storeId.enabled'
                            and sc.cfg_value != 'all'
                    ) pc
                lateral view explode(split(pc.cfg_value, ',')) id as store_id
            ) a

        union all

        select
            pc.*
            ,ss.id store_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.storeId.enabled'
                    and cfg_value = 'all'
            ) pc
        cross join fle_staging.sys_store ss
    ) a1
cross join
    (
        select
              pc.*
              ,client_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
                    and sc.cfg_value != 'all'
            ) pc
        lateral view explode(split(pc.cfg_value, ',')) id as client_id
    ) a2
join
    (
        select
            prr.pno
            ,prr.store_id
            ,prr.state
            ,pi.client_id
            ,pi.cod_amount
            ,pi.insure_declare_value
        from fle_staging.parcel_reject_report_info prr
        left join fle_staging.parcel_pno_log ppl on ppl.replace_pno = upper(prr.pno)
        left join fle_staging.parcel_info pi on coalesce(ppl.initial_pno, upper(prr.pno)) = pi.pno
        where
#             prr.created_at >= date_sub(curdate(), interval 7 hour)
            prr.created_at >= '2024-01-17 17:00:00'
            and prr.created_at < '2024-01-18 17:00:00'
    ) a3 on a3.store_id = a1.store_id and a3.client_id = a2.client_id
cross join
    (
        select
            sc.cfg_value
        from fle_staging.sys_configuration sc
        where
            sc.cfg_key = 'reject.force.report.high.value.min.config'
    ) val
left join dwm.dim_th_sys_store_rd dt on dt.store_id = a1.store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join fle_staging.parcel_additional_info pai on pai.pno = a3.pno
group by 1,2,3,4,5

union all


select
    dt.region_name 大区
    ,dt.piece_name 片区
    ,dt.store_name 网点
    ,a1.store_id 网点ID
    ,a3.client_id 客户ID
    ,count(distinct if(a3.state in (1,2), a3.pno, null)) 当日拒收问题件数量
    ,count(distinct if(a3.state in (1,2) and ( a3.cod_amount > val.cfg_value or a3.insure_declare_value > val.cfg_value or pai.cogs_amount > val.cfg_value ), a3.pno, null)) 当日满足强制拒收复核需上报的量
    ,count(distinct if(a3.state in (2), a3.pno, null)) 当日提交拒收复核单数量
from
    (
        select
            a.*
        from
            (
                select
                      pc.*
                      ,store_id
                from
                    (
                        select
                            *
                        from fle_staging.sys_configuration sc
                        where
                            sc.cfg_key = 'reject.warehouse.report.by.storeId.enabled'
                            and sc.cfg_value != 'all'
                    ) pc
                lateral view explode(split(pc.cfg_value, ',')) id as store_id
            ) a

        union all

        select
            pc.*
            ,ss.id store_id
        from
            (
                select
                    *
                from fle_staging.sys_configuration sc
                where
                    sc.cfg_key = 'reject.warehouse.report.by.storeId.enabled'
                    and cfg_value = 'all'
            ) pc
        cross join fle_staging.sys_store ss
    ) a1
cross join
    (
        select
            *
        from fle_staging.sys_configuration sc
        where
            sc.cfg_key = 'reject.warehouse.report.by.customerId.enabled'
            and sc.cfg_value = 'all'
    ) a2
cross join
    (
        select
            prr.pno
            ,prr.store_id
            ,prr.state
            ,pi.client_id
            ,pi.cod_amount
            ,pi.insure_declare_value
        from fle_staging.parcel_reject_report_info prr
        left join fle_staging.parcel_pno_log ppl on ppl.replace_pno = upper(prr.pno)
        left join fle_staging.parcel_info pi on coalesce(ppl.initial_pno, upper(prr.pno)) = pi.pno
        where
            prr.created_at >= '2024-01-17 17:00:00'
            and prr.created_at < '2024-01-18 17:00:00'
    ) a3 on a3.store_id = a1.store_id
cross join
    (
        select
            sc.cfg_value
        from fle_staging.sys_configuration sc
        where
            sc.cfg_key = 'reject.force.report.high.value.min.config'
    ) val
left join dwm.dim_th_sys_store_rd dt on dt.store_id = a1.store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join fle_staging.parcel_additional_info pai on pai.pno = a3.pno
group by 1,2,3,4,5;
;-- -. . -..- - / . -. - .-. -.--
select
    pci.merge_column
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as 客户类型
    ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
from bi_center.parcel_complaint_inquiry pci
join bi_pro.abnormal_message am on json_extract(am.extra_info, '$.id') = pci.id
left join fle_staging.ka_profile kp on pci.client_id = kp.id
left join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = pci.client_id
left join fle_staging.parcel_info pi on pi.pno = pci.merge_column
where
    pci.created_at >= '2024-01-12'
    and pci.created_at < '2024-01-24'
    and json_extract(am.extra_info, '$.src') = 'parcel_complaint_inquiry'
    and am.punish_category = 7;
;-- -. . -..- - / . -. - .-. -.--
select
    pci.merge_column
    ,pci.created_at 询问任务提交时间
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as 客户类型
    ,convert_tz(pi.finished_at, '+00:00', '+07:00') 妥投时间
from bi_center.parcel_complaint_inquiry pci
join bi_pro.abnormal_message am on json_extract(am.extra_info, '$.id') = pci.id
left join fle_staging.ka_profile kp on pci.client_id = kp.id
left join dwm.tmp_ex_big_clients_id_detail bc on bc.client_id = pci.client_id
left join fle_staging.parcel_info pi on pi.pno = pci.merge_column
where
    pci.created_at >= '2024-01-12'
    and pci.created_at < '2024-01-24'
    and json_extract(am.extra_info, '$.src') = 'parcel_complaint_inquiry'
    and am.punish_category = 7;