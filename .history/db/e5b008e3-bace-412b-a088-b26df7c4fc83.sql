select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'QAQC'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
            and di.pno = 'P35231NPHV3BE';
;-- -. . -..- - / . -. - .-. -.--
select
            di.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'QAQC'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
#         join t t2 on t2.pno = di.pno
        left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
            and di.pno = 'P35231NPHV3BE';
;-- -. . -..- - / . -. - .-. -.--
select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
        and pi.pno = 'P35231NPHV3BE';
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
        and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case
        when t1.state = 6 then di.sh_do
        when t1.state = 6 and di.sh_do = 'QAQC' then plt.should_do
        when t1.state != 6 then de.last_store_name
    end 待处理节点
    ,de.last_store_name
    ,de.last_cn_route_action 最新一条有效路由
    ,de.last_route_time 最新一条有效路由时间
from t t1
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'QAQC'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
            and di.pno = 'P35231NPHV3BE'
    ) di on di.pno = t1.pno
group by 1;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
        and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case
        when t1.state = 6 then di.sh_do
        when t1.state = 6 and di.sh_do = 'QAQC' then plt.should_do
        when t1.state != 6 then de.last_store_name
    end 待处理节点
    ,de.last_store_name
    ,de.last_cn_route_action 最新一条有效路由
    ,de.last_route_time 最新一条有效路由时间
from t t1
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'QAQC'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
            
    ) di on di.pno = t1.pno
group by 1;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
        and pi.pno = 'P35231NPHV3BE'
)
# select
#     t1.pno
#     ,case t1.state
#         when 1 then '已揽收'
#         when 2 then '运输中'
#         when 3 then '派送中'
#         when 4 then '已滞留'
#         when 5 then '已签收'
#         when 6 then '疑难件处理中'
#         when 7 then '已退件'
#         when 8 then '异常关闭'
#         when 9 then '已撤销'
#     end as 包裹状态
#     ,case
#         when t1.state = 6 then di.sh_do
#         when t1.state = 6 and di.sh_do = 'QAQC' then plt.should_do
#         when t1.state != 6 then de.last_store_name
#     end 待处理节点
#     ,de.last_store_name
#     ,de.last_cn_route_action 最新一条有效路由
#     ,de.last_route_time 最新一条有效路由时间
# from t t1
# left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
# left join
#     (
#         select
#             plt.pno
#             ,group_concat(ss.name ) should_do
#         from ph_bi.parcel_lose_task plt
#         join t t1 on t1.pno = plt.pno
#         left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
#         left join ph_staging.sys_store ss on ss.id = wo.store_id
#         where
#             plt.state in (3)
#             and wo.status in (1,2)
#         group by 1
#
#         union  all
#
#         select
#             plt.pno
#             ,'QAQC' should_do
#         from ph_bi.parcel_lose_task plt
#         join t t1 on t1.pno = plt.pno
#         where
#             plt.state in (1,2,4)
#     ) plt on plt.pno = t1.pno
# left join
#     (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'QAQC'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
        and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case
        when t1.state = 6 then di.sh_do
        when t1.state = 6 and di.sh_do = 'QAQC' then plt.should_do
        when t1.state != 6 then de.last_store_name
    end 待处理节点
    ,de.last_store_name
    ,de.last_cn_route_action 最新一条有效路由
    ,de.last_route_time 最新一条有效路由时间
from t t1
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'QAQC'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null

    ) di on di.pno = t1.pno
group by 1;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case
        when t1.state = 6 then di.sh_do
        when t1.state = 6 and di.sh_do = 'QAQC' then plt.should_do
        when t1.state != 6 then de.last_store_name
    end 待处理节点
    ,de.last_store_name
    ,de.last_cn_route_action 最新一条有效路由
    ,de.last_route_time 最新一条有效路由时间
from t t1
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'QAQC'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
group by 1;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case
        when t1.state = 6 and di.sh_do not in ('QAQC') then di.sh_do
        when t1.state = 6 and di.sh_do = 'QAQC' then plt.should_do
        when t1.state != 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is null then de.last_store_name
    end 待处理节点
    ,de.last_store_name
    ,de.last_cn_route_action 最新一条有效路由
    ,de.last_route_time 最新一条有效路由时间
from t t1
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'QAQC'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
group by 1;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case
        when t1.state = 6 and di.sh_do not in ('QAQC') then di.sh_do
        when t1.state = 6 and di.sh_do = 'QAQC' then plt.should_do
        when t1.state != 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then pr.store_name
        else de.last_store_name
    end 待处理节点
    ,de.last_store_name
    ,de.last_cn_route_action 最新一条有效路由
    ,de.last_route_time 最新一条有效路由时间
from t t1
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'QAQC'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
group by 1;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
    ,case
        when t1.state = 6 and di.sh_do not in ('QAQC') then di.sh_do
        when t1.state = 6 and di.sh_do = 'QAQC' then plt.should_do
        when t1.state != 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then pr.store_name
        else de.last_store_name
    end 待处理节点
    ,de.last_store_name
    ,de.last_cn_route_action 最新一条有效路由
    ,de.last_route_time 最新一条有效路由时间
from t t1
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'QAQC'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
    di.pno
    ,cdt.negotiation_result_category
from ph_staging.diff_info di
left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
where
    di.pno = 'P35171N44BWAP';
;-- -. . -..- - / . -. - .-. -.--
select
    di.pno
    ,cdt.*
from ph_staging.diff_info di
left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
where
    di.pno = 'P35171N44BWAP';
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
    ,case
        when t1.state = 6 and di.sh_do not in ('QAQC') then di.sh_do
        when t1.state = 6 and di.sh_do = 'QAQC' then plt.should_do
        when t1.state != 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then pr.store_name
        else de.last_store_name
    end 待处理节点
    ,de.last_store_name
    ,de.last_cn_route_action 最新一条有效路由
    ,de.last_route_time 最新一条有效路由时间
from t t1
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'QAQC'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
group by;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
    ,case
        when t1.state = 6 and di.sh_do not in ('QAQC') then di.sh_do
        when t1.state = 6 and di.sh_do = 'QAQC' then plt.should_do
        when t1.state != 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then pr.store_name
        else de.last_store_name
    end 待处理节点
    ,de.last_store_name
    ,de.last_cn_route_action 最新一条有效路由
    ,de.last_route_time 最新一条有效路由时间
from t t1
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'QAQC'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
group by t1.pno;
;-- -. . -..- - / . -. - .-. -.--
select
    di.pno
    ,cdt.*
from ph_staging.diff_info di
left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
where
    di.pno = 'P2206126FUVAL';
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
    ,case
        when t1.state = 6 and di.sh_do not in ('QAQC') then di.sh_do
        when t1.state = 6 and di.sh_do = 'QAQC' then plt.should_do
        when t1.state != 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then pr.store_name
        else de.last_store_name
    end 待处理节点
    ,de.last_store_name 当前节点
    ,datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) 最后有效路由距今天数
#     ,de.last_cn_route_action 最新一条有效路由
    ,convert_tz(pr.routed_at ,'+00:00', '+08:00') 最新一条有效路由时间
from t t1
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'QAQC'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
group by t1.pno;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
    ,case
        when t1.state = 6 and di.pno is not null then di.sh_do
        when t1.state = 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then pr.store_name
        else de.last_store_name
    end 待处理节点
    ,case
        when t1.state = 6 and di.pno is not null then 'KAM/揽件网点未协商'
        when t1.state = 6 and di.pno is null then '闪速系统沟通处理中'
        when t1.state != 6 and plt.pno is not null then '闪速系统沟通处理中'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then 'QAQC无须追责后长期无有效路由'
        else de.last_store_name
    end 卡点原因
    ,de.last_store_name 当前节点
    ,datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) 最后有效路由距今天数
#     ,de.last_cn_route_action 最新一条有效路由
    ,convert_tz(pr.routed_at ,'+00:00', '+08:00') 最新一条有效路由时间
from t t1
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
group by t1.pno;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
    ,case
        when t1.state = 6 and di.pno is not null then di.sh_do
        when t1.state = 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then pr.store_name
        else de.last_store_name
    end 待处理节点
    ,case
        when t1.state = 6 and di.pno is not null then 'KAM/揽件网点未协商'
        when t1.state = 6 and di.pno is null then '闪速系统沟通处理中'
        when t1.state != 6 and plt.pno is not null then '闪速系统沟通处理中'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then 'QAQC无须追责后长期无有效路由'
        else de.last_store_name
    end 卡点原因
    ,de.last_store_name 当前节点
    ,datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) 最后有效路由距今天数
#     ,de.last_cn_route_action 最新一条有效路由
    ,case pr.route_action # 路由动作
         when 'ACCEPT_PARCEL' then '接件扫描'
         when 'ARRIVAL_GOODS_VAN_CHECK_SCAN' then '车货关联到港'
         when 'ARRIVAL_WAREHOUSE_SCAN' then '到件入仓扫描'
         when 'CANCEL_ARRIVAL_WAREHOUSE_SCAN' then '取消到件入仓扫描'
         when 'CANCEL_PARCEL' then '撤销包裹'
         when 'CANCEL_SHIPMENT_WAREHOUSE' then '取消发件出仓'
         when 'CHANGE_PARCEL_CANCEL' then '修改包裹为撤销'
         when 'CHANGE_PARCEL_CLOSE' then '修改包裹为异常关闭'
         when 'CHANGE_PARCEL_IN_TRANSIT' then '修改包裹为运输中'
         when 'CHANGE_PARCEL_INFO' then '修改包裹信息'
         when 'CHANGE_PARCEL_SIGNED' then '修改包裹为签收'
         when 'CLAIMS_CLOSE' then '理赔关闭'
         when 'CLAIMS_COMPLETE' then '理赔完成'
         when 'CLAIMS_CONTACT' then '已联系客户'
         when 'CLAIMS_TRANSFER_CS' then '转交总部cs处理'
         when 'CLOSE_ORDER' then '关闭订单'
         when 'CONTINUE_TRANSPORT' then '疑难件继续配送'
         when 'CREATE_WORK_ORDER' then '创建工单'
         when 'CUSTOMER_CHANGE_PARCEL_INFO' then '客户修改包裹信息'
         when 'CUSTOMER_OPERATING_RETURN' then '客户操作退回寄件人'
         when 'DELIVERY_CONFIRM' then '确认妥投'
         when 'DELIVERY_MARKER' then '派件标记'
         when 'DELIVERY_PICKUP_STORE_SCAN' then '自提取件扫描'
         when 'DELIVERY_TICKET_CREATION_SCAN' then '交接扫描'
         when 'DELIVERY_TRANSFER' then '派件转单'
         when 'DEPARTURE_GOODS_VAN_CK_SCAN' then '车货关联出港'
         when 'DETAIN_WAREHOUSE' then '货件留仓'
         when 'DIFFICULTY_FINISH_INDEMNITY' then '疑难件支付赔偿'
         when 'DIFFICULTY_HANDOVER' then '疑难件交接'
         when 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE' then '疑难件交接货件留仓'
         when 'DIFFICULTY_RE_TRANSIT' then '疑难件退回区域总部/重启运送'
         when 'DIFFICULTY_RETURN' then '疑难件退回寄件人'
         when 'DIFFICULTY_SEAL' then '集包异常'
         when 'DISCARD_RETURN_BKK' then '丢弃包裹的，换单后寄回BKK'
         when 'DISTRIBUTION_INVENTORY' then '分拨盘库'
         when 'DWS_WEIGHT_IMAGE' then 'DWS复秤照片'
         when 'EXCHANGE_PARCEL' then '换货'
         when 'FAKE_CANCEL_HANDLE' then '虚假撤销判责'
         when 'FLASH_HOME_SCAN' then 'FH交接扫描'
         when 'FORCE_TAKE_PHOTO' then '强制拍照路由'
         when 'HAVE_HAIR_SCAN_NO_TO' then '有发无到'
         when 'HURRY_PARCEL' then '催单'
         when 'INCOMING_CALL' then '来电接听'
         when 'INTERRUPT_PARCEL_AND_RETURN' then '中断运输并退回'
         when 'INVENTORY' then '盘库'
         when 'LOSE_PARCEL_TEAM_OPERATION' then '丢失件团队处理'
         when 'MANUAL_REMARK' then '添加备注'
         when 'MISS_PICKUP_HANDLE' then '漏包裹揽收判责'
         when 'MISSING_PARCEL_SCAN' then '丢失件包裹操作'
         when 'NOTICE_LOST_PARTS_TEAM' then '已通知丢失件团队'
         when 'PARCEL_HEADLESS_CLAIMED' then '无头件包裹已认领'
         when 'PARCEL_HEADLESS_PRINTED' then '无头件包裹已打单'
         when 'PENDING_RETURN' then '待退件'
         when 'PHONE' then '电话联系'
         when 'PICK_UP_STORE' then '待自提取件'
         when 'PICKUP_RETURN_RECEIPT' then '签回单揽收'
         when 'PRINTING' then '打印面单'
         when 'QAQC_OPERATION' then 'QAQC判责'
         when 'RECEIVE_WAREHOUSE_SCAN' then '收件入仓'
         when 'RECEIVED' then '已揽收,初始化动作，实际情况并没有作用'
         when 'REFUND_CONFIRM' then '退件妥投'
         when 'REPAIRED' then '上报问题修复路由'
         when 'REPLACE_PNO' then '换单'
         when 'REPLY_WORK_ORDER' then '回复工单'
         when 'REVISION_TIME' then '改约时间'
         when 'SEAL' then '集包'
         when 'SEAL_NUMBER_CHANGE' then '集包件数变化'
         when 'SHIPMENT_WAREHOUSE_SCAN' then '发件出仓扫描'
         when 'SORTER_WEIGHT_IMAGE' then '分拣机复秤照片'
         when 'SORTING_SCAN' then '分拣扫描'
         when 'STAFF_INFO_UPDATE_WEIGHT' then '快递员修改重量'
         when 'STORE_KEEPER_UPDATE_WEIGHT' then '仓管员复秤'
         when 'STORE_SORTER_UPDATE_WEIGHT' then '分拣机复秤'
         when 'SYSTEM_AUTO_RETURN' then '系统自动退件'
         when 'TAKE_PHOTO' then '异常打单拍照'
         when 'THIRD_EXPRESS_ROUTE' then '第三方公司路由'
         when 'THIRD_PARTY_REASON_DETAIN' then '第三方原因滞留'
         when 'TICKET_WEIGHT_IMAGE' then '揽收称重照片'
         when 'TRANSFER_LOST_PARTS_TEAM' then '已转交丢失件团队'
         when 'TRANSFER_QAQC' then '转交QAQC处理'
         when 'UNSEAL' then '拆包'
         when 'UNSEAL_NO_PARCEL' then '上报包裹不在集包里'
         when 'UNSEAL_NOT_SCANNED' then '集包已拆包，本包裹未被扫描'
         when 'VEHICLE_ACCIDENT_REG' then '车辆车祸登记'
         when 'VEHICLE_ACCIDENT_REGISTRATION' then '车辆车祸登记'
         when 'VEHICLE_WET_DAMAGE_REG' then '车辆湿损登记'
         when 'VEHICLE_WET_DAMAGE_REGISTRATION' then '车辆湿损登记'
        end as 最后一条路由
    ,convert_tz(pr.routed_at ,'+00:00', '+08:00') 最新一条有效路由时间
from t t1
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,pr.route_action
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
group by t1.pno;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
    ,case
        when t1.state = 6 and di.pno is not null then di.sh_do
        when t1.state = 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is not null then plt.should_do
        when plt.pno is null and pct.pno is not null then 'qaqc-TeamB'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then pr.store_name
        else de.last_store_name
    end 待处理节点
    ,case
        when t1.state = 6 and di.pno is not null then 'KAM/揽件网点未协商'
        when t1.state = 6 and di.pno is null then '闪速系统沟通处理中'
        when t1.state != 6 and plt.pno is not null then '闪速系统沟通处理中'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then 'QAQC无须追责后长期无有效路由'
        else de.last_store_name
    end 卡点原因
    ,de.last_store_name 当前节点
    ,datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) 最后有效路由距今天数
#     ,de.last_cn_route_action 最新一条有效路由
    ,case pr.route_action # 路由动作
         when 'ACCEPT_PARCEL' then '接件扫描'
         when 'ARRIVAL_GOODS_VAN_CHECK_SCAN' then '车货关联到港'
         when 'ARRIVAL_WAREHOUSE_SCAN' then '到件入仓扫描'
         when 'CANCEL_ARRIVAL_WAREHOUSE_SCAN' then '取消到件入仓扫描'
         when 'CANCEL_PARCEL' then '撤销包裹'
         when 'CANCEL_SHIPMENT_WAREHOUSE' then '取消发件出仓'
         when 'CHANGE_PARCEL_CANCEL' then '修改包裹为撤销'
         when 'CHANGE_PARCEL_CLOSE' then '修改包裹为异常关闭'
         when 'CHANGE_PARCEL_IN_TRANSIT' then '修改包裹为运输中'
         when 'CHANGE_PARCEL_INFO' then '修改包裹信息'
         when 'CHANGE_PARCEL_SIGNED' then '修改包裹为签收'
         when 'CLAIMS_CLOSE' then '理赔关闭'
         when 'CLAIMS_COMPLETE' then '理赔完成'
         when 'CLAIMS_CONTACT' then '已联系客户'
         when 'CLAIMS_TRANSFER_CS' then '转交总部cs处理'
         when 'CLOSE_ORDER' then '关闭订单'
         when 'CONTINUE_TRANSPORT' then '疑难件继续配送'
         when 'CREATE_WORK_ORDER' then '创建工单'
         when 'CUSTOMER_CHANGE_PARCEL_INFO' then '客户修改包裹信息'
         when 'CUSTOMER_OPERATING_RETURN' then '客户操作退回寄件人'
         when 'DELIVERY_CONFIRM' then '确认妥投'
         when 'DELIVERY_MARKER' then '派件标记'
         when 'DELIVERY_PICKUP_STORE_SCAN' then '自提取件扫描'
         when 'DELIVERY_TICKET_CREATION_SCAN' then '交接扫描'
         when 'DELIVERY_TRANSFER' then '派件转单'
         when 'DEPARTURE_GOODS_VAN_CK_SCAN' then '车货关联出港'
         when 'DETAIN_WAREHOUSE' then '货件留仓'
         when 'DIFFICULTY_FINISH_INDEMNITY' then '疑难件支付赔偿'
         when 'DIFFICULTY_HANDOVER' then '疑难件交接'
         when 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE' then '疑难件交接货件留仓'
         when 'DIFFICULTY_RE_TRANSIT' then '疑难件退回区域总部/重启运送'
         when 'DIFFICULTY_RETURN' then '疑难件退回寄件人'
         when 'DIFFICULTY_SEAL' then '集包异常'
         when 'DISCARD_RETURN_BKK' then '丢弃包裹的，换单后寄回BKK'
         when 'DISTRIBUTION_INVENTORY' then '分拨盘库'
         when 'DWS_WEIGHT_IMAGE' then 'DWS复秤照片'
         when 'EXCHANGE_PARCEL' then '换货'
         when 'FAKE_CANCEL_HANDLE' then '虚假撤销判责'
         when 'FLASH_HOME_SCAN' then 'FH交接扫描'
         when 'FORCE_TAKE_PHOTO' then '强制拍照路由'
         when 'HAVE_HAIR_SCAN_NO_TO' then '有发无到'
         when 'HURRY_PARCEL' then '催单'
         when 'INCOMING_CALL' then '来电接听'
         when 'INTERRUPT_PARCEL_AND_RETURN' then '中断运输并退回'
         when 'INVENTORY' then '盘库'
         when 'LOSE_PARCEL_TEAM_OPERATION' then '丢失件团队处理'
         when 'MANUAL_REMARK' then '添加备注'
         when 'MISS_PICKUP_HANDLE' then '漏包裹揽收判责'
         when 'MISSING_PARCEL_SCAN' then '丢失件包裹操作'
         when 'NOTICE_LOST_PARTS_TEAM' then '已通知丢失件团队'
         when 'PARCEL_HEADLESS_CLAIMED' then '无头件包裹已认领'
         when 'PARCEL_HEADLESS_PRINTED' then '无头件包裹已打单'
         when 'PENDING_RETURN' then '待退件'
         when 'PHONE' then '电话联系'
         when 'PICK_UP_STORE' then '待自提取件'
         when 'PICKUP_RETURN_RECEIPT' then '签回单揽收'
         when 'PRINTING' then '打印面单'
         when 'QAQC_OPERATION' then 'QAQC判责'
         when 'RECEIVE_WAREHOUSE_SCAN' then '收件入仓'
         when 'RECEIVED' then '已揽收,初始化动作，实际情况并没有作用'
         when 'REFUND_CONFIRM' then '退件妥投'
         when 'REPAIRED' then '上报问题修复路由'
         when 'REPLACE_PNO' then '换单'
         when 'REPLY_WORK_ORDER' then '回复工单'
         when 'REVISION_TIME' then '改约时间'
         when 'SEAL' then '集包'
         when 'SEAL_NUMBER_CHANGE' then '集包件数变化'
         when 'SHIPMENT_WAREHOUSE_SCAN' then '发件出仓扫描'
         when 'SORTER_WEIGHT_IMAGE' then '分拣机复秤照片'
         when 'SORTING_SCAN' then '分拣扫描'
         when 'STAFF_INFO_UPDATE_WEIGHT' then '快递员修改重量'
         when 'STORE_KEEPER_UPDATE_WEIGHT' then '仓管员复秤'
         when 'STORE_SORTER_UPDATE_WEIGHT' then '分拣机复秤'
         when 'SYSTEM_AUTO_RETURN' then '系统自动退件'
         when 'TAKE_PHOTO' then '异常打单拍照'
         when 'THIRD_EXPRESS_ROUTE' then '第三方公司路由'
         when 'THIRD_PARTY_REASON_DETAIN' then '第三方原因滞留'
         when 'TICKET_WEIGHT_IMAGE' then '揽收称重照片'
         when 'TRANSFER_LOST_PARTS_TEAM' then '已转交丢失件团队'
         when 'TRANSFER_QAQC' then '转交QAQC处理'
         when 'UNSEAL' then '拆包'
         when 'UNSEAL_NO_PARCEL' then '上报包裹不在集包里'
         when 'UNSEAL_NOT_SCANNED' then '集包已拆包，本包裹未被扫描'
         when 'VEHICLE_ACCIDENT_REG' then '车辆车祸登记'
         when 'VEHICLE_ACCIDENT_REGISTRATION' then '车辆车祸登记'
         when 'VEHICLE_WET_DAMAGE_REG' then '车辆湿损登记'
         when 'VEHICLE_WET_DAMAGE_REGISTRATION' then '车辆湿损登记'
        end as 最后一条路由
    ,convert_tz(pr.routed_at ,'+00:00', '+08:00') 最新一条有效路由时间
from t t1
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,pr.route_action
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
left join
    (
        select
            plt.pno
        from ph_bi.parcel_claim_task plt
        join t t4  on t4.pno = plt.pno
        where
            plt.state not in (6,7,8)
            and plt.source = 11
        group by 1
    ) pct on pct.pno = t1.pno
group by t1.pno;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
    ,case
        when t1.state = 6 and di.pno is not null then di.sh_do
        when t1.state = 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is not null then plt.should_do
        when plt.pno is null and pct.pno is not null then 'qaqc-TeamB'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then pr.store_name
        else de.last_store_name
    end 待处理节点
    ,case
        when t1.state = 6 and di.pno is not null then 'KAM/揽件网点未协商'
        when t1.state = 6 and di.pno is null then '闪速系统沟通处理中'
        when t1.state != 6 and plt.pno is not null then '闪速系统沟通处理中'
        when plt.pno is null and pct.pno is not null then '闪速超时效理赔未完成'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then 'QAQC无须追责后长期无有效路由'
        else de.last_store_name
    end 卡点原因
    ,de.last_store_name 当前节点
    ,datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) 最后有效路由距今天数
#     ,de.last_cn_route_action 最新一条有效路由
    ,case pr.route_action # 路由动作
         when 'ACCEPT_PARCEL' then '接件扫描'
         when 'ARRIVAL_GOODS_VAN_CHECK_SCAN' then '车货关联到港'
         when 'ARRIVAL_WAREHOUSE_SCAN' then '到件入仓扫描'
         when 'CANCEL_ARRIVAL_WAREHOUSE_SCAN' then '取消到件入仓扫描'
         when 'CANCEL_PARCEL' then '撤销包裹'
         when 'CANCEL_SHIPMENT_WAREHOUSE' then '取消发件出仓'
         when 'CHANGE_PARCEL_CANCEL' then '修改包裹为撤销'
         when 'CHANGE_PARCEL_CLOSE' then '修改包裹为异常关闭'
         when 'CHANGE_PARCEL_IN_TRANSIT' then '修改包裹为运输中'
         when 'CHANGE_PARCEL_INFO' then '修改包裹信息'
         when 'CHANGE_PARCEL_SIGNED' then '修改包裹为签收'
         when 'CLAIMS_CLOSE' then '理赔关闭'
         when 'CLAIMS_COMPLETE' then '理赔完成'
         when 'CLAIMS_CONTACT' then '已联系客户'
         when 'CLAIMS_TRANSFER_CS' then '转交总部cs处理'
         when 'CLOSE_ORDER' then '关闭订单'
         when 'CONTINUE_TRANSPORT' then '疑难件继续配送'
         when 'CREATE_WORK_ORDER' then '创建工单'
         when 'CUSTOMER_CHANGE_PARCEL_INFO' then '客户修改包裹信息'
         when 'CUSTOMER_OPERATING_RETURN' then '客户操作退回寄件人'
         when 'DELIVERY_CONFIRM' then '确认妥投'
         when 'DELIVERY_MARKER' then '派件标记'
         when 'DELIVERY_PICKUP_STORE_SCAN' then '自提取件扫描'
         when 'DELIVERY_TICKET_CREATION_SCAN' then '交接扫描'
         when 'DELIVERY_TRANSFER' then '派件转单'
         when 'DEPARTURE_GOODS_VAN_CK_SCAN' then '车货关联出港'
         when 'DETAIN_WAREHOUSE' then '货件留仓'
         when 'DIFFICULTY_FINISH_INDEMNITY' then '疑难件支付赔偿'
         when 'DIFFICULTY_HANDOVER' then '疑难件交接'
         when 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE' then '疑难件交接货件留仓'
         when 'DIFFICULTY_RE_TRANSIT' then '疑难件退回区域总部/重启运送'
         when 'DIFFICULTY_RETURN' then '疑难件退回寄件人'
         when 'DIFFICULTY_SEAL' then '集包异常'
         when 'DISCARD_RETURN_BKK' then '丢弃包裹的，换单后寄回BKK'
         when 'DISTRIBUTION_INVENTORY' then '分拨盘库'
         when 'DWS_WEIGHT_IMAGE' then 'DWS复秤照片'
         when 'EXCHANGE_PARCEL' then '换货'
         when 'FAKE_CANCEL_HANDLE' then '虚假撤销判责'
         when 'FLASH_HOME_SCAN' then 'FH交接扫描'
         when 'FORCE_TAKE_PHOTO' then '强制拍照路由'
         when 'HAVE_HAIR_SCAN_NO_TO' then '有发无到'
         when 'HURRY_PARCEL' then '催单'
         when 'INCOMING_CALL' then '来电接听'
         when 'INTERRUPT_PARCEL_AND_RETURN' then '中断运输并退回'
         when 'INVENTORY' then '盘库'
         when 'LOSE_PARCEL_TEAM_OPERATION' then '丢失件团队处理'
         when 'MANUAL_REMARK' then '添加备注'
         when 'MISS_PICKUP_HANDLE' then '漏包裹揽收判责'
         when 'MISSING_PARCEL_SCAN' then '丢失件包裹操作'
         when 'NOTICE_LOST_PARTS_TEAM' then '已通知丢失件团队'
         when 'PARCEL_HEADLESS_CLAIMED' then '无头件包裹已认领'
         when 'PARCEL_HEADLESS_PRINTED' then '无头件包裹已打单'
         when 'PENDING_RETURN' then '待退件'
         when 'PHONE' then '电话联系'
         when 'PICK_UP_STORE' then '待自提取件'
         when 'PICKUP_RETURN_RECEIPT' then '签回单揽收'
         when 'PRINTING' then '打印面单'
         when 'QAQC_OPERATION' then 'QAQC判责'
         when 'RECEIVE_WAREHOUSE_SCAN' then '收件入仓'
         when 'RECEIVED' then '已揽收,初始化动作，实际情况并没有作用'
         when 'REFUND_CONFIRM' then '退件妥投'
         when 'REPAIRED' then '上报问题修复路由'
         when 'REPLACE_PNO' then '换单'
         when 'REPLY_WORK_ORDER' then '回复工单'
         when 'REVISION_TIME' then '改约时间'
         when 'SEAL' then '集包'
         when 'SEAL_NUMBER_CHANGE' then '集包件数变化'
         when 'SHIPMENT_WAREHOUSE_SCAN' then '发件出仓扫描'
         when 'SORTER_WEIGHT_IMAGE' then '分拣机复秤照片'
         when 'SORTING_SCAN' then '分拣扫描'
         when 'STAFF_INFO_UPDATE_WEIGHT' then '快递员修改重量'
         when 'STORE_KEEPER_UPDATE_WEIGHT' then '仓管员复秤'
         when 'STORE_SORTER_UPDATE_WEIGHT' then '分拣机复秤'
         when 'SYSTEM_AUTO_RETURN' then '系统自动退件'
         when 'TAKE_PHOTO' then '异常打单拍照'
         when 'THIRD_EXPRESS_ROUTE' then '第三方公司路由'
         when 'THIRD_PARTY_REASON_DETAIN' then '第三方原因滞留'
         when 'TICKET_WEIGHT_IMAGE' then '揽收称重照片'
         when 'TRANSFER_LOST_PARTS_TEAM' then '已转交丢失件团队'
         when 'TRANSFER_QAQC' then '转交QAQC处理'
         when 'UNSEAL' then '拆包'
         when 'UNSEAL_NO_PARCEL' then '上报包裹不在集包里'
         when 'UNSEAL_NOT_SCANNED' then '集包已拆包，本包裹未被扫描'
         when 'VEHICLE_ACCIDENT_REG' then '车辆车祸登记'
         when 'VEHICLE_ACCIDENT_REGISTRATION' then '车辆车祸登记'
         when 'VEHICLE_WET_DAMAGE_REG' then '车辆湿损登记'
         when 'VEHICLE_WET_DAMAGE_REGISTRATION' then '车辆湿损登记'
        end as 最后一条路由
    ,convert_tz(pr.routed_at ,'+00:00', '+08:00') 最新一条有效路由时间
from t t1
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,pr.route_action
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
left join
    (
        select
            plt.pno
        from ph_bi.parcel_claim_task plt
        join t t4  on t4.pno = plt.pno
        where
            plt.state not in (6,7,8)
            and plt.source = 11
        group by 1
    ) pct on pct.pno = t1.pno
group by t1.pno;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
    ,case
        when t1.state = 6 and di.pno is not null then di.sh_do
        when t1.state = 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is not null then plt.should_do
        when plt.pno is null and pct.pno is not null then 'qaqc-TeamB'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then pr.store_name
        else de.last_store_name
    end 待处理节点
    ,case
        when t1.state = 6 and di.pno is not null then 'KAM/揽件网点未协商'
        when t1.state = 6 and di.pno is null then '闪速系统沟通处理中'
        when t1.state != 6 and plt.pno is not null then '闪速系统沟通处理中'
        when plt.pno is null and pct.pno is not null then '闪速超时效理赔未完成'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then 'QAQC无须追责后长期无有效路由'
        else null
    end 卡点原因
    ,de.last_store_name 当前节点
    ,datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) 最后有效路由距今天数
#     ,de.last_cn_route_action 最新一条有效路由
    ,case pr.route_action # 路由动作
         when 'ACCEPT_PARCEL' then '接件扫描'
         when 'ARRIVAL_GOODS_VAN_CHECK_SCAN' then '车货关联到港'
         when 'ARRIVAL_WAREHOUSE_SCAN' then '到件入仓扫描'
         when 'CANCEL_ARRIVAL_WAREHOUSE_SCAN' then '取消到件入仓扫描'
         when 'CANCEL_PARCEL' then '撤销包裹'
         when 'CANCEL_SHIPMENT_WAREHOUSE' then '取消发件出仓'
         when 'CHANGE_PARCEL_CANCEL' then '修改包裹为撤销'
         when 'CHANGE_PARCEL_CLOSE' then '修改包裹为异常关闭'
         when 'CHANGE_PARCEL_IN_TRANSIT' then '修改包裹为运输中'
         when 'CHANGE_PARCEL_INFO' then '修改包裹信息'
         when 'CHANGE_PARCEL_SIGNED' then '修改包裹为签收'
         when 'CLAIMS_CLOSE' then '理赔关闭'
         when 'CLAIMS_COMPLETE' then '理赔完成'
         when 'CLAIMS_CONTACT' then '已联系客户'
         when 'CLAIMS_TRANSFER_CS' then '转交总部cs处理'
         when 'CLOSE_ORDER' then '关闭订单'
         when 'CONTINUE_TRANSPORT' then '疑难件继续配送'
         when 'CREATE_WORK_ORDER' then '创建工单'
         when 'CUSTOMER_CHANGE_PARCEL_INFO' then '客户修改包裹信息'
         when 'CUSTOMER_OPERATING_RETURN' then '客户操作退回寄件人'
         when 'DELIVERY_CONFIRM' then '确认妥投'
         when 'DELIVERY_MARKER' then '派件标记'
         when 'DELIVERY_PICKUP_STORE_SCAN' then '自提取件扫描'
         when 'DELIVERY_TICKET_CREATION_SCAN' then '交接扫描'
         when 'DELIVERY_TRANSFER' then '派件转单'
         when 'DEPARTURE_GOODS_VAN_CK_SCAN' then '车货关联出港'
         when 'DETAIN_WAREHOUSE' then '货件留仓'
         when 'DIFFICULTY_FINISH_INDEMNITY' then '疑难件支付赔偿'
         when 'DIFFICULTY_HANDOVER' then '疑难件交接'
         when 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE' then '疑难件交接货件留仓'
         when 'DIFFICULTY_RE_TRANSIT' then '疑难件退回区域总部/重启运送'
         when 'DIFFICULTY_RETURN' then '疑难件退回寄件人'
         when 'DIFFICULTY_SEAL' then '集包异常'
         when 'DISCARD_RETURN_BKK' then '丢弃包裹的，换单后寄回BKK'
         when 'DISTRIBUTION_INVENTORY' then '分拨盘库'
         when 'DWS_WEIGHT_IMAGE' then 'DWS复秤照片'
         when 'EXCHANGE_PARCEL' then '换货'
         when 'FAKE_CANCEL_HANDLE' then '虚假撤销判责'
         when 'FLASH_HOME_SCAN' then 'FH交接扫描'
         when 'FORCE_TAKE_PHOTO' then '强制拍照路由'
         when 'HAVE_HAIR_SCAN_NO_TO' then '有发无到'
         when 'HURRY_PARCEL' then '催单'
         when 'INCOMING_CALL' then '来电接听'
         when 'INTERRUPT_PARCEL_AND_RETURN' then '中断运输并退回'
         when 'INVENTORY' then '盘库'
         when 'LOSE_PARCEL_TEAM_OPERATION' then '丢失件团队处理'
         when 'MANUAL_REMARK' then '添加备注'
         when 'MISS_PICKUP_HANDLE' then '漏包裹揽收判责'
         when 'MISSING_PARCEL_SCAN' then '丢失件包裹操作'
         when 'NOTICE_LOST_PARTS_TEAM' then '已通知丢失件团队'
         when 'PARCEL_HEADLESS_CLAIMED' then '无头件包裹已认领'
         when 'PARCEL_HEADLESS_PRINTED' then '无头件包裹已打单'
         when 'PENDING_RETURN' then '待退件'
         when 'PHONE' then '电话联系'
         when 'PICK_UP_STORE' then '待自提取件'
         when 'PICKUP_RETURN_RECEIPT' then '签回单揽收'
         when 'PRINTING' then '打印面单'
         when 'QAQC_OPERATION' then 'QAQC判责'
         when 'RECEIVE_WAREHOUSE_SCAN' then '收件入仓'
         when 'RECEIVED' then '已揽收,初始化动作，实际情况并没有作用'
         when 'REFUND_CONFIRM' then '退件妥投'
         when 'REPAIRED' then '上报问题修复路由'
         when 'REPLACE_PNO' then '换单'
         when 'REPLY_WORK_ORDER' then '回复工单'
         when 'REVISION_TIME' then '改约时间'
         when 'SEAL' then '集包'
         when 'SEAL_NUMBER_CHANGE' then '集包件数变化'
         when 'SHIPMENT_WAREHOUSE_SCAN' then '发件出仓扫描'
         when 'SORTER_WEIGHT_IMAGE' then '分拣机复秤照片'
         when 'SORTING_SCAN' then '分拣扫描'
         when 'STAFF_INFO_UPDATE_WEIGHT' then '快递员修改重量'
         when 'STORE_KEEPER_UPDATE_WEIGHT' then '仓管员复秤'
         when 'STORE_SORTER_UPDATE_WEIGHT' then '分拣机复秤'
         when 'SYSTEM_AUTO_RETURN' then '系统自动退件'
         when 'TAKE_PHOTO' then '异常打单拍照'
         when 'THIRD_EXPRESS_ROUTE' then '第三方公司路由'
         when 'THIRD_PARTY_REASON_DETAIN' then '第三方原因滞留'
         when 'TICKET_WEIGHT_IMAGE' then '揽收称重照片'
         when 'TRANSFER_LOST_PARTS_TEAM' then '已转交丢失件团队'
         when 'TRANSFER_QAQC' then '转交QAQC处理'
         when 'UNSEAL' then '拆包'
         when 'UNSEAL_NO_PARCEL' then '上报包裹不在集包里'
         when 'UNSEAL_NOT_SCANNED' then '集包已拆包，本包裹未被扫描'
         when 'VEHICLE_ACCIDENT_REG' then '车辆车祸登记'
         when 'VEHICLE_ACCIDENT_REGISTRATION' then '车辆车祸登记'
         when 'VEHICLE_WET_DAMAGE_REG' then '车辆湿损登记'
         when 'VEHICLE_WET_DAMAGE_REGISTRATION' then '车辆湿损登记'
        end as 最后一条路由
    ,convert_tz(pr.routed_at ,'+00:00', '+08:00') 最新一条有效路由时间
from t t1
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,pr.route_action
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
left join
    (
        select
            plt.pno
        from ph_bi.parcel_claim_task plt
        join t t4  on t4.pno = plt.pno
        where
            plt.state not in (6,7,8)
            and plt.source = 11
        group by 1
    ) pct on pct.pno = t1.pno
group by t1.pno;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
        ,pi.returned
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,t1.returned
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
    ,case
        when t1.state = 6 and di.pno is not null then di.sh_do
        when t1.state = 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is not null then plt.should_do
        when plt.pno is null and pct.pno is not null then 'qaqc-TeamB'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then pr.store_name
        else de.last_store_name
    end 待处理节点
    ,case
        when t1.state = 6 and di.pno is not null then 'KAM/揽件网点未协商'
        when t1.state = 6 and di.pno is null then '闪速系统沟通处理中'
        when t1.state != 6 and plt.pno is not null then '闪速系统沟通处理中'
        when plt.pno is null and pct.pno is not null then '闪速超时效理赔未完成'
        when de.last_store_id = t1.ticket_pickup_store_id then '揽件未发出'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then 'QAQC无须追责后长期无有效路由'
        else null
    end 卡点原因
    ,de.last_store_name 当前节点
    ,datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) 最后有效路由距今天数
#     ,de.last_cn_route_action 最新一条有效路由
    ,case pr.route_action # 路由动作
         when 'ACCEPT_PARCEL' then '接件扫描'
         when 'ARRIVAL_GOODS_VAN_CHECK_SCAN' then '车货关联到港'
         when 'ARRIVAL_WAREHOUSE_SCAN' then '到件入仓扫描'
         when 'CANCEL_ARRIVAL_WAREHOUSE_SCAN' then '取消到件入仓扫描'
         when 'CANCEL_PARCEL' then '撤销包裹'
         when 'CANCEL_SHIPMENT_WAREHOUSE' then '取消发件出仓'
         when 'CHANGE_PARCEL_CANCEL' then '修改包裹为撤销'
         when 'CHANGE_PARCEL_CLOSE' then '修改包裹为异常关闭'
         when 'CHANGE_PARCEL_IN_TRANSIT' then '修改包裹为运输中'
         when 'CHANGE_PARCEL_INFO' then '修改包裹信息'
         when 'CHANGE_PARCEL_SIGNED' then '修改包裹为签收'
         when 'CLAIMS_CLOSE' then '理赔关闭'
         when 'CLAIMS_COMPLETE' then '理赔完成'
         when 'CLAIMS_CONTACT' then '已联系客户'
         when 'CLAIMS_TRANSFER_CS' then '转交总部cs处理'
         when 'CLOSE_ORDER' then '关闭订单'
         when 'CONTINUE_TRANSPORT' then '疑难件继续配送'
         when 'CREATE_WORK_ORDER' then '创建工单'
         when 'CUSTOMER_CHANGE_PARCEL_INFO' then '客户修改包裹信息'
         when 'CUSTOMER_OPERATING_RETURN' then '客户操作退回寄件人'
         when 'DELIVERY_CONFIRM' then '确认妥投'
         when 'DELIVERY_MARKER' then '派件标记'
         when 'DELIVERY_PICKUP_STORE_SCAN' then '自提取件扫描'
         when 'DELIVERY_TICKET_CREATION_SCAN' then '交接扫描'
         when 'DELIVERY_TRANSFER' then '派件转单'
         when 'DEPARTURE_GOODS_VAN_CK_SCAN' then '车货关联出港'
         when 'DETAIN_WAREHOUSE' then '货件留仓'
         when 'DIFFICULTY_FINISH_INDEMNITY' then '疑难件支付赔偿'
         when 'DIFFICULTY_HANDOVER' then '疑难件交接'
         when 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE' then '疑难件交接货件留仓'
         when 'DIFFICULTY_RE_TRANSIT' then '疑难件退回区域总部/重启运送'
         when 'DIFFICULTY_RETURN' then '疑难件退回寄件人'
         when 'DIFFICULTY_SEAL' then '集包异常'
         when 'DISCARD_RETURN_BKK' then '丢弃包裹的，换单后寄回BKK'
         when 'DISTRIBUTION_INVENTORY' then '分拨盘库'
         when 'DWS_WEIGHT_IMAGE' then 'DWS复秤照片'
         when 'EXCHANGE_PARCEL' then '换货'
         when 'FAKE_CANCEL_HANDLE' then '虚假撤销判责'
         when 'FLASH_HOME_SCAN' then 'FH交接扫描'
         when 'FORCE_TAKE_PHOTO' then '强制拍照路由'
         when 'HAVE_HAIR_SCAN_NO_TO' then '有发无到'
         when 'HURRY_PARCEL' then '催单'
         when 'INCOMING_CALL' then '来电接听'
         when 'INTERRUPT_PARCEL_AND_RETURN' then '中断运输并退回'
         when 'INVENTORY' then '盘库'
         when 'LOSE_PARCEL_TEAM_OPERATION' then '丢失件团队处理'
         when 'MANUAL_REMARK' then '添加备注'
         when 'MISS_PICKUP_HANDLE' then '漏包裹揽收判责'
         when 'MISSING_PARCEL_SCAN' then '丢失件包裹操作'
         when 'NOTICE_LOST_PARTS_TEAM' then '已通知丢失件团队'
         when 'PARCEL_HEADLESS_CLAIMED' then '无头件包裹已认领'
         when 'PARCEL_HEADLESS_PRINTED' then '无头件包裹已打单'
         when 'PENDING_RETURN' then '待退件'
         when 'PHONE' then '电话联系'
         when 'PICK_UP_STORE' then '待自提取件'
         when 'PICKUP_RETURN_RECEIPT' then '签回单揽收'
         when 'PRINTING' then '打印面单'
         when 'QAQC_OPERATION' then 'QAQC判责'
         when 'RECEIVE_WAREHOUSE_SCAN' then '收件入仓'
         when 'RECEIVED' then '已揽收,初始化动作，实际情况并没有作用'
         when 'REFUND_CONFIRM' then '退件妥投'
         when 'REPAIRED' then '上报问题修复路由'
         when 'REPLACE_PNO' then '换单'
         when 'REPLY_WORK_ORDER' then '回复工单'
         when 'REVISION_TIME' then '改约时间'
         when 'SEAL' then '集包'
         when 'SEAL_NUMBER_CHANGE' then '集包件数变化'
         when 'SHIPMENT_WAREHOUSE_SCAN' then '发件出仓扫描'
         when 'SORTER_WEIGHT_IMAGE' then '分拣机复秤照片'
         when 'SORTING_SCAN' then '分拣扫描'
         when 'STAFF_INFO_UPDATE_WEIGHT' then '快递员修改重量'
         when 'STORE_KEEPER_UPDATE_WEIGHT' then '仓管员复秤'
         when 'STORE_SORTER_UPDATE_WEIGHT' then '分拣机复秤'
         when 'SYSTEM_AUTO_RETURN' then '系统自动退件'
         when 'TAKE_PHOTO' then '异常打单拍照'
         when 'THIRD_EXPRESS_ROUTE' then '第三方公司路由'
         when 'THIRD_PARTY_REASON_DETAIN' then '第三方原因滞留'
         when 'TICKET_WEIGHT_IMAGE' then '揽收称重照片'
         when 'TRANSFER_LOST_PARTS_TEAM' then '已转交丢失件团队'
         when 'TRANSFER_QAQC' then '转交QAQC处理'
         when 'UNSEAL' then '拆包'
         when 'UNSEAL_NO_PARCEL' then '上报包裹不在集包里'
         when 'UNSEAL_NOT_SCANNED' then '集包已拆包，本包裹未被扫描'
         when 'VEHICLE_ACCIDENT_REG' then '车辆车祸登记'
         when 'VEHICLE_ACCIDENT_REGISTRATION' then '车辆车祸登记'
         when 'VEHICLE_WET_DAMAGE_REG' then '车辆湿损登记'
         when 'VEHICLE_WET_DAMAGE_REGISTRATION' then '车辆湿损登记'
        end as 最后一条路由
    ,convert_tz(pr.routed_at ,'+00:00', '+08:00') 最新一条有效路由时间
from t t1
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,pr.route_action
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
left join
    (
        select
            plt.pno
        from ph_bi.parcel_claim_task plt
        join t t4  on t4.pno = plt.pno
        where
            plt.state not in (6,7,8)
            and plt.source = 11
        group by 1
    ) pct on pct.pno = t1.pno
group by t1.pno;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
        ,pi.returned
        ,pi.dst_store_id
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,t1.returned
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
    ,case
        when t1.state = 6 and di.pno is not null then di.sh_do
        when t1.state = 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is not null then plt.should_do
        when plt.pno is null and pct.pno is not null then 'qaqc-TeamB'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then pr.store_name
        else de.last_store_name
    end 待处理节点
    ,case
        when t1.state = 6 and di.pno is not null then 'KAM/揽件网点未协商'
        when t1.state = 6 and di.pno is null then '闪速系统沟通处理中'
        when t1.state != 6 and plt.pno is not null then '闪速系统沟通处理中'
        when plt.pno is null and pct.pno is not null then '闪速超时效理赔未完成'
        when de.last_store_id = t1.ticket_pickup_store_id then '揽件未发出'
        when t1.dst_store_id = 'PH19040F05' then '弃件未到拍卖仓'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then 'QAQC无须追责后长期无有效路由'
        else null
    end 卡点原因
    ,de.last_store_name 当前节点
    ,datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) 最后有效路由距今天数
#     ,de.last_cn_route_action 最新一条有效路由
    ,case pr.route_action # 路由动作
         when 'ACCEPT_PARCEL' then '接件扫描'
         when 'ARRIVAL_GOODS_VAN_CHECK_SCAN' then '车货关联到港'
         when 'ARRIVAL_WAREHOUSE_SCAN' then '到件入仓扫描'
         when 'CANCEL_ARRIVAL_WAREHOUSE_SCAN' then '取消到件入仓扫描'
         when 'CANCEL_PARCEL' then '撤销包裹'
         when 'CANCEL_SHIPMENT_WAREHOUSE' then '取消发件出仓'
         when 'CHANGE_PARCEL_CANCEL' then '修改包裹为撤销'
         when 'CHANGE_PARCEL_CLOSE' then '修改包裹为异常关闭'
         when 'CHANGE_PARCEL_IN_TRANSIT' then '修改包裹为运输中'
         when 'CHANGE_PARCEL_INFO' then '修改包裹信息'
         when 'CHANGE_PARCEL_SIGNED' then '修改包裹为签收'
         when 'CLAIMS_CLOSE' then '理赔关闭'
         when 'CLAIMS_COMPLETE' then '理赔完成'
         when 'CLAIMS_CONTACT' then '已联系客户'
         when 'CLAIMS_TRANSFER_CS' then '转交总部cs处理'
         when 'CLOSE_ORDER' then '关闭订单'
         when 'CONTINUE_TRANSPORT' then '疑难件继续配送'
         when 'CREATE_WORK_ORDER' then '创建工单'
         when 'CUSTOMER_CHANGE_PARCEL_INFO' then '客户修改包裹信息'
         when 'CUSTOMER_OPERATING_RETURN' then '客户操作退回寄件人'
         when 'DELIVERY_CONFIRM' then '确认妥投'
         when 'DELIVERY_MARKER' then '派件标记'
         when 'DELIVERY_PICKUP_STORE_SCAN' then '自提取件扫描'
         when 'DELIVERY_TICKET_CREATION_SCAN' then '交接扫描'
         when 'DELIVERY_TRANSFER' then '派件转单'
         when 'DEPARTURE_GOODS_VAN_CK_SCAN' then '车货关联出港'
         when 'DETAIN_WAREHOUSE' then '货件留仓'
         when 'DIFFICULTY_FINISH_INDEMNITY' then '疑难件支付赔偿'
         when 'DIFFICULTY_HANDOVER' then '疑难件交接'
         when 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE' then '疑难件交接货件留仓'
         when 'DIFFICULTY_RE_TRANSIT' then '疑难件退回区域总部/重启运送'
         when 'DIFFICULTY_RETURN' then '疑难件退回寄件人'
         when 'DIFFICULTY_SEAL' then '集包异常'
         when 'DISCARD_RETURN_BKK' then '丢弃包裹的，换单后寄回BKK'
         when 'DISTRIBUTION_INVENTORY' then '分拨盘库'
         when 'DWS_WEIGHT_IMAGE' then 'DWS复秤照片'
         when 'EXCHANGE_PARCEL' then '换货'
         when 'FAKE_CANCEL_HANDLE' then '虚假撤销判责'
         when 'FLASH_HOME_SCAN' then 'FH交接扫描'
         when 'FORCE_TAKE_PHOTO' then '强制拍照路由'
         when 'HAVE_HAIR_SCAN_NO_TO' then '有发无到'
         when 'HURRY_PARCEL' then '催单'
         when 'INCOMING_CALL' then '来电接听'
         when 'INTERRUPT_PARCEL_AND_RETURN' then '中断运输并退回'
         when 'INVENTORY' then '盘库'
         when 'LOSE_PARCEL_TEAM_OPERATION' then '丢失件团队处理'
         when 'MANUAL_REMARK' then '添加备注'
         when 'MISS_PICKUP_HANDLE' then '漏包裹揽收判责'
         when 'MISSING_PARCEL_SCAN' then '丢失件包裹操作'
         when 'NOTICE_LOST_PARTS_TEAM' then '已通知丢失件团队'
         when 'PARCEL_HEADLESS_CLAIMED' then '无头件包裹已认领'
         when 'PARCEL_HEADLESS_PRINTED' then '无头件包裹已打单'
         when 'PENDING_RETURN' then '待退件'
         when 'PHONE' then '电话联系'
         when 'PICK_UP_STORE' then '待自提取件'
         when 'PICKUP_RETURN_RECEIPT' then '签回单揽收'
         when 'PRINTING' then '打印面单'
         when 'QAQC_OPERATION' then 'QAQC判责'
         when 'RECEIVE_WAREHOUSE_SCAN' then '收件入仓'
         when 'RECEIVED' then '已揽收,初始化动作，实际情况并没有作用'
         when 'REFUND_CONFIRM' then '退件妥投'
         when 'REPAIRED' then '上报问题修复路由'
         when 'REPLACE_PNO' then '换单'
         when 'REPLY_WORK_ORDER' then '回复工单'
         when 'REVISION_TIME' then '改约时间'
         when 'SEAL' then '集包'
         when 'SEAL_NUMBER_CHANGE' then '集包件数变化'
         when 'SHIPMENT_WAREHOUSE_SCAN' then '发件出仓扫描'
         when 'SORTER_WEIGHT_IMAGE' then '分拣机复秤照片'
         when 'SORTING_SCAN' then '分拣扫描'
         when 'STAFF_INFO_UPDATE_WEIGHT' then '快递员修改重量'
         when 'STORE_KEEPER_UPDATE_WEIGHT' then '仓管员复秤'
         when 'STORE_SORTER_UPDATE_WEIGHT' then '分拣机复秤'
         when 'SYSTEM_AUTO_RETURN' then '系统自动退件'
         when 'TAKE_PHOTO' then '异常打单拍照'
         when 'THIRD_EXPRESS_ROUTE' then '第三方公司路由'
         when 'THIRD_PARTY_REASON_DETAIN' then '第三方原因滞留'
         when 'TICKET_WEIGHT_IMAGE' then '揽收称重照片'
         when 'TRANSFER_LOST_PARTS_TEAM' then '已转交丢失件团队'
         when 'TRANSFER_QAQC' then '转交QAQC处理'
         when 'UNSEAL' then '拆包'
         when 'UNSEAL_NO_PARCEL' then '上报包裹不在集包里'
         when 'UNSEAL_NOT_SCANNED' then '集包已拆包，本包裹未被扫描'
         when 'VEHICLE_ACCIDENT_REG' then '车辆车祸登记'
         when 'VEHICLE_ACCIDENT_REGISTRATION' then '车辆车祸登记'
         when 'VEHICLE_WET_DAMAGE_REG' then '车辆湿损登记'
         when 'VEHICLE_WET_DAMAGE_REGISTRATION' then '车辆湿损登记'
        end as 最后一条路由
    ,convert_tz(pr.routed_at ,'+00:00', '+08:00') 最新一条有效路由时间
from t t1
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,pr.route_action
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
left join
    (
        select
            plt.pno
        from ph_bi.parcel_claim_task plt
        join t t4  on t4.pno = plt.pno
        where
            plt.state not in (6,7,8)
            and plt.source = 11
        group by 1
    ) pct on pct.pno = t1.pno
group by t1.pno;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
        ,pi.returned
        ,pi.dst_store_id
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,t1.returned
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
    ,case
        when t1.state = 6 and di.pno is not null then di.sh_do
        when t1.state = 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is not null then plt.should_do
        when plt.pno is null and pct.pno is not null then 'qaqc-TeamB'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then pr.store_name
        else de.last_store_name
    end 待处理节点
    ,case
        when t1.state = 6 and di.pno is not null then 'KAM/揽件网点未协商'
        when t1.state = 6 and di.pno is null  then '闪速系统沟通处理中'
        when t1.state != 6 and plt.pno is not null and plt2.pno is not null then '闪速系统沟通处理中'
        when plt.pno is null and pct.pno is not null then '闪速超时效理赔未完成'
        when de.last_store_id = t1.ticket_pickup_store_id and plt2.pno is not null then '揽件未发出'
        when t1.dst_store_id = 'PH19040F05' and plt2.pno is not null then '弃件未到拍卖仓'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then 'QAQC无须追责后长期无有效路由'
        else null
    end 卡点原因
    ,de.last_store_name 当前节点
    ,datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) 最后有效路由距今天数
#     ,de.last_cn_route_action 最新一条有效路由
    ,case pr.route_action # 路由动作
         when 'ACCEPT_PARCEL' then '接件扫描'
         when 'ARRIVAL_GOODS_VAN_CHECK_SCAN' then '车货关联到港'
         when 'ARRIVAL_WAREHOUSE_SCAN' then '到件入仓扫描'
         when 'CANCEL_ARRIVAL_WAREHOUSE_SCAN' then '取消到件入仓扫描'
         when 'CANCEL_PARCEL' then '撤销包裹'
         when 'CANCEL_SHIPMENT_WAREHOUSE' then '取消发件出仓'
         when 'CHANGE_PARCEL_CANCEL' then '修改包裹为撤销'
         when 'CHANGE_PARCEL_CLOSE' then '修改包裹为异常关闭'
         when 'CHANGE_PARCEL_IN_TRANSIT' then '修改包裹为运输中'
         when 'CHANGE_PARCEL_INFO' then '修改包裹信息'
         when 'CHANGE_PARCEL_SIGNED' then '修改包裹为签收'
         when 'CLAIMS_CLOSE' then '理赔关闭'
         when 'CLAIMS_COMPLETE' then '理赔完成'
         when 'CLAIMS_CONTACT' then '已联系客户'
         when 'CLAIMS_TRANSFER_CS' then '转交总部cs处理'
         when 'CLOSE_ORDER' then '关闭订单'
         when 'CONTINUE_TRANSPORT' then '疑难件继续配送'
         when 'CREATE_WORK_ORDER' then '创建工单'
         when 'CUSTOMER_CHANGE_PARCEL_INFO' then '客户修改包裹信息'
         when 'CUSTOMER_OPERATING_RETURN' then '客户操作退回寄件人'
         when 'DELIVERY_CONFIRM' then '确认妥投'
         when 'DELIVERY_MARKER' then '派件标记'
         when 'DELIVERY_PICKUP_STORE_SCAN' then '自提取件扫描'
         when 'DELIVERY_TICKET_CREATION_SCAN' then '交接扫描'
         when 'DELIVERY_TRANSFER' then '派件转单'
         when 'DEPARTURE_GOODS_VAN_CK_SCAN' then '车货关联出港'
         when 'DETAIN_WAREHOUSE' then '货件留仓'
         when 'DIFFICULTY_FINISH_INDEMNITY' then '疑难件支付赔偿'
         when 'DIFFICULTY_HANDOVER' then '疑难件交接'
         when 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE' then '疑难件交接货件留仓'
         when 'DIFFICULTY_RE_TRANSIT' then '疑难件退回区域总部/重启运送'
         when 'DIFFICULTY_RETURN' then '疑难件退回寄件人'
         when 'DIFFICULTY_SEAL' then '集包异常'
         when 'DISCARD_RETURN_BKK' then '丢弃包裹的，换单后寄回BKK'
         when 'DISTRIBUTION_INVENTORY' then '分拨盘库'
         when 'DWS_WEIGHT_IMAGE' then 'DWS复秤照片'
         when 'EXCHANGE_PARCEL' then '换货'
         when 'FAKE_CANCEL_HANDLE' then '虚假撤销判责'
         when 'FLASH_HOME_SCAN' then 'FH交接扫描'
         when 'FORCE_TAKE_PHOTO' then '强制拍照路由'
         when 'HAVE_HAIR_SCAN_NO_TO' then '有发无到'
         when 'HURRY_PARCEL' then '催单'
         when 'INCOMING_CALL' then '来电接听'
         when 'INTERRUPT_PARCEL_AND_RETURN' then '中断运输并退回'
         when 'INVENTORY' then '盘库'
         when 'LOSE_PARCEL_TEAM_OPERATION' then '丢失件团队处理'
         when 'MANUAL_REMARK' then '添加备注'
         when 'MISS_PICKUP_HANDLE' then '漏包裹揽收判责'
         when 'MISSING_PARCEL_SCAN' then '丢失件包裹操作'
         when 'NOTICE_LOST_PARTS_TEAM' then '已通知丢失件团队'
         when 'PARCEL_HEADLESS_CLAIMED' then '无头件包裹已认领'
         when 'PARCEL_HEADLESS_PRINTED' then '无头件包裹已打单'
         when 'PENDING_RETURN' then '待退件'
         when 'PHONE' then '电话联系'
         when 'PICK_UP_STORE' then '待自提取件'
         when 'PICKUP_RETURN_RECEIPT' then '签回单揽收'
         when 'PRINTING' then '打印面单'
         when 'QAQC_OPERATION' then 'QAQC判责'
         when 'RECEIVE_WAREHOUSE_SCAN' then '收件入仓'
         when 'RECEIVED' then '已揽收,初始化动作，实际情况并没有作用'
         when 'REFUND_CONFIRM' then '退件妥投'
         when 'REPAIRED' then '上报问题修复路由'
         when 'REPLACE_PNO' then '换单'
         when 'REPLY_WORK_ORDER' then '回复工单'
         when 'REVISION_TIME' then '改约时间'
         when 'SEAL' then '集包'
         when 'SEAL_NUMBER_CHANGE' then '集包件数变化'
         when 'SHIPMENT_WAREHOUSE_SCAN' then '发件出仓扫描'
         when 'SORTER_WEIGHT_IMAGE' then '分拣机复秤照片'
         when 'SORTING_SCAN' then '分拣扫描'
         when 'STAFF_INFO_UPDATE_WEIGHT' then '快递员修改重量'
         when 'STORE_KEEPER_UPDATE_WEIGHT' then '仓管员复秤'
         when 'STORE_SORTER_UPDATE_WEIGHT' then '分拣机复秤'
         when 'SYSTEM_AUTO_RETURN' then '系统自动退件'
         when 'TAKE_PHOTO' then '异常打单拍照'
         when 'THIRD_EXPRESS_ROUTE' then '第三方公司路由'
         when 'THIRD_PARTY_REASON_DETAIN' then '第三方原因滞留'
         when 'TICKET_WEIGHT_IMAGE' then '揽收称重照片'
         when 'TRANSFER_LOST_PARTS_TEAM' then '已转交丢失件团队'
         when 'TRANSFER_QAQC' then '转交QAQC处理'
         when 'UNSEAL' then '拆包'
         when 'UNSEAL_NO_PARCEL' then '上报包裹不在集包里'
         when 'UNSEAL_NOT_SCANNED' then '集包已拆包，本包裹未被扫描'
         when 'VEHICLE_ACCIDENT_REG' then '车辆车祸登记'
         when 'VEHICLE_ACCIDENT_REGISTRATION' then '车辆车祸登记'
         when 'VEHICLE_WET_DAMAGE_REG' then '车辆湿损登记'
         when 'VEHICLE_WET_DAMAGE_REGISTRATION' then '车辆湿损登记'
        end as 最后一条路由
    ,convert_tz(pr.routed_at ,'+00:00', '+08:00') 最新一条有效路由时间
from t t1
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,pr.route_action
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
left join
    (
        select
            plt.pno
        from ph_bi.parcel_claim_task plt
        join t t4  on t4.pno = plt.pno
        where
            plt.state not in (6,7,8)
            and plt.source = 11
        group by 1
    ) pct on pct.pno = t1.pno
group by t1.pno;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
        ,pi.returned
        ,pi.dst_store_id
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,t1.returned
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
    ,case
        when t1.state = 6 and di.pno is not null then di.sh_do
        when t1.state = 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt2.pno is not null then plt.should_do
        when plt.pno is null and pct.pno is not null then 'qaqc-TeamB'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then pr.store_name
        else de.last_store_name
    end 待处理节点
    ,case
        when t1.state = 6 and di.pno is not null then 'KAM/揽件网点未协商'
        when t1.state = 6 and di.pno is null  then '闪速系统沟通处理中'
        when t1.state != 6 and plt.pno is not null and plt2.pno is not null then '闪速系统沟通处理中'
        when plt.pno is null and pct.pno is not null then '闪速超时效理赔未完成'
        when de.last_store_id = t1.ticket_pickup_store_id and plt2.pno is null then '揽件未发出'
        when t1.dst_store_id = 'PH19040F05' and plt2.pno is not null then '弃件未到拍卖仓'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then 'QAQC无须追责后长期无有效路由'
        else null
    end 卡点原因
    ,de.last_store_name 当前节点
    ,datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) 最后有效路由距今天数
#     ,de.last_cn_route_action 最新一条有效路由
    ,case pr.route_action # 路由动作
         when 'ACCEPT_PARCEL' then '接件扫描'
         when 'ARRIVAL_GOODS_VAN_CHECK_SCAN' then '车货关联到港'
         when 'ARRIVAL_WAREHOUSE_SCAN' then '到件入仓扫描'
         when 'CANCEL_ARRIVAL_WAREHOUSE_SCAN' then '取消到件入仓扫描'
         when 'CANCEL_PARCEL' then '撤销包裹'
         when 'CANCEL_SHIPMENT_WAREHOUSE' then '取消发件出仓'
         when 'CHANGE_PARCEL_CANCEL' then '修改包裹为撤销'
         when 'CHANGE_PARCEL_CLOSE' then '修改包裹为异常关闭'
         when 'CHANGE_PARCEL_IN_TRANSIT' then '修改包裹为运输中'
         when 'CHANGE_PARCEL_INFO' then '修改包裹信息'
         when 'CHANGE_PARCEL_SIGNED' then '修改包裹为签收'
         when 'CLAIMS_CLOSE' then '理赔关闭'
         when 'CLAIMS_COMPLETE' then '理赔完成'
         when 'CLAIMS_CONTACT' then '已联系客户'
         when 'CLAIMS_TRANSFER_CS' then '转交总部cs处理'
         when 'CLOSE_ORDER' then '关闭订单'
         when 'CONTINUE_TRANSPORT' then '疑难件继续配送'
         when 'CREATE_WORK_ORDER' then '创建工单'
         when 'CUSTOMER_CHANGE_PARCEL_INFO' then '客户修改包裹信息'
         when 'CUSTOMER_OPERATING_RETURN' then '客户操作退回寄件人'
         when 'DELIVERY_CONFIRM' then '确认妥投'
         when 'DELIVERY_MARKER' then '派件标记'
         when 'DELIVERY_PICKUP_STORE_SCAN' then '自提取件扫描'
         when 'DELIVERY_TICKET_CREATION_SCAN' then '交接扫描'
         when 'DELIVERY_TRANSFER' then '派件转单'
         when 'DEPARTURE_GOODS_VAN_CK_SCAN' then '车货关联出港'
         when 'DETAIN_WAREHOUSE' then '货件留仓'
         when 'DIFFICULTY_FINISH_INDEMNITY' then '疑难件支付赔偿'
         when 'DIFFICULTY_HANDOVER' then '疑难件交接'
         when 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE' then '疑难件交接货件留仓'
         when 'DIFFICULTY_RE_TRANSIT' then '疑难件退回区域总部/重启运送'
         when 'DIFFICULTY_RETURN' then '疑难件退回寄件人'
         when 'DIFFICULTY_SEAL' then '集包异常'
         when 'DISCARD_RETURN_BKK' then '丢弃包裹的，换单后寄回BKK'
         when 'DISTRIBUTION_INVENTORY' then '分拨盘库'
         when 'DWS_WEIGHT_IMAGE' then 'DWS复秤照片'
         when 'EXCHANGE_PARCEL' then '换货'
         when 'FAKE_CANCEL_HANDLE' then '虚假撤销判责'
         when 'FLASH_HOME_SCAN' then 'FH交接扫描'
         when 'FORCE_TAKE_PHOTO' then '强制拍照路由'
         when 'HAVE_HAIR_SCAN_NO_TO' then '有发无到'
         when 'HURRY_PARCEL' then '催单'
         when 'INCOMING_CALL' then '来电接听'
         when 'INTERRUPT_PARCEL_AND_RETURN' then '中断运输并退回'
         when 'INVENTORY' then '盘库'
         when 'LOSE_PARCEL_TEAM_OPERATION' then '丢失件团队处理'
         when 'MANUAL_REMARK' then '添加备注'
         when 'MISS_PICKUP_HANDLE' then '漏包裹揽收判责'
         when 'MISSING_PARCEL_SCAN' then '丢失件包裹操作'
         when 'NOTICE_LOST_PARTS_TEAM' then '已通知丢失件团队'
         when 'PARCEL_HEADLESS_CLAIMED' then '无头件包裹已认领'
         when 'PARCEL_HEADLESS_PRINTED' then '无头件包裹已打单'
         when 'PENDING_RETURN' then '待退件'
         when 'PHONE' then '电话联系'
         when 'PICK_UP_STORE' then '待自提取件'
         when 'PICKUP_RETURN_RECEIPT' then '签回单揽收'
         when 'PRINTING' then '打印面单'
         when 'QAQC_OPERATION' then 'QAQC判责'
         when 'RECEIVE_WAREHOUSE_SCAN' then '收件入仓'
         when 'RECEIVED' then '已揽收,初始化动作，实际情况并没有作用'
         when 'REFUND_CONFIRM' then '退件妥投'
         when 'REPAIRED' then '上报问题修复路由'
         when 'REPLACE_PNO' then '换单'
         when 'REPLY_WORK_ORDER' then '回复工单'
         when 'REVISION_TIME' then '改约时间'
         when 'SEAL' then '集包'
         when 'SEAL_NUMBER_CHANGE' then '集包件数变化'
         when 'SHIPMENT_WAREHOUSE_SCAN' then '发件出仓扫描'
         when 'SORTER_WEIGHT_IMAGE' then '分拣机复秤照片'
         when 'SORTING_SCAN' then '分拣扫描'
         when 'STAFF_INFO_UPDATE_WEIGHT' then '快递员修改重量'
         when 'STORE_KEEPER_UPDATE_WEIGHT' then '仓管员复秤'
         when 'STORE_SORTER_UPDATE_WEIGHT' then '分拣机复秤'
         when 'SYSTEM_AUTO_RETURN' then '系统自动退件'
         when 'TAKE_PHOTO' then '异常打单拍照'
         when 'THIRD_EXPRESS_ROUTE' then '第三方公司路由'
         when 'THIRD_PARTY_REASON_DETAIN' then '第三方原因滞留'
         when 'TICKET_WEIGHT_IMAGE' then '揽收称重照片'
         when 'TRANSFER_LOST_PARTS_TEAM' then '已转交丢失件团队'
         when 'TRANSFER_QAQC' then '转交QAQC处理'
         when 'UNSEAL' then '拆包'
         when 'UNSEAL_NO_PARCEL' then '上报包裹不在集包里'
         when 'UNSEAL_NOT_SCANNED' then '集包已拆包，本包裹未被扫描'
         when 'VEHICLE_ACCIDENT_REG' then '车辆车祸登记'
         when 'VEHICLE_ACCIDENT_REGISTRATION' then '车辆车祸登记'
         when 'VEHICLE_WET_DAMAGE_REG' then '车辆湿损登记'
         when 'VEHICLE_WET_DAMAGE_REGISTRATION' then '车辆湿损登记'
        end as 最后一条路由
    ,convert_tz(pr.routed_at ,'+00:00', '+08:00') 最新一条有效路由时间
from t t1
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,pr.route_action
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
left join
    (
        select
            plt.pno
        from ph_bi.parcel_claim_task plt
        join t t4  on t4.pno = plt.pno
        where
            plt.state not in (6,7,8)
            and plt.source = 11
        group by 1
    ) pct on pct.pno = t1.pno
group by t1.pno;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
        ,pi.returned
        ,pi.dst_store_id
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,t1.returned
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
    ,case
        when t1.state = 6 and di.pno is not null then di.sh_do
        when t1.state = 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt2.pno is not null then plt.should_do
        when plt.pno is null and pct.pno is not null then 'qaqc-TeamB'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then pr.store_name
        else de.last_store_name
    end 待处理节点
    ,case
        when t1.state = 6 and di.pno is not null then 'KAM/揽件网点未协商'
        when t1.state = 6 and di.pno is null  then '闪速系统沟通处理中'
        when t1.state != 6 and plt.pno is not null and plt2.pno is not null then '闪速系统沟通处理中'
        when plt.pno is null and pct.pno is not null then '闪速超时效理赔未完成'
        when de.last_store_id = t1.ticket_pickup_store_id and plt2.pno is null then '揽件未发出'
        when t1.dst_store_id = 'PH19040F05' and plt2.pno is null then '弃件未到拍卖仓'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then 'QAQC无须追责后长期无有效路由'
        else null
    end 卡点原因
    ,de.last_store_name 当前节点
    ,datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) 最后有效路由距今天数
#     ,de.last_cn_route_action 最新一条有效路由
    ,case pr.route_action # 路由动作
         when 'ACCEPT_PARCEL' then '接件扫描'
         when 'ARRIVAL_GOODS_VAN_CHECK_SCAN' then '车货关联到港'
         when 'ARRIVAL_WAREHOUSE_SCAN' then '到件入仓扫描'
         when 'CANCEL_ARRIVAL_WAREHOUSE_SCAN' then '取消到件入仓扫描'
         when 'CANCEL_PARCEL' then '撤销包裹'
         when 'CANCEL_SHIPMENT_WAREHOUSE' then '取消发件出仓'
         when 'CHANGE_PARCEL_CANCEL' then '修改包裹为撤销'
         when 'CHANGE_PARCEL_CLOSE' then '修改包裹为异常关闭'
         when 'CHANGE_PARCEL_IN_TRANSIT' then '修改包裹为运输中'
         when 'CHANGE_PARCEL_INFO' then '修改包裹信息'
         when 'CHANGE_PARCEL_SIGNED' then '修改包裹为签收'
         when 'CLAIMS_CLOSE' then '理赔关闭'
         when 'CLAIMS_COMPLETE' then '理赔完成'
         when 'CLAIMS_CONTACT' then '已联系客户'
         when 'CLAIMS_TRANSFER_CS' then '转交总部cs处理'
         when 'CLOSE_ORDER' then '关闭订单'
         when 'CONTINUE_TRANSPORT' then '疑难件继续配送'
         when 'CREATE_WORK_ORDER' then '创建工单'
         when 'CUSTOMER_CHANGE_PARCEL_INFO' then '客户修改包裹信息'
         when 'CUSTOMER_OPERATING_RETURN' then '客户操作退回寄件人'
         when 'DELIVERY_CONFIRM' then '确认妥投'
         when 'DELIVERY_MARKER' then '派件标记'
         when 'DELIVERY_PICKUP_STORE_SCAN' then '自提取件扫描'
         when 'DELIVERY_TICKET_CREATION_SCAN' then '交接扫描'
         when 'DELIVERY_TRANSFER' then '派件转单'
         when 'DEPARTURE_GOODS_VAN_CK_SCAN' then '车货关联出港'
         when 'DETAIN_WAREHOUSE' then '货件留仓'
         when 'DIFFICULTY_FINISH_INDEMNITY' then '疑难件支付赔偿'
         when 'DIFFICULTY_HANDOVER' then '疑难件交接'
         when 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE' then '疑难件交接货件留仓'
         when 'DIFFICULTY_RE_TRANSIT' then '疑难件退回区域总部/重启运送'
         when 'DIFFICULTY_RETURN' then '疑难件退回寄件人'
         when 'DIFFICULTY_SEAL' then '集包异常'
         when 'DISCARD_RETURN_BKK' then '丢弃包裹的，换单后寄回BKK'
         when 'DISTRIBUTION_INVENTORY' then '分拨盘库'
         when 'DWS_WEIGHT_IMAGE' then 'DWS复秤照片'
         when 'EXCHANGE_PARCEL' then '换货'
         when 'FAKE_CANCEL_HANDLE' then '虚假撤销判责'
         when 'FLASH_HOME_SCAN' then 'FH交接扫描'
         when 'FORCE_TAKE_PHOTO' then '强制拍照路由'
         when 'HAVE_HAIR_SCAN_NO_TO' then '有发无到'
         when 'HURRY_PARCEL' then '催单'
         when 'INCOMING_CALL' then '来电接听'
         when 'INTERRUPT_PARCEL_AND_RETURN' then '中断运输并退回'
         when 'INVENTORY' then '盘库'
         when 'LOSE_PARCEL_TEAM_OPERATION' then '丢失件团队处理'
         when 'MANUAL_REMARK' then '添加备注'
         when 'MISS_PICKUP_HANDLE' then '漏包裹揽收判责'
         when 'MISSING_PARCEL_SCAN' then '丢失件包裹操作'
         when 'NOTICE_LOST_PARTS_TEAM' then '已通知丢失件团队'
         when 'PARCEL_HEADLESS_CLAIMED' then '无头件包裹已认领'
         when 'PARCEL_HEADLESS_PRINTED' then '无头件包裹已打单'
         when 'PENDING_RETURN' then '待退件'
         when 'PHONE' then '电话联系'
         when 'PICK_UP_STORE' then '待自提取件'
         when 'PICKUP_RETURN_RECEIPT' then '签回单揽收'
         when 'PRINTING' then '打印面单'
         when 'QAQC_OPERATION' then 'QAQC判责'
         when 'RECEIVE_WAREHOUSE_SCAN' then '收件入仓'
         when 'RECEIVED' then '已揽收,初始化动作，实际情况并没有作用'
         when 'REFUND_CONFIRM' then '退件妥投'
         when 'REPAIRED' then '上报问题修复路由'
         when 'REPLACE_PNO' then '换单'
         when 'REPLY_WORK_ORDER' then '回复工单'
         when 'REVISION_TIME' then '改约时间'
         when 'SEAL' then '集包'
         when 'SEAL_NUMBER_CHANGE' then '集包件数变化'
         when 'SHIPMENT_WAREHOUSE_SCAN' then '发件出仓扫描'
         when 'SORTER_WEIGHT_IMAGE' then '分拣机复秤照片'
         when 'SORTING_SCAN' then '分拣扫描'
         when 'STAFF_INFO_UPDATE_WEIGHT' then '快递员修改重量'
         when 'STORE_KEEPER_UPDATE_WEIGHT' then '仓管员复秤'
         when 'STORE_SORTER_UPDATE_WEIGHT' then '分拣机复秤'
         when 'SYSTEM_AUTO_RETURN' then '系统自动退件'
         when 'TAKE_PHOTO' then '异常打单拍照'
         when 'THIRD_EXPRESS_ROUTE' then '第三方公司路由'
         when 'THIRD_PARTY_REASON_DETAIN' then '第三方原因滞留'
         when 'TICKET_WEIGHT_IMAGE' then '揽收称重照片'
         when 'TRANSFER_LOST_PARTS_TEAM' then '已转交丢失件团队'
         when 'TRANSFER_QAQC' then '转交QAQC处理'
         when 'UNSEAL' then '拆包'
         when 'UNSEAL_NO_PARCEL' then '上报包裹不在集包里'
         when 'UNSEAL_NOT_SCANNED' then '集包已拆包，本包裹未被扫描'
         when 'VEHICLE_ACCIDENT_REG' then '车辆车祸登记'
         when 'VEHICLE_ACCIDENT_REGISTRATION' then '车辆车祸登记'
         when 'VEHICLE_WET_DAMAGE_REG' then '车辆湿损登记'
         when 'VEHICLE_WET_DAMAGE_REGISTRATION' then '车辆湿损登记'
        end as 最后一条路由
    ,convert_tz(pr.routed_at ,'+00:00', '+08:00') 最新一条有效路由时间
from t t1
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,pr.route_action
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
left join
    (
        select
            plt.pno
        from ph_bi.parcel_claim_task plt
        join t t4  on t4.pno = plt.pno
        where
            plt.state not in (6,7,8)
            and plt.source = 11
        group by 1
    ) pct on pct.pno = t1.pno
group by t1.pno;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
        ,pi.returned
        ,pi.dst_store_id
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,t1.returned
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
    ,case
        when t1.state = 6 and di.pno is not null then di.sh_do
        when t1.state = 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is null and pct.pno is not null then 'qaqc-TeamB'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then pr.store_name
        else de.last_store_name
    end 待处理节点
    ,case
        when t1.state = 6 and di.pno is not null then 'KAM/揽件网点未协商'
        when t1.state = 6 and di.pno is null  then '闪速系统沟通处理中'
        when t1.state != 6 and plt.pno is not null and plt2.pno is not null then '闪速系统沟通处理中'
        when plt.pno is null and pct.pno is not null then '闪速超时效理赔未完成'
        when de.last_store_id = t1.ticket_pickup_store_id and plt2.pno is null then '揽件未发出'
        when t1.dst_store_id = 'PH19040F05' and plt2.pno is null then '弃件未到拍卖仓'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then 'QAQC无须追责后长期无有效路由'
        else null
    end 卡点原因
    ,de.last_store_name 当前节点
    ,datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) 最后有效路由距今天数
#     ,de.last_cn_route_action 最新一条有效路由
    ,case pr.route_action # 路由动作
         when 'ACCEPT_PARCEL' then '接件扫描'
         when 'ARRIVAL_GOODS_VAN_CHECK_SCAN' then '车货关联到港'
         when 'ARRIVAL_WAREHOUSE_SCAN' then '到件入仓扫描'
         when 'CANCEL_ARRIVAL_WAREHOUSE_SCAN' then '取消到件入仓扫描'
         when 'CANCEL_PARCEL' then '撤销包裹'
         when 'CANCEL_SHIPMENT_WAREHOUSE' then '取消发件出仓'
         when 'CHANGE_PARCEL_CANCEL' then '修改包裹为撤销'
         when 'CHANGE_PARCEL_CLOSE' then '修改包裹为异常关闭'
         when 'CHANGE_PARCEL_IN_TRANSIT' then '修改包裹为运输中'
         when 'CHANGE_PARCEL_INFO' then '修改包裹信息'
         when 'CHANGE_PARCEL_SIGNED' then '修改包裹为签收'
         when 'CLAIMS_CLOSE' then '理赔关闭'
         when 'CLAIMS_COMPLETE' then '理赔完成'
         when 'CLAIMS_CONTACT' then '已联系客户'
         when 'CLAIMS_TRANSFER_CS' then '转交总部cs处理'
         when 'CLOSE_ORDER' then '关闭订单'
         when 'CONTINUE_TRANSPORT' then '疑难件继续配送'
         when 'CREATE_WORK_ORDER' then '创建工单'
         when 'CUSTOMER_CHANGE_PARCEL_INFO' then '客户修改包裹信息'
         when 'CUSTOMER_OPERATING_RETURN' then '客户操作退回寄件人'
         when 'DELIVERY_CONFIRM' then '确认妥投'
         when 'DELIVERY_MARKER' then '派件标记'
         when 'DELIVERY_PICKUP_STORE_SCAN' then '自提取件扫描'
         when 'DELIVERY_TICKET_CREATION_SCAN' then '交接扫描'
         when 'DELIVERY_TRANSFER' then '派件转单'
         when 'DEPARTURE_GOODS_VAN_CK_SCAN' then '车货关联出港'
         when 'DETAIN_WAREHOUSE' then '货件留仓'
         when 'DIFFICULTY_FINISH_INDEMNITY' then '疑难件支付赔偿'
         when 'DIFFICULTY_HANDOVER' then '疑难件交接'
         when 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE' then '疑难件交接货件留仓'
         when 'DIFFICULTY_RE_TRANSIT' then '疑难件退回区域总部/重启运送'
         when 'DIFFICULTY_RETURN' then '疑难件退回寄件人'
         when 'DIFFICULTY_SEAL' then '集包异常'
         when 'DISCARD_RETURN_BKK' then '丢弃包裹的，换单后寄回BKK'
         when 'DISTRIBUTION_INVENTORY' then '分拨盘库'
         when 'DWS_WEIGHT_IMAGE' then 'DWS复秤照片'
         when 'EXCHANGE_PARCEL' then '换货'
         when 'FAKE_CANCEL_HANDLE' then '虚假撤销判责'
         when 'FLASH_HOME_SCAN' then 'FH交接扫描'
         when 'FORCE_TAKE_PHOTO' then '强制拍照路由'
         when 'HAVE_HAIR_SCAN_NO_TO' then '有发无到'
         when 'HURRY_PARCEL' then '催单'
         when 'INCOMING_CALL' then '来电接听'
         when 'INTERRUPT_PARCEL_AND_RETURN' then '中断运输并退回'
         when 'INVENTORY' then '盘库'
         when 'LOSE_PARCEL_TEAM_OPERATION' then '丢失件团队处理'
         when 'MANUAL_REMARK' then '添加备注'
         when 'MISS_PICKUP_HANDLE' then '漏包裹揽收判责'
         when 'MISSING_PARCEL_SCAN' then '丢失件包裹操作'
         when 'NOTICE_LOST_PARTS_TEAM' then '已通知丢失件团队'
         when 'PARCEL_HEADLESS_CLAIMED' then '无头件包裹已认领'
         when 'PARCEL_HEADLESS_PRINTED' then '无头件包裹已打单'
         when 'PENDING_RETURN' then '待退件'
         when 'PHONE' then '电话联系'
         when 'PICK_UP_STORE' then '待自提取件'
         when 'PICKUP_RETURN_RECEIPT' then '签回单揽收'
         when 'PRINTING' then '打印面单'
         when 'QAQC_OPERATION' then 'QAQC判责'
         when 'RECEIVE_WAREHOUSE_SCAN' then '收件入仓'
         when 'RECEIVED' then '已揽收,初始化动作，实际情况并没有作用'
         when 'REFUND_CONFIRM' then '退件妥投'
         when 'REPAIRED' then '上报问题修复路由'
         when 'REPLACE_PNO' then '换单'
         when 'REPLY_WORK_ORDER' then '回复工单'
         when 'REVISION_TIME' then '改约时间'
         when 'SEAL' then '集包'
         when 'SEAL_NUMBER_CHANGE' then '集包件数变化'
         when 'SHIPMENT_WAREHOUSE_SCAN' then '发件出仓扫描'
         when 'SORTER_WEIGHT_IMAGE' then '分拣机复秤照片'
         when 'SORTING_SCAN' then '分拣扫描'
         when 'STAFF_INFO_UPDATE_WEIGHT' then '快递员修改重量'
         when 'STORE_KEEPER_UPDATE_WEIGHT' then '仓管员复秤'
         when 'STORE_SORTER_UPDATE_WEIGHT' then '分拣机复秤'
         when 'SYSTEM_AUTO_RETURN' then '系统自动退件'
         when 'TAKE_PHOTO' then '异常打单拍照'
         when 'THIRD_EXPRESS_ROUTE' then '第三方公司路由'
         when 'THIRD_PARTY_REASON_DETAIN' then '第三方原因滞留'
         when 'TICKET_WEIGHT_IMAGE' then '揽收称重照片'
         when 'TRANSFER_LOST_PARTS_TEAM' then '已转交丢失件团队'
         when 'TRANSFER_QAQC' then '转交QAQC处理'
         when 'UNSEAL' then '拆包'
         when 'UNSEAL_NO_PARCEL' then '上报包裹不在集包里'
         when 'UNSEAL_NOT_SCANNED' then '集包已拆包，本包裹未被扫描'
         when 'VEHICLE_ACCIDENT_REG' then '车辆车祸登记'
         when 'VEHICLE_ACCIDENT_REGISTRATION' then '车辆车祸登记'
         when 'VEHICLE_WET_DAMAGE_REG' then '车辆湿损登记'
         when 'VEHICLE_WET_DAMAGE_REGISTRATION' then '车辆湿损登记'
        end as 最后一条路由
    ,convert_tz(pr.routed_at ,'+00:00', '+08:00') 最新一条有效路由时间
from t t1
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,pr.route_action
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
left join
    (
        select
            plt.pno
        from ph_bi.parcel_claim_task plt
        join t t4  on t4.pno = plt.pno
        where
            plt.state not in (6,7,8)
            and plt.source = 11
        group by 1
    ) pct on pct.pno = t1.pno
group by t1.pno;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
        ,pi.returned
        ,pi.dst_store_id
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,if(t1.returned = 1, '退件', '正向件')  方向
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
    ,case
        when t1.state = 6 and di.pno is not null then di.sh_do
        when t1.state = 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is null and pct.pno is not null then 'qaqc-TeamB'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then pr.store_name
        else de.last_store_name
    end 待处理节点
    ,case
        when t1.state = 6 and di.pno is not null then 'KAM/揽件网点未协商'
        when t1.state = 6 and di.pno is null  then '闪速系统沟通处理中'
        when t1.state != 6 and plt.pno is not null and plt2.pno is not null then '闪速系统沟通处理中'
        when plt.pno is null and pct.pno is not null then '闪速超时效理赔未完成'
        when de.last_store_id = t1.ticket_pickup_store_id and plt2.pno is null then '揽件未发出'
        when t1.dst_store_id = 'PH19040F05' and plt2.pno is null then '弃件未到拍卖仓'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then 'QAQC无须追责后长期无有效路由'
        else null
    end 卡点原因
    ,de.last_store_name 当前节点
    ,datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) 最后有效路由距今天数
#     ,de.last_cn_route_action 最新一条有效路由
    ,case pr.route_action # 路由动作
         when 'ACCEPT_PARCEL' then '接件扫描'
         when 'ARRIVAL_GOODS_VAN_CHECK_SCAN' then '车货关联到港'
         when 'ARRIVAL_WAREHOUSE_SCAN' then '到件入仓扫描'
         when 'CANCEL_ARRIVAL_WAREHOUSE_SCAN' then '取消到件入仓扫描'
         when 'CANCEL_PARCEL' then '撤销包裹'
         when 'CANCEL_SHIPMENT_WAREHOUSE' then '取消发件出仓'
         when 'CHANGE_PARCEL_CANCEL' then '修改包裹为撤销'
         when 'CHANGE_PARCEL_CLOSE' then '修改包裹为异常关闭'
         when 'CHANGE_PARCEL_IN_TRANSIT' then '修改包裹为运输中'
         when 'CHANGE_PARCEL_INFO' then '修改包裹信息'
         when 'CHANGE_PARCEL_SIGNED' then '修改包裹为签收'
         when 'CLAIMS_CLOSE' then '理赔关闭'
         when 'CLAIMS_COMPLETE' then '理赔完成'
         when 'CLAIMS_CONTACT' then '已联系客户'
         when 'CLAIMS_TRANSFER_CS' then '转交总部cs处理'
         when 'CLOSE_ORDER' then '关闭订单'
         when 'CONTINUE_TRANSPORT' then '疑难件继续配送'
         when 'CREATE_WORK_ORDER' then '创建工单'
         when 'CUSTOMER_CHANGE_PARCEL_INFO' then '客户修改包裹信息'
         when 'CUSTOMER_OPERATING_RETURN' then '客户操作退回寄件人'
         when 'DELIVERY_CONFIRM' then '确认妥投'
         when 'DELIVERY_MARKER' then '派件标记'
         when 'DELIVERY_PICKUP_STORE_SCAN' then '自提取件扫描'
         when 'DELIVERY_TICKET_CREATION_SCAN' then '交接扫描'
         when 'DELIVERY_TRANSFER' then '派件转单'
         when 'DEPARTURE_GOODS_VAN_CK_SCAN' then '车货关联出港'
         when 'DETAIN_WAREHOUSE' then '货件留仓'
         when 'DIFFICULTY_FINISH_INDEMNITY' then '疑难件支付赔偿'
         when 'DIFFICULTY_HANDOVER' then '疑难件交接'
         when 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE' then '疑难件交接货件留仓'
         when 'DIFFICULTY_RE_TRANSIT' then '疑难件退回区域总部/重启运送'
         when 'DIFFICULTY_RETURN' then '疑难件退回寄件人'
         when 'DIFFICULTY_SEAL' then '集包异常'
         when 'DISCARD_RETURN_BKK' then '丢弃包裹的，换单后寄回BKK'
         when 'DISTRIBUTION_INVENTORY' then '分拨盘库'
         when 'DWS_WEIGHT_IMAGE' then 'DWS复秤照片'
         when 'EXCHANGE_PARCEL' then '换货'
         when 'FAKE_CANCEL_HANDLE' then '虚假撤销判责'
         when 'FLASH_HOME_SCAN' then 'FH交接扫描'
         when 'FORCE_TAKE_PHOTO' then '强制拍照路由'
         when 'HAVE_HAIR_SCAN_NO_TO' then '有发无到'
         when 'HURRY_PARCEL' then '催单'
         when 'INCOMING_CALL' then '来电接听'
         when 'INTERRUPT_PARCEL_AND_RETURN' then '中断运输并退回'
         when 'INVENTORY' then '盘库'
         when 'LOSE_PARCEL_TEAM_OPERATION' then '丢失件团队处理'
         when 'MANUAL_REMARK' then '添加备注'
         when 'MISS_PICKUP_HANDLE' then '漏包裹揽收判责'
         when 'MISSING_PARCEL_SCAN' then '丢失件包裹操作'
         when 'NOTICE_LOST_PARTS_TEAM' then '已通知丢失件团队'
         when 'PARCEL_HEADLESS_CLAIMED' then '无头件包裹已认领'
         when 'PARCEL_HEADLESS_PRINTED' then '无头件包裹已打单'
         when 'PENDING_RETURN' then '待退件'
         when 'PHONE' then '电话联系'
         when 'PICK_UP_STORE' then '待自提取件'
         when 'PICKUP_RETURN_RECEIPT' then '签回单揽收'
         when 'PRINTING' then '打印面单'
         when 'QAQC_OPERATION' then 'QAQC判责'
         when 'RECEIVE_WAREHOUSE_SCAN' then '收件入仓'
         when 'RECEIVED' then '已揽收,初始化动作，实际情况并没有作用'
         when 'REFUND_CONFIRM' then '退件妥投'
         when 'REPAIRED' then '上报问题修复路由'
         when 'REPLACE_PNO' then '换单'
         when 'REPLY_WORK_ORDER' then '回复工单'
         when 'REVISION_TIME' then '改约时间'
         when 'SEAL' then '集包'
         when 'SEAL_NUMBER_CHANGE' then '集包件数变化'
         when 'SHIPMENT_WAREHOUSE_SCAN' then '发件出仓扫描'
         when 'SORTER_WEIGHT_IMAGE' then '分拣机复秤照片'
         when 'SORTING_SCAN' then '分拣扫描'
         when 'STAFF_INFO_UPDATE_WEIGHT' then '快递员修改重量'
         when 'STORE_KEEPER_UPDATE_WEIGHT' then '仓管员复秤'
         when 'STORE_SORTER_UPDATE_WEIGHT' then '分拣机复秤'
         when 'SYSTEM_AUTO_RETURN' then '系统自动退件'
         when 'TAKE_PHOTO' then '异常打单拍照'
         when 'THIRD_EXPRESS_ROUTE' then '第三方公司路由'
         when 'THIRD_PARTY_REASON_DETAIN' then '第三方原因滞留'
         when 'TICKET_WEIGHT_IMAGE' then '揽收称重照片'
         when 'TRANSFER_LOST_PARTS_TEAM' then '已转交丢失件团队'
         when 'TRANSFER_QAQC' then '转交QAQC处理'
         when 'UNSEAL' then '拆包'
         when 'UNSEAL_NO_PARCEL' then '上报包裹不在集包里'
         when 'UNSEAL_NOT_SCANNED' then '集包已拆包，本包裹未被扫描'
         when 'VEHICLE_ACCIDENT_REG' then '车辆车祸登记'
         when 'VEHICLE_ACCIDENT_REGISTRATION' then '车辆车祸登记'
         when 'VEHICLE_WET_DAMAGE_REG' then '车辆湿损登记'
         when 'VEHICLE_WET_DAMAGE_REGISTRATION' then '车辆湿损登记'
        end as 最后一条路由
    ,convert_tz(pr.routed_at ,'+00:00', '+08:00') 最新一条有效路由时间
    ,datediff(now(), de.dst_routed_at) 目的地网点停留时间
from t t1
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,pr.route_action
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
left join
    (
        select
            plt.pno
        from ph_bi.parcel_claim_task plt
        join t t4  on t4.pno = plt.pno
        where
            plt.state not in (6,7,8)
            and plt.source = 11
        group by 1
    ) pct on pct.pno = t1.pno
group by t1.pno;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
        ,pi.returned
        ,pi.dst_store_id
        ,pi.client_id
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,if(t1.returned = 1, '退件', '正向件')  方向
    ,t1.client_id 客户ID
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as 客户类型
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
    ,case
        when t1.state = 6 and di.pno is not null then di.sh_do
        when t1.state = 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is null and pct.pno is not null then 'qaqc-TeamB'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then pr.store_name
        else de.last_store_name
    end 待处理节点
    ,case
        when t1.state = 6 and di.pno is not null then 'KAM/揽件网点未协商'
        when t1.state = 6 and di.pno is null  then '闪速系统沟通处理中'
        when t1.state != 6 and plt.pno is not null and plt2.pno is not null then '闪速系统沟通处理中'
        when plt.pno is null and pct.pno is not null then '闪速超时效理赔未完成'
        when de.last_store_id = t1.ticket_pickup_store_id and plt2.pno is null then '揽件未发出'
        when t1.dst_store_id = 'PH19040F05' and plt2.pno is null then '弃件未到拍卖仓'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then 'QAQC无须追责后长期无有效路由'
        else null
    end 卡点原因
    ,de.last_store_name 当前节点
    ,datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) 最后有效路由距今天数
#     ,de.last_cn_route_action 最新一条有效路由
    ,case pr.route_action # 路由动作
         when 'ACCEPT_PARCEL' then '接件扫描'
         when 'ARRIVAL_GOODS_VAN_CHECK_SCAN' then '车货关联到港'
         when 'ARRIVAL_WAREHOUSE_SCAN' then '到件入仓扫描'
         when 'CANCEL_ARRIVAL_WAREHOUSE_SCAN' then '取消到件入仓扫描'
         when 'CANCEL_PARCEL' then '撤销包裹'
         when 'CANCEL_SHIPMENT_WAREHOUSE' then '取消发件出仓'
         when 'CHANGE_PARCEL_CANCEL' then '修改包裹为撤销'
         when 'CHANGE_PARCEL_CLOSE' then '修改包裹为异常关闭'
         when 'CHANGE_PARCEL_IN_TRANSIT' then '修改包裹为运输中'
         when 'CHANGE_PARCEL_INFO' then '修改包裹信息'
         when 'CHANGE_PARCEL_SIGNED' then '修改包裹为签收'
         when 'CLAIMS_CLOSE' then '理赔关闭'
         when 'CLAIMS_COMPLETE' then '理赔完成'
         when 'CLAIMS_CONTACT' then '已联系客户'
         when 'CLAIMS_TRANSFER_CS' then '转交总部cs处理'
         when 'CLOSE_ORDER' then '关闭订单'
         when 'CONTINUE_TRANSPORT' then '疑难件继续配送'
         when 'CREATE_WORK_ORDER' then '创建工单'
         when 'CUSTOMER_CHANGE_PARCEL_INFO' then '客户修改包裹信息'
         when 'CUSTOMER_OPERATING_RETURN' then '客户操作退回寄件人'
         when 'DELIVERY_CONFIRM' then '确认妥投'
         when 'DELIVERY_MARKER' then '派件标记'
         when 'DELIVERY_PICKUP_STORE_SCAN' then '自提取件扫描'
         when 'DELIVERY_TICKET_CREATION_SCAN' then '交接扫描'
         when 'DELIVERY_TRANSFER' then '派件转单'
         when 'DEPARTURE_GOODS_VAN_CK_SCAN' then '车货关联出港'
         when 'DETAIN_WAREHOUSE' then '货件留仓'
         when 'DIFFICULTY_FINISH_INDEMNITY' then '疑难件支付赔偿'
         when 'DIFFICULTY_HANDOVER' then '疑难件交接'
         when 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE' then '疑难件交接货件留仓'
         when 'DIFFICULTY_RE_TRANSIT' then '疑难件退回区域总部/重启运送'
         when 'DIFFICULTY_RETURN' then '疑难件退回寄件人'
         when 'DIFFICULTY_SEAL' then '集包异常'
         when 'DISCARD_RETURN_BKK' then '丢弃包裹的，换单后寄回BKK'
         when 'DISTRIBUTION_INVENTORY' then '分拨盘库'
         when 'DWS_WEIGHT_IMAGE' then 'DWS复秤照片'
         when 'EXCHANGE_PARCEL' then '换货'
         when 'FAKE_CANCEL_HANDLE' then '虚假撤销判责'
         when 'FLASH_HOME_SCAN' then 'FH交接扫描'
         when 'FORCE_TAKE_PHOTO' then '强制拍照路由'
         when 'HAVE_HAIR_SCAN_NO_TO' then '有发无到'
         when 'HURRY_PARCEL' then '催单'
         when 'INCOMING_CALL' then '来电接听'
         when 'INTERRUPT_PARCEL_AND_RETURN' then '中断运输并退回'
         when 'INVENTORY' then '盘库'
         when 'LOSE_PARCEL_TEAM_OPERATION' then '丢失件团队处理'
         when 'MANUAL_REMARK' then '添加备注'
         when 'MISS_PICKUP_HANDLE' then '漏包裹揽收判责'
         when 'MISSING_PARCEL_SCAN' then '丢失件包裹操作'
         when 'NOTICE_LOST_PARTS_TEAM' then '已通知丢失件团队'
         when 'PARCEL_HEADLESS_CLAIMED' then '无头件包裹已认领'
         when 'PARCEL_HEADLESS_PRINTED' then '无头件包裹已打单'
         when 'PENDING_RETURN' then '待退件'
         when 'PHONE' then '电话联系'
         when 'PICK_UP_STORE' then '待自提取件'
         when 'PICKUP_RETURN_RECEIPT' then '签回单揽收'
         when 'PRINTING' then '打印面单'
         when 'QAQC_OPERATION' then 'QAQC判责'
         when 'RECEIVE_WAREHOUSE_SCAN' then '收件入仓'
         when 'RECEIVED' then '已揽收,初始化动作，实际情况并没有作用'
         when 'REFUND_CONFIRM' then '退件妥投'
         when 'REPAIRED' then '上报问题修复路由'
         when 'REPLACE_PNO' then '换单'
         when 'REPLY_WORK_ORDER' then '回复工单'
         when 'REVISION_TIME' then '改约时间'
         when 'SEAL' then '集包'
         when 'SEAL_NUMBER_CHANGE' then '集包件数变化'
         when 'SHIPMENT_WAREHOUSE_SCAN' then '发件出仓扫描'
         when 'SORTER_WEIGHT_IMAGE' then '分拣机复秤照片'
         when 'SORTING_SCAN' then '分拣扫描'
         when 'STAFF_INFO_UPDATE_WEIGHT' then '快递员修改重量'
         when 'STORE_KEEPER_UPDATE_WEIGHT' then '仓管员复秤'
         when 'STORE_SORTER_UPDATE_WEIGHT' then '分拣机复秤'
         when 'SYSTEM_AUTO_RETURN' then '系统自动退件'
         when 'TAKE_PHOTO' then '异常打单拍照'
         when 'THIRD_EXPRESS_ROUTE' then '第三方公司路由'
         when 'THIRD_PARTY_REASON_DETAIN' then '第三方原因滞留'
         when 'TICKET_WEIGHT_IMAGE' then '揽收称重照片'
         when 'TRANSFER_LOST_PARTS_TEAM' then '已转交丢失件团队'
         when 'TRANSFER_QAQC' then '转交QAQC处理'
         when 'UNSEAL' then '拆包'
         when 'UNSEAL_NO_PARCEL' then '上报包裹不在集包里'
         when 'UNSEAL_NOT_SCANNED' then '集包已拆包，本包裹未被扫描'
         when 'VEHICLE_ACCIDENT_REG' then '车辆车祸登记'
         when 'VEHICLE_ACCIDENT_REGISTRATION' then '车辆车祸登记'
         when 'VEHICLE_WET_DAMAGE_REG' then '车辆湿损登记'
         when 'VEHICLE_WET_DAMAGE_REGISTRATION' then '车辆湿损登记'
        end as 最后一条路由
    ,convert_tz(pr.routed_at ,'+00:00', '+08:00') 最新一条有效路由时间
    ,datediff(now(), de.dst_routed_at) 目的地网点停留时间
from t t1
left join ph_staging.ka_profile kp on t1.client_id = kp.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,pr.route_action
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
left join
    (
        select
            plt.pno
        from ph_bi.parcel_claim_task plt
        join t t4  on t4.pno = plt.pno
        where
            plt.state not in (6,7,8)
            and plt.source = 11
        group by 1
    ) pct on pct.pno = t1.pno
group by t1.pno;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
        ,pi.returned
        ,pi.dst_store_id
        ,pi.client_id
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,if(t1.returned = 1, '退件', '正向件')  方向
    ,t1.client_id 客户ID
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as 客户类型
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
    ,case
        when t1.state = 6 and di.pno is not null then di.sh_do
        when t1.state = 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is null and pct.pno is not null then 'qaqc-TeamB'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then pr.store_name
        else de.last_store_name
    end 待处理节点
    ,case
        when t1.state = 6 and di.pno is not null then 'KAM/揽件网点未协商'
        when t1.state = 6 and di.pno is null  then '闪速系统沟通处理中'
        when t1.state != 6 and plt.pno is not null and plt2.pno is not null then '闪速系统沟通处理中'
        when plt.pno is null and pct.pno is not null then '闪速超时效理赔未完成'
        when de.last_store_id = t1.ticket_pickup_store_id and plt2.pno is null then '揽件未发出'
        when t1.dst_store_id = 'PH19040F05' and plt2.pno is null then '弃件未到拍卖仓'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then 'QAQC无须追责后长期无有效路由'
        else null
    end 卡点原因
    ,de.last_store_name 当前节点
    ,datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) 最后有效路由距今天数
#     ,de.last_cn_route_action 最新一条有效路由
    ,case pr.route_action # 路由动作
         when 'ACCEPT_PARCEL' then '接件扫描'
         when 'ARRIVAL_GOODS_VAN_CHECK_SCAN' then '车货关联到港'
         when 'ARRIVAL_WAREHOUSE_SCAN' then '到件入仓扫描'
         when 'CANCEL_ARRIVAL_WAREHOUSE_SCAN' then '取消到件入仓扫描'
         when 'CANCEL_PARCEL' then '撤销包裹'
         when 'CANCEL_SHIPMENT_WAREHOUSE' then '取消发件出仓'
         when 'CHANGE_PARCEL_CANCEL' then '修改包裹为撤销'
         when 'CHANGE_PARCEL_CLOSE' then '修改包裹为异常关闭'
         when 'CHANGE_PARCEL_IN_TRANSIT' then '修改包裹为运输中'
         when 'CHANGE_PARCEL_INFO' then '修改包裹信息'
         when 'CHANGE_PARCEL_SIGNED' then '修改包裹为签收'
         when 'CLAIMS_CLOSE' then '理赔关闭'
         when 'CLAIMS_COMPLETE' then '理赔完成'
         when 'CLAIMS_CONTACT' then '已联系客户'
         when 'CLAIMS_TRANSFER_CS' then '转交总部cs处理'
         when 'CLOSE_ORDER' then '关闭订单'
         when 'CONTINUE_TRANSPORT' then '疑难件继续配送'
         when 'CREATE_WORK_ORDER' then '创建工单'
         when 'CUSTOMER_CHANGE_PARCEL_INFO' then '客户修改包裹信息'
         when 'CUSTOMER_OPERATING_RETURN' then '客户操作退回寄件人'
         when 'DELIVERY_CONFIRM' then '确认妥投'
         when 'DELIVERY_MARKER' then '派件标记'
         when 'DELIVERY_PICKUP_STORE_SCAN' then '自提取件扫描'
         when 'DELIVERY_TICKET_CREATION_SCAN' then '交接扫描'
         when 'DELIVERY_TRANSFER' then '派件转单'
         when 'DEPARTURE_GOODS_VAN_CK_SCAN' then '车货关联出港'
         when 'DETAIN_WAREHOUSE' then '货件留仓'
         when 'DIFFICULTY_FINISH_INDEMNITY' then '疑难件支付赔偿'
         when 'DIFFICULTY_HANDOVER' then '疑难件交接'
         when 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE' then '疑难件交接货件留仓'
         when 'DIFFICULTY_RE_TRANSIT' then '疑难件退回区域总部/重启运送'
         when 'DIFFICULTY_RETURN' then '疑难件退回寄件人'
         when 'DIFFICULTY_SEAL' then '集包异常'
         when 'DISCARD_RETURN_BKK' then '丢弃包裹的，换单后寄回BKK'
         when 'DISTRIBUTION_INVENTORY' then '分拨盘库'
         when 'DWS_WEIGHT_IMAGE' then 'DWS复秤照片'
         when 'EXCHANGE_PARCEL' then '换货'
         when 'FAKE_CANCEL_HANDLE' then '虚假撤销判责'
         when 'FLASH_HOME_SCAN' then 'FH交接扫描'
         when 'FORCE_TAKE_PHOTO' then '强制拍照路由'
         when 'HAVE_HAIR_SCAN_NO_TO' then '有发无到'
         when 'HURRY_PARCEL' then '催单'
         when 'INCOMING_CALL' then '来电接听'
         when 'INTERRUPT_PARCEL_AND_RETURN' then '中断运输并退回'
         when 'INVENTORY' then '盘库'
         when 'LOSE_PARCEL_TEAM_OPERATION' then '丢失件团队处理'
         when 'MANUAL_REMARK' then '添加备注'
         when 'MISS_PICKUP_HANDLE' then '漏包裹揽收判责'
         when 'MISSING_PARCEL_SCAN' then '丢失件包裹操作'
         when 'NOTICE_LOST_PARTS_TEAM' then '已通知丢失件团队'
         when 'PARCEL_HEADLESS_CLAIMED' then '无头件包裹已认领'
         when 'PARCEL_HEADLESS_PRINTED' then '无头件包裹已打单'
         when 'PENDING_RETURN' then '待退件'
         when 'PHONE' then '电话联系'
         when 'PICK_UP_STORE' then '待自提取件'
         when 'PICKUP_RETURN_RECEIPT' then '签回单揽收'
         when 'PRINTING' then '打印面单'
         when 'QAQC_OPERATION' then 'QAQC判责'
         when 'RECEIVE_WAREHOUSE_SCAN' then '收件入仓'
         when 'RECEIVED' then '已揽收,初始化动作，实际情况并没有作用'
         when 'REFUND_CONFIRM' then '退件妥投'
         when 'REPAIRED' then '上报问题修复路由'
         when 'REPLACE_PNO' then '换单'
         when 'REPLY_WORK_ORDER' then '回复工单'
         when 'REVISION_TIME' then '改约时间'
         when 'SEAL' then '集包'
         when 'SEAL_NUMBER_CHANGE' then '集包件数变化'
         when 'SHIPMENT_WAREHOUSE_SCAN' then '发件出仓扫描'
         when 'SORTER_WEIGHT_IMAGE' then '分拣机复秤照片'
         when 'SORTING_SCAN' then '分拣扫描'
         when 'STAFF_INFO_UPDATE_WEIGHT' then '快递员修改重量'
         when 'STORE_KEEPER_UPDATE_WEIGHT' then '仓管员复秤'
         when 'STORE_SORTER_UPDATE_WEIGHT' then '分拣机复秤'
         when 'SYSTEM_AUTO_RETURN' then '系统自动退件'
         when 'TAKE_PHOTO' then '异常打单拍照'
         when 'THIRD_EXPRESS_ROUTE' then '第三方公司路由'
         when 'THIRD_PARTY_REASON_DETAIN' then '第三方原因滞留'
         when 'TICKET_WEIGHT_IMAGE' then '揽收称重照片'
         when 'TRANSFER_LOST_PARTS_TEAM' then '已转交丢失件团队'
         when 'TRANSFER_QAQC' then '转交QAQC处理'
         when 'UNSEAL' then '拆包'
         when 'UNSEAL_NO_PARCEL' then '上报包裹不在集包里'
         when 'UNSEAL_NOT_SCANNED' then '集包已拆包，本包裹未被扫描'
         when 'VEHICLE_ACCIDENT_REG' then '车辆车祸登记'
         when 'VEHICLE_ACCIDENT_REGISTRATION' then '车辆车祸登记'
         when 'VEHICLE_WET_DAMAGE_REG' then '车辆湿损登记'
         when 'VEHICLE_WET_DAMAGE_REGISTRATION' then '车辆湿损登记'
        end as 最后一条路由
    ,convert_tz(pr.routed_at ,'+00:00', '+08:00') 最新一条有效路由时间
    ,datediff(now(), de.dst_routed_at) 目的地网点停留时间
from t t1
left join ph_staging.ka_profile kp on t1.client_id = kp.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,pr.route_action
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
left join
    (
        select
            plt.pno
        from ph_bi.parcel_claim_task plt
        join t t4  on t4.pno = plt.pno
        where
            plt.state not in (6,7,8)
            and plt.source = 11
        group by 1
    ) pct on pct.pno = t1.pno
group by t1.pno;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
        ,pi.returned
        ,pi.dst_store_id
        ,pi.client_id
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,if(t1.returned = 1, '退件', '正向件')  方向
    ,t1.client_id 客户ID
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as 客户类型
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
    ,case
        when t1.state = 6 and di.pno is not null then di.sh_do
        when t1.state = 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is null and pct.pno is not null then 'qaqc-TeamB'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then pr.store_name
        else de.last_store_name
    end 待处理节点
    ,case
        when t1.state = 6 and di.pno is not null then 'KAM/揽件网点未协商'
        when t1.state = 6 and di.pno is null  then '闪速系统沟通处理中'
        when t1.state != 6 and plt.pno is not null and plt2.pno is not null then '闪速系统沟通处理中'
        when plt.pno is null and pct.pno is not null then '闪速超时效理赔未完成'
        when de.last_store_id = t1.ticket_pickup_store_id and plt2.pno is null then '揽件未发出'
        when t1.dst_store_id = 'PH19040F05' and plt2.pno is null then '弃件未到拍卖仓'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then 'QAQC无须追责后长期无有效路由'
        else null
    end 卡点原因
    ,de.last_store_name 当前节点
    ,datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) 最后有效路由距今天数
#     ,de.last_cn_route_action 最新一条有效路由
    ,case pr.route_action # 路由动作
         when 'ACCEPT_PARCEL' then '接件扫描'
         when 'ARRIVAL_GOODS_VAN_CHECK_SCAN' then '车货关联到港'
         when 'ARRIVAL_WAREHOUSE_SCAN' then '到件入仓扫描'
         when 'CANCEL_ARRIVAL_WAREHOUSE_SCAN' then '取消到件入仓扫描'
         when 'CANCEL_PARCEL' then '撤销包裹'
         when 'CANCEL_SHIPMENT_WAREHOUSE' then '取消发件出仓'
         when 'CHANGE_PARCEL_CANCEL' then '修改包裹为撤销'
         when 'CHANGE_PARCEL_CLOSE' then '修改包裹为异常关闭'
         when 'CHANGE_PARCEL_IN_TRANSIT' then '修改包裹为运输中'
         when 'CHANGE_PARCEL_INFO' then '修改包裹信息'
         when 'CHANGE_PARCEL_SIGNED' then '修改包裹为签收'
         when 'CLAIMS_CLOSE' then '理赔关闭'
         when 'CLAIMS_COMPLETE' then '理赔完成'
         when 'CLAIMS_CONTACT' then '已联系客户'
         when 'CLAIMS_TRANSFER_CS' then '转交总部cs处理'
         when 'CLOSE_ORDER' then '关闭订单'
         when 'CONTINUE_TRANSPORT' then '疑难件继续配送'
         when 'CREATE_WORK_ORDER' then '创建工单'
         when 'CUSTOMER_CHANGE_PARCEL_INFO' then '客户修改包裹信息'
         when 'CUSTOMER_OPERATING_RETURN' then '客户操作退回寄件人'
         when 'DELIVERY_CONFIRM' then '确认妥投'
         when 'DELIVERY_MARKER' then '派件标记'
         when 'DELIVERY_PICKUP_STORE_SCAN' then '自提取件扫描'
         when 'DELIVERY_TICKET_CREATION_SCAN' then '交接扫描'
         when 'DELIVERY_TRANSFER' then '派件转单'
         when 'DEPARTURE_GOODS_VAN_CK_SCAN' then '车货关联出港'
         when 'DETAIN_WAREHOUSE' then '货件留仓'
         when 'DIFFICULTY_FINISH_INDEMNITY' then '疑难件支付赔偿'
         when 'DIFFICULTY_HANDOVER' then '疑难件交接'
         when 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE' then '疑难件交接货件留仓'
         when 'DIFFICULTY_RE_TRANSIT' then '疑难件退回区域总部/重启运送'
         when 'DIFFICULTY_RETURN' then '疑难件退回寄件人'
         when 'DIFFICULTY_SEAL' then '集包异常'
         when 'DISCARD_RETURN_BKK' then '丢弃包裹的，换单后寄回BKK'
         when 'DISTRIBUTION_INVENTORY' then '分拨盘库'
         when 'DWS_WEIGHT_IMAGE' then 'DWS复秤照片'
         when 'EXCHANGE_PARCEL' then '换货'
         when 'FAKE_CANCEL_HANDLE' then '虚假撤销判责'
         when 'FLASH_HOME_SCAN' then 'FH交接扫描'
         when 'FORCE_TAKE_PHOTO' then '强制拍照路由'
         when 'HAVE_HAIR_SCAN_NO_TO' then '有发无到'
         when 'HURRY_PARCEL' then '催单'
         when 'INCOMING_CALL' then '来电接听'
         when 'INTERRUPT_PARCEL_AND_RETURN' then '中断运输并退回'
         when 'INVENTORY' then '盘库'
         when 'LOSE_PARCEL_TEAM_OPERATION' then '丢失件团队处理'
         when 'MANUAL_REMARK' then '添加备注'
         when 'MISS_PICKUP_HANDLE' then '漏包裹揽收判责'
         when 'MISSING_PARCEL_SCAN' then '丢失件包裹操作'
         when 'NOTICE_LOST_PARTS_TEAM' then '已通知丢失件团队'
         when 'PARCEL_HEADLESS_CLAIMED' then '无头件包裹已认领'
         when 'PARCEL_HEADLESS_PRINTED' then '无头件包裹已打单'
         when 'PENDING_RETURN' then '待退件'
         when 'PHONE' then '电话联系'
         when 'PICK_UP_STORE' then '待自提取件'
         when 'PICKUP_RETURN_RECEIPT' then '签回单揽收'
         when 'PRINTING' then '打印面单'
         when 'QAQC_OPERATION' then 'QAQC判责'
         when 'RECEIVE_WAREHOUSE_SCAN' then '收件入仓'
         when 'RECEIVED' then '已揽收,初始化动作，实际情况并没有作用'
         when 'REFUND_CONFIRM' then '退件妥投'
         when 'REPAIRED' then '上报问题修复路由'
         when 'REPLACE_PNO' then '换单'
         when 'REPLY_WORK_ORDER' then '回复工单'
         when 'REVISION_TIME' then '改约时间'
         when 'SEAL' then '集包'
         when 'SEAL_NUMBER_CHANGE' then '集包件数变化'
         when 'SHIPMENT_WAREHOUSE_SCAN' then '发件出仓扫描'
         when 'SORTER_WEIGHT_IMAGE' then '分拣机复秤照片'
         when 'SORTING_SCAN' then '分拣扫描'
         when 'STAFF_INFO_UPDATE_WEIGHT' then '快递员修改重量'
         when 'STORE_KEEPER_UPDATE_WEIGHT' then '仓管员复秤'
         when 'STORE_SORTER_UPDATE_WEIGHT' then '分拣机复秤'
         when 'SYSTEM_AUTO_RETURN' then '系统自动退件'
         when 'TAKE_PHOTO' then '异常打单拍照'
         when 'THIRD_EXPRESS_ROUTE' then '第三方公司路由'
         when 'THIRD_PARTY_REASON_DETAIN' then '第三方原因滞留'
         when 'TICKET_WEIGHT_IMAGE' then '揽收称重照片'
         when 'TRANSFER_LOST_PARTS_TEAM' then '已转交丢失件团队'
         when 'TRANSFER_QAQC' then '转交QAQC处理'
         when 'UNSEAL' then '拆包'
         when 'UNSEAL_NO_PARCEL' then '上报包裹不在集包里'
         when 'UNSEAL_NOT_SCANNED' then '集包已拆包，本包裹未被扫描'
         when 'VEHICLE_ACCIDENT_REG' then '车辆车祸登记'
         when 'VEHICLE_ACCIDENT_REGISTRATION' then '车辆车祸登记'
         when 'VEHICLE_WET_DAMAGE_REG' then '车辆湿损登记'
         when 'VEHICLE_WET_DAMAGE_REGISTRATION' then '车辆湿损登记'
        end as 最后一条路由
    ,convert_tz(pr.routed_at ,'+00:00', '+08:00') 最新一条有效路由时间
    ,datediff(now(), de.dst_routed_at) 目的地网点停留时间
    ,de.dst_store 目的地网点
    ,if(hold.pno is not null, 'yes', 'no' ) 是否有holding标记
from t t1
left join ph_staging.ka_profile kp on t1.client_id = kp.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,pr.route_action
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
left join
    (
        select
            plt.pno
        from ph_bi.parcel_claim_task plt
        join t t4  on t4.pno = plt.pno
        where
            plt.state not in (6,7,8)
            and plt.source = 11
        group by 1
    ) pct on pct.pno = t1.pno
left join
    (
        select
            pr2.pno
        from ph_staging.parcel_route pr2
        join t t1 on t1.pno = pr2.pno
        where
            pr2.route_action = 'REFUND_CONFIRM'
        group by 1
    ) hold on hold.pno = t1.pno
group by t1.pno;
;-- -. . -..- - / . -. - .-. -.--
select
    count(distinct ssp.pno) num
    ,count(ssp.pno) num2
from ph_bi.should_stocktaking_parcel_info_recently ssp
where
    ssp.stat_date = '2023-06-19';
;-- -. . -..- - / . -. - .-. -.--
select
#     count(distinct ssp.pno) num
#     ,count(ssp.pno) num2
    ssp.inventory_class
from ph_bi.should_stocktaking_parcel_info_recently ssp
where
    ssp.stat_date = '2023-06-19'
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
#     count(distinct ssp.pno) num
#     ,count(ssp.pno) num2
    min(ssp.hour)
from ph_bi.should_stocktaking_parcel_info_recently ssp
where
    ssp.stat_date = '2023-06-19';
;-- -. . -..- - / . -. - .-. -.--
select
#     count(distinct ssp.pno) num
#     ,count(ssp.pno) num2
    max(ssp.hour)
from ph_bi.should_stocktaking_parcel_info_recently ssp
where
    ssp.stat_date = '2023-06-18';
;-- -. . -..- - / . -. - .-. -.--
select
#     count(distinct ssp.pno) num
#     ,count(ssp.pno) num2
    max(ssp.hour)
from ph_bi.should_stocktaking_parcel_info_recently ssp
where
    ssp.stat_date = '2023-06-19';
;-- -. . -..- - / . -. - .-. -.--
select
#     count(distinct ssp.pno) num
#     ,count(ssp.pno) num2
    ssp.express_category
from ph_bi.should_stocktaking_parcel_info_recently ssp
where
    ssp.stat_date = '2023-06-19'
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select hour(now());
;-- -. . -..- - / . -. - .-. -.--
select
    case  a.diff_marker_category
        when 1 then '客户不在家/电话无人接听'
         when 2 then '收件人拒收'
         when 3 then '快件分错网点'
         when 4 then '外包装破损'
         when 5 then '货物破损'
         when 6 then '货物短少'
         when 7 then '货物丢失'
         when 8 then '电话联系不上'
         when 9 then '客户改约时间'
         when 10 then '客户不在'
         when 11 then '客户取消任务'
         when 12 then '无人签收'
         when 13 then '客户周末或假期不收货'
         when 14 then '客户改约时间'
         when 15 then '当日运力不足，无法派送'
         when 16 then '联系不上收件人'
         when 17 then '收件人拒收'
         when 18 then '快件分错网点'
         when 19 then '外包装破损'
         when 20 then '货物破损'
         when 21 then '货物短少'
         when 22 then '货物丢失'
         when 23 then '收件人/地址不清晰或不正确'
         when 24 then '收件地址已废弃或不存在'
         when 25 then '收件人电话号码错误'
         when 26 then 'cod金额不正确'
         when 27 then '无实际包裹'
         when 28 then '已妥投未交接'
         when 29 then '收件人电话号码是空号'
         when 30 then '快件分错网点-地址正确'
         when 31 then '快件分错网点-地址错误'
         when 32 then '禁运品'
         when 33 then '严重破损（丢弃）'
         when 34 then '退件两次尝试派送失败'
         when 35 then '不能打开locker'
         when 36 then 'locker不能使用'
         when 37 then '该地址找不到lockerstation'
         when 38 then '一票多件'
         when 39 then '多次尝试派件失败'
         when 40 then '客户不在家/电话无人接听'
         when 41 then '错过班车时间'
         when 42 then '目的地是偏远地区,留仓待次日派送'
         when 43 then '目的地是岛屿,留仓待次日派送'
         when 44 then '企业/机构当天已下班'
         when 45 then '子母件包裹未全部到达网点'
         when 46 then '不可抗力原因留仓(台风)'
         when 47 then '虚假包裹'
         when 50 then '客户取消寄件'
         when 51 then '信息录入错误'
         when 52 then '客户取消寄件'
         when 69 then '禁运品'
         when 70 then '客户改约时间'
         when 71 then '当日运力不足，无法派送'
         when 72 then '客户周末或假期不收货'
         when 73 then '收件人/地址不清晰或不正确'
         when 74 then '收件地址已废弃或不存在'
         when 75 then '收件人电话号码错误'
         when 76 then 'cod金额不正确'
         when 77 then '企业/机构当天已下班'
         when 78 then '收件人电话号码是空号'
         when 79 then '快件分错网点-地址错误'
         when 80 then '客户取消任务'
         when 81 then '重复下单'
         when 82 then '已完成揽件'
         when 83 then '联系不上客户'
         when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
         when 85 then '寄件人电话号码是空号'
         when 86 then '包裹不符合揽收条件超大件'
         when 87 then '包裹不符合揽收条件违禁品'
         when 88 then '寄件人地址为岛屿'
         when 89 then '运力短缺，跟客户协商推迟揽收'
         when 90 then '包裹未准备好推迟揽收'
         when 91 then '包裹包装不符合运输标准'
         when 92 then '客户提供的清单里没有此包裹'
         when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
         when 94 then '客户取消寄件/客户实际不想寄此包裹'
         when 95 then '车辆/人力短缺推迟揽收'
         when 96 then '遗漏揽收(已停用)'
         when 97 then '子母件(一个单号多个包裹)'
         when 98 then '地址错误addresserror'
         when 99 then '包裹不符合揽收条件：超大件'
         when 100 then '包裹不符合揽收条件：违禁品'
         when 101 then '包裹包装不符合运输标准'
         when 102 then '包裹未准备好'
         when 103 then '运力短缺，跟客户协商推迟揽收'
         when 104 then '子母件(一个单号多个包裹)'
         when 105 then '破损包裹'
         when 106 then '空包裹'
         when 107 then '不能打开locker(密码错误)'
         when 108 then 'locker不能使用'
         when 109 then 'locker找不到'
         when 110 then '运单号与实际包裹的单号不一致'
         when 111 then 'box客户取消任务'
         when 112 then '不能打开locker(密码错误)'
         when 113 then 'locker不能使用'
         when 114 then 'locker找不到'
         when 115 then '实际重量尺寸大于客户下单的重量尺寸'
         when 116 then '客户仓库关闭'
         when 117 then '客户仓库关闭'
         when 118 then 'SHOPEE订单系统自动关闭'
         when 119 then '客户取消包裹'
         when 121 then '地址错误'
         when 122 then '当日运力不足，无法揽收'
    end 疑难原因
    ,a.疑难件创建时间段
    ,a.处理时间
    ,a.单量
    ,b.avg_deal_h 平均处理时长_hour
from
    (
        select
            di.diff_marker_category
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,case
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 1 then '1小时内'
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 >= 1 and timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 2 then '1-2小时'
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 > 2 and timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 24 then '2小时-1天'
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 > 24 and timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 72 then '1-3天'
                else  '3天以上'
            end 处理时间
            ,count(di.id) 单量
        from ph_staging.diff_info di
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16
        group by 1,2,3

        union all

        select
            di.diff_marker_category
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,case
                when cdt.first_operated_at < concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') then '12点前处理完成'
                when cdt.first_operated_at > concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') and cdt.first_operated_at < date_add(concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00'), interval 2 day) then '0-2天内'
                else '超时2天以上+未处理'
            end 处理时间
            ,count(di.id) 单量
        from ph_staging.diff_info di
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and
            (hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 10 or hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16)
        group by 1,2,3
    ) a
left join
    (
        select
            di.diff_marker_category
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,sum(timestampdiff(second , di.created_at, cdt.first_operated_at)/3600)/count(di.id) avg_deal_h
        from ph_staging.diff_info di
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16
            and cdt.first_operated_at is not null
        group by 1,2

        union all

        select
            di.diff_marker_category
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,sum(timestampdiff(second , di.created_at, cdt.first_operated_at)/3600)/count(di.id) avg_deal_h
        from ph_staging.diff_info di
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and
            (hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 10 or hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16)
            and cdt.first_operated_at is not null
        group by 1,2

    ) b on a.diff_marker_category = b.diff_marker_category and a.疑难件创建时间段 = b.疑难件创建时间段;
;-- -. . -..- - / . -. - .-. -.--
select
    case  di.diff_marker_category
        when 1 then '客户不在家/电话无人接听'
         when 2 then '收件人拒收'
         when 3 then '快件分错网点'
         when 4 then '外包装破损'
         when 5 then '货物破损'
         when 6 then '货物短少'
         when 7 then '货物丢失'
         when 8 then '电话联系不上'
         when 9 then '客户改约时间'
         when 10 then '客户不在'
         when 11 then '客户取消任务'
         when 12 then '无人签收'
         when 13 then '客户周末或假期不收货'
         when 14 then '客户改约时间'
         when 15 then '当日运力不足，无法派送'
         when 16 then '联系不上收件人'
         when 17 then '收件人拒收'
         when 18 then '快件分错网点'
         when 19 then '外包装破损'
         when 20 then '货物破损'
         when 21 then '货物短少'
         when 22 then '货物丢失'
         when 23 then '收件人/地址不清晰或不正确'
         when 24 then '收件地址已废弃或不存在'
         when 25 then '收件人电话号码错误'
         when 26 then 'cod金额不正确'
         when 27 then '无实际包裹'
         when 28 then '已妥投未交接'
         when 29 then '收件人电话号码是空号'
         when 30 then '快件分错网点-地址正确'
         when 31 then '快件分错网点-地址错误'
         when 32 then '禁运品'
         when 33 then '严重破损（丢弃）'
         when 34 then '退件两次尝试派送失败'
         when 35 then '不能打开locker'
         when 36 then 'locker不能使用'
         when 37 then '该地址找不到lockerstation'
         when 38 then '一票多件'
         when 39 then '多次尝试派件失败'
         when 40 then '客户不在家/电话无人接听'
         when 41 then '错过班车时间'
         when 42 then '目的地是偏远地区,留仓待次日派送'
         when 43 then '目的地是岛屿,留仓待次日派送'
         when 44 then '企业/机构当天已下班'
         when 45 then '子母件包裹未全部到达网点'
         when 46 then '不可抗力原因留仓(台风)'
         when 47 then '虚假包裹'
         when 50 then '客户取消寄件'
         when 51 then '信息录入错误'
         when 52 then '客户取消寄件'
         when 69 then '禁运品'
         when 70 then '客户改约时间'
         when 71 then '当日运力不足，无法派送'
         when 72 then '客户周末或假期不收货'
         when 73 then '收件人/地址不清晰或不正确'
         when 74 then '收件地址已废弃或不存在'
         when 75 then '收件人电话号码错误'
         when 76 then 'cod金额不正确'
         when 77 then '企业/机构当天已下班'
         when 78 then '收件人电话号码是空号'
         when 79 then '快件分错网点-地址错误'
         when 80 then '客户取消任务'
         when 81 then '重复下单'
         when 82 then '已完成揽件'
         when 83 then '联系不上客户'
         when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
         when 85 then '寄件人电话号码是空号'
         when 86 then '包裹不符合揽收条件超大件'
         when 87 then '包裹不符合揽收条件违禁品'
         when 88 then '寄件人地址为岛屿'
         when 89 then '运力短缺，跟客户协商推迟揽收'
         when 90 then '包裹未准备好推迟揽收'
         when 91 then '包裹包装不符合运输标准'
         when 92 then '客户提供的清单里没有此包裹'
         when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
         when 94 then '客户取消寄件/客户实际不想寄此包裹'
         when 95 then '车辆/人力短缺推迟揽收'
         when 96 then '遗漏揽收(已停用)'
         when 97 then '子母件(一个单号多个包裹)'
         when 98 then '地址错误addresserror'
         when 99 then '包裹不符合揽收条件：超大件'
         when 100 then '包裹不符合揽收条件：违禁品'
         when 101 then '包裹包装不符合运输标准'
         when 102 then '包裹未准备好'
         when 103 then '运力短缺，跟客户协商推迟揽收'
         when 104 then '子母件(一个单号多个包裹)'
         when 105 then '破损包裹'
         when 106 then '空包裹'
         when 107 then '不能打开locker(密码错误)'
         when 108 then 'locker不能使用'
         when 109 then 'locker找不到'
         when 110 then '运单号与实际包裹的单号不一致'
         when 111 then 'box客户取消任务'
         when 112 then '不能打开locker(密码错误)'
         when 113 then 'locker不能使用'
         when 114 then 'locker找不到'
         when 115 then '实际重量尺寸大于客户下单的重量尺寸'
         when 116 then '客户仓库关闭'
         when 117 then '客户仓库关闭'
         when 118 then 'SHOPEE订单系统自动关闭'
         when 119 then '客户取消包裹'
         when 121 then '地址错误'
         when 122 then '当日运力不足，无法揽收'
    end 疑难原因
    ,case cdt. negotiation_result_category
        when 1 then '赔偿'
        when 2 then '关闭订单(不赔偿不退货)'
        when 3 then '退货'
        when 4 then  '退货并赔偿'
        when 5 then '继续配送'
        when 6 then '继续配送并赔偿'
        when 7 then '正在沟通中'
        when 8 then '丢弃包裹的，换单后寄回BKK'
        when 9 then '货物找回，继续派送'
        when 10 then '改包裹状态'
        when 11 then '需客户修改信息'
    end AS 协商结果
    ,count(di.id) 单量
from ph_staging.diff_info di
join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    di.created_at >= '2023-05-31 16:00:00'
    and di.created_at < '2023-06-19 16:00:00'
    and bc.client_id is null  -- ka&小c
    and cdt.negotiation_result_category is not null
group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
            di.pno
            ,di.diff_marker_category
            ,di.id
            ,date(convert_tz(cdt.last_operated_at, '+00:00', '+08:00')) deal_date
            ,pcd.field_name
            ,count(if(pcd.field_name in ('dst_phone', 'dst_home_phone'), di.id, null)) change_phone_num
            ,count(if(pcd.field_name in ('dst_city_code', 'dst_detail_address', 'dst_district_code', 'dst_province_code'), di.id, null)) change_address_num
        from ph_staging.diff_info di
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        left join ph_staging.parcel_change_detail pcd on pcd.pno = di.pno and pcd.created_at > cdt.last_operated_at
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and cdt.negotiation_result_category = 5
        group by 1,2,3,4;
;-- -. . -..- - / . -. - .-. -.--
select
    case a.diff_marker_category
        when 1 then '客户不在家/电话无人接听'
         when 2 then '收件人拒收'
         when 3 then '快件分错网点'
         when 4 then '外包装破损'
         when 5 then '货物破损'
         when 6 then '货物短少'
         when 7 then '货物丢失'
         when 8 then '电话联系不上'
         when 9 then '客户改约时间'
         when 10 then '客户不在'
         when 11 then '客户取消任务'
         when 12 then '无人签收'
         when 13 then '客户周末或假期不收货'
         when 14 then '客户改约时间'
         when 15 then '当日运力不足，无法派送'
         when 16 then '联系不上收件人'
         when 17 then '收件人拒收'
         when 18 then '快件分错网点'
         when 19 then '外包装破损'
         when 20 then '货物破损'
         when 21 then '货物短少'
         when 22 then '货物丢失'
         when 23 then '收件人/地址不清晰或不正确'
         when 24 then '收件地址已废弃或不存在'
         when 25 then '收件人电话号码错误'
         when 26 then 'cod金额不正确'
         when 27 then '无实际包裹'
         when 28 then '已妥投未交接'
         when 29 then '收件人电话号码是空号'
         when 30 then '快件分错网点-地址正确'
         when 31 then '快件分错网点-地址错误'
         when 32 then '禁运品'
         when 33 then '严重破损（丢弃）'
         when 34 then '退件两次尝试派送失败'
         when 35 then '不能打开locker'
         when 36 then 'locker不能使用'
         when 37 then '该地址找不到lockerstation'
         when 38 then '一票多件'
         when 39 then '多次尝试派件失败'
         when 40 then '客户不在家/电话无人接听'
         when 41 then '错过班车时间'
         when 42 then '目的地是偏远地区,留仓待次日派送'
         when 43 then '目的地是岛屿,留仓待次日派送'
         when 44 then '企业/机构当天已下班'
         when 45 then '子母件包裹未全部到达网点'
         when 46 then '不可抗力原因留仓(台风)'
         when 47 then '虚假包裹'
         when 50 then '客户取消寄件'
         when 51 then '信息录入错误'
         when 52 then '客户取消寄件'
         when 69 then '禁运品'
         when 70 then '客户改约时间'
         when 71 then '当日运力不足，无法派送'
         when 72 then '客户周末或假期不收货'
         when 73 then '收件人/地址不清晰或不正确'
         when 74 then '收件地址已废弃或不存在'
         when 75 then '收件人电话号码错误'
         when 76 then 'cod金额不正确'
         when 77 then '企业/机构当天已下班'
         when 78 then '收件人电话号码是空号'
         when 79 then '快件分错网点-地址错误'
         when 80 then '客户取消任务'
         when 81 then '重复下单'
         when 82 then '已完成揽件'
         when 83 then '联系不上客户'
         when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
         when 85 then '寄件人电话号码是空号'
         when 86 then '包裹不符合揽收条件超大件'
         when 87 then '包裹不符合揽收条件违禁品'
         when 88 then '寄件人地址为岛屿'
         when 89 then '运力短缺，跟客户协商推迟揽收'
         when 90 then '包裹未准备好推迟揽收'
         when 91 then '包裹包装不符合运输标准'
         when 92 then '客户提供的清单里没有此包裹'
         when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
         when 94 then '客户取消寄件/客户实际不想寄此包裹'
         when 95 then '车辆/人力短缺推迟揽收'
         when 96 then '遗漏揽收(已停用)'
         when 97 then '子母件(一个单号多个包裹)'
         when 98 then '地址错误addresserror'
         when 99 then '包裹不符合揽收条件：超大件'
         when 100 then '包裹不符合揽收条件：违禁品'
         when 101 then '包裹包装不符合运输标准'
         when 102 then '包裹未准备好'
         when 103 then '运力短缺，跟客户协商推迟揽收'
         when 104 then '子母件(一个单号多个包裹)'
         when 105 then '破损包裹'
         when 106 then '空包裹'
         when 107 then '不能打开locker(密码错误)'
         when 108 then 'locker不能使用'
         when 109 then 'locker找不到'
         when 110 then '运单号与实际包裹的单号不一致'
         when 111 then 'box客户取消任务'
         when 112 then '不能打开locker(密码错误)'
         when 113 then 'locker不能使用'
         when 114 then 'locker找不到'
         when 115 then '实际重量尺寸大于客户下单的重量尺寸'
         when 116 then '客户仓库关闭'
         when 117 then '客户仓库关闭'
         when 118 then 'SHOPEE订单系统自动关闭'
         when 119 then '客户取消包裹'
         when 121 then '地址错误'
         when 122 then '当日运力不足，无法揽收'
    end 疑难原因
    ,count(if(a.change_phone_num > 0, id, null)) 修改电话量
    ,count(if(a.change_address_num > 0, id, null)) 修改地址量
    ,count(if(a.change_address_num > 0 and a.change_phone_num > 0, id, null)) 修改电话和地址量
    ,count(if(a.change_address_num = 0 and a.change_phone_num = 0, id, null)) 未修改电话和地址量
from
    (
        select
            di.pno
            ,di.diff_marker_category
            ,di.id
            ,date(convert_tz(cdt.last_operated_at, '+00:00', '+08:00')) deal_date
            ,pcd.field_name
            ,count(if(pcd.field_name in ('dst_phone', 'dst_home_phone'), di.id, null)) change_phone_num
            ,count(if(pcd.field_name in ('dst_city_code', 'dst_detail_address', 'dst_district_code', 'dst_province_code'), di.id, null)) change_address_num
        from ph_staging.diff_info di
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        left join ph_staging.parcel_change_detail pcd on pcd.pno = di.pno and pcd.created_at > cdt.last_operated_at
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and cdt.negotiation_result_category = 5
        group by 1,2,3,4
    ) a
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
    a.diff_marker_category
    ,count(distinct if(a.sub_num = 2, a.pno, null)) 提交2次_包裹量
    ,count(distinct if(a.sub_num = 3, a.pno, null)) 提交3次_包裹量
    ,count(distinct if(a.sub_num = 4, a.pno, null)) 提交4次_包裹量
    ,count(distinct if(a.sub_num = 5, a.pno, null)) 提交5次_包裹量
    ,count(distinct if(a.sub_num > 5, a.pno, null)) 提交5次以上_包裹量
from
    (
        select
            di.pno
            ,di.diff_marker_category
            ,count(di.id) sub_num
        from ph_staging.diff_info di
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null
        group by 1,2
    ) a
where
    a.sub_num >= 2
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
    case a.diff_marker_category
        when 1 then '客户不在家/电话无人接听'
         when 2 then '收件人拒收'
         when 3 then '快件分错网点'
         when 4 then '外包装破损'
         when 5 then '货物破损'
         when 6 then '货物短少'
         when 7 then '货物丢失'
         when 8 then '电话联系不上'
         when 9 then '客户改约时间'
         when 10 then '客户不在'
         when 11 then '客户取消任务'
         when 12 then '无人签收'
         when 13 then '客户周末或假期不收货'
         when 14 then '客户改约时间'
         when 15 then '当日运力不足，无法派送'
         when 16 then '联系不上收件人'
         when 17 then '收件人拒收'
         when 18 then '快件分错网点'
         when 19 then '外包装破损'
         when 20 then '货物破损'
         when 21 then '货物短少'
         when 22 then '货物丢失'
         when 23 then '收件人/地址不清晰或不正确'
         when 24 then '收件地址已废弃或不存在'
         when 25 then '收件人电话号码错误'
         when 26 then 'cod金额不正确'
         when 27 then '无实际包裹'
         when 28 then '已妥投未交接'
         when 29 then '收件人电话号码是空号'
         when 30 then '快件分错网点-地址正确'
         when 31 then '快件分错网点-地址错误'
         when 32 then '禁运品'
         when 33 then '严重破损（丢弃）'
         when 34 then '退件两次尝试派送失败'
         when 35 then '不能打开locker'
         when 36 then 'locker不能使用'
         when 37 then '该地址找不到lockerstation'
         when 38 then '一票多件'
         when 39 then '多次尝试派件失败'
         when 40 then '客户不在家/电话无人接听'
         when 41 then '错过班车时间'
         when 42 then '目的地是偏远地区,留仓待次日派送'
         when 43 then '目的地是岛屿,留仓待次日派送'
         when 44 then '企业/机构当天已下班'
         when 45 then '子母件包裹未全部到达网点'
         when 46 then '不可抗力原因留仓(台风)'
         when 47 then '虚假包裹'
         when 50 then '客户取消寄件'
         when 51 then '信息录入错误'
         when 52 then '客户取消寄件'
         when 69 then '禁运品'
         when 70 then '客户改约时间'
         when 71 then '当日运力不足，无法派送'
         when 72 then '客户周末或假期不收货'
         when 73 then '收件人/地址不清晰或不正确'
         when 74 then '收件地址已废弃或不存在'
         when 75 then '收件人电话号码错误'
         when 76 then 'cod金额不正确'
         when 77 then '企业/机构当天已下班'
         when 78 then '收件人电话号码是空号'
         when 79 then '快件分错网点-地址错误'
         when 80 then '客户取消任务'
         when 81 then '重复下单'
         when 82 then '已完成揽件'
         when 83 then '联系不上客户'
         when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
         when 85 then '寄件人电话号码是空号'
         when 86 then '包裹不符合揽收条件超大件'
         when 87 then '包裹不符合揽收条件违禁品'
         when 88 then '寄件人地址为岛屿'
         when 89 then '运力短缺，跟客户协商推迟揽收'
         when 90 then '包裹未准备好推迟揽收'
         when 91 then '包裹包装不符合运输标准'
         when 92 then '客户提供的清单里没有此包裹'
         when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
         when 94 then '客户取消寄件/客户实际不想寄此包裹'
         when 95 then '车辆/人力短缺推迟揽收'
         when 96 then '遗漏揽收(已停用)'
         when 97 then '子母件(一个单号多个包裹)'
         when 98 then '地址错误addresserror'
         when 99 then '包裹不符合揽收条件：超大件'
         when 100 then '包裹不符合揽收条件：违禁品'
         when 101 then '包裹包装不符合运输标准'
         when 102 then '包裹未准备好'
         when 103 then '运力短缺，跟客户协商推迟揽收'
         when 104 then '子母件(一个单号多个包裹)'
         when 105 then '破损包裹'
         when 106 then '空包裹'
         when 107 then '不能打开locker(密码错误)'
         when 108 then 'locker不能使用'
         when 109 then 'locker找不到'
         when 110 then '运单号与实际包裹的单号不一致'
         when 111 then 'box客户取消任务'
         when 112 then '不能打开locker(密码错误)'
         when 113 then 'locker不能使用'
         when 114 then 'locker找不到'
         when 115 then '实际重量尺寸大于客户下单的重量尺寸'
         when 116 then '客户仓库关闭'
         when 117 then '客户仓库关闭'
         when 118 then 'SHOPEE订单系统自动关闭'
         when 119 then '客户取消包裹'
         when 121 then '地址错误'
         when 122 then '当日运力不足，无法揽收'
    end 疑难原因
    ,count(distinct if(a.sub_num = 2, a.pno, null)) 提交2次_包裹量
    ,count(distinct if(a.sub_num = 3, a.pno, null)) 提交3次_包裹量
    ,count(distinct if(a.sub_num = 4, a.pno, null)) 提交4次_包裹量
    ,count(distinct if(a.sub_num = 5, a.pno, null)) 提交5次_包裹量
    ,count(distinct if(a.sub_num > 5, a.pno, null)) 提交5次以上_包裹量
from
    (
        select
            di.pno
            ,di.diff_marker_category
            ,count(di.id) sub_num
        from ph_staging.diff_info di
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null
        group by 1,2
    ) a
where
    a.sub_num >= 2
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
    di.pno
    ,count(di.id) sub_num
from ph_staging.diff_info di
join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    di.created_at >= '2023-05-31 16:00:00'
    and di.created_at < '2023-06-19 16:00:00'
    and bc.client_id is null
group by 1
having count(di.id) >= 3;
;-- -. . -..- - / . -. - .-. -.--
select
    case
        when di.updated_at >= '2023-05-31 16:00:00' and di.updated_at < '2023-06-07 16:00:00' then '0601-0607'
        when di.updated_at >= '2023-06-07 16:00:00' and di.updated_at < '2023-06-14 16:00:00' then '0608-0614'
        when di.updated_at >= '2023-06-14 16:00:00' and di.updated_at < '2023-06-21 16:00:00' then '0614-0621'
        when di.updated_at >= '2023-06-07 16:00:00' and di.updated_at < '2023-06-14 16:00:00' then '0608-0614'
    end 周
    ,ss.name 网点
    ,count(di.id) 处理量
from ph_staging.diff_info di
left join ph_staging.parcel_info pi on di.pno = pi.pno
left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    di.updated_at >= '2023-05-31 16:00:00'
    and di.updated_at < '2023-06-19 16:00:00'
    and bc.client_id is null
    and di.state = 1
order by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
    case
        when di.updated_at >= '2023-05-31 16:00:00' and di.updated_at < '2023-06-07 16:00:00' then '0601-0607'
        when di.updated_at >= '2023-06-07 16:00:00' and di.updated_at < '2023-06-14 16:00:00' then '0608-0614'
        when di.updated_at >= '2023-06-14 16:00:00' and di.updated_at < '2023-06-21 16:00:00' then '0614-0621'
        when di.updated_at >= '2023-06-07 16:00:00' and di.updated_at < '2023-06-14 16:00:00' then '0608-0614'
    end 周
    ,ss.name 网点
    ,count(di.id) 处理量
from ph_staging.diff_info di
left join ph_staging.parcel_info pi on di.pno = pi.pno
left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    di.updated_at >= '2023-05-31 16:00:00'
    and di.updated_at < '2023-06-19 16:00:00'
    and bc.client_id is null
    and di.state = 1
group by 1,2
order by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
    case
        when di.updated_at >= '2023-05-31 16:00:00' and di.updated_at < '2023-06-07 16:00:00' then '0601-0607'
        when di.updated_at >= '2023-06-07 16:00:00' and di.updated_at < '2023-06-14 16:00:00' then '0608-0614'
        when di.updated_at >= '2023-06-14 16:00:00' and di.updated_at < '2023-06-21 16:00:00' then '0614-0621'
        when di.updated_at >= '2023-06-07 16:00:00' and di.updated_at < '2023-06-14 16:00:00' then '0608-0614'
    end 周
    ,case ss.category
      when 1 then 'SP'
      when 2 then 'DC'
      when 4 then 'SHOP'
      when 5 then 'SHOP'
      when 6 then 'FH'
      when 7 then 'SHOP'
      when 8 then 'Hub'
      when 9 then 'Onsite'
      when 10 then 'BDC'
      when 11 then 'fulfillment'
      when 12 then 'B-HUB'
      when 13 then 'CDC'
      when 14 then 'PDC'
    end 网点类型
    ,ss.name 网点
    ,count(di.id) 处理量
from ph_staging.diff_info di
left join ph_staging.parcel_info pi on di.pno = pi.pno
left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    di.updated_at >= '2023-05-31 16:00:00'
    and di.updated_at < '2023-06-19 16:00:00'
    and bc.client_id is null
    and di.state = 1
group by 1,2
order by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
    case
        when di.updated_at >= '2023-05-31 16:00:00' and di.updated_at < '2023-06-07 16:00:00' then '0601-0607'
        when di.updated_at >= '2023-06-07 16:00:00' and di.updated_at < '2023-06-14 16:00:00' then '0608-0614'
        when di.updated_at >= '2023-06-14 16:00:00' and di.updated_at < '2023-06-21 16:00:00' then '0614-0621'
        when di.updated_at >= '2023-06-07 16:00:00' and di.updated_at < '2023-06-14 16:00:00' then '0608-0614'
    end 周
    ,case ss.category
      when 1 then 'SP'
      when 2 then 'DC'
      when 4 then 'SHOP'
      when 5 then 'SHOP'
      when 6 then 'FH'
      when 7 then 'SHOP'
      when 8 then 'Hub'
      when 9 then 'Onsite'
      when 10 then 'BDC'
      when 11 then 'fulfillment'
      when 12 then 'B-HUB'
      when 13 then 'CDC'
      when 14 then 'PDC'
    end 网点类型
    ,ss.name 网点
    ,count(di.id) 处理量
from ph_staging.diff_info di
left join ph_staging.parcel_info pi on di.pno = pi.pno
left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    di.updated_at >= '2023-05-31 16:00:00'
    and di.updated_at < '2023-06-19 16:00:00'
    and bc.client_id is null
    and di.state = 1
group by 1,2,3
order by 1,2,3;
;-- -. . -..- - / . -. - .-. -.--
select
    case  a.diff_marker_category
        when 1 then '客户不在家/电话无人接听'
         when 2 then '收件人拒收'
         when 3 then '快件分错网点'
         when 4 then '外包装破损'
         when 5 then '货物破损'
         when 6 then '货物短少'
         when 7 then '货物丢失'
         when 8 then '电话联系不上'
         when 9 then '客户改约时间'
         when 10 then '客户不在'
         when 11 then '客户取消任务'
         when 12 then '无人签收'
         when 13 then '客户周末或假期不收货'
         when 14 then '客户改约时间'
         when 15 then '当日运力不足，无法派送'
         when 16 then '联系不上收件人'
         when 17 then '收件人拒收'
         when 18 then '快件分错网点'
         when 19 then '外包装破损'
         when 20 then '货物破损'
         when 21 then '货物短少'
         when 22 then '货物丢失'
         when 23 then '收件人/地址不清晰或不正确'
         when 24 then '收件地址已废弃或不存在'
         when 25 then '收件人电话号码错误'
         when 26 then 'cod金额不正确'
         when 27 then '无实际包裹'
         when 28 then '已妥投未交接'
         when 29 then '收件人电话号码是空号'
         when 30 then '快件分错网点-地址正确'
         when 31 then '快件分错网点-地址错误'
         when 32 then '禁运品'
         when 33 then '严重破损（丢弃）'
         when 34 then '退件两次尝试派送失败'
         when 35 then '不能打开locker'
         when 36 then 'locker不能使用'
         when 37 then '该地址找不到lockerstation'
         when 38 then '一票多件'
         when 39 then '多次尝试派件失败'
         when 40 then '客户不在家/电话无人接听'
         when 41 then '错过班车时间'
         when 42 then '目的地是偏远地区,留仓待次日派送'
         when 43 then '目的地是岛屿,留仓待次日派送'
         when 44 then '企业/机构当天已下班'
         when 45 then '子母件包裹未全部到达网点'
         when 46 then '不可抗力原因留仓(台风)'
         when 47 then '虚假包裹'
         when 50 then '客户取消寄件'
         when 51 then '信息录入错误'
         when 52 then '客户取消寄件'
         when 69 then '禁运品'
         when 70 then '客户改约时间'
         when 71 then '当日运力不足，无法派送'
         when 72 then '客户周末或假期不收货'
         when 73 then '收件人/地址不清晰或不正确'
         when 74 then '收件地址已废弃或不存在'
         when 75 then '收件人电话号码错误'
         when 76 then 'cod金额不正确'
         when 77 then '企业/机构当天已下班'
         when 78 then '收件人电话号码是空号'
         when 79 then '快件分错网点-地址错误'
         when 80 then '客户取消任务'
         when 81 then '重复下单'
         when 82 then '已完成揽件'
         when 83 then '联系不上客户'
         when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
         when 85 then '寄件人电话号码是空号'
         when 86 then '包裹不符合揽收条件超大件'
         when 87 then '包裹不符合揽收条件违禁品'
         when 88 then '寄件人地址为岛屿'
         when 89 then '运力短缺，跟客户协商推迟揽收'
         when 90 then '包裹未准备好推迟揽收'
         when 91 then '包裹包装不符合运输标准'
         when 92 then '客户提供的清单里没有此包裹'
         when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
         when 94 then '客户取消寄件/客户实际不想寄此包裹'
         when 95 then '车辆/人力短缺推迟揽收'
         when 96 then '遗漏揽收(已停用)'
         when 97 then '子母件(一个单号多个包裹)'
         when 98 then '地址错误addresserror'
         when 99 then '包裹不符合揽收条件：超大件'
         when 100 then '包裹不符合揽收条件：违禁品'
         when 101 then '包裹包装不符合运输标准'
         when 102 then '包裹未准备好'
         when 103 then '运力短缺，跟客户协商推迟揽收'
         when 104 then '子母件(一个单号多个包裹)'
         when 105 then '破损包裹'
         when 106 then '空包裹'
         when 107 then '不能打开locker(密码错误)'
         when 108 then 'locker不能使用'
         when 109 then 'locker找不到'
         when 110 then '运单号与实际包裹的单号不一致'
         when 111 then 'box客户取消任务'
         when 112 then '不能打开locker(密码错误)'
         when 113 then 'locker不能使用'
         when 114 then 'locker找不到'
         when 115 then '实际重量尺寸大于客户下单的重量尺寸'
         when 116 then '客户仓库关闭'
         when 117 then '客户仓库关闭'
         when 118 then 'SHOPEE订单系统自动关闭'
         when 119 then '客户取消包裹'
         when 121 then '地址错误'
         when 122 then '当日运力不足，无法揽收'
    end 疑难原因
    ,a.疑难件创建时间段
    ,a.处理时间
    ,a.单量
    ,b.avg_deal_h 平均处理时长_hour
from
    (
        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,case
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 1 then '1小时内'
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 >= 1 and timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 2 then '1-2小时'
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 > 2 and timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 24 then '2小时-1天'
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 > 24 and timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 72 then '1-3天'
                else  '3天以上'
            end 处理时间
            ,count(di.id) 单量
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16
        group by 1,2,3,4

        union all

        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,case
                when cdt.first_operated_at < concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') then '12点前处理完成'
                when cdt.first_operated_at > concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') and cdt.first_operated_at < date_add(concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00'), interval 2 day) then '0-2天内'
                else '超时2天以上+未处理'
            end 处理时间
            ,count(di.id) 单量
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and
            (hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 10 or hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16)
        group by 1,2,3
    ) a
left join
    (
        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,sum(timestampdiff(second , di.created_at, cdt.first_operated_at)/3600)/count(di.id) avg_deal_h
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16
            and cdt.first_operated_at is not null
        group by 1,2

        union all

        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,sum(timestampdiff(second , di.created_at, cdt.first_operated_at)/3600)/count(di.id) avg_deal_h
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and
            (hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 10 or hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16)
            and cdt.first_operated_at is not null
        group by 1,2

    ) b on a.diff_marker_category = b.diff_marker_category and a.疑难件创建时间段 = b.疑难件创建时间段 and a.类型 = b.类型;
;-- -. . -..- - / . -. - .-. -.--
select
    case  a.diff_marker_category
        when 1 then '客户不在家/电话无人接听'
         when 2 then '收件人拒收'
         when 3 then '快件分错网点'
         when 4 then '外包装破损'
         when 5 then '货物破损'
         when 6 then '货物短少'
         when 7 then '货物丢失'
         when 8 then '电话联系不上'
         when 9 then '客户改约时间'
         when 10 then '客户不在'
         when 11 then '客户取消任务'
         when 12 then '无人签收'
         when 13 then '客户周末或假期不收货'
         when 14 then '客户改约时间'
         when 15 then '当日运力不足，无法派送'
         when 16 then '联系不上收件人'
         when 17 then '收件人拒收'
         when 18 then '快件分错网点'
         when 19 then '外包装破损'
         when 20 then '货物破损'
         when 21 then '货物短少'
         when 22 then '货物丢失'
         when 23 then '收件人/地址不清晰或不正确'
         when 24 then '收件地址已废弃或不存在'
         when 25 then '收件人电话号码错误'
         when 26 then 'cod金额不正确'
         when 27 then '无实际包裹'
         when 28 then '已妥投未交接'
         when 29 then '收件人电话号码是空号'
         when 30 then '快件分错网点-地址正确'
         when 31 then '快件分错网点-地址错误'
         when 32 then '禁运品'
         when 33 then '严重破损（丢弃）'
         when 34 then '退件两次尝试派送失败'
         when 35 then '不能打开locker'
         when 36 then 'locker不能使用'
         when 37 then '该地址找不到lockerstation'
         when 38 then '一票多件'
         when 39 then '多次尝试派件失败'
         when 40 then '客户不在家/电话无人接听'
         when 41 then '错过班车时间'
         when 42 then '目的地是偏远地区,留仓待次日派送'
         when 43 then '目的地是岛屿,留仓待次日派送'
         when 44 then '企业/机构当天已下班'
         when 45 then '子母件包裹未全部到达网点'
         when 46 then '不可抗力原因留仓(台风)'
         when 47 then '虚假包裹'
         when 50 then '客户取消寄件'
         when 51 then '信息录入错误'
         when 52 then '客户取消寄件'
         when 69 then '禁运品'
         when 70 then '客户改约时间'
         when 71 then '当日运力不足，无法派送'
         when 72 then '客户周末或假期不收货'
         when 73 then '收件人/地址不清晰或不正确'
         when 74 then '收件地址已废弃或不存在'
         when 75 then '收件人电话号码错误'
         when 76 then 'cod金额不正确'
         when 77 then '企业/机构当天已下班'
         when 78 then '收件人电话号码是空号'
         when 79 then '快件分错网点-地址错误'
         when 80 then '客户取消任务'
         when 81 then '重复下单'
         when 82 then '已完成揽件'
         when 83 then '联系不上客户'
         when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
         when 85 then '寄件人电话号码是空号'
         when 86 then '包裹不符合揽收条件超大件'
         when 87 then '包裹不符合揽收条件违禁品'
         when 88 then '寄件人地址为岛屿'
         when 89 then '运力短缺，跟客户协商推迟揽收'
         when 90 then '包裹未准备好推迟揽收'
         when 91 then '包裹包装不符合运输标准'
         when 92 then '客户提供的清单里没有此包裹'
         when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
         when 94 then '客户取消寄件/客户实际不想寄此包裹'
         when 95 then '车辆/人力短缺推迟揽收'
         when 96 then '遗漏揽收(已停用)'
         when 97 then '子母件(一个单号多个包裹)'
         when 98 then '地址错误addresserror'
         when 99 then '包裹不符合揽收条件：超大件'
         when 100 then '包裹不符合揽收条件：违禁品'
         when 101 then '包裹包装不符合运输标准'
         when 102 then '包裹未准备好'
         when 103 then '运力短缺，跟客户协商推迟揽收'
         when 104 then '子母件(一个单号多个包裹)'
         when 105 then '破损包裹'
         when 106 then '空包裹'
         when 107 then '不能打开locker(密码错误)'
         when 108 then 'locker不能使用'
         when 109 then 'locker找不到'
         when 110 then '运单号与实际包裹的单号不一致'
         when 111 then 'box客户取消任务'
         when 112 then '不能打开locker(密码错误)'
         when 113 then 'locker不能使用'
         when 114 then 'locker找不到'
         when 115 then '实际重量尺寸大于客户下单的重量尺寸'
         when 116 then '客户仓库关闭'
         when 117 then '客户仓库关闭'
         when 118 then 'SHOPEE订单系统自动关闭'
         when 119 then '客户取消包裹'
         when 121 then '地址错误'
         when 122 then '当日运力不足，无法揽收'
    end 疑难原因
    ,a.类型
    ,a.疑难件创建时间段
    ,a.处理时间
    ,a.单量
    ,b.avg_deal_h 平均处理时长_hour
from
    (
        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,case
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 1 then '1小时内'
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 >= 1 and timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 2 then '1-2小时'
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 > 2 and timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 24 then '2小时-1天'
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 > 24 and timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 72 then '1-3天'
                else  '3天以上'
            end 处理时间
            ,count(di.id) 单量
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16
        group by 1,2,3,4

        union all

        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,case
                when cdt.first_operated_at < concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') then '12点前处理完成'
                when cdt.first_operated_at > concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') and cdt.first_operated_at < date_add(concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00'), interval 2 day) then '0-2天内'
                else '超时2天以上+未处理'
            end 处理时间
            ,count(di.id) 单量
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and
            (hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 10 or hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16)
        group by 1,2,3
    ) a
left join
    (
        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,sum(timestampdiff(second , di.created_at, cdt.first_operated_at)/3600)/count(di.id) avg_deal_h
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16
            and cdt.first_operated_at is not null
        group by 1,2

        union all

        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,sum(timestampdiff(second , di.created_at, cdt.first_operated_at)/3600)/count(di.id) avg_deal_h
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and
            (hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 10 or hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16)
            and cdt.first_operated_at is not null
        group by 1,2

    ) b on a.diff_marker_category = b.diff_marker_category and a.疑难件创建时间段 = b.疑难件创建时间段 and a.类型 = b.类型;
;-- -. . -..- - / . -. - .-. -.--
select
    ss.name 网点
    ,if(ss.category = 6, 'FH', '网点') 类型
    ,cdt.first_operator_id
    ,count(di.id)/count(distinct date(convert_tz(di.updated_at, '+00:00', '+08:00'))) 日均处理量
from ph_staging.diff_info di
left join ph_staging.parcel_info pi on di.pno = pi.pno
left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    di.state = 1
    and di.updated_at >= '2023-05-31 16:00:00'
    and di.updated_at < '2023-06-07 16:00:00'
    and bc.client_id is null
group by 1,2,3
order by 4 desc;
;-- -. . -..- - / . -. - .-. -.--
select
    ss.name 网点
    ,if(ss.category = 6, 'FH', '网点') 类型
    ,count(di.id)/count(distinct date(convert_tz(di.updated_at, '+00:00', '+08:00'))) 日均处理量
from ph_staging.diff_info di
left join ph_staging.parcel_info pi on di.pno = pi.pno
left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    di.state = 1
    and di.updated_at >= '2023-05-31 16:00:00'
    and di.updated_at < '2023-06-07 16:00:00'
    and bc.client_id is null
group by 1,2
order by 3 desc;
;-- -. . -..- - / . -. - .-. -.--
select
    case
        when di.updated_at >= '2023-05-31 16:00:00' and di.updated_at < '2023-06-07 16:00:00' then '0601-0607'
        when di.updated_at >= '2023-06-07 16:00:00' and di.updated_at < '2023-06-14 16:00:00' then '0608-0614'
    end 周
    ,case ss.category
      when 1 then 'SP'
      when 2 then 'DC'
      when 4 then 'SHOP'
      when 5 then 'SHOP'
      when 6 then 'FH'
      when 7 then 'SHOP'
      when 8 then 'Hub'
      when 9 then 'Onsite'
      when 10 then 'BDC'
      when 11 then 'fulfillment'
      when 12 then 'B-HUB'
      when 13 then 'CDC'
      when 14 then 'PDC'
    end 网点类型
    ,ss.name 网点
    ,count(di.id) 处理量
from ph_staging.diff_info di
left join ph_staging.parcel_info pi on di.pno = pi.pno
left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    di.updated_at >= '2023-05-31 16:00:00'
    and di.updated_at < '2023-06-14 16:00:00'
    and bc.client_id is null
    and di.state = 1
group by 1,2,3
order by 1,2,3;
;-- -. . -..- - / . -. - .-. -.--
select
    ss.name 网点
    ,if(ss.category = 6, 'FH', '网点') 类型
    ,count(di.id)/count(distinct date(convert_tz(di.updated_at, '+00:00', '+08:00'))) 日均处理量
from ph_staging.diff_info di
left join ph_staging.parcel_info pi on di.pno = pi.pno
left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    di.state = 1
    and di.updated_at >= '2023-05-31 16:00:00'
    and di.updated_at < '2023-06-14 16:00:00'
    and bc.client_id is null
group by 1,2
order by 3 desc;
;-- -. . -..- - / . -. - .-. -.--
select
    ss.name 网点
    ,if(ss.category = 6, 'FH', '网点') 类型
    ,count(di.id)/count(distinct date(convert_tz(di.updated_at, '+00:00', '+08:00'))) 日均处理量
from ph_staging.diff_info di
left join ph_staging.parcel_info pi on di.pno = pi.pno
left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    di.state = 1
    and di.updated_at >= '2023-05-31 16:00:00'
    and di.updated_at < '2023-06-01 16:00:00'
    and bc.client_id is null
group by 1,2
order by 3 desc;
;-- -. . -..- - / . -. - .-. -.--
select
	 di.pno '运单号'
     ,dd.client_name
	 ,convert_tz(pi.created_at,'+00:00','+08:00') '揽收日期'
	 ,ss.name '揽收网点'
	 ,case pi.state
		  when 1 then '已揽收'
		  when 2 then '运输中'
		  when 3 then '派送中'
		  when 4 then '已滞留'
		  when 5 then '已签收'
		  when 6 then '疑难件处理中'
		  when 7 then '已退件'
		  when 8 then '异常关闭'
		  when 9 then '已撤销'
		  ELSE pi.state
		  end as '包裹状态'
	 ,ss1.name '目的地网点'
	 ,ss2.name '上报疑难件网点'
	, di.diff_marker_category
    ,tdt2.cn_element as ' 疑难件原因 '
	 ,convert_tz(di.created_at,'+00:00','+08:00') '上报时间'
     ,date(convert_tz(di.created_at,'+00:00','+08:00')) '上报日期'
	 ,di.staff_info_id '上报人'
	 ,hi.name '上报人姓名'
	 ,sd.name '处理机构'
	 ,cdt.operator_id '客服操作人ID'
	 ,convert_tz(cdt.first_operated_at,'+00:00','+08:00') '第一次处理时间'
	 ,ifnull(convert_tz(cdt.last_operated_at,'+00:00','+08:00'),convert_tz(cdt.first_operated_at,'+00:00','+08:00')) '最后一次处理时间'
	 ,case cdt.state
		  when 0 then '未处理'
		  when 1 then '已处理'
		  when 2 then '正在沟通中'
		  when 3 then '财务驳回'
		  when 4 then '客户未处理'
		  when 5 then '转交闪速系统'
		  when 6 then '转交QAQC'
		  else cdt.state
		  end '客服处理情况'

     ,case cdt.negotiation_result_category
          when 1 then '赔偿'
          when 2        then '关闭订单(不赔偿不退货)'
          when 3        then'退货'
          when 4        then '退货并赔偿'
          when 5        then '继续配送'
          when 6        then '继续配送并赔偿'
          when 7        then '正在沟通中'
          when 8        then '丢弃包裹的，换单后寄回BKK'
          when 9        then '货物找回，继续派送'
          when 10       then  '改包裹状态'
          when 11       then '需客户修改信息'
          when 12       then '丢弃并赔偿（包裹发到内部拍卖仓）'
	  end '处理结果'
	 ,datediff('hour',convert_tz(di.created_at,'+00:00','+08:00'),ifnull(convert_tz(cdt.last_operated_at,'+00:00','+08:00'),convert_tz(cdt.first_operated_at,'+00:00','+08:00'))) '客服处理-上报时长/h'
	 ,case di.state
		  when 0 then '未处理'
		  when 1 then '已处理'
		  else di.state
      end '疑难件处理情况'
	 ,if(di.state=1,convert_tz(di.updated_at,'+00:00','+08:00'),null)  '疑难件处理完成时间'
	 ,datediff('hour',convert_tz(di.created_at,'+00:00','+08:00'),if(di.state=1,convert_tz(di.updated_at,'+00:00','+08:00'),null)) '疑难件处理时长/h'
	 ,datediff('hour',if(di.state=0,convert_tz(di.created_at,'+00:00','+08:00'),null) ,CURRENT_TIME()) '未处理当前时间-上报时间/h'
from ph_staging.diff_info di
left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
join ph_staging.parcel_info pi on pi.pno=di.pno
join dwm.dwd_dim_bigClient dd on pi.client_id=dd.client_id
left join ph_bi.sys_store ss on ss.id=pi.ticket_pickup_store_id #揽收网点
left join ph_bi.sys_store ss1 on ss1.id=pi.dst_store_id#目的地网点
left join ph_bi.sys_store ss2 on ss2.id=di.store_id #上报当前网点
left join ph_bi.hr_staff_info hi on hi.staff_info_id=di.staff_info_id #疑难件处理人对应网点
left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id=di.id and cdt.organization_type=2 #疑难件处理进度
left join ph_bi.hr_staff_info hi2 on hi2.staff_info_id=cdt.operator_id #疑难件处理人对应网点
left join ph_bi.sys_department sd on sd.id=hi2.node_department_id
where
    date(convert_tz(di.updated_at,'+00:00','+08:00'))=curdate()
and di.state=1;
;-- -. . -..- - / . -. - .-. -.--
select
    case  a.diff_marker_category
        when 1 then '客户不在家/电话无人接听'
         when 2 then '收件人拒收'
         when 3 then '快件分错网点'
         when 4 then '外包装破损'
         when 5 then '货物破损'
         when 6 then '货物短少'
         when 7 then '货物丢失'
         when 8 then '电话联系不上'
         when 9 then '客户改约时间'
         when 10 then '客户不在'
         when 11 then '客户取消任务'
         when 12 then '无人签收'
         when 13 then '客户周末或假期不收货'
         when 14 then '客户改约时间'
         when 15 then '当日运力不足，无法派送'
         when 16 then '联系不上收件人'
         when 17 then '收件人拒收'
         when 18 then '快件分错网点'
         when 19 then '外包装破损'
         when 20 then '货物破损'
         when 21 then '货物短少'
         when 22 then '货物丢失'
         when 23 then '收件人/地址不清晰或不正确'
         when 24 then '收件地址已废弃或不存在'
         when 25 then '收件人电话号码错误'
         when 26 then 'cod金额不正确'
         when 27 then '无实际包裹'
         when 28 then '已妥投未交接'
         when 29 then '收件人电话号码是空号'
         when 30 then '快件分错网点-地址正确'
         when 31 then '快件分错网点-地址错误'
         when 32 then '禁运品'
         when 33 then '严重破损（丢弃）'
         when 34 then '退件两次尝试派送失败'
         when 35 then '不能打开locker'
         when 36 then 'locker不能使用'
         when 37 then '该地址找不到lockerstation'
         when 38 then '一票多件'
         when 39 then '多次尝试派件失败'
         when 40 then '客户不在家/电话无人接听'
         when 41 then '错过班车时间'
         when 42 then '目的地是偏远地区,留仓待次日派送'
         when 43 then '目的地是岛屿,留仓待次日派送'
         when 44 then '企业/机构当天已下班'
         when 45 then '子母件包裹未全部到达网点'
         when 46 then '不可抗力原因留仓(台风)'
         when 47 then '虚假包裹'
         when 50 then '客户取消寄件'
         when 51 then '信息录入错误'
         when 52 then '客户取消寄件'
         when 69 then '禁运品'
         when 70 then '客户改约时间'
         when 71 then '当日运力不足，无法派送'
         when 72 then '客户周末或假期不收货'
         when 73 then '收件人/地址不清晰或不正确'
         when 74 then '收件地址已废弃或不存在'
         when 75 then '收件人电话号码错误'
         when 76 then 'cod金额不正确'
         when 77 then '企业/机构当天已下班'
         when 78 then '收件人电话号码是空号'
         when 79 then '快件分错网点-地址错误'
         when 80 then '客户取消任务'
         when 81 then '重复下单'
         when 82 then '已完成揽件'
         when 83 then '联系不上客户'
         when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
         when 85 then '寄件人电话号码是空号'
         when 86 then '包裹不符合揽收条件超大件'
         when 87 then '包裹不符合揽收条件违禁品'
         when 88 then '寄件人地址为岛屿'
         when 89 then '运力短缺，跟客户协商推迟揽收'
         when 90 then '包裹未准备好推迟揽收'
         when 91 then '包裹包装不符合运输标准'
         when 92 then '客户提供的清单里没有此包裹'
         when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
         when 94 then '客户取消寄件/客户实际不想寄此包裹'
         when 95 then '车辆/人力短缺推迟揽收'
         when 96 then '遗漏揽收(已停用)'
         when 97 then '子母件(一个单号多个包裹)'
         when 98 then '地址错误addresserror'
         when 99 then '包裹不符合揽收条件：超大件'
         when 100 then '包裹不符合揽收条件：违禁品'
         when 101 then '包裹包装不符合运输标准'
         when 102 then '包裹未准备好'
         when 103 then '运力短缺，跟客户协商推迟揽收'
         when 104 then '子母件(一个单号多个包裹)'
         when 105 then '破损包裹'
         when 106 then '空包裹'
         when 107 then '不能打开locker(密码错误)'
         when 108 then 'locker不能使用'
         when 109 then 'locker找不到'
         when 110 then '运单号与实际包裹的单号不一致'
         when 111 then 'box客户取消任务'
         when 112 then '不能打开locker(密码错误)'
         when 113 then 'locker不能使用'
         when 114 then 'locker找不到'
         when 115 then '实际重量尺寸大于客户下单的重量尺寸'
         when 116 then '客户仓库关闭'
         when 117 then '客户仓库关闭'
         when 118 then 'SHOPEE订单系统自动关闭'
         when 119 then '客户取消包裹'
         when 121 then '地址错误'
         when 122 then '当日运力不足，无法揽收'
    end 疑难原因
    ,a.类型
    ,a.疑难件创建时间段
    ,a.处理时间
    ,a.单量
    ,b.avg_deal_h 平均处理时长_hour
from
    (
        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,case
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 1 then '1小时内'
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 >= 1 and timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 2 then '1-2小时'
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 > 2 and timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 24 then '2小时-1天'
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 > 24 and timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 72 then '1-3天'
                else  '3天以上'
            end 处理时间
            ,count(di.id) 单量
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16
        group by 1,2,3,4

        union all

        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,case
                when cdt.first_operated_at < concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') then '12点前处理完成'
                when cdt.first_operated_at > concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') and cdt.first_operated_at < date_add(concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00'), interval 2 day) then '0-2天内'
                else '超时2天以上+未处理'
            end 处理时间
            ,count(di.id) 单量
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and
            (hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 10 or hour(convert_tz(di.created_at, '+00:00', '+08:00')) > 16)
        group by 1,2,3
    ) a
left join
    (
        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,sum(timestampdiff(second , di.created_at, cdt.first_operated_at)/3600)/count(di.id) avg_deal_h
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16
            and cdt.first_operated_at is not null
        group by 1,2

        union all

        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,sum(timestampdiff(second , di.created_at, cdt.first_operated_at)/3600)/count(di.id) avg_deal_h
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and
            (hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 10 or hour(convert_tz(di.created_at, '+00:00', '+08:00')) > 16)
            and cdt.first_operated_at is not null
        group by 1,2

    ) b on a.diff_marker_category = b.diff_marker_category and a.疑难件创建时间段 = b.疑难件创建时间段 and a.类型 = b.类型;
;-- -. . -..- - / . -. - .-. -.--
select
	 di.pno '运单号'
     ,dd.client_name
	 ,convert_tz(pi.created_at,'+00:00','+08:00') '揽收日期'
	 ,ss.name '揽收网点'
	 ,case pi.state
		  when 1 then '已揽收'
		  when 2 then '运输中'
		  when 3 then '派送中'
		  when 4 then '已滞留'
		  when 5 then '已签收'
		  when 6 then '疑难件处理中'
		  when 7 then '已退件'
		  when 8 then '异常关闭'
		  when 9 then '已撤销'
		  ELSE pi.state
		  end as '包裹状态'
	 ,ss1.name '目的地网点'
	 ,ss2.name '上报疑难件网点'
	, di.diff_marker_category
    ,tdt2.cn_element as ' 疑难件原因 '
	 ,convert_tz(di.created_at,'+00:00','+08:00') '上报时间'
     ,date(convert_tz(di.created_at,'+00:00','+08:00')) '上报日期'
	 ,di.staff_info_id '上报人'
	 ,hi.name '上报人姓名'
	 ,sd.name '处理机构'
	 ,cdt.operator_id '客服操作人ID'
	 ,convert_tz(cdt.first_operated_at,'+00:00','+08:00') '第一次处理时间'
	 ,ifnull(convert_tz(cdt.last_operated_at,'+00:00','+08:00'),convert_tz(cdt.first_operated_at,'+00:00','+08:00')) '最后一次处理时间'
	 ,case cdt.state
		  when 0 then '未处理'
		  when 1 then '已处理'
		  when 2 then '正在沟通中'
		  when 3 then '财务驳回'
		  when 4 then '客户未处理'
		  when 5 then '转交闪速系统'
		  when 6 then '转交QAQC'
		  else cdt.state
		  end '客服处理情况'

     ,case cdt.negotiation_result_category
          when 1 then '赔偿'
          when 2        then '关闭订单(不赔偿不退货)'
          when 3        then'退货'
          when 4        then '退货并赔偿'
          when 5        then '继续配送'
          when 6        then '继续配送并赔偿'
          when 7        then '正在沟通中'
          when 8        then '丢弃包裹的，换单后寄回BKK'
          when 9        then '货物找回，继续派送'
          when 10       then  '改包裹状态'
          when 11       then '需客户修改信息'
          when 12       then '丢弃并赔偿（包裹发到内部拍卖仓）'
	  end '处理结果'
	 ,datediff('hour',convert_tz(di.created_at,'+00:00','+08:00'),ifnull(convert_tz(cdt.last_operated_at,'+00:00','+08:00'),convert_tz(cdt.first_operated_at,'+00:00','+08:00'))) '客服处理-上报时长/h'
	 ,case di.state
		  when 0 then '未处理'
		  when 1 then '已处理'
		  else di.state
      end '疑难件处理情况'
	 ,if(di.state=1,convert_tz(di.updated_at,'+00:00','+08:00'),null)  '疑难件处理完成时间'
	 ,datediff('hour',convert_tz(di.created_at,'+00:00','+08:00'),if(di.state=1,convert_tz(di.updated_at,'+00:00','+08:00'),null)) '疑难件处理时长/h'
	 ,datediff('hour',if(di.state=0,convert_tz(di.created_at,'+00:00','+08:00'),null) ,CURRENT_TIME()) '未处理当前时间-上报时间/h'
from ph_staging.diff_info di
left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
join ph_staging.parcel_info pi on pi.pno=di.pno
join dwm.dwd_dim_bigClient dd on pi.client_id=dd.client_id
left join ph_bi.sys_store ss on ss.id=pi.ticket_pickup_store_id #揽收网点
left join ph_bi.sys_store ss1 on ss1.id=pi.dst_store_id#目的地网点
left join ph_bi.sys_store ss2 on ss2.id=di.store_id #上报当前网点
left join ph_bi.hr_staff_info hi on hi.staff_info_id=di.staff_info_id #疑难件处理人对应网点
left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id=di.id and cdt.organization_type=2 #疑难件处理进度
left join ph_bi.hr_staff_info hi2 on hi2.staff_info_id=cdt.operator_id #疑难件处理人对应网点
left join ph_bi.sys_department sd on sd.id=hi2.node_department_id
where
    date(convert_tz(di.updated_at,'+00:00','+08:00'))=curdate()
    and di.diff_marker_category in (23,73,29,78,25,75);
;-- -. . -..- - / . -. - .-. -.--
select
	 di.pno '运单号'
     ,dd.client_name
	 ,convert_tz(pi.created_at,'+00:00','+08:00') '揽收日期'
	 ,ss.name '揽收网点'
	 ,case pi.state
		  when 1 then '已揽收'
		  when 2 then '运输中'
		  when 3 then '派送中'
		  when 4 then '已滞留'
		  when 5 then '已签收'
		  when 6 then '疑难件处理中'
		  when 7 then '已退件'
		  when 8 then '异常关闭'
		  when 9 then '已撤销'
		  ELSE pi.state
		  end as '包裹状态'
	 ,ss1.name '目的地网点'
	 ,ss2.name '上报疑难件网点'
	, di.diff_marker_category
    ,tdt2.cn_element as ' 疑难件原因 '
	 ,convert_tz(di.created_at,'+00:00','+08:00') '上报时间'
     ,date(convert_tz(di.created_at,'+00:00','+08:00')) '上报日期'
	 ,di.staff_info_id '上报人'
	 ,hi.name '上报人姓名'
	 ,sd.name '处理机构'
	 ,cdt.operator_id '客服操作人ID'
	 ,convert_tz(cdt.first_operated_at,'+00:00','+08:00') '第一次处理时间'
	 ,ifnull(convert_tz(cdt.last_operated_at,'+00:00','+08:00'),convert_tz(cdt.first_operated_at,'+00:00','+08:00')) '最后一次处理时间'
	 ,case cdt.state
		  when 0 then '未处理'
		  when 1 then '已处理'
		  when 2 then '正在沟通中'
		  when 3 then '财务驳回'
		  when 4 then '客户未处理'
		  when 5 then '转交闪速系统'
		  when 6 then '转交QAQC'
		  else cdt.state
		  end '客服处理情况'

     ,case cdt.negotiation_result_category
          when 1 then '赔偿'
          when 2        then '关闭订单(不赔偿不退货)'
          when 3        then'退货'
          when 4        then '退货并赔偿'
          when 5        then '继续配送'
          when 6        then '继续配送并赔偿'
          when 7        then '正在沟通中'
          when 8        then '丢弃包裹的，换单后寄回BKK'
          when 9        then '货物找回，继续派送'
          when 10       then  '改包裹状态'
          when 11       then '需客户修改信息'
          when 12       then '丢弃并赔偿（包裹发到内部拍卖仓）'
	  end '处理结果'
	 ,datediff('hour',convert_tz(di.created_at,'+00:00','+08:00'),ifnull(convert_tz(cdt.last_operated_at,'+00:00','+08:00'),convert_tz(cdt.first_operated_at,'+00:00','+08:00'))) '客服处理-上报时长/h'
	 ,case di.state
		  when 0 then '未处理'
		  when 1 then '已处理'
		  else di.state
      end '疑难件处理情况'
	 ,if(di.state=1,convert_tz(di.updated_at,'+00:00','+08:00'),null)  '疑难件处理完成时间'
	 ,datediff('hour',convert_tz(di.created_at,'+00:00','+08:00'),if(di.state=1,convert_tz(di.updated_at,'+00:00','+08:00'),null)) '疑难件处理时长/h'
	 ,datediff('hour',if(di.state=0,convert_tz(di.created_at,'+00:00','+08:00'),null) ,CURRENT_TIME()) '未处理当前时间-上报时间/h'
from ph_staging.diff_info di
left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
join ph_staging.parcel_info pi on pi.pno=di.pno
join dwm.dwd_dim_bigClient dd on pi.client_id=dd.client_id
left join ph_bi.sys_store ss on ss.id=pi.ticket_pickup_store_id #揽收网点
left join ph_bi.sys_store ss1 on ss1.id=pi.dst_store_id#目的地网点
left join ph_bi.sys_store ss2 on ss2.id=di.store_id #上报当前网点
left join ph_bi.hr_staff_info hi on hi.staff_info_id=di.staff_info_id #疑难件处理人对应网点
left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id=di.id and cdt.organization_type=2 #疑难件处理进度
left join ph_bi.hr_staff_info hi2 on hi2.staff_info_id=cdt.operator_id #疑难件处理人对应网点
left join ph_bi.sys_department sd on sd.id=hi2.node_department_id
where
    date(convert_tz(di.updated_at,'+00:00','+08:00'))=curdate()
    and di.diff_marker_category in (23,73,29,78,25,75)
    and di.state = 1;
;-- -. . -..- - / . -. - .-. -.--
select
	 di.pno '运单号'
     ,
     ,dd.client_name
	 ,convert_tz(pi.created_at,'+00:00','+08:00') '揽收日期'
	 ,ss.name '揽收网点'
	 ,case pi.state
		  when 1 then '已揽收'
		  when 2 then '运输中'
		  when 3 then '派送中'
		  when 4 then '已滞留'
		  when 5 then '已签收'
		  when 6 then '疑难件处理中'
		  when 7 then '已退件'
		  when 8 then '异常关闭'
		  when 9 then '已撤销'
		  ELSE pi.state
		  end as '包裹状态'
	 ,ss1.name '目的地网点'
	 ,ss2.name '上报疑难件网点'
	, di.diff_marker_category
    ,tdt2.cn_element as ' 疑难件原因 '
	 ,convert_tz(di.created_at,'+00:00','+08:00') '上报时间'
     ,date(convert_tz(di.created_at,'+00:00','+08:00')) '上报日期'
	 ,di.staff_info_id '上报人'
	 ,hi.name '上报人姓名'
	 ,sd.name '处理机构'
	 ,cdt.operator_id '客服操作人ID'
	 ,convert_tz(cdt.first_operated_at,'+00:00','+08:00') '第一次处理时间'
	 ,ifnull(convert_tz(cdt.last_operated_at,'+00:00','+08:00'),convert_tz(cdt.first_operated_at,'+00:00','+08:00')) '最后一次处理时间'
	 ,case cdt.state
		  when 0 then '未处理'
		  when 1 then '已处理'
		  when 2 then '正在沟通中'
		  when 3 then '财务驳回'
		  when 4 then '客户未处理'
		  when 5 then '转交闪速系统'
		  when 6 then '转交QAQC'
		  else cdt.state
		  end '客服处理情况'

     ,case cdt.negotiation_result_category
          when 1 then '赔偿'
          when 2        then '关闭订单(不赔偿不退货)'
          when 3        then'退货'
          when 4        then '退货并赔偿'
          when 5        then '继续配送'
          when 6        then '继续配送并赔偿'
          when 7        then '正在沟通中'
          when 8        then '丢弃包裹的，换单后寄回BKK'
          when 9        then '货物找回，继续派送'
          when 10       then  '改包裹状态'
          when 11       then '需客户修改信息'
          when 12       then '丢弃并赔偿（包裹发到内部拍卖仓）'
	  end '处理结果'
	 ,datediff('hour',convert_tz(di.created_at,'+00:00','+08:00'),ifnull(convert_tz(cdt.last_operated_at,'+00:00','+08:00'),convert_tz(cdt.first_operated_at,'+00:00','+08:00'))) '客服处理-上报时长/h'
	 ,case di.state
		  when 0 then '未处理'
		  when 1 then '已处理'
		  else di.state
      end '疑难件处理情况'
	 ,if(di.state=1,convert_tz(di.updated_at,'+00:00','+08:00'),null)  '疑难件处理完成时间'
	 ,datediff('hour',convert_tz(di.created_at,'+00:00','+08:00'),if(di.state=1,convert_tz(di.updated_at,'+00:00','+08:00'),null)) '疑难件处理时长/h'
	 ,datediff('hour',if(di.state=0,convert_tz(di.created_at,'+00:00','+08:00'),null) ,CURRENT_TIME()) '未处理当前时间-上报时间/h'
    ,if(di.state = 0 and di.created_at >= concat(curdate(), ' 12:00:00'), '当日20点后', '之前') 8点判断
from ph_staging.diff_info di
left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
join ph_staging.parcel_info pi on pi.pno=di.pno
join dwm.dwd_dim_bigClient dd on pi.client_id=dd.client_id
left join ph_bi.sys_store ss on ss.id=pi.ticket_pickup_store_id #揽收网点
left join ph_bi.sys_store ss1 on ss1.id=pi.dst_store_id#目的地网点
left join ph_bi.sys_store ss2 on ss2.id=di.store_id #上报当前网点
left join ph_bi.hr_staff_info hi on hi.staff_info_id=di.staff_info_id #疑难件处理人对应网点
left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id=di.id and cdt.organization_type=2 #疑难件处理进度
left join ph_bi.hr_staff_info hi2 on hi2.staff_info_id=cdt.operator_id #疑难件处理人对应网点
left join ph_bi.sys_department sd on sd.id=hi2.node_department_id
where
    di.diff_marker_category in (23,73,29,78,25,75)
    and di.state = 0;
;-- -. . -..- - / . -. - .-. -.--
select
	 di.pno '运单号'
     
     ,dd.client_name
	 ,convert_tz(pi.created_at,'+00:00','+08:00') '揽收日期'
	 ,ss.name '揽收网点'
	 ,case pi.state
		  when 1 then '已揽收'
		  when 2 then '运输中'
		  when 3 then '派送中'
		  when 4 then '已滞留'
		  when 5 then '已签收'
		  when 6 then '疑难件处理中'
		  when 7 then '已退件'
		  when 8 then '异常关闭'
		  when 9 then '已撤销'
		  ELSE pi.state
		  end as '包裹状态'
	 ,ss1.name '目的地网点'
	 ,ss2.name '上报疑难件网点'
	, di.diff_marker_category
    ,tdt2.cn_element as ' 疑难件原因 '
	 ,convert_tz(di.created_at,'+00:00','+08:00') '上报时间'
     ,date(convert_tz(di.created_at,'+00:00','+08:00')) '上报日期'
	 ,di.staff_info_id '上报人'
	 ,hi.name '上报人姓名'
	 ,sd.name '处理机构'
	 ,cdt.operator_id '客服操作人ID'
	 ,convert_tz(cdt.first_operated_at,'+00:00','+08:00') '第一次处理时间'
	 ,ifnull(convert_tz(cdt.last_operated_at,'+00:00','+08:00'),convert_tz(cdt.first_operated_at,'+00:00','+08:00')) '最后一次处理时间'
	 ,case cdt.state
		  when 0 then '未处理'
		  when 1 then '已处理'
		  when 2 then '正在沟通中'
		  when 3 then '财务驳回'
		  when 4 then '客户未处理'
		  when 5 then '转交闪速系统'
		  when 6 then '转交QAQC'
		  else cdt.state
		  end '客服处理情况'

     ,case cdt.negotiation_result_category
          when 1 then '赔偿'
          when 2        then '关闭订单(不赔偿不退货)'
          when 3        then'退货'
          when 4        then '退货并赔偿'
          when 5        then '继续配送'
          when 6        then '继续配送并赔偿'
          when 7        then '正在沟通中'
          when 8        then '丢弃包裹的，换单后寄回BKK'
          when 9        then '货物找回，继续派送'
          when 10       then  '改包裹状态'
          when 11       then '需客户修改信息'
          when 12       then '丢弃并赔偿（包裹发到内部拍卖仓）'
	  end '处理结果'
	 ,datediff('hour',convert_tz(di.created_at,'+00:00','+08:00'),ifnull(convert_tz(cdt.last_operated_at,'+00:00','+08:00'),convert_tz(cdt.first_operated_at,'+00:00','+08:00'))) '客服处理-上报时长/h'
	 ,case di.state
		  when 0 then '未处理'
		  when 1 then '已处理'
		  else di.state
      end '疑难件处理情况'
	 ,if(di.state=1,convert_tz(di.updated_at,'+00:00','+08:00'),null)  '疑难件处理完成时间'
	 ,datediff('hour',convert_tz(di.created_at,'+00:00','+08:00'),if(di.state=1,convert_tz(di.updated_at,'+00:00','+08:00'),null)) '疑难件处理时长/h'
	 ,datediff('hour',if(di.state=0,convert_tz(di.created_at,'+00:00','+08:00'),null) ,CURRENT_TIME()) '未处理当前时间-上报时间/h'
    ,if(di.state = 0 and di.created_at >= concat(curdate(), ' 12:00:00'), '当日20点后', '之前') 8点判断
from ph_staging.diff_info di
left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
join ph_staging.parcel_info pi on pi.pno=di.pno
join dwm.dwd_dim_bigClient dd on pi.client_id=dd.client_id
left join ph_bi.sys_store ss on ss.id=pi.ticket_pickup_store_id #揽收网点
left join ph_bi.sys_store ss1 on ss1.id=pi.dst_store_id#目的地网点
left join ph_bi.sys_store ss2 on ss2.id=di.store_id #上报当前网点
left join ph_bi.hr_staff_info hi on hi.staff_info_id=di.staff_info_id #疑难件处理人对应网点
left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id=di.id and cdt.organization_type=2 #疑难件处理进度
left join ph_bi.hr_staff_info hi2 on hi2.staff_info_id=cdt.operator_id #疑难件处理人对应网点
left join ph_bi.sys_department sd on sd.id=hi2.node_department_id
where
    di.diff_marker_category in (23,73,29,78,25,75)
    and di.state = 0;
;-- -. . -..- - / . -. - .-. -.--
select
	 di.pno '运单号'

     ,dd.client_name
	 ,convert_tz(pi.created_at,'+00:00','+08:00') '揽收日期'
	 ,ss.name '揽收网点'
	 ,case pi.state
		  when 1 then '已揽收'
		  when 2 then '运输中'
		  when 3 then '派送中'
		  when 4 then '已滞留'
		  when 5 then '已签收'
		  when 6 then '疑难件处理中'
		  when 7 then '已退件'
		  when 8 then '异常关闭'
		  when 9 then '已撤销'
		  ELSE pi.state
		  end as '包裹状态'
	 ,ss1.name '目的地网点'
	 ,ss2.name '上报疑难件网点'
	, di.diff_marker_category
    ,tdt2.cn_element as ' 疑难件原因 '
	 ,convert_tz(di.created_at,'+00:00','+08:00') '上报时间'
     ,date(convert_tz(di.created_at,'+00:00','+08:00')) '上报日期'
	 ,di.staff_info_id '上报人'
	 ,hi.name '上报人姓名'
	 ,sd.name '处理机构'
	 ,cdt.operator_id '客服操作人ID'
	 ,convert_tz(cdt.first_operated_at,'+00:00','+08:00') '第一次处理时间'
	 ,ifnull(convert_tz(cdt.last_operated_at,'+00:00','+08:00'),convert_tz(cdt.first_operated_at,'+00:00','+08:00')) '最后一次处理时间'
	 ,case cdt.state
		  when 0 then '未处理'
		  when 1 then '已处理'
		  when 2 then '正在沟通中'
		  when 3 then '财务驳回'
		  when 4 then '客户未处理'
		  when 5 then '转交闪速系统'
		  when 6 then '转交QAQC'
		  else cdt.state
		  end '客服处理情况'

     ,case cdt.negotiation_result_category
          when 1 then '赔偿'
          when 2        then '关闭订单(不赔偿不退货)'
          when 3        then'退货'
          when 4        then '退货并赔偿'
          when 5        then '继续配送'
          when 6        then '继续配送并赔偿'
          when 7        then '正在沟通中'
          when 8        then '丢弃包裹的，换单后寄回BKK'
          when 9        then '货物找回，继续派送'
          when 10       then  '改包裹状态'
          when 11       then '需客户修改信息'
          when 12       then '丢弃并赔偿（包裹发到内部拍卖仓）'
	  end '处理结果'
	 ,datediff('hour',convert_tz(di.created_at,'+00:00','+08:00'),ifnull(convert_tz(cdt.last_operated_at,'+00:00','+08:00'),convert_tz(cdt.first_operated_at,'+00:00','+08:00'))) '客服处理-上报时长/h'
	 ,case di.state
		  when 0 then '未处理'
		  when 1 then '已处理'
		  else di.state
      end '疑难件处理情况'
	 ,if(di.state=1,convert_tz(di.updated_at,'+00:00','+08:00'),null)  '疑难件处理完成时间'
# 	 ,datediff('hour',convert_tz(di.created_at,'+00:00','+08:00'),if(di.state=1,convert_tz(di.updated_at,'+00:00','+08:00'),null)) '疑难件处理时长/h'
	 ,datediff(now(),if(di.state=0,convert_tz(di.created_at,'+00:00','+08:00'),null) ) '未处理当前时间-上报时间/d'
    ,if(di.state = 0 and di.created_at >= concat(curdate(), ' 12:00:00'), '当日20点后', '之前') 8点判断
from ph_staging.diff_info di
left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
join ph_staging.parcel_info pi on pi.pno=di.pno
join dwm.dwd_dim_bigClient dd on pi.client_id=dd.client_id
left join ph_bi.sys_store ss on ss.id=pi.ticket_pickup_store_id #揽收网点
left join ph_bi.sys_store ss1 on ss1.id=pi.dst_store_id#目的地网点
left join ph_bi.sys_store ss2 on ss2.id=di.store_id #上报当前网点
left join ph_bi.hr_staff_info hi on hi.staff_info_id=di.staff_info_id #疑难件处理人对应网点
left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id=di.id and cdt.organization_type=2 #疑难件处理进度
left join ph_bi.hr_staff_info hi2 on hi2.staff_info_id=cdt.operator_id #疑难件处理人对应网点
left join ph_bi.sys_department sd on sd.id=hi2.node_department_id
where
    di.diff_marker_category in (23,73,29,78,25,75)
    and di.state = 0;
;-- -. . -..- - / . -. - .-. -.--
select curdate();
;-- -. . -..- - / . -. - .-. -.--
select
    pi.pno
from ph_staging.parcel_info pi
join ph_bi.parcel_lose_task plt on plt.pno = pi.pno
where
    pi.state not in (5,7,8,9)
    and pi.dst_store_id = 'PH19040F05'
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
    pi.pno
from ph_staging.parcel_info pi
join ph_bi.parcel_lose_task plt on plt.pno = pi.pno and pi.state = 6
where
    pi.state not in (5,7,8,9)
    and pi.dst_store_id = 'PH19040F05'
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
    pi.pno
from ph_staging.parcel_info pi
join ph_bi.parcel_lose_task plt on plt.pno = pi.pno and plt.state = 6
where
    pi.state not in (5,7,8,9)
    and pi.dst_store_id = 'PH19040F05'
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
    pi.pno
from ph_staging.parcel_info pi
join ph_bi.parcel_lose_task plt on plt.pno = pi.pno and plt.state = 6
left join dwm.dwd_ex_ph_parcel_details de on de.pno = pi.pno
where
    pi.state not in (5,7,8,9)
    and pi.dst_store_id = 'PH19040F05'
    and de.last_store_id = 'PH19040F05'
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
	 di.pno '运单号'
     ,dd.client_name 客户名称
	 ,convert_tz(pi.created_at,'+00:00','+08:00') '揽收日期'
	 ,ss.name '揽收网点'
	 ,case pi.state
		  when 1 then '已揽收'
		  when 2 then '运输中'
		  when 3 then '派送中'
		  when 4 then '已滞留'
		  when 5 then '已签收'
		  when 6 then '疑难件处理中'
		  when 7 then '已退件'
		  when 8 then '异常关闭'
		  when 9 then '已撤销'
		  ELSE pi.state
		  end as '包裹状态'
	 ,ss1.name '目的地网点'
	 ,ss2.name '上报疑难件网点'
	, di.diff_marker_category
    ,tdt2.cn_element as ' 疑难件原因 '
	 ,convert_tz(di.created_at,'+00:00','+08:00') '上报时间'
     ,date(convert_tz(di.created_at,'+00:00','+08:00')) '上报日期'
	 ,di.staff_info_id '上报人'
	 ,hi.name '上报人姓名'
	 ,sd.name '处理机构'
	 ,cdt.operator_id '客服操作人ID'
	 ,convert_tz(cdt.first_operated_at,'+00:00','+08:00') '第一次处理时间'
	 ,ifnull(convert_tz(cdt.last_operated_at,'+00:00','+08:00'),convert_tz(cdt.first_operated_at,'+00:00','+08:00')) '最后一次处理时间'
	 ,case cdt.state
		  when 0 then '未处理'
		  when 1 then '已处理'
		  when 2 then '正在沟通中'
		  when 3 then '财务驳回'
		  when 4 then '客户未处理'
		  when 5 then '转交闪速系统'
		  when 6 then '转交QAQC'
		  else cdt.state
		  end '客服处理情况'

     ,case cdt.negotiation_result_category
          when 1 then '赔偿'
          when 2        then '关闭订单(不赔偿不退货)'
          when 3        then'退货'
          when 4        then '退货并赔偿'
          when 5        then '继续配送'
          when 6        then '继续配送并赔偿'
          when 7        then '正在沟通中'
          when 8        then '丢弃包裹的，换单后寄回BKK'
          when 9        then '货物找回，继续派送'
          when 10       then  '改包裹状态'
          when 11       then '需客户修改信息'
          when 12       then '丢弃并赔偿（包裹发到内部拍卖仓）'
	  end '处理结果'
	 ,datediff('hour',convert_tz(di.created_at,'+00:00','+08:00'),ifnull(convert_tz(cdt.last_operated_at,'+00:00','+08:00'),convert_tz(cdt.first_operated_at,'+00:00','+08:00'))) '客服处理-上报时长/h'
	 ,case di.state
		  when 0 then '未处理'
		  when 1 then '已处理'
		  else di.state
      end '疑难件处理情况'
	 ,if(di.state=1,convert_tz(di.updated_at,'+00:00','+08:00'),null)  '疑难件处理完成时间'
# 	 ,datediff('hour',convert_tz(di.created_at,'+00:00','+08:00'),if(di.state=1,convert_tz(di.updated_at,'+00:00','+08:00'),null)) '疑难件处理时长/h'
# 	 ,datediff(now(),if(di.state=0,convert_tz(di.created_at,'+00:00','+08:00'),null) ) '未处理当前时间-上报时间/d'
#     ,if(di.state = 0 and di.created_at >= concat(curdate(), ' 12:00:00'), '当日20点后', '之前') 8点判断
    ,case
        when di.created_at >= date_add(curdate(), interval 12 hour ) then '当日20点后'
        when di.created_at < date_add(curdate(), interval 12 hour ) and di.created_at >= date_sub(curdate(), interval 8 hour ) then '积压时间 0 day'
        when di.created_at < date_sub(curdate(), interval 8 hour ) then concat('积压时间', datediff(now(), convert_tz(di.created_at , '+00:00', '+08:00'), ' day'))
    end 积压时长
from ph_staging.diff_info di
left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
join ph_staging.parcel_info pi on pi.pno=di.pno
join dwm.dwd_dim_bigClient dd on pi.client_id=dd.client_id
left join ph_bi.sys_store ss on ss.id=pi.ticket_pickup_store_id #揽收网点
left join ph_bi.sys_store ss1 on ss1.id=pi.dst_store_id#目的地网点
left join ph_bi.sys_store ss2 on ss2.id=di.store_id #上报当前网点
left join ph_bi.hr_staff_info hi on hi.staff_info_id=di.staff_info_id #疑难件处理人对应网点
left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id=di.id and cdt.organization_type=2 #疑难件处理进度
left join ph_bi.hr_staff_info hi2 on hi2.staff_info_id=cdt.operator_id #疑难件处理人对应网点
left join ph_bi.sys_department sd on sd.id=hi2.node_department_id
where
    di.diff_marker_category in (23,73,29,78,25,75)
    and di.state = 1
    and di.updated_at >= date_sub(curdate(), interval 8 hour )
    and di.updated_at < date_add(curdate(), interval 16 hour ) -- 今日处理

union all

select
	 di.pno '运单号'
     ,dd.client_name 客户名称
	 ,convert_tz(pi.created_at,'+00:00','+08:00') '揽收日期'
	 ,ss.name '揽收网点'
	 ,case pi.state
		  when 1 then '已揽收'
		  when 2 then '运输中'
		  when 3 then '派送中'
		  when 4 then '已滞留'
		  when 5 then '已签收'
		  when 6 then '疑难件处理中'
		  when 7 then '已退件'
		  when 8 then '异常关闭'
		  when 9 then '已撤销'
		  ELSE pi.state
		  end as '包裹状态'
	 ,ss1.name '目的地网点'
	 ,ss2.name '上报疑难件网点'
	, di.diff_marker_category
    ,tdt2.cn_element as ' 疑难件原因 '
	 ,convert_tz(di.created_at,'+00:00','+08:00') '上报时间'
     ,date(convert_tz(di.created_at,'+00:00','+08:00')) '上报日期'
	 ,di.staff_info_id '上报人'
	 ,hi.name '上报人姓名'
	 ,sd.name '处理机构'
	 ,cdt.operator_id '客服操作人ID'
	 ,convert_tz(cdt.first_operated_at,'+00:00','+08:00') '第一次处理时间'
	 ,ifnull(convert_tz(cdt.last_operated_at,'+00:00','+08:00'),convert_tz(cdt.first_operated_at,'+00:00','+08:00')) '最后一次处理时间'
	 ,case cdt.state
		  when 0 then '未处理'
		  when 1 then '已处理'
		  when 2 then '正在沟通中'
		  when 3 then '财务驳回'
		  when 4 then '客户未处理'
		  when 5 then '转交闪速系统'
		  when 6 then '转交QAQC'
		  else cdt.state
		  end '客服处理情况'

     ,case cdt.negotiation_result_category
          when 1 then '赔偿'
          when 2        then '关闭订单(不赔偿不退货)'
          when 3        then'退货'
          when 4        then '退货并赔偿'
          when 5        then '继续配送'
          when 6        then '继续配送并赔偿'
          when 7        then '正在沟通中'
          when 8        then '丢弃包裹的，换单后寄回BKK'
          when 9        then '货物找回，继续派送'
          when 10       then  '改包裹状态'
          when 11       then '需客户修改信息'
          when 12       then '丢弃并赔偿（包裹发到内部拍卖仓）'
	  end '处理结果'
	 ,datediff('hour',convert_tz(di.created_at,'+00:00','+08:00'),ifnull(convert_tz(cdt.last_operated_at,'+00:00','+08:00'),convert_tz(cdt.first_operated_at,'+00:00','+08:00'))) '客服处理-上报时长/h'
	 ,case di.state
		  when 0 then '未处理'
		  when 1 then '已处理'
		  else di.state
      end '疑难件处理情况'
	 ,if(di.state=1,convert_tz(di.updated_at,'+00:00','+08:00'),null)  '疑难件处理完成时间'
# 	 ,datediff('hour',convert_tz(di.created_at,'+00:00','+08:00'),if(di.state=1,convert_tz(di.updated_at,'+00:00','+08:00'),null)) '疑难件处理时长/h'
# 	 ,datediff(now(),if(di.state=0,convert_tz(di.created_at,'+00:00','+08:00'),null) ) '未处理当前时间-上报时间/d'
#     ,if(di.state = 0 and di.created_at >= concat(curdate(), ' 12:00:00'), '当日20点后', '之前') 8点判断
    ,case
        when di.created_at >= date_add(curdate(), interval 12 hour ) then '当日20点后'
        when di.created_at < date_add(curdate(), interval 12 hour ) and di.created_at >= date_sub(curdate(), interval 8 hour ) then '积压时间 0 day'
        when di.created_at < date_sub(curdate(), interval 8 hour ) then concat('积压时间', datediff(now(), convert_tz(di.created_at , '+00:00', '+08:00'), ' day'))
    end 积压时长
from ph_staging.diff_info di
left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
join ph_staging.parcel_info pi on pi.pno=di.pno
join dwm.dwd_dim_bigClient dd on pi.client_id=dd.client_id
left join ph_bi.sys_store ss on ss.id=pi.ticket_pickup_store_id #揽收网点
left join ph_bi.sys_store ss1 on ss1.id=pi.dst_store_id#目的地网点
left join ph_bi.sys_store ss2 on ss2.id=di.store_id #上报当前网点
left join ph_bi.hr_staff_info hi on hi.staff_info_id=di.staff_info_id #疑难件处理人对应网点
left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id=di.id and cdt.organization_type=2 #疑难件处理进度
left join ph_bi.hr_staff_info hi2 on hi2.staff_info_id=cdt.operator_id #疑难件处理人对应网点
left join ph_bi.sys_department sd on sd.id=hi2.node_department_id
where
    di.diff_marker_category in (23,73,29,78,25,75)
    and di.state = 0;
;-- -. . -..- - / . -. - .-. -.--
select
    bc.client_name
    ,tdt2.cn_element 疑难件原因
    ,case cdt.negotiation_result_category
        when 1 then '赔偿'
        when 2 then '关闭订单(不赔偿不退货)'
        when 3 then'退货'
        when 4 then '退货并赔偿'
        when 5 then '继续配送'
        when 6 then '继续配送并赔偿'
        when 7 then '正在沟通中'
        when 8 then '丢弃包裹的，换单后寄回BKK'
        when 9 then '货物找回，继续派送'
        when 10 then  '改包裹状态'
        when 11 then '需客户修改信息'
        when 12 then '丢弃并赔偿（包裹发到内部拍卖仓）'
    end 处理结果
from ph_staging.diff_info di
left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
left join ph_staging.parcel_info pi on pi.pno = di.pno
join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
where
    di.updated_at >= date_sub(curdate(), interval 8 hour )
    and di.updated_at < date_add(curdate(), interval 16 hour ) -- 今日处理
    and di.state = 1 -- 已处理
    and di.diff_marker_category in (23,73,29,78,25,75)
group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
    bc.client_name
    ,tdt2.cn_element 疑难件原因
    ,case cdt.negotiation_result_category
        when 1 then '赔偿'
        when 2 then '关闭订单(不赔偿不退货)'
        when 3 then'退货'
        when 4 then '退货并赔偿'
        when 5 then '继续配送'
        when 6 then '继续配送并赔偿'
        when 7 then '正在沟通中'
        when 8 then '丢弃包裹的，换单后寄回BKK'
        when 9 then '货物找回，继续派送'
        when 10 then  '改包裹状态'
        when 11 then '需客户修改信息'
        when 12 then '丢弃并赔偿（包裹发到内部拍卖仓）'
    end 处理结果
    ,count(di.id) 单量
from ph_staging.diff_info di
left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
left join ph_staging.parcel_info pi on pi.pno = di.pno
join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
where
    di.updated_at >= date_sub(curdate(), interval 8 hour )
    and di.updated_at < date_add(curdate(), interval 16 hour ) -- 今日处理
    and di.state = 1 -- 已处理
    and di.diff_marker_category in (23,73,29,78,25,75)
group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
    a.client_name 客户
    ,a.疑难件原因
    ,max(if(a.处理结果 = '继续配送',a.单量, null)) 继续派送
    ,max(if(a.处理结果 = '退货',a.单量, null)) 退货
from
    (
        select
            bc.client_name
            ,tdt2.cn_element 疑难件原因
            ,case cdt.negotiation_result_category
                when 1 then '赔偿'
                when 2 then '关闭订单(不赔偿不退货)'
                when 3 then'退货'
                when 4 then '退货并赔偿'
                when 5 then '继续配送'
                when 6 then '继续配送并赔偿'
                when 7 then '正在沟通中'
                when 8 then '丢弃包裹的，换单后寄回BKK'
                when 9 then '货物找回，继续派送'
                when 10 then  '改包裹状态'
                when 11 then '需客户修改信息'
                when 12 then '丢弃并赔偿（包裹发到内部拍卖仓）'
            end 处理结果
            ,count(di.id) 单量
        from ph_staging.diff_info di
        left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
        left join ph_staging.parcel_info pi on pi.pno = di.pno
        join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
        where
            di.updated_at >= date_sub(curdate(), interval 8 hour )
            and di.updated_at < date_add(curdate(), interval 16 hour ) -- 今日处理
            and di.state = 1 -- 已处理
            and di.diff_marker_category in (23,73,29,78,25,75)
        group by 1,2
    ) a
group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
    a.client_name 客户
    ,a.疑难件原因
    ,max(if(a.处理结果 = '继续配送',a.单量, null)) 继续派送
    ,max(if(a.处理结果 = '退货',a.单量, null)) 退货
from
    (
        select
            bc.client_name
            ,tdt2.cn_element 疑难件原因
            ,case cdt.negotiation_result_category
                when 1 then '赔偿'
                when 2 then '关闭订单(不赔偿不退货)'
                when 3 then'退货'
                when 4 then '退货并赔偿'
                when 5 then '继续配送'
                when 6 then '继续配送并赔偿'
                when 7 then '正在沟通中'
                when 8 then '丢弃包裹的，换单后寄回BKK'
                when 9 then '货物找回，继续派送'
                when 10 then  '改包裹状态'
                when 11 then '需客户修改信息'
                when 12 then '丢弃并赔偿（包裹发到内部拍卖仓）'
            end 处理结果
            ,count(di.id) 单量
        from ph_staging.diff_info di
        left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
        left join ph_staging.parcel_info pi on pi.pno = di.pno
        join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
        where
            di.updated_at >= date_sub(curdate(), interval 8 hour )
            and di.updated_at < date_add(curdate(), interval 16 hour ) -- 今日处理
            and di.state = 1 -- 已处理
            and di.diff_marker_category in (23,73,29,78,25,75)
        group by 1,2
    ) a
group by 1,2
order by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
    a.client_name 客户
    ,a.疑难件原因
    ,max(if(a.处理结果 = '继续配送',a.单量, null)) 继续派送
    ,max(if(a.处理结果 = '退货',a.单量, null)) 退货
from
    (
        select
            bc.client_name
            ,tdt2.cn_element 疑难件原因
            ,case cdt.negotiation_result_category
                when 1 then '赔偿'
                when 2 then '关闭订单(不赔偿不退货)'
                when 3 then'退货'
                when 4 then '退货并赔偿'
                when 5 then '继续配送'
                when 6 then '继续配送并赔偿'
                when 7 then '正在沟通中'
                when 8 then '丢弃包裹的，换单后寄回BKK'
                when 9 then '货物找回，继续派送'
                when 10 then  '改包裹状态'
                when 11 then '需客户修改信息'
                when 12 then '丢弃并赔偿（包裹发到内部拍卖仓）'
            end 处理结果
            ,count(di.id) 单量
        from ph_staging.diff_info di
        left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
        left join ph_staging.parcel_info pi on pi.pno = di.pno
        join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
        where
            di.updated_at >= date_sub(curdate(), interval 8 hour )
            and di.updated_at < date_add(curdate(), interval 16 hour ) -- 今日处理
            and di.state = 1 -- 已处理
            and di.diff_marker_category in (23,73,29,78,25,75)
        group by 1,2,3
    ) a
group by 1,2
order by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
	 di.pno '运单号'
     ,dd.client_name 客户名称
	 ,convert_tz(pi.created_at,'+00:00','+08:00') '揽收日期'
	 ,ss.name '揽收网点'
	 ,case pi.state
		  when 1 then '已揽收'
		  when 2 then '运输中'
		  when 3 then '派送中'
		  when 4 then '已滞留'
		  when 5 then '已签收'
		  when 6 then '疑难件处理中'
		  when 7 then '已退件'
		  when 8 then '异常关闭'
		  when 9 then '已撤销'
		  else pi.state
      end as '包裹状态'
	 ,ss1.name '目的地网点'
	 ,ss2.name '上报疑难件网点'
	, di.diff_marker_category
    ,tdt2.cn_element as ' 疑难件原因 '
	 ,convert_tz(di.created_at,'+00:00','+08:00') '上报时间'
     ,date(convert_tz(di.created_at,'+00:00','+08:00')) '上报日期'
	 ,di.staff_info_id '上报人'
	 ,hi.name '上报人姓名'
	 ,sd.name '处理机构'
	 ,cdt.operator_id '客服操作人ID'
	 ,convert_tz(cdt.first_operated_at,'+00:00','+08:00') '第一次处理时间'
	 ,ifnull(convert_tz(cdt.last_operated_at,'+00:00','+08:00'),convert_tz(cdt.first_operated_at,'+00:00','+08:00')) '最后一次处理时间'
	 ,case cdt.state
		  when 0 then '未处理'
		  when 1 then '已处理'
		  when 2 then '正在沟通中'
		  when 3 then '财务驳回'
		  when 4 then '客户未处理'
		  when 5 then '转交闪速系统'
		  when 6 then '转交QAQC'
		  else cdt.state
		  end '客服处理情况'

     ,case cdt.negotiation_result_category
          when 1 then '赔偿'
          when 2        then '关闭订单(不赔偿不退货)'
          when 3        then'退货'
          when 4        then '退货并赔偿'
          when 5        then '继续配送'
          when 6        then '继续配送并赔偿'
          when 7        then '正在沟通中'
          when 8        then '丢弃包裹的，换单后寄回BKK'
          when 9        then '货物找回，继续派送'
          when 10       then  '改包裹状态'
          when 11       then '需客户修改信息'
          when 12       then '丢弃并赔偿（包裹发到内部拍卖仓）'
	  end '处理结果'
	 ,datediff('hour',convert_tz(di.created_at,'+00:00','+08:00'),ifnull(convert_tz(cdt.last_operated_at,'+00:00','+08:00'),convert_tz(cdt.first_operated_at,'+00:00','+08:00'))) '客服处理-上报时长/h'
	 ,case di.state
		  when 0 then '未处理'
		  when 1 then '已处理'
		  else di.state
      end '疑难件处理情况'
	 ,if(di.state=1,convert_tz(di.updated_at,'+00:00','+08:00'),null)  '疑难件处理完成时间'
# 	 ,datediff('hour',convert_tz(di.created_at,'+00:00','+08:00'),if(di.state=1,convert_tz(di.updated_at,'+00:00','+08:00'),null)) '疑难件处理时长/h'
# 	 ,datediff(now(),if(di.state=0,convert_tz(di.created_at,'+00:00','+08:00'),null) ) '未处理当前时间-上报时间/d'
#     ,if(di.state = 0 and di.created_at >= concat(curdate(), ' 12:00:00'), '当日20点后', '之前') 8点判断
    ,case
        when di.created_at >= date_add(curdate(), interval 12 hour ) then '当日20点后'
        when di.created_at < date_add(curdate(), interval 12 hour ) and di.created_at >= date_sub(curdate(), interval 8 hour ) then '积压时间 0 day'
        when di.created_at < date_sub(curdate(), interval 8 hour ) then concat('积压时间', datediff(now(), convert_tz(di.created_at , '+00:00', '+08:00'), ' day'))
    end 积压时长
from ph_staging.diff_info di
left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
join ph_staging.parcel_info pi on pi.pno=di.pno
join dwm.dwd_dim_bigClient dd on pi.client_id=dd.client_id
left join ph_bi.sys_store ss on ss.id=pi.ticket_pickup_store_id #揽收网点
left join ph_bi.sys_store ss1 on ss1.id=pi.dst_store_id#目的地网点
left join ph_bi.sys_store ss2 on ss2.id=di.store_id #上报当前网点
left join ph_bi.hr_staff_info hi on hi.staff_info_id=di.staff_info_id #疑难件处理人对应网点
left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id=di.id and cdt.organization_type=2 #疑难件处理进度
left join ph_bi.hr_staff_info hi2 on hi2.staff_info_id=cdt.operator_id #疑难件处理人对应网点
left join ph_bi.sys_department sd on sd.id=hi2.node_department_id
where
    di.diff_marker_category in (23,73,29,78,25,75)
    and di.state = 1
    and di.updated_at >= date_sub(curdate(), interval 8 hour )
    and di.updated_at < date_add(curdate(), interval 16 hour ) -- 今日处理

union all

select
	 di.pno '运单号'
     ,dd.client_name 客户名称
	 ,convert_tz(pi.created_at,'+00:00','+08:00') '揽收日期'
	 ,ss.name '揽收网点'
	 ,case pi.state
		  when 1 then '已揽收'
		  when 2 then '运输中'
		  when 3 then '派送中'
		  when 4 then '已滞留'
		  when 5 then '已签收'
		  when 6 then '疑难件处理中'
		  when 7 then '已退件'
		  when 8 then '异常关闭'
		  when 9 then '已撤销'
		  ELSE pi.state
		  end as '包裹状态'
	 ,ss1.name '目的地网点'
	 ,ss2.name '上报疑难件网点'
	, di.diff_marker_category
    ,tdt2.cn_element as ' 疑难件原因 '
	 ,convert_tz(di.created_at,'+00:00','+08:00') '上报时间'
     ,date(convert_tz(di.created_at,'+00:00','+08:00')) '上报日期'
	 ,di.staff_info_id '上报人'
	 ,hi.name '上报人姓名'
	 ,sd.name '处理机构'
	 ,cdt.operator_id '客服操作人ID'
	 ,convert_tz(cdt.first_operated_at,'+00:00','+08:00') '第一次处理时间'
	 ,ifnull(convert_tz(cdt.last_operated_at,'+00:00','+08:00'),convert_tz(cdt.first_operated_at,'+00:00','+08:00')) '最后一次处理时间'
	 ,case cdt.state
		  when 0 then '未处理'
		  when 1 then '已处理'
		  when 2 then '正在沟通中'
		  when 3 then '财务驳回'
		  when 4 then '客户未处理'
		  when 5 then '转交闪速系统'
		  when 6 then '转交QAQC'
		  else cdt.state
		  end '客服处理情况'

     ,case cdt.negotiation_result_category
          when 1 then '赔偿'
          when 2        then '关闭订单(不赔偿不退货)'
          when 3        then'退货'
          when 4        then '退货并赔偿'
          when 5        then '继续配送'
          when 6        then '继续配送并赔偿'
          when 7        then '正在沟通中'
          when 8        then '丢弃包裹的，换单后寄回BKK'
          when 9        then '货物找回，继续派送'
          when 10       then  '改包裹状态'
          when 11       then '需客户修改信息'
          when 12       then '丢弃并赔偿（包裹发到内部拍卖仓）'
	  end '处理结果'
	 ,datediff('hour',convert_tz(di.created_at,'+00:00','+08:00'),ifnull(convert_tz(cdt.last_operated_at,'+00:00','+08:00'),convert_tz(cdt.first_operated_at,'+00:00','+08:00'))) '客服处理-上报时长/h'
	 ,case di.state
		  when 0 then '未处理'
		  when 1 then '已处理'
		  else di.state
      end '疑难件处理情况'
	 ,if(di.state=1,convert_tz(di.updated_at,'+00:00','+08:00'),null)  '疑难件处理完成时间'
# 	 ,datediff('hour',convert_tz(di.created_at,'+00:00','+08:00'),if(di.state=1,convert_tz(di.updated_at,'+00:00','+08:00'),null)) '疑难件处理时长/h'
# 	 ,datediff(now(),if(di.state=0,convert_tz(di.created_at,'+00:00','+08:00'),null) ) '未处理当前时间-上报时间/d'
#     ,if(di.state = 0 and di.created_at >= concat(curdate(), ' 12:00:00'), '当日20点后', '之前') 8点判断
    ,case
        when di.created_at >= date_add(curdate(), interval 12 hour ) then '当日20点后'
        when di.created_at < date_add(curdate(), interval 12 hour ) and di.created_at >= date_sub(curdate(), interval 8 hour ) then '积压时间 0 day'
        when di.created_at < date_sub(curdate(), interval 8 hour ) then concat('积压时间', datediff(now(), convert_tz(di.created_at , '+00:00', '+08:00'), ' day'))
    end 积压时长
from ph_staging.diff_info di
left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
join ph_staging.parcel_info pi on pi.pno=di.pno
join dwm.dwd_dim_bigClient dd on pi.client_id=dd.client_id
left join ph_bi.sys_store ss on ss.id=pi.ticket_pickup_store_id #揽收网点
left join ph_bi.sys_store ss1 on ss1.id=pi.dst_store_id#目的地网点
left join ph_bi.sys_store ss2 on ss2.id=di.store_id #上报当前网点
left join ph_bi.hr_staff_info hi on hi.staff_info_id=di.staff_info_id #疑难件处理人对应网点
left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id=di.id and cdt.organization_type=2 #疑难件处理进度
left join ph_bi.hr_staff_info hi2 on hi2.staff_info_id=cdt.operator_id #疑难件处理人对应网点
left join ph_bi.sys_department sd on sd.id=hi2.node_department_id
where
    di.diff_marker_category in (23,73,29,78,25,75)
    and di.state = 0;
;-- -. . -..- - / . -. - .-. -.--
select
    case  a.diff_marker_category
        when 1 then '客户不在家/电话无人接听'
         when 2 then '收件人拒收'
         when 3 then '快件分错网点'
         when 4 then '外包装破损'
         when 5 then '货物破损'
         when 6 then '货物短少'
         when 7 then '货物丢失'
         when 8 then '电话联系不上'
         when 9 then '客户改约时间'
         when 10 then '客户不在'
         when 11 then '客户取消任务'
         when 12 then '无人签收'
         when 13 then '客户周末或假期不收货'
         when 14 then '客户改约时间'
         when 15 then '当日运力不足，无法派送'
         when 16 then '联系不上收件人'
         when 17 then '收件人拒收'
         when 18 then '快件分错网点'
         when 19 then '外包装破损'
         when 20 then '货物破损'
         when 21 then '货物短少'
         when 22 then '货物丢失'
         when 23 then '收件人/地址不清晰或不正确'
         when 24 then '收件地址已废弃或不存在'
         when 25 then '收件人电话号码错误'
         when 26 then 'cod金额不正确'
         when 27 then '无实际包裹'
         when 28 then '已妥投未交接'
         when 29 then '收件人电话号码是空号'
         when 30 then '快件分错网点-地址正确'
         when 31 then '快件分错网点-地址错误'
         when 32 then '禁运品'
         when 33 then '严重破损（丢弃）'
         when 34 then '退件两次尝试派送失败'
         when 35 then '不能打开locker'
         when 36 then 'locker不能使用'
         when 37 then '该地址找不到lockerstation'
         when 38 then '一票多件'
         when 39 then '多次尝试派件失败'
         when 40 then '客户不在家/电话无人接听'
         when 41 then '错过班车时间'
         when 42 then '目的地是偏远地区,留仓待次日派送'
         when 43 then '目的地是岛屿,留仓待次日派送'
         when 44 then '企业/机构当天已下班'
         when 45 then '子母件包裹未全部到达网点'
         when 46 then '不可抗力原因留仓(台风)'
         when 47 then '虚假包裹'
         when 50 then '客户取消寄件'
         when 51 then '信息录入错误'
         when 52 then '客户取消寄件'
         when 69 then '禁运品'
         when 70 then '客户改约时间'
         when 71 then '当日运力不足，无法派送'
         when 72 then '客户周末或假期不收货'
         when 73 then '收件人/地址不清晰或不正确'
         when 74 then '收件地址已废弃或不存在'
         when 75 then '收件人电话号码错误'
         when 76 then 'cod金额不正确'
         when 77 then '企业/机构当天已下班'
         when 78 then '收件人电话号码是空号'
         when 79 then '快件分错网点-地址错误'
         when 80 then '客户取消任务'
         when 81 then '重复下单'
         when 82 then '已完成揽件'
         when 83 then '联系不上客户'
         when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
         when 85 then '寄件人电话号码是空号'
         when 86 then '包裹不符合揽收条件超大件'
         when 87 then '包裹不符合揽收条件违禁品'
         when 88 then '寄件人地址为岛屿'
         when 89 then '运力短缺，跟客户协商推迟揽收'
         when 90 then '包裹未准备好推迟揽收'
         when 91 then '包裹包装不符合运输标准'
         when 92 then '客户提供的清单里没有此包裹'
         when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
         when 94 then '客户取消寄件/客户实际不想寄此包裹'
         when 95 then '车辆/人力短缺推迟揽收'
         when 96 then '遗漏揽收(已停用)'
         when 97 then '子母件(一个单号多个包裹)'
         when 98 then '地址错误addresserror'
         when 99 then '包裹不符合揽收条件：超大件'
         when 100 then '包裹不符合揽收条件：违禁品'
         when 101 then '包裹包装不符合运输标准'
         when 102 then '包裹未准备好'
         when 103 then '运力短缺，跟客户协商推迟揽收'
         when 104 then '子母件(一个单号多个包裹)'
         when 105 then '破损包裹'
         when 106 then '空包裹'
         when 107 then '不能打开locker(密码错误)'
         when 108 then 'locker不能使用'
         when 109 then 'locker找不到'
         when 110 then '运单号与实际包裹的单号不一致'
         when 111 then 'box客户取消任务'
         when 112 then '不能打开locker(密码错误)'
         when 113 then 'locker不能使用'
         when 114 then 'locker找不到'
         when 115 then '实际重量尺寸大于客户下单的重量尺寸'
         when 116 then '客户仓库关闭'
         when 117 then '客户仓库关闭'
         when 118 then 'SHOPEE订单系统自动关闭'
         when 119 then '客户取消包裹'
         when 121 then '地址错误'
         when 122 then '当日运力不足，无法揽收'
    end 疑难原因
    ,a.类型
    ,a.疑难件创建时间段
    ,a.处理时间
    ,a.单量
    ,b.avg_deal_h 平均处理时长_hour
from
    (
        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,case
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 1 then '1小时内'
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 >= 1 and timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 2 then '1-2小时'
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 > 2 and timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 24 then '2小时-1天'
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 > 24 and timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 72 then '1-3天'
                else  '3天以上'
            end 处理时间
            ,count(di.id) 单量
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16
        group by 1,2,3,4

        union all

        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,case
                when cdt.first_operated_at < concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') then '12点前处理完成'
                when cdt.first_operated_at > concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') and cdt.first_operated_at < date_add(concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00'), interval 2 day) then '0-2天内'
                else '超时2天以上+未处理'
            end 处理时间
            ,count(di.id) 单量
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and
            (hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 10 or hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 16)
        group by 1,2,3
    ) a
left join
    (
        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,sum(timestampdiff(second , di.created_at, cdt.first_operated_at)/3600)/count(di.id) avg_deal_h
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16
            and cdt.first_operated_at is not null
        group by 1,2

        union all

        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,sum(timestampdiff(second , di.created_at, cdt.first_operated_at)/3600)/count(di.id) avg_deal_h
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and
            (hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 10 or hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 16)
            and cdt.first_operated_at is not null
        group by 1,2

    ) b on a.diff_marker_category = b.diff_marker_category and a.疑难件创建时间段 = b.疑难件创建时间段 and a.类型 = b.类型;
;-- -. . -..- - / . -. - .-. -.--
select
    case  di.diff_marker_category
        when 1 then '客户不在家/电话无人接听'
         when 2 then '收件人拒收'
         when 3 then '快件分错网点'
         when 4 then '外包装破损'
         when 5 then '货物破损'
         when 6 then '货物短少'
         when 7 then '货物丢失'
         when 8 then '电话联系不上'
         when 9 then '客户改约时间'
         when 10 then '客户不在'
         when 11 then '客户取消任务'
         when 12 then '无人签收'
         when 13 then '客户周末或假期不收货'
         when 14 then '客户改约时间'
         when 15 then '当日运力不足，无法派送'
         when 16 then '联系不上收件人'
         when 17 then '收件人拒收'
         when 18 then '快件分错网点'
         when 19 then '外包装破损'
         when 20 then '货物破损'
         when 21 then '货物短少'
         when 22 then '货物丢失'
         when 23 then '收件人/地址不清晰或不正确'
         when 24 then '收件地址已废弃或不存在'
         when 25 then '收件人电话号码错误'
         when 26 then 'cod金额不正确'
         when 27 then '无实际包裹'
         when 28 then '已妥投未交接'
         when 29 then '收件人电话号码是空号'
         when 30 then '快件分错网点-地址正确'
         when 31 then '快件分错网点-地址错误'
         when 32 then '禁运品'
         when 33 then '严重破损（丢弃）'
         when 34 then '退件两次尝试派送失败'
         when 35 then '不能打开locker'
         when 36 then 'locker不能使用'
         when 37 then '该地址找不到lockerstation'
         when 38 then '一票多件'
         when 39 then '多次尝试派件失败'
         when 40 then '客户不在家/电话无人接听'
         when 41 then '错过班车时间'
         when 42 then '目的地是偏远地区,留仓待次日派送'
         when 43 then '目的地是岛屿,留仓待次日派送'
         when 44 then '企业/机构当天已下班'
         when 45 then '子母件包裹未全部到达网点'
         when 46 then '不可抗力原因留仓(台风)'
         when 47 then '虚假包裹'
         when 50 then '客户取消寄件'
         when 51 then '信息录入错误'
         when 52 then '客户取消寄件'
         when 69 then '禁运品'
         when 70 then '客户改约时间'
         when 71 then '当日运力不足，无法派送'
         when 72 then '客户周末或假期不收货'
         when 73 then '收件人/地址不清晰或不正确'
         when 74 then '收件地址已废弃或不存在'
         when 75 then '收件人电话号码错误'
         when 76 then 'cod金额不正确'
         when 77 then '企业/机构当天已下班'
         when 78 then '收件人电话号码是空号'
         when 79 then '快件分错网点-地址错误'
         when 80 then '客户取消任务'
         when 81 then '重复下单'
         when 82 then '已完成揽件'
         when 83 then '联系不上客户'
         when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
         when 85 then '寄件人电话号码是空号'
         when 86 then '包裹不符合揽收条件超大件'
         when 87 then '包裹不符合揽收条件违禁品'
         when 88 then '寄件人地址为岛屿'
         when 89 then '运力短缺，跟客户协商推迟揽收'
         when 90 then '包裹未准备好推迟揽收'
         when 91 then '包裹包装不符合运输标准'
         when 92 then '客户提供的清单里没有此包裹'
         when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
         when 94 then '客户取消寄件/客户实际不想寄此包裹'
         when 95 then '车辆/人力短缺推迟揽收'
         when 96 then '遗漏揽收(已停用)'
         when 97 then '子母件(一个单号多个包裹)'
         when 98 then '地址错误addresserror'
         when 99 then '包裹不符合揽收条件：超大件'
         when 100 then '包裹不符合揽收条件：违禁品'
         when 101 then '包裹包装不符合运输标准'
         when 102 then '包裹未准备好'
         when 103 then '运力短缺，跟客户协商推迟揽收'
         when 104 then '子母件(一个单号多个包裹)'
         when 105 then '破损包裹'
         when 106 then '空包裹'
         when 107 then '不能打开locker(密码错误)'
         when 108 then 'locker不能使用'
         when 109 then 'locker找不到'
         when 110 then '运单号与实际包裹的单号不一致'
         when 111 then 'box客户取消任务'
         when 112 then '不能打开locker(密码错误)'
         when 113 then 'locker不能使用'
         when 114 then 'locker找不到'
         when 115 then '实际重量尺寸大于客户下单的重量尺寸'
         when 116 then '客户仓库关闭'
         when 117 then '客户仓库关闭'
         when 118 then 'SHOPEE订单系统自动关闭'
         when 119 then '客户取消包裹'
         when 121 then '地址错误'
         when 122 then '当日运力不足，无法揽收'
    end 疑难原因
    ,case cdt. negotiation_result_category
        when 1 then '赔偿'
        when 2 then '关闭订单(不赔偿不退货)'
        when 3 then '退货'
        when 4 then  '退货并赔偿'
        when 5 then '继续配送'
        when 6 then '继续配送并赔偿'
        when 7 then '正在沟通中'
        when 8 then '丢弃包裹的，换单后寄回BKK'
        when 9 then '货物找回，继续派送'
        when 10 then '改包裹状态'
        when 11 then '需客户修改信息'
    end AS 协商结果
    ,if(ss.category = 6, 'FH', '网点') 类型
    ,count(di.id) 单量
from ph_staging.diff_info di
left join ph_staging.parcel_info pi on di.pno = pi.pno
left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    di.created_at >= '2023-05-31 16:00:00'
    and di.created_at < '2023-06-19 16:00:00'
    and bc.client_id is null  -- ka&小c
    and cdt.negotiation_result_category is not null
group by 1,2,3;
;-- -. . -..- - / . -. - .-. -.--
select
    a.client_name 客户
    ,a.疑难件原因
    ,max(if(a.处理结果 = '继续配送',a.单量, 0)) 继续派送
    ,max(if(a.处理结果 = '退货',a.单量, 0)) 退货
from
    (
        select
            bc.client_name
            ,tdt2.cn_element 疑难件原因
            ,case cdt.negotiation_result_category
                when 1 then '赔偿'
                when 2 then '关闭订单(不赔偿不退货)'
                when 3 then'退货'
                when 4 then '退货并赔偿'
                when 5 then '继续配送'
                when 6 then '继续配送并赔偿'
                when 7 then '正在沟通中'
                when 8 then '丢弃包裹的，换单后寄回BKK'
                when 9 then '货物找回，继续派送'
                when 10 then  '改包裹状态'
                when 11 then '需客户修改信息'
                when 12 then '丢弃并赔偿（包裹发到内部拍卖仓）'
            end 处理结果
            ,count(di.id) 单量
        from ph_staging.diff_info di
        left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
        left join ph_staging.parcel_info pi on pi.pno = di.pno
        join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
        where
            di.updated_at >= date_sub(curdate(), interval 8 hour )
            and di.updated_at < date_add(curdate(), interval 16 hour ) -- 今日处理
            and di.state = 1 -- 已处理
            and di.diff_marker_category in (23,73,29,78,25,75)
        group by 1,2,3
    ) a
group by 1,2
order by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,case
                when cdt.first_operated_at < concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') then '12点前处理完成'
                when cdt.first_operated_at > concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') and cdt.first_operated_at < date_add(concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00'), interval 2 day) then '0-2天内'
                else '超时2天以上+未处理'
            end 处理时间
            ,count(di.id) 单量
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and
            (hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 10 or hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 16)
        group by 1,2,3;
;-- -. . -..- - / . -. - .-. -.--
select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,case
                when cdt.first_operated_at < concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') then '12点前处理完成'
                when cdt.first_operated_at > concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') and cdt.first_operated_at < date_add(concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00'), interval 2 day) then '0-2天内'
                else '超时2天以上+未处理'
            end 处理时间
#             ,count(di.id) 单量
            ,di.id
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and
            (hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 10 or hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 16);
;-- -. . -..- - / . -. - .-. -.--
select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,case
                when cdt.first_operated_at < concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') then '12点前处理完成'
                when cdt.first_operated_at > concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') and cdt.first_operated_at < date_add(concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00'), interval 2 day) then '0-2天内'
                else '超时2天以上+未处理'
            end 处理时间
            ,convert_tz(di.created_at, '+00:00', '+08:00') 创建时间
            ,convert_tz(di.created_at, '+00:00', '+08:00') 第一次处理时间
#             ,count(di.id) 单量
            ,di.id
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and
            (hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 10 or hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 16);
;-- -. . -..- - / . -. - .-. -.--
select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,case
                when cdt.first_operated_at < concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') then '12点前处理完成'
                when cdt.first_operated_at > concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') and cdt.first_operated_at < date_add(concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00'), interval 2 day) then '0-2天内'
                else '超时2天以上+未处理'
            end 处理时间
            ,convert_tz(di.created_at, '+00:00', '+08:00') 创建时间
            ,convert_tz(cdt.first_operated_at, '+00:00', '+08:00') 第一次处理时间
#             ,count(di.id) 单量
            ,di.id
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and
            (hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 10 or hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 16);
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
        ,pi.returned
        ,pi.dst_store_id
        ,pi.client_id
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,if(t1.returned = 1, '退件', '正向件')  方向
    ,t1.client_id 客户ID
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as 客户类型
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
    ,case
        when t1.state = 6 and di.pno is not null then di.sh_do
        when t1.state = 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is null and pct.pno is not null then 'qaqc-TeamB'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then pr.store_name
        else de.last_store_name
    end 待处理节点
    ,case
        when t1.state = 6 and di.pno is not null then 'KAM/揽件网点未协商'
        when t1.state = 6 and di.pno is null  then '闪速系统沟通处理中'
        when t1.state != 6 and plt.pno is not null and plt2.pno is not null then '闪速系统沟通处理中'
        when plt.pno is null and pct.pno is not null then '闪速超时效理赔未完成'
        when de.last_store_id = t1.ticket_pickup_store_id and plt2.pno is null then '揽件未发出'
        when t1.dst_store_id = 'PH19040F05' and plt2.pno is null then '弃件未到拍卖仓'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then 'QAQC无须追责后长期无有效路由'
        else null
    end 卡点原因
    ,de.last_store_name 当前节点
    ,datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) 最后有效路由距今天数
#     ,de.last_cn_route_action 最新一条有效路由
    ,case pr.route_action # 路由动作
         when 'ACCEPT_PARCEL' then '接件扫描'
         when 'ARRIVAL_GOODS_VAN_CHECK_SCAN' then '车货关联到港'
         when 'ARRIVAL_WAREHOUSE_SCAN' then '到件入仓扫描'
         when 'CANCEL_ARRIVAL_WAREHOUSE_SCAN' then '取消到件入仓扫描'
         when 'CANCEL_PARCEL' then '撤销包裹'
         when 'CANCEL_SHIPMENT_WAREHOUSE' then '取消发件出仓'
         when 'CHANGE_PARCEL_CANCEL' then '修改包裹为撤销'
         when 'CHANGE_PARCEL_CLOSE' then '修改包裹为异常关闭'
         when 'CHANGE_PARCEL_IN_TRANSIT' then '修改包裹为运输中'
         when 'CHANGE_PARCEL_INFO' then '修改包裹信息'
         when 'CHANGE_PARCEL_SIGNED' then '修改包裹为签收'
         when 'CLAIMS_CLOSE' then '理赔关闭'
         when 'CLAIMS_COMPLETE' then '理赔完成'
         when 'CLAIMS_CONTACT' then '已联系客户'
         when 'CLAIMS_TRANSFER_CS' then '转交总部cs处理'
         when 'CLOSE_ORDER' then '关闭订单'
         when 'CONTINUE_TRANSPORT' then '疑难件继续配送'
         when 'CREATE_WORK_ORDER' then '创建工单'
         when 'CUSTOMER_CHANGE_PARCEL_INFO' then '客户修改包裹信息'
         when 'CUSTOMER_OPERATING_RETURN' then '客户操作退回寄件人'
         when 'DELIVERY_CONFIRM' then '确认妥投'
         when 'DELIVERY_MARKER' then '派件标记'
         when 'DELIVERY_PICKUP_STORE_SCAN' then '自提取件扫描'
         when 'DELIVERY_TICKET_CREATION_SCAN' then '交接扫描'
         when 'DELIVERY_TRANSFER' then '派件转单'
         when 'DEPARTURE_GOODS_VAN_CK_SCAN' then '车货关联出港'
         when 'DETAIN_WAREHOUSE' then '货件留仓'
         when 'DIFFICULTY_FINISH_INDEMNITY' then '疑难件支付赔偿'
         when 'DIFFICULTY_HANDOVER' then '疑难件交接'
         when 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE' then '疑难件交接货件留仓'
         when 'DIFFICULTY_RE_TRANSIT' then '疑难件退回区域总部/重启运送'
         when 'DIFFICULTY_RETURN' then '疑难件退回寄件人'
         when 'DIFFICULTY_SEAL' then '集包异常'
         when 'DISCARD_RETURN_BKK' then '丢弃包裹的，换单后寄回BKK'
         when 'DISTRIBUTION_INVENTORY' then '分拨盘库'
         when 'DWS_WEIGHT_IMAGE' then 'DWS复秤照片'
         when 'EXCHANGE_PARCEL' then '换货'
         when 'FAKE_CANCEL_HANDLE' then '虚假撤销判责'
         when 'FLASH_HOME_SCAN' then 'FH交接扫描'
         when 'FORCE_TAKE_PHOTO' then '强制拍照路由'
         when 'HAVE_HAIR_SCAN_NO_TO' then '有发无到'
         when 'HURRY_PARCEL' then '催单'
         when 'INCOMING_CALL' then '来电接听'
         when 'INTERRUPT_PARCEL_AND_RETURN' then '中断运输并退回'
         when 'INVENTORY' then '盘库'
         when 'LOSE_PARCEL_TEAM_OPERATION' then '丢失件团队处理'
         when 'MANUAL_REMARK' then '添加备注'
         when 'MISS_PICKUP_HANDLE' then '漏包裹揽收判责'
         when 'MISSING_PARCEL_SCAN' then '丢失件包裹操作'
         when 'NOTICE_LOST_PARTS_TEAM' then '已通知丢失件团队'
         when 'PARCEL_HEADLESS_CLAIMED' then '无头件包裹已认领'
         when 'PARCEL_HEADLESS_PRINTED' then '无头件包裹已打单'
         when 'PENDING_RETURN' then '待退件'
         when 'PHONE' then '电话联系'
         when 'PICK_UP_STORE' then '待自提取件'
         when 'PICKUP_RETURN_RECEIPT' then '签回单揽收'
         when 'PRINTING' then '打印面单'
         when 'QAQC_OPERATION' then 'QAQC判责'
         when 'RECEIVE_WAREHOUSE_SCAN' then '收件入仓'
         when 'RECEIVED' then '已揽收,初始化动作，实际情况并没有作用'
         when 'REFUND_CONFIRM' then '退件妥投'
         when 'REPAIRED' then '上报问题修复路由'
         when 'REPLACE_PNO' then '换单'
         when 'REPLY_WORK_ORDER' then '回复工单'
         when 'REVISION_TIME' then '改约时间'
         when 'SEAL' then '集包'
         when 'SEAL_NUMBER_CHANGE' then '集包件数变化'
         when 'SHIPMENT_WAREHOUSE_SCAN' then '发件出仓扫描'
         when 'SORTER_WEIGHT_IMAGE' then '分拣机复秤照片'
         when 'SORTING_SCAN' then '分拣扫描'
         when 'STAFF_INFO_UPDATE_WEIGHT' then '快递员修改重量'
         when 'STORE_KEEPER_UPDATE_WEIGHT' then '仓管员复秤'
         when 'STORE_SORTER_UPDATE_WEIGHT' then '分拣机复秤'
         when 'SYSTEM_AUTO_RETURN' then '系统自动退件'
         when 'TAKE_PHOTO' then '异常打单拍照'
         when 'THIRD_EXPRESS_ROUTE' then '第三方公司路由'
         when 'THIRD_PARTY_REASON_DETAIN' then '第三方原因滞留'
         when 'TICKET_WEIGHT_IMAGE' then '揽收称重照片'
         when 'TRANSFER_LOST_PARTS_TEAM' then '已转交丢失件团队'
         when 'TRANSFER_QAQC' then '转交QAQC处理'
         when 'UNSEAL' then '拆包'
         when 'UNSEAL_NO_PARCEL' then '上报包裹不在集包里'
         when 'UNSEAL_NOT_SCANNED' then '集包已拆包，本包裹未被扫描'
         when 'VEHICLE_ACCIDENT_REG' then '车辆车祸登记'
         when 'VEHICLE_ACCIDENT_REGISTRATION' then '车辆车祸登记'
         when 'VEHICLE_WET_DAMAGE_REG' then '车辆湿损登记'
         when 'VEHICLE_WET_DAMAGE_REGISTRATION' then '车辆湿损登记'
        end as 最后一条路由
    ,convert_tz(pr.routed_at ,'+00:00', '+08:00') 最新一条有效路由时间
    ,datediff(now(), de.dst_routed_at) 目的地网点停留时间
    ,de.dst_store 目的地网点
    ,de.src_store 揽收网点
    ,if(hold.pno is not null, 'yes', 'no' ) 是否有holding标记
from t t1
left join ph_staging.ka_profile kp on t1.client_id = kp.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,pr.route_action
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
left join
    (
        select
            plt.pno
        from ph_bi.parcel_claim_task plt
        join t t4  on t4.pno = plt.pno
        where
            plt.state not in (6,7,8)
            and plt.source = 11
        group by 1
    ) pct on pct.pno = t1.pno
left join
    (
        select
            pr2.pno
        from ph_staging.parcel_route pr2
        join t t1 on t1.pno = pr2.pno
        where
            pr2.route_action = 'REFUND_CONFIRM'
        group by 1
    ) hold on hold.pno = t1.pno
group by t1.pno;
;-- -. . -..- - / . -. - .-. -.--
select
    bc.client_name
    ,tdt2.cn_element 疑难件原因
#     ,case cdt.negotiation_result_category
#         when 1 then '赔偿'
#         when 2 then '关闭订单(不赔偿不退货)'
#         when 3 then'退货'
#         when 4 then '退货并赔偿'
#         when 5 then '继续配送'
#         when 6 then '继续配送并赔偿'
#         when 7 then '正在沟通中'
#         when 8 then '丢弃包裹的，换单后寄回BKK'
#         when 9 then '货物找回，继续派送'
#         when 10 then  '改包裹状态'
#         when 11 then '需客户修改信息'
#         when 12 then '丢弃并赔偿（包裹发到内部拍卖仓）'
#     end 处理结果
    ,count(if(cdt.negotiation_result_category = 5, di.id, null)) 继续配送
    ,count(if(cdt.negotiation_result_category = 3, di.id, null)) 退货
    ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 < 2, di.id, null)) '0-2小时'
    ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 2 and timestampdiff(second , di.created_at, di.updated_at)/3600 < 4 , di.id, null)) '2-4小时'
    ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 4 and timestampdiff(second , di.created_at, di.updated_at)/3600 < 6, di.id, null )) '4-6小时'
    ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 6 , di.id, null )) '6小时以上'
    ,count(di.id) 总疑难件量
from ph_staging.diff_info di
left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
left join ph_staging.parcel_info pi on pi.pno = di.pno
join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
where
    di.updated_at >= date_sub(curdate(), interval 8 hour )
    and di.updated_at < date_add(curdate(), interval 16 hour ) -- 今日处理
    and di.state = 1 -- 已处理
    and di.diff_marker_category in (23,73,29,78,25,75)
group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
        ,pi.returned
        ,pi.dst_store_id
        ,pi.client_id
        ,pi.cod_enabled
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,if(t1.returned = 1, '退件', '正向件')  方向
    ,t1.client_id 客户ID
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as 客户类型
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
    ,case
        when t1.state = 6 and di.pno is not null then di.sh_do
        when t1.state = 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is null and pct.pno is not null then 'qaqc-TeamB'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then pr.store_name
        else de.last_store_name
    end 待处理节点
    ,case
        when t1.state = 6 and di.pno is not null then 'KAM/揽件网点未协商'
        when t1.state = 6 and di.pno is null  then '闪速系统沟通处理中'
        when t1.state != 6 and plt.pno is not null and plt2.pno is not null then '闪速系统沟通处理中'
        when plt.pno is null and pct.pno is not null then '闪速超时效理赔未完成'
        when de.last_store_id = t1.ticket_pickup_store_id and plt2.pno is null then '揽件未发出'
        when t1.dst_store_id = 'PH19040F05' and plt2.pno is null then '弃件未到拍卖仓'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then 'QAQC无须追责后长期无有效路由'
        else null
    end 卡点原因
    ,de.last_store_name 当前节点
    ,datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) 最后有效路由距今天数
#     ,de.last_cn_route_action 最新一条有效路由
    ,case pr.route_action # 路由动作
         when 'ACCEPT_PARCEL' then '接件扫描'
         when 'ARRIVAL_GOODS_VAN_CHECK_SCAN' then '车货关联到港'
         when 'ARRIVAL_WAREHOUSE_SCAN' then '到件入仓扫描'
         when 'CANCEL_ARRIVAL_WAREHOUSE_SCAN' then '取消到件入仓扫描'
         when 'CANCEL_PARCEL' then '撤销包裹'
         when 'CANCEL_SHIPMENT_WAREHOUSE' then '取消发件出仓'
         when 'CHANGE_PARCEL_CANCEL' then '修改包裹为撤销'
         when 'CHANGE_PARCEL_CLOSE' then '修改包裹为异常关闭'
         when 'CHANGE_PARCEL_IN_TRANSIT' then '修改包裹为运输中'
         when 'CHANGE_PARCEL_INFO' then '修改包裹信息'
         when 'CHANGE_PARCEL_SIGNED' then '修改包裹为签收'
         when 'CLAIMS_CLOSE' then '理赔关闭'
         when 'CLAIMS_COMPLETE' then '理赔完成'
         when 'CLAIMS_CONTACT' then '已联系客户'
         when 'CLAIMS_TRANSFER_CS' then '转交总部cs处理'
         when 'CLOSE_ORDER' then '关闭订单'
         when 'CONTINUE_TRANSPORT' then '疑难件继续配送'
         when 'CREATE_WORK_ORDER' then '创建工单'
         when 'CUSTOMER_CHANGE_PARCEL_INFO' then '客户修改包裹信息'
         when 'CUSTOMER_OPERATING_RETURN' then '客户操作退回寄件人'
         when 'DELIVERY_CONFIRM' then '确认妥投'
         when 'DELIVERY_MARKER' then '派件标记'
         when 'DELIVERY_PICKUP_STORE_SCAN' then '自提取件扫描'
         when 'DELIVERY_TICKET_CREATION_SCAN' then '交接扫描'
         when 'DELIVERY_TRANSFER' then '派件转单'
         when 'DEPARTURE_GOODS_VAN_CK_SCAN' then '车货关联出港'
         when 'DETAIN_WAREHOUSE' then '货件留仓'
         when 'DIFFICULTY_FINISH_INDEMNITY' then '疑难件支付赔偿'
         when 'DIFFICULTY_HANDOVER' then '疑难件交接'
         when 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE' then '疑难件交接货件留仓'
         when 'DIFFICULTY_RE_TRANSIT' then '疑难件退回区域总部/重启运送'
         when 'DIFFICULTY_RETURN' then '疑难件退回寄件人'
         when 'DIFFICULTY_SEAL' then '集包异常'
         when 'DISCARD_RETURN_BKK' then '丢弃包裹的，换单后寄回BKK'
         when 'DISTRIBUTION_INVENTORY' then '分拨盘库'
         when 'DWS_WEIGHT_IMAGE' then 'DWS复秤照片'
         when 'EXCHANGE_PARCEL' then '换货'
         when 'FAKE_CANCEL_HANDLE' then '虚假撤销判责'
         when 'FLASH_HOME_SCAN' then 'FH交接扫描'
         when 'FORCE_TAKE_PHOTO' then '强制拍照路由'
         when 'HAVE_HAIR_SCAN_NO_TO' then '有发无到'
         when 'HURRY_PARCEL' then '催单'
         when 'INCOMING_CALL' then '来电接听'
         when 'INTERRUPT_PARCEL_AND_RETURN' then '中断运输并退回'
         when 'INVENTORY' then '盘库'
         when 'LOSE_PARCEL_TEAM_OPERATION' then '丢失件团队处理'
         when 'MANUAL_REMARK' then '添加备注'
         when 'MISS_PICKUP_HANDLE' then '漏包裹揽收判责'
         when 'MISSING_PARCEL_SCAN' then '丢失件包裹操作'
         when 'NOTICE_LOST_PARTS_TEAM' then '已通知丢失件团队'
         when 'PARCEL_HEADLESS_CLAIMED' then '无头件包裹已认领'
         when 'PARCEL_HEADLESS_PRINTED' then '无头件包裹已打单'
         when 'PENDING_RETURN' then '待退件'
         when 'PHONE' then '电话联系'
         when 'PICK_UP_STORE' then '待自提取件'
         when 'PICKUP_RETURN_RECEIPT' then '签回单揽收'
         when 'PRINTING' then '打印面单'
         when 'QAQC_OPERATION' then 'QAQC判责'
         when 'RECEIVE_WAREHOUSE_SCAN' then '收件入仓'
         when 'RECEIVED' then '已揽收,初始化动作，实际情况并没有作用'
         when 'REFUND_CONFIRM' then '退件妥投'
         when 'REPAIRED' then '上报问题修复路由'
         when 'REPLACE_PNO' then '换单'
         when 'REPLY_WORK_ORDER' then '回复工单'
         when 'REVISION_TIME' then '改约时间'
         when 'SEAL' then '集包'
         when 'SEAL_NUMBER_CHANGE' then '集包件数变化'
         when 'SHIPMENT_WAREHOUSE_SCAN' then '发件出仓扫描'
         when 'SORTER_WEIGHT_IMAGE' then '分拣机复秤照片'
         when 'SORTING_SCAN' then '分拣扫描'
         when 'STAFF_INFO_UPDATE_WEIGHT' then '快递员修改重量'
         when 'STORE_KEEPER_UPDATE_WEIGHT' then '仓管员复秤'
         when 'STORE_SORTER_UPDATE_WEIGHT' then '分拣机复秤'
         when 'SYSTEM_AUTO_RETURN' then '系统自动退件'
         when 'TAKE_PHOTO' then '异常打单拍照'
         when 'THIRD_EXPRESS_ROUTE' then '第三方公司路由'
         when 'THIRD_PARTY_REASON_DETAIN' then '第三方原因滞留'
         when 'TICKET_WEIGHT_IMAGE' then '揽收称重照片'
         when 'TRANSFER_LOST_PARTS_TEAM' then '已转交丢失件团队'
         when 'TRANSFER_QAQC' then '转交QAQC处理'
         when 'UNSEAL' then '拆包'
         when 'UNSEAL_NO_PARCEL' then '上报包裹不在集包里'
         when 'UNSEAL_NOT_SCANNED' then '集包已拆包，本包裹未被扫描'
         when 'VEHICLE_ACCIDENT_REG' then '车辆车祸登记'
         when 'VEHICLE_ACCIDENT_REGISTRATION' then '车辆车祸登记'
         when 'VEHICLE_WET_DAMAGE_REG' then '车辆湿损登记'
         when 'VEHICLE_WET_DAMAGE_REGISTRATION' then '车辆湿损登记'
        end as 最后一条路由
    ,convert_tz(pr.routed_at ,'+00:00', '+08:00') 最新一条有效路由时间
    ,datediff(now(), de.dst_routed_at) 目的地网点停留时间
    ,de.dst_store 目的地网点
    ,de.src_store 揽收网点
    ,if(hold.pno is not null, 'yes', 'no' ) 是否有holding标记
from t t1
left join ph_staging.ka_profile kp on t1.client_id = kp.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,pr.route_action
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
left join
    (
        select
            plt.pno
        from ph_bi.parcel_claim_task plt
        join t t4  on t4.pno = plt.pno
        where
            plt.state not in (6,7,8)
            and plt.source = 11
        group by 1
    ) pct on pct.pno = t1.pno
left join
    (
        select
            pr2.pno
        from ph_staging.parcel_route pr2
        join t t1 on t1.pno = pr2.pno
        where
            pr2.route_action = 'REFUND_CONFIRM'
        group by 1
    ) hold on hold.pno = t1.pno
group by t1.pno;
;-- -. . -..- - / . -. - .-. -.--
select
    bc.client_name
    ,tdt2.cn_element 疑难件原因
    ,count(if(di.created_at >= date_add(curdate(), interval 12 hour), di.id, null)) 当日20点后
    ,count(if(di.created_at < date_add(curdate(), interval 12 hour ) and di.created_at >= date_sub(curdate(), interval 8 hour ), di.id, null)) '积压时间0day'
    ,count(if(di.created_at < date_sub(curdate(), interval 8 hour ), di.id, null)) '积压1天及以上'
from ph_staging.diff_info di
left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
left join ph_staging.parcel_info pi on pi.pno = di.pno
join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
where
    di.state = 0
    and di.diff_marker_category in (23,73,29,78,25,75)
group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
    bc.client_name
    ,tdt2.cn_element 疑难件原因
    ,count(if(di.created_at >= date_add(curdate(), interval 12 hour), di.id, null)) 当日20点后
    ,count(if(di.created_at < date_add(curdate(), interval 12 hour ) and di.created_at >= date_sub(curdate(), interval 8 hour ), di.id, null)) '积压时间0day'
    ,count(if(di.created_at < date_sub(curdate(), interval 8 hour ), di.id, null)) '积压1天及以上'
from ph_staging.diff_info di
left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
left join ph_staging.parcel_info pi on pi.pno = di.pno
join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
where
    di.state = 0
    and di.diff_marker_category in (23,73,29,78,25,75)
group by 1,2
order by 1,2
with rollup;
;-- -. . -..- - / . -. - .-. -.--
select
    bc.client_name
    ,tdt2.cn_element 疑难件原因
    ,count(if(di.created_at >= date_add(curdate(), interval 12 hour), di.id, null)) 当日20点后
    ,count(if(di.created_at < date_add(curdate(), interval 12 hour ) and di.created_at >= date_sub(curdate(), interval 8 hour ), di.id, null)) '积压时间0day'
    ,count(if(di.created_at < date_sub(curdate(), interval 8 hour ), di.id, null)) '积压1天及以上'
from ph_staging.diff_info di
left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
left join ph_staging.parcel_info pi on pi.pno = di.pno
join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
where
    di.state = 0
    and di.diff_marker_category in (23,73,29,78,25,75)
group by 1,2
# order by 1,2
with rollup;
;-- -. . -..- - / . -. - .-. -.--
select
    coalesce(bc.client_name, '总计') client_name
    ,coalesce(tdt2.cn_element, '总计') 疑难件原因
    ,count(if(di.created_at >= date_add(curdate(), interval 12 hour), di.id, null)) 当日20点后
    ,count(if(di.created_at < date_add(curdate(), interval 12 hour ) and di.created_at >= date_sub(curdate(), interval 8 hour ), di.id, null)) '积压时间0day'
    ,count(if(di.created_at < date_sub(curdate(), interval 8 hour ), di.id, null)) '积压1天及以上'
from ph_staging.diff_info di
left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
left join ph_staging.parcel_info pi on pi.pno = di.pno
join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
where
    di.state = 0
    and di.diff_marker_category in (23,73,29,78,25,75)
group by 1,2
with rollup
order by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
    ifnull(bc.client_name, '总计') client_name
    ,ifnull(tdt2.cn_element, '总计') 疑难件原因
    ,count(if(di.created_at >= date_add(curdate(), interval 12 hour), di.id, null)) 当日20点后
    ,count(if(di.created_at < date_add(curdate(), interval 12 hour ) and di.created_at >= date_sub(curdate(), interval 8 hour ), di.id, null)) '积压时间0day'
    ,count(if(di.created_at < date_sub(curdate(), interval 8 hour ), di.id, null)) '积压1天及以上'
from ph_staging.diff_info di
left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
left join ph_staging.parcel_info pi on pi.pno = di.pno
join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
where
    di.state = 0
    and di.diff_marker_category in (23,73,29,78,25,75)
group by 1,2
with rollup
order by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
    ifnull(bc.client_name, '总计') client_name
    ,ifnull(tdt2.cn_element, '总计') 疑难件原因
    ,count(if(di.created_at >= date_add(curdate(), interval 12 hour), di.id, null)) 当日20点后
    ,count(if(di.created_at < date_add(curdate(), interval 12 hour ) and di.created_at >= date_sub(curdate(), interval 8 hour ), di.id, null)) '积压时间0day'
    ,count(if(di.created_at < date_sub(curdate(), interval 8 hour ), di.id, null)) '积压1天及以上'
from ph_staging.diff_info di
left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
left join ph_staging.parcel_info pi on pi.pno = di.pno
join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
where
    di.state = 0
    and di.diff_marker_category in (23,73,29,78,25,75)
group by 1,2
with rollup;
;-- -. . -..- - / . -. - .-. -.--
select
    coalesce(a.client_name, '总计') client_name
    ,coalesce(a.疑难件原因, '总计') 疑难件原因
    ,a.当日20点后
    ,a.积压时间0day
    ,a.积压1天及以上
from
    (
            select
            coalesce(bc.client_name, '总计') client_name
            ,coalesce(tdt2.cn_element, '总计') 疑难件原因
            ,count(if(di.created_at >= date_add(curdate(), interval 12 hour), di.id, null)) 当日20点后
            ,count(if(di.created_at < date_add(curdate(), interval 12 hour ) and di.created_at >= date_sub(curdate(), interval 8 hour ), di.id, null)) '积压时间0day'
            ,count(if(di.created_at < date_sub(curdate(), interval 8 hour ), di.id, null)) '积压1天及以上'
        from ph_staging.diff_info di
        left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
        left join ph_staging.parcel_info pi on pi.pno = di.pno
        join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
        where
            di.state = 0
            and di.diff_marker_category in (23,73,29,78,25,75)
        group by 1,2
        with rollup
    ) a
order by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
    bc.client_name
    ,tdt2.cn_element 疑难件原因
    ,count(if(cdt.negotiation_result_category = 5, di.id, null)) 继续配送
    ,count(if(cdt.negotiation_result_category = 3, di.id, null)) 退货
    ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 < 2, di.id, null)) '0-2小时'
    ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 2 and timestampdiff(second , di.created_at, di.updated_at)/3600 < 4 , di.id, null)) '2-4小时'
    ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 4 and timestampdiff(second , di.created_at, di.updated_at)/3600 < 6, di.id, null )) '4-6小时'
    ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 6 , di.id, null )) '6小时以上'
    ,count(di.id) 总疑难件量
from ph_staging.diff_info di
left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
left join ph_staging.parcel_info pi on pi.pno = di.pno
join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
where
    di.updated_at >= date_sub(curdate(), interval 8 hour )
    and di.updated_at < date_add(curdate(), interval 16 hour ) -- 今日处理
    and di.state = 1 -- 已处理
    and di.diff_marker_category in (23,73,29,78,25,75)
group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
    bc.client_name
    ,tdt2.cn_element 疑难件原因
    ,count(if(cdt.negotiation_result_category = 5, di.id, null)) 继续配送
    ,count(if(cdt.negotiation_result_category = 3, di.id, null)) 退货
    ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 < 2, di.id, null)) '0-2小时'
    ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 2 and timestampdiff(second , di.created_at, di.updated_at)/3600 < 4 , di.id, null)) '2-4小时'
    ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 4 and timestampdiff(second , di.created_at, di.updated_at)/3600 < 6, di.id, null )) '4-6小时'
    ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 6 , di.id, null )) '6小时以上'
    ,count(di.id) 总疑难件量
from ph_staging.diff_info di
left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
left join ph_staging.parcel_info pi on pi.pno = di.pno
join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
where
    di.updated_at >= date_sub(curdate(), interval 8 hour )
    and di.updated_at < date_add(curdate(), interval 16 hour ) -- 今日处理
    and di.state = 1 -- 已处理
    and di.diff_marker_category in (23,73,29,78,25,75)
group by 1,2
with rollup;
;-- -. . -..- - / . -. - .-. -.--
select
    coalesce(a.client_name, '总计') client_name
    ,coalesce(a.疑难件原因, '总计') 疑难件原因
    ,a.`0-2小时`
    ,a.`2-4小时`
    ,a.`4-6小时`
    ,a.总疑难件量
    ,a.继续配送
    ,a.退货
from
    (
        select
            bc.client_name
            ,tdt2.cn_element 疑难件原因
            ,count(if(cdt.negotiation_result_category = 5, di.id, null)) 继续配送
            ,count(if(cdt.negotiation_result_category = 3, di.id, null)) 退货
            ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 < 2, di.id, null)) '0-2小时'
            ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 2 and timestampdiff(second , di.created_at, di.updated_at)/3600 < 4 , di.id, null)) '2-4小时'
            ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 4 and timestampdiff(second , di.created_at, di.updated_at)/3600 < 6, di.id, null )) '4-6小时'
            ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 6 , di.id, null )) '6小时以上'
            ,count(di.id) 总疑难件量
        from ph_staging.diff_info di
        left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
        left join ph_staging.parcel_info pi on pi.pno = di.pno
        join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
        where
            di.updated_at >= date_sub(curdate(), interval 8 hour )
            and di.updated_at < date_add(curdate(), interval 16 hour ) -- 今日处理
            and di.state = 1 -- 已处理
            and di.diff_marker_category in (23,73,29,78,25,75)
        group by 1,2
        with rollup
    ) a
order by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
            dd.cn_element
        from dwm.dwd_dim_dict dd
        where
            dd.db = 'ph_staging'
            and dd.tablename = 'diff_info'
            and dd.fieldname = 'diff_marker_category'
            and dd.element in (23,73,29,78,25,75)
        group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
    *
from
    (
        select
            bc.client_name
        from dwm.dwd_dim_bigClient bc
        group by 1
    ) a
cross join
    (
        select
            dd.cn_element
        from dwm.dwd_dim_dict dd
        where
            dd.db = 'ph_staging'
            and dd.tablename = 'diff_info'
            and dd.fieldname = 'diff_marker_category'
            and dd.element in (23,73,29,78,25,75)
        group by 1
    ) b;
;-- -. . -..- - / . -. - .-. -.--
select
    *
from
    (
        select
            bc.client_name
        from dwm.dwd_dim_bigClient bc
        group by 1
    ) a
cross join
    (
        select
            dd.cn_element
        from dwm.dwd_dim_dict dd
        where
            dd.db = 'ph_staging'
            and dd.tablename = 'diff_info'
            and dd.fieldname = 'diff_marker_category'
            and dd.element in (23,73,29,78,25,75)
        group by 1
    ) b
group by 1,2
with rollup;
;-- -. . -..- - / . -. - .-. -.--
with a as
(
    select
        coalesce(a.client_name, '总计') client_name
        ,coalesce(a.疑难件原因, '总计') 疑难件原因
        ,a.`0-2小时`
        ,a.`2-4小时`
        ,a.`4-6小时`
        ,a.总疑难件量
        ,a.继续配送
        ,a.退货
    from
        (
            select
                bc.client_name
                ,tdt2.cn_element 疑难件原因
                ,count(if(cdt.negotiation_result_category = 5, di.id, null)) 继续配送
                ,count(if(cdt.negotiation_result_category = 3, di.id, null)) 退货
                ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 < 2, di.id, null)) '0-2小时'
                ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 2 and timestampdiff(second , di.created_at, di.updated_at)/3600 < 4 , di.id, null)) '2-4小时'
                ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 4 and timestampdiff(second , di.created_at, di.updated_at)/3600 < 6, di.id, null )) '4-6小时'
                ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 6 , di.id, null )) '6小时以上'
                ,count(di.id) 总疑难件量
            from ph_staging.diff_info di
            left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
            left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
            left join ph_staging.parcel_info pi on pi.pno = di.pno
            join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
            where
                di.updated_at >= date_sub(curdate(), interval 8 hour )
                and di.updated_at < date_add(curdate(), interval 16 hour ) -- 今日处理
                and di.state = 1 -- 已处理
                and di.diff_marker_category in (23,73,29,78,25,75)
            group by 1,2
            with rollup
        ) a
    order by 1,2
),
b as
(
        select
        coalesce(a.client_name, '总计') client_name
        ,coalesce(a.疑难件原因, '总计') 疑难件原因
        ,a.当日20点后
        ,a.积压时间0day
        ,a.积压1天及以上
    from
        (
                select
                coalesce(bc.client_name, '总计') client_name
                ,coalesce(tdt2.cn_element, '总计') 疑难件原因
                ,count(if(di.created_at >= date_add(curdate(), interval 12 hour), di.id, null)) 当日20点后
                ,count(if(di.created_at < date_add(curdate(), interval 12 hour ) and di.created_at >= date_sub(curdate(), interval 8 hour ), di.id, null)) '积压时间0day'
                ,count(if(di.created_at < date_sub(curdate(), interval 8 hour ), di.id, null)) '积压1天及以上'
            from ph_staging.diff_info di
            left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
            left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
            left join ph_staging.parcel_info pi on pi.pno = di.pno
            join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
            where
                di.state = 0
                and di.diff_marker_category in (23,73,29,78,25,75)
            group by 1,2
            with rollup
        ) a
    order by 1,2
)
select
    t1.client_name
    ,t1.疑难件原因
    ,a1.`0-2小时`
    ,a1.`2-4小时`
    ,a1.`4-6小时`
    ,a1.继续配送
    ,a1.退货
    ,a1.总疑难件量
    ,b1.当日20点后
    ,b1.积压时间0day
    ,b1.积压1天及以上
from
    (
        select
            t1.疑难件原因
            ,t1.client_name
        from
            (
                select
                    a.client_name
                    ,a.疑难件原因
                from a

                union

                select
                    b.client_name
                    ,b.疑难件原因
                from b
            ) t1
        group by 1,2
    ) t1
left join a a1 on t1.client_name = a1.client_name and t1.疑难件原因 = a1.疑难件原因
left join b b1 on t1.client_name = b1.client_name and t1.疑难件原因 = b1.疑难件原因
order by 1,2;
;-- -. . -..- - / . -. - .-. -.--
with a as
(
    select
        coalesce(a.client_name, '总计') client_name
        ,coalesce(a.疑难件原因, '总计') 疑难件原因
        ,a.`0-2小时`
        ,a.`2-4小时`
        ,a.`4-6小时`
        ,a.`6小时以上`
        ,a.总疑难件量
        ,a.继续配送
        ,a.退货
    from
        (
            select
                bc.client_name
                ,tdt2.cn_element 疑难件原因
                ,count(if(cdt.negotiation_result_category = 5, di.id, null)) 继续配送
                ,count(if(cdt.negotiation_result_category = 3, di.id, null)) 退货
                ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 < 2, di.id, null)) '0-2小时'
                ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 2 and timestampdiff(second , di.created_at, di.updated_at)/3600 < 4 , di.id, null)) '2-4小时'
                ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 4 and timestampdiff(second , di.created_at, di.updated_at)/3600 < 6, di.id, null )) '4-6小时'
                ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 6 , di.id, null )) '6小时以上'
                ,count(di.id) 总疑难件量
            from ph_staging.diff_info di
            left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
            left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
            left join ph_staging.parcel_info pi on pi.pno = di.pno
            join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
            where
                di.updated_at >= date_sub(curdate(), interval 8 hour )
                and di.updated_at < date_add(curdate(), interval 16 hour ) -- 今日处理
                and di.state = 1 -- 已处理
                and di.diff_marker_category in (23,73,29,78,25,75)
            group by 1,2
            with rollup
        ) a
    order by 1,2
),
b as
(
        select
        coalesce(a.client_name, '总计') client_name
        ,coalesce(a.疑难件原因, '总计') 疑难件原因
        ,a.当日20点后
        ,a.积压时间0day
        ,a.积压1天及以上
    from
        (
                select
                coalesce(bc.client_name, '总计') client_name
                ,coalesce(tdt2.cn_element, '总计') 疑难件原因
                ,count(if(di.created_at >= date_add(curdate(), interval 12 hour), di.id, null)) 当日20点后
                ,count(if(di.created_at < date_add(curdate(), interval 12 hour ) and di.created_at >= date_sub(curdate(), interval 8 hour ), di.id, null)) '积压时间0day'
                ,count(if(di.created_at < date_sub(curdate(), interval 8 hour ), di.id, null)) '积压1天及以上'
            from ph_staging.diff_info di
            left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
            left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
            left join ph_staging.parcel_info pi on pi.pno = di.pno
            join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
            where
                di.state = 0
                and di.diff_marker_category in (23,73,29,78,25,75)
            group by 1,2
            with rollup
        ) a
    order by 1,2
)
select
    t1.client_name
    ,t1.疑难件原因
    ,a1.`0-2小时`
    ,a1.`2-4小时`
    ,a1.`4-6小时`
    ,a1.`6小时以上`
    ,a1.继续配送
    ,a1.退货
    ,a1.总疑难件量
    ,b1.当日20点后
    ,b1.积压时间0day
    ,b1.积压1天及以上
from
    (
        select
            t1.疑难件原因
            ,t1.client_name
        from
            (
                select
                    a.client_name
                    ,a.疑难件原因
                from a

                union

                select
                    b.client_name
                    ,b.疑难件原因
                from b
            ) t1
        group by 1,2
    ) t1
left join a a1 on t1.client_name = a1.client_name and t1.疑难件原因 = a1.疑难件原因
left join b b1 on t1.client_name = b1.client_name and t1.疑难件原因 = b1.疑难件原因
order by 1,2;
;-- -. . -..- - / . -. - .-. -.--
with a as
(
    select
        coalesce(a.client_name, '总计') client_name
        ,coalesce(a.疑难件原因, '总计') 疑难件原因
        ,a.`0-2小时`
        ,a.`2-4小时`
        ,a.`4-6小时`
        ,a.`6小时以上`
        ,a.总疑难件量
        ,a.继续配送
        ,a.退货
    from
        (
            select
                bc.client_name
                ,tdt2.cn_element 疑难件原因
                ,count(if(cdt.negotiation_result_category = 5, di.id, null)) 继续配送
                ,count(if(cdt.negotiation_result_category = 3, di.id, null)) 退货
                ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 < 2, di.id, null)) '0-2小时'
                ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 2 and timestampdiff(second , di.created_at, di.updated_at)/3600 < 4 , di.id, null)) '2-4小时'
                ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 4 and timestampdiff(second , di.created_at, di.updated_at)/3600 < 6, di.id, null )) '4-6小时'
                ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 6 , di.id, null )) '6小时以上'
                ,count(di.id) 总疑难件量
            from ph_staging.diff_info di
            left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
            left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
            left join ph_staging.parcel_info pi on pi.pno = di.pno
            join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
            where
                di.updated_at >= date_sub(curdate(), interval 8 hour )
                and di.updated_at < date_add(curdate(), interval 16 hour ) -- 今日处理
                and di.state = 1 -- 已处理
                and di.diff_marker_category in (23,73,29,78,25,75,2,17)
            group by 1,2
            with rollup
        ) a
    order by 1,2
),
b as
(
        select
        coalesce(a.client_name, '总计') client_name
        ,coalesce(a.疑难件原因, '总计') 疑难件原因
        ,a.当日20点后
        ,a.积压时间0day
        ,a.积压1天及以上
    from
        (
                select
                coalesce(bc.client_name, '总计') client_name
                ,coalesce(tdt2.cn_element, '总计') 疑难件原因
                ,count(if(di.created_at >= date_add(curdate(), interval 12 hour), di.id, null)) 当日20点后
                ,count(if(di.created_at < date_add(curdate(), interval 12 hour ) and di.created_at >= date_sub(curdate(), interval 8 hour ), di.id, null)) '积压时间0day'
                ,count(if(di.created_at < date_sub(curdate(), interval 8 hour ), di.id, null)) '积压1天及以上'
            from ph_staging.diff_info di
            left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
            left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
            left join ph_staging.parcel_info pi on pi.pno = di.pno
            join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
            where
                di.state = 0
                and di.diff_marker_category in (23,73,29,78,25,75,2,17)
            group by 1,2
            with rollup
        ) a
    order by 1,2
)
select
    t1.client_name
    ,t1.疑难件原因
    ,a1.`0-2小时`
    ,a1.`2-4小时`
    ,a1.`4-6小时`
    ,a1.`6小时以上`
    ,a1.继续配送
    ,a1.退货
    ,a1.总疑难件量
    ,b1.当日20点后
    ,b1.积压时间0day
    ,b1.积压1天及以上
from
    (
        select
            t1.疑难件原因
            ,t1.client_name
        from
            (
                select
                    a.client_name
                    ,a.疑难件原因
                from a

                union

                select
                    b.client_name
                    ,b.疑难件原因
                from b
            ) t1
        group by 1,2
    ) t1
left join a a1 on t1.client_name = a1.client_name and t1.疑难件原因 = a1.疑难件原因
left join b b1 on t1.client_name = b1.client_name and t1.疑难件原因 = b1.疑难件原因
order by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
                bc.client_name
                ,tdt2.cn_element 疑难件原因
                ,count(if(cdt.negotiation_result_category = 5, di.id, null)) 继续配送
                ,count(if(cdt.negotiation_result_category = 3, di.id, null)) 退货
                ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 < 2, di.id, null)) '0-2小时'
                ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 2 and timestampdiff(second , di.created_at, di.updated_at)/3600 < 4 , di.id, null)) '2-4小时'
                ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 4 and timestampdiff(second , di.created_at, di.updated_at)/3600 < 6, di.id, null )) '4-6小时'
                ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 6 , di.id, null )) '6小时以上'
                ,count(di.id) 总疑难件量
            from ph_staging.diff_info di
            left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
            left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
            left join ph_staging.parcel_info pi on pi.pno = di.pno
            join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
            where
                di.updated_at >= date_sub('$.date1', interval 8 hour )
                and di.updated_at < date_add('$.date1', interval 16 hour ) -- 今日处理
                and di.state = 1 -- 已处理
                and di.diff_marker_category in (23,73,29,78,25,75,2,17)
            group by 1,2
            with rollup;
;-- -. . -..- - / . -. - .-. -.--
with a as
(
    select
        coalesce(a.client_name, '总计') client_name
        ,coalesce(a.疑难件原因, '总计') 疑难件原因
        ,a.`0-2小时`
        ,a.`2-4小时`
        ,a.`4-6小时`
        ,a.`6小时以上`
        ,a.总疑难件量
        ,a.继续配送
        ,a.退货
    from
        (
            select
                bc.client_name
                ,tdt2.cn_element 疑难件原因
                ,count(if(cdt.negotiation_result_category = 5, di.id, null)) 继续配送
                ,count(if(cdt.negotiation_result_category = 3, di.id, null)) 退货
                ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 < 2, di.id, null)) '0-2小时'
                ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 2 and timestampdiff(second , di.created_at, di.updated_at)/3600 < 4 , di.id, null)) '2-4小时'
                ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 4 and timestampdiff(second , di.created_at, di.updated_at)/3600 < 6, di.id, null )) '4-6小时'
                ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 6 , di.id, null )) '6小时以上'
                ,count(di.id) 总疑难件量
            from ph_staging.diff_info di
            left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
            left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
            left join ph_staging.parcel_info pi on pi.pno = di.pno
            join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
            where
                di.updated_at >= date_sub('2023-06-22', interval 8 hour )
                and di.updated_at < date_add('2023-06-22', interval 16 hour ) -- 今日处理
                and di.state = 1 -- 已处理
                and di.diff_marker_category in (23,73,29,78,25,75,2,17)
            group by 1,2
            with rollup
        ) a
    order by 1,2
),
b as
(
        select
        coalesce(a.client_name, '总计') client_name
        ,coalesce(a.疑难件原因, '总计') 疑难件原因
        ,a.当日20点后
        ,a.积压时间0day
        ,a.积压1天及以上
    from
        (
                select
                coalesce(bc.client_name, '总计') client_name
                ,coalesce(tdt2.cn_element, '总计') 疑难件原因
                ,count(if(di.created_at >= date_add(curdate(), interval 12 hour), di.id, null)) 当日20点后
                ,count(if(di.created_at < date_add(curdate(), interval 12 hour ) and di.created_at >= date_sub(curdate(), interval 8 hour ), di.id, null)) '积压时间0day'
                ,count(if(di.created_at < date_sub(curdate(), interval 8 hour ), di.id, null)) '积压1天及以上'
            from ph_staging.diff_info di
            left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
            left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
            left join ph_staging.parcel_info pi on pi.pno = di.pno
            join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
            where
                di.diff_marker_category in (23,73,29,78,25,75,2,17)
                and
                (
                    (di.state = 0 and di.created_at < date_add('2023-06-22', interval  16 hour) )
                    or (di.state = 1 and di.created_at < date_add('2023-06-22', interval  16 hour) and di.updated_at >= date_add('2023-06-22', interval  16 hour))
                )
            group by 1,2
            with rollup
        ) a
    order by 1,2
)
select
    t1.client_name
    ,t1.疑难件原因
    ,a1.`0-2小时`
    ,a1.`2-4小时`
    ,a1.`4-6小时`
    ,a1.`6小时以上`
    ,a1.继续配送
    ,a1.退货
    ,a1.总疑难件量
    ,b1.当日20点后
    ,b1.积压时间0day
    ,b1.积压1天及以上
from
    (
        select
            t1.疑难件原因
            ,t1.client_name
        from
            (
                select
                    a.client_name
                    ,a.疑难件原因
                from a

                union

                select
                    b.client_name
                    ,b.疑难件原因
                from b
            ) t1
        group by 1,2
    ) t1
left join a a1 on t1.client_name = a1.client_name and t1.疑难件原因 = a1.疑难件原因
left join b b1 on t1.client_name = b1.client_name and t1.疑难件原因 = b1.疑难件原因
order by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
                bc.client_name
                ,tdt2.cn_element 疑难件原因
                ,count(if(cdt.negotiation_result_category = 5, di.id, null)) 继续配送
                ,count(if(cdt.negotiation_result_category = 3, di.id, null)) 退货
                ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 < 2, di.id, null)) '0-2小时'
                ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 2 and timestampdiff(second , di.created_at, di.updated_at)/3600 < 4 , di.id, null)) '2-4小时'
                ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 4 and timestampdiff(second , di.created_at, di.updated_at)/3600 < 6, di.id, null )) '4-6小时'
                ,count(if(timestampdiff(second , di.created_at, di.updated_at)/3600 >= 6 , di.id, null )) '6小时以上'
                ,sum(if(cdt.operator_id not in (10000,10001,100002), timestampdiff(second , di.created_at, di.updated_at)/3600, null))/count(if(cdt.operator_id not in (10000,10001,100002), di.id, null)) 平均处理时长_h
                ,count(di.id) 总疑难件量
            from ph_staging.diff_info di
            left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
            left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
            left join ph_staging.parcel_info pi on pi.pno = di.pno
            join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
            where
                di.updated_at >= date_sub('2023-06-22', interval 8 hour )
                and di.updated_at < date_add('2023-06-22', interval 16 hour ) -- 今日处理
                and di.state = 1 -- 已处理
                and di.diff_marker_category in (23,73,29,78,25,75,2,17)
            group by 1,2
            with rollup;
;-- -. . -..- - / . -. - .-. -.--
select
    count(di.id)
from ph_staging.diff_info di
left join ph_staging.parcel_info pi on pi.pno = di.pno
join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id and bc.client_name = 'tiktok'
where
    di.diff_marker_category in (2,17)
    and date(convert_tz(di.created_at ,'+00:00', '+08:00')) = '2023-06-22';
;-- -. . -..- - / . -. - .-. -.--
select
    count(di.id)
from ph_staging.diff_info di
left join ph_staging.parcel_info pi on pi.pno = di.pno
join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id and bc.client_name = 'tiktok'
where
    di.diff_marker_category in (2,17)
    and date(convert_tz(di.created_at ,'+00:00', '+08:00')) = '2023-06-21';
;-- -. . -..- - / . -. - .-. -.--
select
    count(di.id)
from ph_staging.diff_info di
left join ph_staging.parcel_info pi on pi.pno = di.pno
join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id and bc.client_name = 'tiktok'
where
    di.diff_marker_category in (2,17)
    and date(convert_tz(di.created_at ,'+00:00', '+08:00')) = '2023-06-20';
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
        ,pi.returned
        ,pi.dst_store_id
        ,pi.client_id
        ,pi.cod_enabled
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,if(t1.returned = 1, '退件', '正向件')  方向
    ,t1.client_id 客户ID
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as 客户类型
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
    ,case
        when t1.state = 6 and di.pno is not null then di.sh_do
        when t1.state = 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is null and pct.pno is not null then 'qaqc-TeamB'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then pr.store_name
        else de.last_store_name
    end 待处理节点
    ,case
        when t1.state = 6 and di.pno is not null then 'KAM/揽件网点未协商'
        when t1.state = 6 and di.pno is null  then '闪速系统沟通处理中'
        when t1.state != 6 and plt.pno is not null and plt2.pno is not null then '闪速系统沟通处理中'
        when plt.pno is null and pct.pno is not null then '闪速超时效理赔未完成'
        when de.last_store_id = t1.ticket_pickup_store_id and plt2.pno is null then '揽件未发出'
        when t1.dst_store_id = 'PH19040F05' and plt2.pno is null then '弃件未到拍卖仓'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then 'QAQC无须追责后长期无有效路由'
        else null
    end 卡点原因
    ,de.last_store_name 当前节点
    ,datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) 最后有效路由距今天数
#     ,de.last_cn_route_action 最新一条有效路由
    ,case pr.route_action # 路由动作
         when 'ACCEPT_PARCEL' then '接件扫描'
         when 'ARRIVAL_GOODS_VAN_CHECK_SCAN' then '车货关联到港'
         when 'ARRIVAL_WAREHOUSE_SCAN' then '到件入仓扫描'
         when 'CANCEL_ARRIVAL_WAREHOUSE_SCAN' then '取消到件入仓扫描'
         when 'CANCEL_PARCEL' then '撤销包裹'
         when 'CANCEL_SHIPMENT_WAREHOUSE' then '取消发件出仓'
         when 'CHANGE_PARCEL_CANCEL' then '修改包裹为撤销'
         when 'CHANGE_PARCEL_CLOSE' then '修改包裹为异常关闭'
         when 'CHANGE_PARCEL_IN_TRANSIT' then '修改包裹为运输中'
         when 'CHANGE_PARCEL_INFO' then '修改包裹信息'
         when 'CHANGE_PARCEL_SIGNED' then '修改包裹为签收'
         when 'CLAIMS_CLOSE' then '理赔关闭'
         when 'CLAIMS_COMPLETE' then '理赔完成'
         when 'CLAIMS_CONTACT' then '已联系客户'
         when 'CLAIMS_TRANSFER_CS' then '转交总部cs处理'
         when 'CLOSE_ORDER' then '关闭订单'
         when 'CONTINUE_TRANSPORT' then '疑难件继续配送'
         when 'CREATE_WORK_ORDER' then '创建工单'
         when 'CUSTOMER_CHANGE_PARCEL_INFO' then '客户修改包裹信息'
         when 'CUSTOMER_OPERATING_RETURN' then '客户操作退回寄件人'
         when 'DELIVERY_CONFIRM' then '确认妥投'
         when 'DELIVERY_MARKER' then '派件标记'
         when 'DELIVERY_PICKUP_STORE_SCAN' then '自提取件扫描'
         when 'DELIVERY_TICKET_CREATION_SCAN' then '交接扫描'
         when 'DELIVERY_TRANSFER' then '派件转单'
         when 'DEPARTURE_GOODS_VAN_CK_SCAN' then '车货关联出港'
         when 'DETAIN_WAREHOUSE' then '货件留仓'
         when 'DIFFICULTY_FINISH_INDEMNITY' then '疑难件支付赔偿'
         when 'DIFFICULTY_HANDOVER' then '疑难件交接'
         when 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE' then '疑难件交接货件留仓'
         when 'DIFFICULTY_RE_TRANSIT' then '疑难件退回区域总部/重启运送'
         when 'DIFFICULTY_RETURN' then '疑难件退回寄件人'
         when 'DIFFICULTY_SEAL' then '集包异常'
         when 'DISCARD_RETURN_BKK' then '丢弃包裹的，换单后寄回BKK'
         when 'DISTRIBUTION_INVENTORY' then '分拨盘库'
         when 'DWS_WEIGHT_IMAGE' then 'DWS复秤照片'
         when 'EXCHANGE_PARCEL' then '换货'
         when 'FAKE_CANCEL_HANDLE' then '虚假撤销判责'
         when 'FLASH_HOME_SCAN' then 'FH交接扫描'
         when 'FORCE_TAKE_PHOTO' then '强制拍照路由'
         when 'HAVE_HAIR_SCAN_NO_TO' then '有发无到'
         when 'HURRY_PARCEL' then '催单'
         when 'INCOMING_CALL' then '来电接听'
         when 'INTERRUPT_PARCEL_AND_RETURN' then '中断运输并退回'
         when 'INVENTORY' then '盘库'
         when 'LOSE_PARCEL_TEAM_OPERATION' then '丢失件团队处理'
         when 'MANUAL_REMARK' then '添加备注'
         when 'MISS_PICKUP_HANDLE' then '漏包裹揽收判责'
         when 'MISSING_PARCEL_SCAN' then '丢失件包裹操作'
         when 'NOTICE_LOST_PARTS_TEAM' then '已通知丢失件团队'
         when 'PARCEL_HEADLESS_CLAIMED' then '无头件包裹已认领'
         when 'PARCEL_HEADLESS_PRINTED' then '无头件包裹已打单'
         when 'PENDING_RETURN' then '待退件'
         when 'PHONE' then '电话联系'
         when 'PICK_UP_STORE' then '待自提取件'
         when 'PICKUP_RETURN_RECEIPT' then '签回单揽收'
         when 'PRINTING' then '打印面单'
         when 'QAQC_OPERATION' then 'QAQC判责'
         when 'RECEIVE_WAREHOUSE_SCAN' then '收件入仓'
         when 'RECEIVED' then '已揽收,初始化动作，实际情况并没有作用'
         when 'REFUND_CONFIRM' then '退件妥投'
         when 'REPAIRED' then '上报问题修复路由'
         when 'REPLACE_PNO' then '换单'
         when 'REPLY_WORK_ORDER' then '回复工单'
         when 'REVISION_TIME' then '改约时间'
         when 'SEAL' then '集包'
         when 'SEAL_NUMBER_CHANGE' then '集包件数变化'
         when 'SHIPMENT_WAREHOUSE_SCAN' then '发件出仓扫描'
         when 'SORTER_WEIGHT_IMAGE' then '分拣机复秤照片'
         when 'SORTING_SCAN' then '分拣扫描'
         when 'STAFF_INFO_UPDATE_WEIGHT' then '快递员修改重量'
         when 'STORE_KEEPER_UPDATE_WEIGHT' then '仓管员复秤'
         when 'STORE_SORTER_UPDATE_WEIGHT' then '分拣机复秤'
         when 'SYSTEM_AUTO_RETURN' then '系统自动退件'
         when 'TAKE_PHOTO' then '异常打单拍照'
         when 'THIRD_EXPRESS_ROUTE' then '第三方公司路由'
         when 'THIRD_PARTY_REASON_DETAIN' then '第三方原因滞留'
         when 'TICKET_WEIGHT_IMAGE' then '揽收称重照片'
         when 'TRANSFER_LOST_PARTS_TEAM' then '已转交丢失件团队'
         when 'TRANSFER_QAQC' then '转交QAQC处理'
         when 'UNSEAL' then '拆包'
         when 'UNSEAL_NO_PARCEL' then '上报包裹不在集包里'
         when 'UNSEAL_NOT_SCANNED' then '集包已拆包，本包裹未被扫描'
         when 'VEHICLE_ACCIDENT_REG' then '车辆车祸登记'
         when 'VEHICLE_ACCIDENT_REGISTRATION' then '车辆车祸登记'
         when 'VEHICLE_WET_DAMAGE_REG' then '车辆湿损登记'
         when 'VEHICLE_WET_DAMAGE_REGISTRATION' then '车辆湿损登记'
        end as 最后一条路由
    ,convert_tz(pr.routed_at ,'+00:00', '+08:00') 最新一条有效路由时间
    ,datediff(now(), de.dst_routed_at) 目的地网点停留时间
    ,de.dst_store 目的地网点
    ,de.src_store 揽收网点
    ,de.pickup_time 揽收时间
    ,de.pick_date 揽收日期
    ,if(hold.pno is not null, 'yes', 'no' ) 是否有holding标记
from t t1
left join ph_staging.ka_profile kp on t1.client_id = kp.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,pr.route_action
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
left join
    (
        select
            plt.pno
        from ph_bi.parcel_claim_task plt
        join t t4  on t4.pno = plt.pno
        where
            plt.state not in (6,7,8)
            and plt.source = 11
        group by 1
    ) pct on pct.pno = t1.pno
left join
    (
        select
            pr2.pno
        from ph_staging.parcel_route pr2
        join t t1 on t1.pno = pr2.pno
        where
            pr2.route_action = 'REFUND_CONFIRM'
        group by 1
    ) hold on hold.pno = t1.pno
group by t1.pno;
;-- -. . -..- - / . -. - .-. -.--
select
        ssp.pno
        ,ssp.inventory_class
    from ph_bi.should_stocktaking_parcel_info_recently ssp
    where
        ssp.stat_date = curdate()
        and ssp.hour = hour(now());
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        ssp.pno
        ,ssp.inventory_class
    from ph_bi.should_stocktaking_parcel_info_recently ssp
    where
        ssp.stat_date = curdate()
        and ssp.hour = hour(now())
)
select
    t1.pno
    ,case t1.inventory_class
        when 1 then '今日应到包裹未入仓'
        when 2 then '历史应到包裹未更新'
        when 3 then '今日应盘留仓件'
        when 4 then '今日应盘问题件'
    end 应盘类型
    ,pi.src_name 寄件人姓名
    ,pi.src_detail_address 寄件人地址
    ,pi.dst_name 收件人姓名
    ,pi.dst_detail_address 收件人地址
    ,pi.dst_phone 收件人电话
    ,pi.dst_home_phone 收件人家庭电话
    ,dp.store_name 当前网点
    ,dp.piece_name 当前片区
    ,dp.region_name 当前大区
    ,case pi.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end 当前状态
    ,if(pi.returned = 1, '退件', '正向') 流向
    ,if(de.client_id in ('AA0050','AA0121','AA0139','AA0051','AA0080'), oi.insure_declare_value/100, oi.cogs_amount/100) 正向物品价值
    ,oi.cod_amount/100 COD金额
    ,convert_tz(pi.created_at, '+00:00', '+08:00') 揽收时间
    ,dp2.store_name 揽收网点
    ,dp2.piece_name 揽收片区
    ,dp2.region_name 揽收大区
    ,ss.name 目的地网点
    ,pr.CN_element 最后一条有效路由
    ,convert_tz(pr.routed_at, '+00:00', '+08:00') 最后一条有效路由时间
    ,if(pi.state = 1, datediff(now(), convert_tz(pi.created_at, '+00:00', '+08:00')), datediff(now(), de.dst_routed_at)) 在仓天数
    ,de.discard_enabled 是否为丢弃
    ,de.inventorys 盘库次数
    ,convert_tz(pr2.routed_at, '+00:00', '+08:00') 最后一次盘库时间
    ,date(convert_tz(pr2.routed_at, '+00:00', '+08:00')) 最后一次盘库日期
    ,if(pr3.pno is not null, '是', '否') 是否有效盘库
    ,convert_tz(pr3.routed_at, '+00:00', '+08:00') 今日最后一次盘库时间
from  t t1
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join ph_staging.parcel_info pi on pi.pno = t1.pno
left join
    (
        select
            pr.pno
            ,pr.routed_at
            ,pr.store_id
            ,ddd.CN_element
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from ph_staging.parcel_route pr
        join t t2 on t2.pno = pr.pno
        join dwm.dwd_dim_dict ddd on ddd.element = pr.route_action and ddd.db = 'ph_staging' and ddd.tablename = 'parcel_route' and ddd.remark = 'valid'
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = pr.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
left join ph_staging.order_info oi on if(pi.returned = 1, pi.customary_pno, pi.pno) = oi.pno
left join dwm.dim_ph_sys_store_rd dp2 on dp2.store_id = pi.ticket_pickup_store_id and dp2.stat_date = date_sub(curdate(), interval 1 day)
left join ph_staging.sys_store ss on ss.id = pi.dst_store_id
left join
    (
        select
            b.*
        from
            (
                select
                    pr.pno
                    ,pr.routed_at
                    ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rn
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.route_action = 'INVENTORY'
#                     and pr.routed_at >= date_add(curdate(), interval 8 hour)
            ) b
        where
            b.rn = 1
    ) pr2 on pr2.pno = t1.pno
left join
    (
        select
            b.*
        from
            (
                select
                    pr.pno
                    ,pr.routed_at
                    ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rn
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.route_action = 'INVENTORY'
                    and pr.routed_at >= date_add(curdate(), interval 8 hour)
            ) b
        where
            b.rn = 1
    ) pr3 on pr3.pno = t1.pno;
;-- -. . -..- - / . -. - .-. -.--
select
        count(ssp.pno) t1
        ,count(distinct ssp.pno) t2
    from ph_bi.should_stocktaking_parcel_info_recently ssp
    where
        ssp.stat_date = curdate()
        and ssp.hour = hour(now());
;-- -. . -..- - / . -. - .-. -.--
select
    t.pno
    ,count(distinct date(convert_tz(ppd.created_at, '+00:00', '+08:00'))) 尝试天数
from ph_staging.parcel_problem_detail ppd
join tmpale.tmp_ph_try_pno_0623 t on t.pno = ppd.pno
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
    t.pno
    ,count(distinct date(convert_tz(tdm.created_at, '+00:00', '+08:00')) ) 尝试天数
from ph_staging.ticket_delivery td
join tmpale.tmp_ph_try_pno_0623 t on t.pno = td.pno
left join ph_staging.ticket_delivery_marker tdm on tdm.delivery_id = td.id
group by 1;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        ssp.pno
        ,ssp.inventory_class
    from ph_bi.should_stocktaking_parcel_info_recently ssp
    where
        ssp.stat_date = curdate()
        and ssp.hour = hour(now())
)
select
    t1.pno
    ,case t1.inventory_class
        when 1 then '今日应到包裹未入仓'
        when 2 then '历史应到包裹未更新'
        when 3 then '今日应盘留仓件'
        when 4 then '今日应盘问题件'
    end 应盘类型
    ,pi.src_name 寄件人姓名
    ,pi.src_detail_address 寄件人地址
    ,pi.dst_name 收件人姓名
    ,pi.dst_detail_address 收件人地址
    ,pi.dst_phone 收件人电话
    ,pi.dst_home_phone 收件人家庭电话
    ,dp.store_name 当前网点
    ,dp.piece_name 当前片区
    ,dp.region_name 当前大区
    ,case pi.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end 当前状态
    ,if(pi.returned = 1, '退件', '正向') 流向
    ,if(de.client_id in ('AA0050','AA0121','AA0139','AA0051','AA0080'), oi.insure_declare_value/100, oi.cogs_amount/100) 正向物品价值
    ,oi.cod_amount/100 COD金额
    ,convert_tz(pi.created_at, '+00:00', '+08:00') 揽收时间
    ,dp2.store_name 揽收网点
    ,dp2.piece_name 揽收片区
    ,dp2.region_name 揽收大区
    ,ss.name 目的地网点
    ,pr.CN_element 最后一条有效路由
    ,convert_tz(pr.routed_at, '+00:00', '+08:00') 最后一条有效路由时间
    ,if(pi.state = 1, datediff(now(), convert_tz(pi.created_at, '+00:00', '+08:00')), datediff(now(), de.dst_routed_at)) 在仓天数
    ,de.discard_enabled 是否为丢弃
    ,de.inventorys 盘库次数
    ,convert_tz(pr2.routed_at, '+00:00', '+08:00') 最后一次盘库时间
    ,date(convert_tz(pr2.routed_at, '+00:00', '+08:00')) 最后一次盘库日期
    ,if(pr2.routed_at > date_add(curdate(), interval 8 hour), '是', '否') 是否有效盘库
    ,if(pr2.routed_at > date_sub(curdate(), interval 8 hour), convert_tz(pr2.routed_at, '+00:00', '+08:00'), null) 今日最后一次盘库时间
from  t t1
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join ph_staging.parcel_info pi on pi.pno = t1.pno
left join
    (
        select
            pr.pno
            ,pr.routed_at
            ,pr.store_id
            ,ddd.CN_element
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from ph_staging.parcel_route pr
        join t t2 on t2.pno = pr.pno
        join dwm.dwd_dim_dict ddd on ddd.element = pr.route_action and ddd.db = 'ph_staging' and ddd.tablename = 'parcel_route' and ddd.remark = 'valid'
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = pr.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
left join ph_staging.order_info oi on if(pi.returned = 1, pi.customary_pno, pi.pno) = oi.pno
left join dwm.dim_ph_sys_store_rd dp2 on dp2.store_id = pi.ticket_pickup_store_id and dp2.stat_date = date_sub(curdate(), interval 1 day)
left join ph_staging.sys_store ss on ss.id = pi.dst_store_id
left join
    (
        select
            b.*
        from
            (
                select
                    pr.pno
                    ,pr.routed_at
                    ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rn
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.route_action = 'INVENTORY'
#                     and pr.routed_at >= date_add(curdate(), interval 8 hour)
            ) b
        where
            b.rn = 1
    ) pr2 on pr2.pno = t1.pno;
;-- -. . -..- - / . -. - .-. -.--
SELECT
pr.pno
,group_concat(concat('https://fex-ph-asset-pro.oss-ap-southeast-1.aliyuncs.com/',sa.object_key)) url

from
    (
        select
            pr.pno
            ,json_extract(pr.extra_value,'$.routeExtraId') routeExtraId
        from ph_staging.parcel_route pr
        where
            pr.route_action ='DIFFICULTY_HANDOVER'
            and pr.marker_category in (5,20)
            and pr.created_at > '2023-05-31 16:00:00'
    )pr
left join
    (
        select
            pre.pno
            ,pre.route_extra_id
            ,c
        from
        (
            select
                pre.pno
                ,pre.route_extra_id
                ,replace(replace(replace(json_extract(pre.extra_value, '$.images'), '"', ''),'[', ''),']', '') value
            from dwm.drds_ph_parcel_route_extra pre
            where
                pre.created_at > '2023-05-31 16:00:00'
#                 and pre.created_at<'2023-04-01'
        )pre
        lateral view explode(split(pre.value, ',')) id as c
    )pre on pr.routeExtraId=pre.route_extra_id
left join ph_staging.sys_attachment sa on sa.id=pre.c
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
        hsi.staff_info_id
        ,hsi.name 姓名
        ,hjt.job_name 职位
        ,mw.operator_name 操作人
        ,case swm.type
            when 1 then '派件低效'
            when 3 then '虚假操作'
            when 4 then '虚假打卡'
        end 违规类型
        ,json_extract(swm.data_bucket, '$.false_type') 虚假类型
        ,case
            when hsi.`state`=1 and hsi.`wait_leave_state`=0 then '在职'
            when hsi.`state`=1 and hsi.`wait_leave_state`=1 then '待离职'
            when hsi.`state`=2 then '离职'
            when hsi.`state`=3 then '停职'
        end as 在职状态
        ,ss.name 所属网点
        ,smr.name  大区
        ,smp.name  片区
        ,mw.date_ats 违规日期
        ,convert_tz(mw.created_at,'+00:00','+08:00') 警告信发放时间
        ,case mw.type_code
            when 'warning_1'  then '迟到早退'
            when 'warning_29' then '贪污包裹'
            when 'warning_30' then '偷盗公司财物'
            when 'warning_11' then '吵架、打架/伤害同事、外部人员、上级或其他'
            when 'warning_9'  then '腐败/滥用职权'
            when 'warning_8'  then '公司设备私人使用 / 利用公司设备去做其他事情'
            when 'warning_08'  then '公司设备私人使用 / 利用公司设备去做其他事情'
            when 'warning_5'  then '持有或吸食毒品'
            when 'warning_4'  then '工作时间或工作地点饮酒'
            when 'warning_10' then '玩忽职守'
            when 'warning_2'  then '无故连续旷工3天'
            when 'warning_3'  then '贪污'
            when 'warning_6'  then '违反公司的命令/通知/规则/纪律/规定'
            when 'warning_7'  then '通过社会媒体污蔑公司'
            when 'warning_27' then '工作效率未达到公司的标准(KPI)'
            when 'warning_26' then 'Fake POD'
            when 'warning_25' then 'Fake Status'
            when 'warning_24' then '不接受或不配合公司的调查'
            when 'warning_23' then '损害公司名誉'
            when 'warning_22' then '失职'
            when 'warning_28' then '贪污钱'
            when 'warning_21' then '煽动/挑衅/损害公司利益'
            when 'warning_20' then '谎报里程'
            when 'warning_18' then '粗心大意造成公司重大损失（造成钱丢失）'
            when 'warning_19' then '未按照网点规定的时间回款'
            when 'warning_17' then '伪造证件'
            when 'warning_12' then '未告知上级或无故旷工'
            when 'warning_13' then '上级没有同意请假'
            when 'warning_14' then '没有通过系统请假'
            when 'warning_15' then '未按时上下班'
            when 'warning_16' then '不配合公司的吸毒检查'
            when 'warning_06' then '违反公司的命令/通知/规则/纪律/规定'
            else mw.`type_code`
        end as '警告原因'
        ,case mw.`warning_type`
        when 1 then '口述警告'
        when 2 then '书面警告'
        when 3 then '末次书面警告'
        end as 警告类型
from ph_backyard.message_warning mw
left join ph_bi.hr_staff_info hsi  on mw.staff_info_id=hsi.staff_info_id
left join ph_backyard.staff_warning_message swm on swm.id = mw.staff_warning_message_id
left join ph_bi.hr_job_title hjt on hjt.id = hsi.job_title
left join ph_staging.sys_store ss on hsi.sys_store_id =ss.id
left join ph_staging.sys_manage_region smr on ss.manage_region =smr.id
left join ph_staging.sys_manage_piece smp on ss.manage_piece =smp.id
where
#     swm.date_at >= date_add(curdate(),interval -day(curdate())+1 day)
#     mw.created_at >= date_add(curdate(), interval -day(curdate()) + 1 day)
#     and mw.type_code = 'warning_27'
    mw.created_at >= '2023-06-01'
#     and mw.created_at < '2023-05-01'
    and mw.is_delete = 0;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,de.dst_store
        ,de.dst_piece
        ,de.dst_region
        ,pi.dst_phone
        ,pi.dst_home_phone
    from ph_staging.parcel_info pi
    left join dwm.dwd_ex_ph_parcel_details de on de.pno = pi.pno
    left join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
    where
        pi.state not in (5,7,8,9)
        and de.dst_routed_at is not null
        and datediff(curdate(), de.dst_routed_at) >= 7
        and bc.client_id is null
)
select
    t1.pno 运单号
    ,t1.dst_region 目的地大区
    ,t1.dst_piece 目的地片区
    ,t1.dst_store 目的地网点
    ,if(td.de_num = 3, 1, 0) 尝试派送次数3
    ,if(td.de_num = 4, 1, 0) 尝试派送次数4
    ,if(td.de_num = 5, 1, 0) 尝试派送次数5
    ,if(td.de_num = 6, 1, 0) 尝试派送次数6
    ,if(td.de_num = 7, 1, 0) 尝试派送次数7
    ,if(td.de_num >= 8, 1, 0) 尝试派送次数8以上
    ,t1.dst_phone 收件人电话
    ,t1.dst_home_phone 收件人家庭电话
from t t1
left join
    (
        select
            td.pno
            ,count(distinct date(convert_tz(tdm.created_at ,'+00:00', '+08:00'))) de_num
        from ph_staging.ticket_delivery td
        join t t1 on t1.pno = td.pno
        left join ph_staging.ticket_delivery_marker tdm on tdm.delivery_id = td.id
        group by 1
    ) td on td.pno = t1.pno
where
    td.de_num >= 3;
;-- -. . -..- - / . -. - .-. -.--
select
    di.pno
    ,sdt.pending_handle_category
from ph_staging.diff_info di
left join ph_staging.store_diff_ticket sdt on sdt.diff_info_id = di.id
where
    di.pno = 'P16011S133GAF';
;-- -. . -..- - / . -. - .-. -.--
select
    t.pno
    ,case pi.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
from tmpale.tmp_ph_pno_0624 t
left join ph_staging.parcel_info pi on pi.pno = t.pno
where
    pi.state not in (5,7,8,9);
;-- -. . -..- - / . -. - .-. -.--
select
    t.pno
    ,case pi.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
from tmpale.tmp_ph_pno_0625 t
left join ph_staging.parcel_info pi on pi.pno = t.pno
where
    pi.state not in (5,7,8,9);
;-- -. . -..- - / . -. - .-. -.--
select
    t.pno
    ,case pi.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,pi.dst_phone 收件人电话
    ,pi.dst_home_phone 收件人家庭电话
from tmpale.tmp_ph_pno_0625 t
left join ph_staging.parcel_info pi on pi.pno = t.pno
where
    pi.state not in (5,7,8,9);
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
        ,pi.returned
        ,pi.dst_store_id
        ,pi.client_id
        ,pi.cod_enabled
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-05-31 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,if(t1.returned = 1, '退件', '正向件')  方向
    ,t1.client_id 客户ID
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as 客户类型
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
    ,case
        when t1.state = 6 and di.pno is not null then di.sh_do
        when t1.state = 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is null and pct.pno is not null then 'qaqc-TeamB'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then pr.store_name
        else de.last_store_name
    end 待处理节点
    ,case
        when t1.state = 6 and di.pno is not null then 'KAM/揽件网点未协商'
        when t1.state = 6 and di.pno is null  then '闪速系统沟通处理中'
        when t1.state != 6 and plt.pno is not null and plt2.pno is not null then '闪速系统沟通处理中'
        when plt.pno is null and pct.pno is not null then '闪速超时效理赔未完成'
        when de.last_store_id = t1.ticket_pickup_store_id and plt2.pno is null then '揽件未发出'
        when t1.dst_store_id = 'PH19040F05' and plt2.pno is null then '弃件未到拍卖仓'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then 'QAQC无须追责后长期无有效路由'
        else null
    end 卡点原因
    ,de.last_store_name 当前节点
    ,datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) 最后有效路由距今天数
#     ,de.last_cn_route_action 最新一条有效路由
    ,case pr.route_action # 路由动作
         when 'ACCEPT_PARCEL' then '接件扫描'
         when 'ARRIVAL_GOODS_VAN_CHECK_SCAN' then '车货关联到港'
         when 'ARRIVAL_WAREHOUSE_SCAN' then '到件入仓扫描'
         when 'CANCEL_ARRIVAL_WAREHOUSE_SCAN' then '取消到件入仓扫描'
         when 'CANCEL_PARCEL' then '撤销包裹'
         when 'CANCEL_SHIPMENT_WAREHOUSE' then '取消发件出仓'
         when 'CHANGE_PARCEL_CANCEL' then '修改包裹为撤销'
         when 'CHANGE_PARCEL_CLOSE' then '修改包裹为异常关闭'
         when 'CHANGE_PARCEL_IN_TRANSIT' then '修改包裹为运输中'
         when 'CHANGE_PARCEL_INFO' then '修改包裹信息'
         when 'CHANGE_PARCEL_SIGNED' then '修改包裹为签收'
         when 'CLAIMS_CLOSE' then '理赔关闭'
         when 'CLAIMS_COMPLETE' then '理赔完成'
         when 'CLAIMS_CONTACT' then '已联系客户'
         when 'CLAIMS_TRANSFER_CS' then '转交总部cs处理'
         when 'CLOSE_ORDER' then '关闭订单'
         when 'CONTINUE_TRANSPORT' then '疑难件继续配送'
         when 'CREATE_WORK_ORDER' then '创建工单'
         when 'CUSTOMER_CHANGE_PARCEL_INFO' then '客户修改包裹信息'
         when 'CUSTOMER_OPERATING_RETURN' then '客户操作退回寄件人'
         when 'DELIVERY_CONFIRM' then '确认妥投'
         when 'DELIVERY_MARKER' then '派件标记'
         when 'DELIVERY_PICKUP_STORE_SCAN' then '自提取件扫描'
         when 'DELIVERY_TICKET_CREATION_SCAN' then '交接扫描'
         when 'DELIVERY_TRANSFER' then '派件转单'
         when 'DEPARTURE_GOODS_VAN_CK_SCAN' then '车货关联出港'
         when 'DETAIN_WAREHOUSE' then '货件留仓'
         when 'DIFFICULTY_FINISH_INDEMNITY' then '疑难件支付赔偿'
         when 'DIFFICULTY_HANDOVER' then '疑难件交接'
         when 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE' then '疑难件交接货件留仓'
         when 'DIFFICULTY_RE_TRANSIT' then '疑难件退回区域总部/重启运送'
         when 'DIFFICULTY_RETURN' then '疑难件退回寄件人'
         when 'DIFFICULTY_SEAL' then '集包异常'
         when 'DISCARD_RETURN_BKK' then '丢弃包裹的，换单后寄回BKK'
         when 'DISTRIBUTION_INVENTORY' then '分拨盘库'
         when 'DWS_WEIGHT_IMAGE' then 'DWS复秤照片'
         when 'EXCHANGE_PARCEL' then '换货'
         when 'FAKE_CANCEL_HANDLE' then '虚假撤销判责'
         when 'FLASH_HOME_SCAN' then 'FH交接扫描'
         when 'FORCE_TAKE_PHOTO' then '强制拍照路由'
         when 'HAVE_HAIR_SCAN_NO_TO' then '有发无到'
         when 'HURRY_PARCEL' then '催单'
         when 'INCOMING_CALL' then '来电接听'
         when 'INTERRUPT_PARCEL_AND_RETURN' then '中断运输并退回'
         when 'INVENTORY' then '盘库'
         when 'LOSE_PARCEL_TEAM_OPERATION' then '丢失件团队处理'
         when 'MANUAL_REMARK' then '添加备注'
         when 'MISS_PICKUP_HANDLE' then '漏包裹揽收判责'
         when 'MISSING_PARCEL_SCAN' then '丢失件包裹操作'
         when 'NOTICE_LOST_PARTS_TEAM' then '已通知丢失件团队'
         when 'PARCEL_HEADLESS_CLAIMED' then '无头件包裹已认领'
         when 'PARCEL_HEADLESS_PRINTED' then '无头件包裹已打单'
         when 'PENDING_RETURN' then '待退件'
         when 'PHONE' then '电话联系'
         when 'PICK_UP_STORE' then '待自提取件'
         when 'PICKUP_RETURN_RECEIPT' then '签回单揽收'
         when 'PRINTING' then '打印面单'
         when 'QAQC_OPERATION' then 'QAQC判责'
         when 'RECEIVE_WAREHOUSE_SCAN' then '收件入仓'
         when 'RECEIVED' then '已揽收,初始化动作，实际情况并没有作用'
         when 'REFUND_CONFIRM' then '退件妥投'
         when 'REPAIRED' then '上报问题修复路由'
         when 'REPLACE_PNO' then '换单'
         when 'REPLY_WORK_ORDER' then '回复工单'
         when 'REVISION_TIME' then '改约时间'
         when 'SEAL' then '集包'
         when 'SEAL_NUMBER_CHANGE' then '集包件数变化'
         when 'SHIPMENT_WAREHOUSE_SCAN' then '发件出仓扫描'
         when 'SORTER_WEIGHT_IMAGE' then '分拣机复秤照片'
         when 'SORTING_SCAN' then '分拣扫描'
         when 'STAFF_INFO_UPDATE_WEIGHT' then '快递员修改重量'
         when 'STORE_KEEPER_UPDATE_WEIGHT' then '仓管员复秤'
         when 'STORE_SORTER_UPDATE_WEIGHT' then '分拣机复秤'
         when 'SYSTEM_AUTO_RETURN' then '系统自动退件'
         when 'TAKE_PHOTO' then '异常打单拍照'
         when 'THIRD_EXPRESS_ROUTE' then '第三方公司路由'
         when 'THIRD_PARTY_REASON_DETAIN' then '第三方原因滞留'
         when 'TICKET_WEIGHT_IMAGE' then '揽收称重照片'
         when 'TRANSFER_LOST_PARTS_TEAM' then '已转交丢失件团队'
         when 'TRANSFER_QAQC' then '转交QAQC处理'
         when 'UNSEAL' then '拆包'
         when 'UNSEAL_NO_PARCEL' then '上报包裹不在集包里'
         when 'UNSEAL_NOT_SCANNED' then '集包已拆包，本包裹未被扫描'
         when 'VEHICLE_ACCIDENT_REG' then '车辆车祸登记'
         when 'VEHICLE_ACCIDENT_REGISTRATION' then '车辆车祸登记'
         when 'VEHICLE_WET_DAMAGE_REG' then '车辆湿损登记'
         when 'VEHICLE_WET_DAMAGE_REGISTRATION' then '车辆湿损登记'
        end as 最后一条路由
    ,convert_tz(pr.routed_at ,'+00:00', '+08:00') 最新一条有效路由时间
    ,datediff(now(), de.dst_routed_at) 目的地网点停留时间
    ,de.dst_store 目的地网点
    ,de.src_store 揽收网点
    ,de.pickup_time 揽收时间
    ,de.pick_date 揽收日期
    ,if(hold.pno is not null, 'yes', 'no' ) 是否有holding标记
    ,if(pr3.pno is not null, 'yes', 'no') 是否有待退件标记
from t t1
left join ph_staging.ka_profile kp on t1.client_id = kp.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,pr.route_action
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
left join
    (
        select
            plt.pno
        from ph_bi.parcel_claim_task plt
        join t t4  on t4.pno = plt.pno
        where
            plt.state not in (6,7,8)
            and plt.source = 11
        group by 1
    ) pct on pct.pno = t1.pno
left join
    (
        select
            pr2.pno
        from ph_staging.parcel_route pr2
        join t t1 on t1.pno = pr2.pno
        where
            pr2.route_action = 'REFUND_CONFIRM'
        group by 1
    ) hold on hold.pno = t1.pno
left join
    (
        select
            pr2.pno
        from  ph_staging.parcel_route pr2
        join t t1 on t1.pno = pr2.pno
        where
            pr2.route_action = 'PENDING_RETURN'
        group by 1
    ) pr3 on pr3.pno = t1.pno
group by t1.pno;
;-- -. . -..- - / . -. - .-. -.--
select
    t.pno
    ,case pi.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,pi.dst_phone 收件人电话
    ,pi.dst_home_phone 收件人家庭电话
from tmpale.tmp_ph_pno_0626 t
left join ph_staging.parcel_info pi on pi.pno = t.pno
where
    pi.state not in (5,7,8,9);
;-- -. . -..- - / . -. - .-. -.--
select
    case  a.diff_marker_category
        when 1 then '客户不在家/电话无人接听'
         when 2 then '收件人拒收'
         when 3 then '快件分错网点'
         when 4 then '外包装破损'
         when 5 then '货物破损'
         when 6 then '货物短少'
         when 7 then '货物丢失'
         when 8 then '电话联系不上'
         when 9 then '客户改约时间'
         when 10 then '客户不在'
         when 11 then '客户取消任务'
         when 12 then '无人签收'
         when 13 then '客户周末或假期不收货'
         when 14 then '客户改约时间'
         when 15 then '当日运力不足，无法派送'
         when 16 then '联系不上收件人'
         when 17 then '收件人拒收'
         when 18 then '快件分错网点'
         when 19 then '外包装破损'
         when 20 then '货物破损'
         when 21 then '货物短少'
         when 22 then '货物丢失'
         when 23 then '收件人/地址不清晰或不正确'
         when 24 then '收件地址已废弃或不存在'
         when 25 then '收件人电话号码错误'
         when 26 then 'cod金额不正确'
         when 27 then '无实际包裹'
         when 28 then '已妥投未交接'
         when 29 then '收件人电话号码是空号'
         when 30 then '快件分错网点-地址正确'
         when 31 then '快件分错网点-地址错误'
         when 32 then '禁运品'
         when 33 then '严重破损（丢弃）'
         when 34 then '退件两次尝试派送失败'
         when 35 then '不能打开locker'
         when 36 then 'locker不能使用'
         when 37 then '该地址找不到lockerstation'
         when 38 then '一票多件'
         when 39 then '多次尝试派件失败'
         when 40 then '客户不在家/电话无人接听'
         when 41 then '错过班车时间'
         when 42 then '目的地是偏远地区,留仓待次日派送'
         when 43 then '目的地是岛屿,留仓待次日派送'
         when 44 then '企业/机构当天已下班'
         when 45 then '子母件包裹未全部到达网点'
         when 46 then '不可抗力原因留仓(台风)'
         when 47 then '虚假包裹'
         when 50 then '客户取消寄件'
         when 51 then '信息录入错误'
         when 52 then '客户取消寄件'
         when 69 then '禁运品'
         when 70 then '客户改约时间'
         when 71 then '当日运力不足，无法派送'
         when 72 then '客户周末或假期不收货'
         when 73 then '收件人/地址不清晰或不正确'
         when 74 then '收件地址已废弃或不存在'
         when 75 then '收件人电话号码错误'
         when 76 then 'cod金额不正确'
         when 77 then '企业/机构当天已下班'
         when 78 then '收件人电话号码是空号'
         when 79 then '快件分错网点-地址错误'
         when 80 then '客户取消任务'
         when 81 then '重复下单'
         when 82 then '已完成揽件'
         when 83 then '联系不上客户'
         when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
         when 85 then '寄件人电话号码是空号'
         when 86 then '包裹不符合揽收条件超大件'
         when 87 then '包裹不符合揽收条件违禁品'
         when 88 then '寄件人地址为岛屿'
         when 89 then '运力短缺，跟客户协商推迟揽收'
         when 90 then '包裹未准备好推迟揽收'
         when 91 then '包裹包装不符合运输标准'
         when 92 then '客户提供的清单里没有此包裹'
         when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
         when 94 then '客户取消寄件/客户实际不想寄此包裹'
         when 95 then '车辆/人力短缺推迟揽收'
         when 96 then '遗漏揽收(已停用)'
         when 97 then '子母件(一个单号多个包裹)'
         when 98 then '地址错误addresserror'
         when 99 then '包裹不符合揽收条件：超大件'
         when 100 then '包裹不符合揽收条件：违禁品'
         when 101 then '包裹包装不符合运输标准'
         when 102 then '包裹未准备好'
         when 103 then '运力短缺，跟客户协商推迟揽收'
         when 104 then '子母件(一个单号多个包裹)'
         when 105 then '破损包裹'
         when 106 then '空包裹'
         when 107 then '不能打开locker(密码错误)'
         when 108 then 'locker不能使用'
         when 109 then 'locker找不到'
         when 110 then '运单号与实际包裹的单号不一致'
         when 111 then 'box客户取消任务'
         when 112 then '不能打开locker(密码错误)'
         when 113 then 'locker不能使用'
         when 114 then 'locker找不到'
         when 115 then '实际重量尺寸大于客户下单的重量尺寸'
         when 116 then '客户仓库关闭'
         when 117 then '客户仓库关闭'
         when 118 then 'SHOPEE订单系统自动关闭'
         when 119 then '客户取消包裹'
         when 121 then '地址错误'
         when 122 then '当日运力不足，无法揽收'
    end 疑难原因
    ,a.类型
    ,a.疑难件创建时间段
    ,a.处理时间
    ,a.单量
    ,b.avg_deal_h 平均处理时长_hour
from
    (
        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,case
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 1 then '1小时内'
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 >= 1 and timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 2 then '1-2小时'
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 > 2 and timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 24 then '2小时-1天'
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 > 24 and timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 72 then '1-3天'
                else  '3天以上'
            end 处理时间
            ,count(di.id) 单量
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16
        group by 1,2,3,4

        union all

        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,case
                when cdt.negotiation_result_category is not null  and cdt.updated_at < concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') then '12点前处理完成'
                when cdt.negotiation_result_category is not null  and cdt.updated_at >= concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') and cdt.updated_at < concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 16:00:00') then '超时12小时以内'
                when cdt.negotiation_result_category is not null  and cdt.updated_at >= concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 16:00:00') and cdt.updated_at < concat(date_add(date(convert_tz(di.created_at, '+00:00','+08:00')), interval  1 day), ' 16:00:00') then '超时12-36小时内'
                when cdt.negotiation_result_category is not null  and cdt.updated_at >= concat(date_add(date(convert_tz(di.created_at, '+00:00','+08:00')), interval  1 day), ' 16:00:00') and cdt.updated_at < concat(date_add(date(convert_tz(di.created_at, '+00:00','+08:00')), interval  2 day), ' 04:00:00') then '超时36-48小时'
#                 when cdt.first_operated_at > concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') and cdt.first_operated_at < date_add(concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00'), interval 2 day) then '0-2天内'
                else '超时2天以上+未处理'
            end 处理时间
            ,convert_tz(di.created_at, '+00:00', '+08:00') 创建时间
            ,convert_tz(cdt.first_operated_at, '+00:00', '+08:00') 第一次处理时间
#             ,count(di.id) 单量
            ,di.id
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and
            (hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 10 or hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 16)
        group by 1,2,3
    ) a
left join
    (
        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,sum(timestampdiff(second , di.created_at, cdt.first_operated_at)/3600)/count(di.id) avg_deal_h
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16
            and cdt.first_operated_at is not null
        group by 1,2

        union all

        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,sum(timestampdiff(second , di.created_at, cdt.first_operated_at)/3600)/count(di.id) avg_deal_h
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and
            (hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 10 or hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 16)
            and cdt.first_operated_at is not null
        group by 1,2

    ) b on a.diff_marker_category = b.diff_marker_category and a.疑难件创建时间段 = b.疑难件创建时间段 and a.类型 = b.类型;
;-- -. . -..- - / . -. - .-. -.--
select
    case  a.diff_marker_category
        when 1 then '客户不在家/电话无人接听'
         when 2 then '收件人拒收'
         when 3 then '快件分错网点'
         when 4 then '外包装破损'
         when 5 then '货物破损'
         when 6 then '货物短少'
         when 7 then '货物丢失'
         when 8 then '电话联系不上'
         when 9 then '客户改约时间'
         when 10 then '客户不在'
         when 11 then '客户取消任务'
         when 12 then '无人签收'
         when 13 then '客户周末或假期不收货'
         when 14 then '客户改约时间'
         when 15 then '当日运力不足，无法派送'
         when 16 then '联系不上收件人'
         when 17 then '收件人拒收'
         when 18 then '快件分错网点'
         when 19 then '外包装破损'
         when 20 then '货物破损'
         when 21 then '货物短少'
         when 22 then '货物丢失'
         when 23 then '收件人/地址不清晰或不正确'
         when 24 then '收件地址已废弃或不存在'
         when 25 then '收件人电话号码错误'
         when 26 then 'cod金额不正确'
         when 27 then '无实际包裹'
         when 28 then '已妥投未交接'
         when 29 then '收件人电话号码是空号'
         when 30 then '快件分错网点-地址正确'
         when 31 then '快件分错网点-地址错误'
         when 32 then '禁运品'
         when 33 then '严重破损（丢弃）'
         when 34 then '退件两次尝试派送失败'
         when 35 then '不能打开locker'
         when 36 then 'locker不能使用'
         when 37 then '该地址找不到lockerstation'
         when 38 then '一票多件'
         when 39 then '多次尝试派件失败'
         when 40 then '客户不在家/电话无人接听'
         when 41 then '错过班车时间'
         when 42 then '目的地是偏远地区,留仓待次日派送'
         when 43 then '目的地是岛屿,留仓待次日派送'
         when 44 then '企业/机构当天已下班'
         when 45 then '子母件包裹未全部到达网点'
         when 46 then '不可抗力原因留仓(台风)'
         when 47 then '虚假包裹'
         when 50 then '客户取消寄件'
         when 51 then '信息录入错误'
         when 52 then '客户取消寄件'
         when 69 then '禁运品'
         when 70 then '客户改约时间'
         when 71 then '当日运力不足，无法派送'
         when 72 then '客户周末或假期不收货'
         when 73 then '收件人/地址不清晰或不正确'
         when 74 then '收件地址已废弃或不存在'
         when 75 then '收件人电话号码错误'
         when 76 then 'cod金额不正确'
         when 77 then '企业/机构当天已下班'
         when 78 then '收件人电话号码是空号'
         when 79 then '快件分错网点-地址错误'
         when 80 then '客户取消任务'
         when 81 then '重复下单'
         when 82 then '已完成揽件'
         when 83 then '联系不上客户'
         when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
         when 85 then '寄件人电话号码是空号'
         when 86 then '包裹不符合揽收条件超大件'
         when 87 then '包裹不符合揽收条件违禁品'
         when 88 then '寄件人地址为岛屿'
         when 89 then '运力短缺，跟客户协商推迟揽收'
         when 90 then '包裹未准备好推迟揽收'
         when 91 then '包裹包装不符合运输标准'
         when 92 then '客户提供的清单里没有此包裹'
         when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
         when 94 then '客户取消寄件/客户实际不想寄此包裹'
         when 95 then '车辆/人力短缺推迟揽收'
         when 96 then '遗漏揽收(已停用)'
         when 97 then '子母件(一个单号多个包裹)'
         when 98 then '地址错误addresserror'
         when 99 then '包裹不符合揽收条件：超大件'
         when 100 then '包裹不符合揽收条件：违禁品'
         when 101 then '包裹包装不符合运输标准'
         when 102 then '包裹未准备好'
         when 103 then '运力短缺，跟客户协商推迟揽收'
         when 104 then '子母件(一个单号多个包裹)'
         when 105 then '破损包裹'
         when 106 then '空包裹'
         when 107 then '不能打开locker(密码错误)'
         when 108 then 'locker不能使用'
         when 109 then 'locker找不到'
         when 110 then '运单号与实际包裹的单号不一致'
         when 111 then 'box客户取消任务'
         when 112 then '不能打开locker(密码错误)'
         when 113 then 'locker不能使用'
         when 114 then 'locker找不到'
         when 115 then '实际重量尺寸大于客户下单的重量尺寸'
         when 116 then '客户仓库关闭'
         when 117 then '客户仓库关闭'
         when 118 then 'SHOPEE订单系统自动关闭'
         when 119 then '客户取消包裹'
         when 121 then '地址错误'
         when 122 then '当日运力不足，无法揽收'
    end 疑难原因
    ,a.类型
    ,a.疑难件创建时间段
    ,a.处理时间
    ,a.单量
    ,b.avg_deal_h 平均处理时长_hour
from
    (
        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,case
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 1 then '1小时内'
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 >= 1 and timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 2 then '1-2小时'
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 > 2 and timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 24 then '2小时-1天'
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 > 24 and timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 72 then '1-3天'
                else  '3天以上'
            end 处理时间
            ,count(di.id) 单量
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16
        group by 1,2,3,4

        union all

        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,case
                when cdt.negotiation_result_category is not null  and cdt.updated_at < concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') then '12点前处理完成'
                when cdt.negotiation_result_category is not null  and cdt.updated_at >= concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') and cdt.updated_at < concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 16:00:00') then '超时12小时以内'
                when cdt.negotiation_result_category is not null  and cdt.updated_at >= concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 16:00:00') and cdt.updated_at < concat(date_add(date(convert_tz(di.created_at, '+00:00','+08:00')), interval  1 day), ' 16:00:00') then '超时12-36小时内'
                when cdt.negotiation_result_category is not null  and cdt.updated_at >= concat(date_add(date(convert_tz(di.created_at, '+00:00','+08:00')), interval  1 day), ' 16:00:00') and cdt.updated_at < concat(date_add(date(convert_tz(di.created_at, '+00:00','+08:00')), interval  2 day), ' 04:00:00') then '超时36-48小时'
#                 when cdt.first_operated_at > concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') and cdt.first_operated_at < date_add(concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00'), interval 2 day) then '0-2天内'
                else '超时2天以上+未处理'
            end 处理时间
#             ,convert_tz(di.created_at, '+00:00', '+08:00') 创建时间
#             ,convert_tz(cdt.first_operated_at, '+00:00', '+08:00') 第一次处理时间
            ,count(di.id) 单量
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and
            (hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 10 or hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 16)
        group by 1,2,3,4
    ) a
left join
    (
        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,sum(timestampdiff(second , di.created_at, cdt.first_operated_at)/3600)/count(di.id) avg_deal_h
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16
            and cdt.first_operated_at is not null
        group by 1,2

        union all

        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,sum(timestampdiff(second , di.created_at, cdt.first_operated_at)/3600)/count(di.id) avg_deal_h
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and
            (hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 10 or hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 16)
            and cdt.first_operated_at is not null
        group by 1,2

    ) b on a.diff_marker_category = b.diff_marker_category and a.疑难件创建时间段 = b.疑难件创建时间段 and a.类型 = b.类型;
;-- -. . -..- - / . -. - .-. -.--
select
    case  a.diff_marker_category
        when 1 then '客户不在家/电话无人接听'
         when 2 then '收件人拒收'
         when 3 then '快件分错网点'
         when 4 then '外包装破损'
         when 5 then '货物破损'
         when 6 then '货物短少'
         when 7 then '货物丢失'
         when 8 then '电话联系不上'
         when 9 then '客户改约时间'
         when 10 then '客户不在'
         when 11 then '客户取消任务'
         when 12 then '无人签收'
         when 13 then '客户周末或假期不收货'
         when 14 then '客户改约时间'
         when 15 then '当日运力不足，无法派送'
         when 16 then '联系不上收件人'
         when 17 then '收件人拒收'
         when 18 then '快件分错网点'
         when 19 then '外包装破损'
         when 20 then '货物破损'
         when 21 then '货物短少'
         when 22 then '货物丢失'
         when 23 then '收件人/地址不清晰或不正确'
         when 24 then '收件地址已废弃或不存在'
         when 25 then '收件人电话号码错误'
         when 26 then 'cod金额不正确'
         when 27 then '无实际包裹'
         when 28 then '已妥投未交接'
         when 29 then '收件人电话号码是空号'
         when 30 then '快件分错网点-地址正确'
         when 31 then '快件分错网点-地址错误'
         when 32 then '禁运品'
         when 33 then '严重破损（丢弃）'
         when 34 then '退件两次尝试派送失败'
         when 35 then '不能打开locker'
         when 36 then 'locker不能使用'
         when 37 then '该地址找不到lockerstation'
         when 38 then '一票多件'
         when 39 then '多次尝试派件失败'
         when 40 then '客户不在家/电话无人接听'
         when 41 then '错过班车时间'
         when 42 then '目的地是偏远地区,留仓待次日派送'
         when 43 then '目的地是岛屿,留仓待次日派送'
         when 44 then '企业/机构当天已下班'
         when 45 then '子母件包裹未全部到达网点'
         when 46 then '不可抗力原因留仓(台风)'
         when 47 then '虚假包裹'
         when 50 then '客户取消寄件'
         when 51 then '信息录入错误'
         when 52 then '客户取消寄件'
         when 69 then '禁运品'
         when 70 then '客户改约时间'
         when 71 then '当日运力不足，无法派送'
         when 72 then '客户周末或假期不收货'
         when 73 then '收件人/地址不清晰或不正确'
         when 74 then '收件地址已废弃或不存在'
         when 75 then '收件人电话号码错误'
         when 76 then 'cod金额不正确'
         when 77 then '企业/机构当天已下班'
         when 78 then '收件人电话号码是空号'
         when 79 then '快件分错网点-地址错误'
         when 80 then '客户取消任务'
         when 81 then '重复下单'
         when 82 then '已完成揽件'
         when 83 then '联系不上客户'
         when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
         when 85 then '寄件人电话号码是空号'
         when 86 then '包裹不符合揽收条件超大件'
         when 87 then '包裹不符合揽收条件违禁品'
         when 88 then '寄件人地址为岛屿'
         when 89 then '运力短缺，跟客户协商推迟揽收'
         when 90 then '包裹未准备好推迟揽收'
         when 91 then '包裹包装不符合运输标准'
         when 92 then '客户提供的清单里没有此包裹'
         when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
         when 94 then '客户取消寄件/客户实际不想寄此包裹'
         when 95 then '车辆/人力短缺推迟揽收'
         when 96 then '遗漏揽收(已停用)'
         when 97 then '子母件(一个单号多个包裹)'
         when 98 then '地址错误addresserror'
         when 99 then '包裹不符合揽收条件：超大件'
         when 100 then '包裹不符合揽收条件：违禁品'
         when 101 then '包裹包装不符合运输标准'
         when 102 then '包裹未准备好'
         when 103 then '运力短缺，跟客户协商推迟揽收'
         when 104 then '子母件(一个单号多个包裹)'
         when 105 then '破损包裹'
         when 106 then '空包裹'
         when 107 then '不能打开locker(密码错误)'
         when 108 then 'locker不能使用'
         when 109 then 'locker找不到'
         when 110 then '运单号与实际包裹的单号不一致'
         when 111 then 'box客户取消任务'
         when 112 then '不能打开locker(密码错误)'
         when 113 then 'locker不能使用'
         when 114 then 'locker找不到'
         when 115 then '实际重量尺寸大于客户下单的重量尺寸'
         when 116 then '客户仓库关闭'
         when 117 then '客户仓库关闭'
         when 118 then 'SHOPEE订单系统自动关闭'
         when 119 then '客户取消包裹'
         when 121 then '地址错误'
         when 122 then '当日运力不足，无法揽收'
    end 疑难原因
    ,a.类型
    ,a.疑难件创建时间段
    ,a.处理时间
    ,a.单量
    ,b.avg_deal_h 平均处理时长_hour
from
    (
        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,case
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 1 then '1小时内'
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 >= 1 and timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 2 then '1-2小时'
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 > 2 and timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 24 then '2小时-1天'
                when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 > 24 and timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 72 then '1-3天'
                else  '3天以上'
            end 处理时间
            ,count(di.id) 单量
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16
        group by 1,2,3,4

        union all

        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,case
                when cdt.negotiation_result_category is not null  and cdt.updated_at < concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') then '12点前处理完成'
                when cdt.negotiation_result_category is not null  and cdt.updated_at >= concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') and cdt.updated_at < concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 16:00:00') then '超时12小时以内'
                when cdt.negotiation_result_category is not null  and cdt.updated_at >= concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 16:00:00') and cdt.updated_at < concat(date_add(date(convert_tz(di.created_at, '+00:00','+08:00')), interval  1 day), ' 16:00:00') then '超时12-36小时内'
                when cdt.negotiation_result_category is not null  and cdt.updated_at >= concat(date_add(date(convert_tz(di.created_at, '+00:00','+08:00')), interval  1 day), ' 16:00:00') and cdt.updated_at < concat(date_add(date(convert_tz(di.created_at, '+00:00','+08:00')), interval  2 day), ' 04:00:00') then '超时36-48小时'
#                 when cdt.first_operated_at > concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') and cdt.first_operated_at < date_add(concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00'), interval 2 day) then '0-2天内'
                else '超时2天以上+未处理'
            end 处理时间
#             ,convert_tz(di.created_at, '+00:00', '+08:00') 创建时间
#             ,convert_tz(cdt.first_operated_at, '+00:00', '+08:00') 第一次处理时间
            ,count(di.id) 单量
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and
            (hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 10 or hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 16)
        group by 1,2,3,4
    ) a
left join
    (
        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,sum(timestampdiff(second , di.created_at, cdt.updated_at)/3600)/count(di.id) avg_deal_h
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16
            and cdt.negotiation_result_category is not null
        group by 1,2

        union all

        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,sum(timestampdiff(second , di.created_at, cdt.updated_at)/3600)/count(di.id) avg_deal_h
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and
            (hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 10 or hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 16)
            and cdt.negotiation_result_category is not null
        group by 1,2

    ) b on a.diff_marker_category = b.diff_marker_category and a.疑难件创建时间段 = b.疑难件创建时间段 and a.类型 = b.类型;
;-- -. . -..- - / . -. - .-. -.--
select
    a.CN_element
    ,count(if(a.rk1 = 1 and a.state = 5, a.pno, null )) 第一次协商为继续派送后妥投
    ,count(if(a.rk1 = 2 and a.state = 5, a.pno, null )) 第二次协商为继续派送后妥投
    ,count(if(a.rk1 = 3 and a.state = 5, a.pno, null )) 第三次协商为继续派送后妥投
    ,count(a.state != 5, a.pno, null)  '进入问题件，协商为继续派送，最终未妥投'
from
    (

        select
            a.pno
            ,a.CN_element
            ,b.rk1
            ,a.state
        from
            (
                select
                    a1.*
                from
                    (
                        select
                            di.pno
                            ,ddd.CN_element
                            ,pi.state
                            ,row_number() over (partition by di.pno order by di.created_at desc ) rk
                        from ph_staging.diff_info di
                        left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
                        left join ph_staging.parcel_info pi on di.pno = pi.pno
                        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
                        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
                        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
                        where
                            di.created_at >= '2023-05-31 16:00:00'
                            and di.created_at < '2023-06-19 16:00:00'
                            and bc.client_id is null  -- ka&小c
                            and cdt.negotiation_result_category in (5,6)
                    ) a1
            ) a
        left join
            (
                select
                    di.pno
                    ,row_number() over (partition by di.pno order by cdt.updated_at) rk1
                    ,row_number() over (partition by di.pno order by cdt.updated_at desc) rk2
                from ph_staging.diff_info di
                left join ph_staging.parcel_info pi on di.pno = pi.pno
                left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
                join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
                left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
                where
                    di.created_at >= '2023-05-31 16:00:00'
                    and di.created_at < '2023-06-19 16:00:00'
                    and bc.client_id is null  -- ka&小c
                    and cdt.negotiation_result_category in (5,6)
            ) b on b.pno = a.pno and b.rk2 = 1
    ) a
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
    a.CN_element
    ,count(if(a.rk1 = 1 and a.state = 5, a.pno, null )) 第一次协商为继续派送后妥投
    ,count(if(a.rk1 = 2 and a.state = 5, a.pno, null )) 第二次协商为继续派送后妥投
    ,count(if(a.rk1 = 3 and a.state = 5, a.pno, null )) 第三次协商为继续派送后妥投
    ,count(a.state != 5, a.pno, null)  '进入问题件，协商为继续派送，最终未妥投'
from
    (

        select
            a.pno
            ,a.CN_element
            ,b.rk1
            ,a.state
        from
            (
                select
                    a1.*
                from
                    (
                        select
                            di.pno
                            ,ddd.CN_element
                            ,pi.state
                            ,row_number() over (partition by di.pno order by di.created_at desc ) rk
                        from ph_staging.diff_info di
                        left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
                        left join ph_staging.parcel_info pi on di.pno = pi.pno
                        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
                        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
                        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
                        where
                            di.created_at >= '2023-05-31 16:00:00'
                            and di.created_at < '2023-06-19 16:00:00'
                            and bc.client_id is null  -- ka&小c
                            and cdt.negotiation_result_category in (5,6)
                    ) a1
                where
                    a1.rk = 1
            ) a
        left join
            (
                select
                    di.pno
                    ,row_number() over (partition by di.pno order by cdt.updated_at) rk1
                    ,row_number() over (partition by di.pno order by cdt.updated_at desc) rk2
                from ph_staging.diff_info di
                left join ph_staging.parcel_info pi on di.pno = pi.pno
                left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
                join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
                left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
                where
                    di.created_at >= '2023-05-31 16:00:00'
                    and di.created_at < '2023-06-19 16:00:00'
                    and bc.client_id is null  -- ka&小c
                    and cdt.negotiation_result_category in (5,6)
            ) b on b.pno = a.pno and b.rk2 = 1
    ) a
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
            a.pno
            ,a.CN_element
            ,b.rk1
            ,a.state
        from
            (
                select
                    a1.*
                from
                    (
                        select
                            di.pno
                            ,ddd.CN_element
                            ,pi.state
                            ,row_number() over (partition by di.pno order by di.created_at desc ) rk
                        from ph_staging.diff_info di
                        left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
                        left join ph_staging.parcel_info pi on di.pno = pi.pno
                        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
                        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
                        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
                        where
                            di.created_at >= '2023-05-31 16:00:00'
                            and di.created_at < '2023-06-19 16:00:00'
                            and bc.client_id is null  -- ka&小c
                            and cdt.negotiation_result_category in (5,6)
                    ) a1
                where
                    a1.rk = 1;
;-- -. . -..- - / . -. - .-. -.--
select
                    a1.*
                from
                    (
                        select
                            di.pno
                            ,ddd.CN_element
                            ,pi.state
                            ,row_number() over (partition by di.pno order by di.created_at desc ) rk
                        from ph_staging.diff_info di
                        left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
                        left join ph_staging.parcel_info pi on di.pno = pi.pno
                        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
                        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
                        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
                        where
                            di.created_at >= '2023-05-31 16:00:00'
                            and di.created_at < '2023-06-19 16:00:00'
                            and bc.client_id is null  -- ka&小c
                            and cdt.negotiation_result_category in (5,6)
                    ) a1
                where
                    a1.rk = 1;
;-- -. . -..- - / . -. - .-. -.--
select
    a.CN_element
    ,count(if(a.rk1 = 1 and a.state = 5, a.pno, null )) 第一次协商为继续派送后妥投
    ,count(if(a.rk1 = 2 and a.state = 5, a.pno, null )) 第二次协商为继续派送后妥投
    ,count(if(a.rk1 = 3 and a.state = 5, a.pno, null )) 第三次协商为继续派送后妥投
    ,count(if(a.state != 5, a.pno, null))  '进入问题件，协商为继续派送，最终未妥投'
from
    (

        select
            a.pno
            ,a.CN_element
            ,b.rk1
            ,a.state
        from
            (
                select
                    a1.*
                from
                    (
                        select
                            di.pno
                            ,ddd.CN_element
                            ,pi.state
                            ,row_number() over (partition by di.pno order by di.created_at desc ) rk
                        from ph_staging.diff_info di
                        left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
                        left join ph_staging.parcel_info pi on di.pno = pi.pno
                        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
                        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
                        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
                        where
                            di.created_at >= '2023-05-31 16:00:00'
                            and di.created_at < '2023-06-19 16:00:00'
                            and bc.client_id is null  -- ka&小c
                            and cdt.negotiation_result_category in (5,6)
                    ) a1
                where
                    a1.rk = 1
            ) a
        left join
            (
                select
                    di.pno
                    ,row_number() over (partition by di.pno order by cdt.updated_at) rk1
                    ,row_number() over (partition by di.pno order by cdt.updated_at desc) rk2
                from ph_staging.diff_info di
                left join ph_staging.parcel_info pi on di.pno = pi.pno
                left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
                join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
                left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
                where
                    di.created_at >= '2023-05-31 16:00:00'
                    and di.created_at < '2023-06-19 16:00:00'
                    and bc.client_id is null  -- ka&小c
                    and cdt.negotiation_result_category in (5,6)
            ) b on b.pno = a.pno and b.rk2 = 1
    ) a
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
    count(*)
from ph_staging.parcel_info pi
left join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
where
    pi.state not in (5,7,8,9)
    and bc.client_id is null;
;-- -. . -..- - / . -. - .-. -.--
select
    count(*)
from ph_staging.parcel_info pi
left join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
where
    pi.state not in (5,7,8,9)
    and bc.client_id is null
    and pi.created_at < date_sub(curdate(), interval 14 day);
;-- -. . -..- - / . -. - .-. -.--
select
    count(*)
from ph_staging.parcel_info pi
left join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
where
    pi.state not in (5,7,8,9)
    and bc.client_id is null
    and pi.created_at < date_sub(curdate(), interval 10 day);
;-- -. . -..- - / . -. - .-. -.--
select
    case  a.diff_marker_category
        when 1 then '客户不在家/电话无人接听'
         when 2 then '收件人拒收'
         when 3 then '快件分错网点'
         when 4 then '外包装破损'
         when 5 then '货物破损'
         when 6 then '货物短少'
         when 7 then '货物丢失'
         when 8 then '电话联系不上'
         when 9 then '客户改约时间'
         when 10 then '客户不在'
         when 11 then '客户取消任务'
         when 12 then '无人签收'
         when 13 then '客户周末或假期不收货'
         when 14 then '客户改约时间'
         when 15 then '当日运力不足，无法派送'
         when 16 then '联系不上收件人'
         when 17 then '收件人拒收'
         when 18 then '快件分错网点'
         when 19 then '外包装破损'
         when 20 then '货物破损'
         when 21 then '货物短少'
         when 22 then '货物丢失'
         when 23 then '收件人/地址不清晰或不正确'
         when 24 then '收件地址已废弃或不存在'
         when 25 then '收件人电话号码错误'
         when 26 then 'cod金额不正确'
         when 27 then '无实际包裹'
         when 28 then '已妥投未交接'
         when 29 then '收件人电话号码是空号'
         when 30 then '快件分错网点-地址正确'
         when 31 then '快件分错网点-地址错误'
         when 32 then '禁运品'
         when 33 then '严重破损（丢弃）'
         when 34 then '退件两次尝试派送失败'
         when 35 then '不能打开locker'
         when 36 then 'locker不能使用'
         when 37 then '该地址找不到lockerstation'
         when 38 then '一票多件'
         when 39 then '多次尝试派件失败'
         when 40 then '客户不在家/电话无人接听'
         when 41 then '错过班车时间'
         when 42 then '目的地是偏远地区,留仓待次日派送'
         when 43 then '目的地是岛屿,留仓待次日派送'
         when 44 then '企业/机构当天已下班'
         when 45 then '子母件包裹未全部到达网点'
         when 46 then '不可抗力原因留仓(台风)'
         when 47 then '虚假包裹'
         when 50 then '客户取消寄件'
         when 51 then '信息录入错误'
         when 52 then '客户取消寄件'
         when 69 then '禁运品'
         when 70 then '客户改约时间'
         when 71 then '当日运力不足，无法派送'
         when 72 then '客户周末或假期不收货'
         when 73 then '收件人/地址不清晰或不正确'
         when 74 then '收件地址已废弃或不存在'
         when 75 then '收件人电话号码错误'
         when 76 then 'cod金额不正确'
         when 77 then '企业/机构当天已下班'
         when 78 then '收件人电话号码是空号'
         when 79 then '快件分错网点-地址错误'
         when 80 then '客户取消任务'
         when 81 then '重复下单'
         when 82 then '已完成揽件'
         when 83 then '联系不上客户'
         when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
         when 85 then '寄件人电话号码是空号'
         when 86 then '包裹不符合揽收条件超大件'
         when 87 then '包裹不符合揽收条件违禁品'
         when 88 then '寄件人地址为岛屿'
         when 89 then '运力短缺，跟客户协商推迟揽收'
         when 90 then '包裹未准备好推迟揽收'
         when 91 then '包裹包装不符合运输标准'
         when 92 then '客户提供的清单里没有此包裹'
         when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
         when 94 then '客户取消寄件/客户实际不想寄此包裹'
         when 95 then '车辆/人力短缺推迟揽收'
         when 96 then '遗漏揽收(已停用)'
         when 97 then '子母件(一个单号多个包裹)'
         when 98 then '地址错误addresserror'
         when 99 then '包裹不符合揽收条件：超大件'
         when 100 then '包裹不符合揽收条件：违禁品'
         when 101 then '包裹包装不符合运输标准'
         when 102 then '包裹未准备好'
         when 103 then '运力短缺，跟客户协商推迟揽收'
         when 104 then '子母件(一个单号多个包裹)'
         when 105 then '破损包裹'
         when 106 then '空包裹'
         when 107 then '不能打开locker(密码错误)'
         when 108 then 'locker不能使用'
         when 109 then 'locker找不到'
         when 110 then '运单号与实际包裹的单号不一致'
         when 111 then 'box客户取消任务'
         when 112 then '不能打开locker(密码错误)'
         when 113 then 'locker不能使用'
         when 114 then 'locker找不到'
         when 115 then '实际重量尺寸大于客户下单的重量尺寸'
         when 116 then '客户仓库关闭'
         when 117 then '客户仓库关闭'
         when 118 then 'SHOPEE订单系统自动关闭'
         when 119 then '客户取消包裹'
         when 121 then '地址错误'
         when 122 then '当日运力不足，无法揽收'
    end 疑难原因
    ,a.类型
    ,a.疑难件创建时间段
    ,a.处理时间
    ,a.单量
    ,b.avg_deal_h 平均处理时长_hour
from
    (
        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
#             ,case
#                 when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 1 then '1小时内'
#                 when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 >= 1 and timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 2 then '1-2小时'
#                 when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 > 2 and timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 24 then '2小时-1天'
#                 when timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 > 24 and timestampdiff(second, di.created_at, cdt.first_operated_at)/3600 < 72 then '1-3天'
#                 else  '3天以上'
#             end 处理时间
            ,case
                when cdt.negotiation_result_category is not null  and  timestampdiff(second, di.created_at, cdt.updated_at)/3600 < 1 then '1小时内'
                when cdt.negotiation_result_category is not null  and  timestampdiff(second, di.created_at, cdt.updated_at)/3600 >= 1 and timestampdiff(second, di.created_at, cdt.updated_at)/3600 < 2 then '1-2小时'
                when cdt.negotiation_result_category is not null  and  timestampdiff(second, di.created_at, cdt.updated_at)/3600 >= 2 and timestampdiff(second, di.created_at, cdt.updated_at)/3600 < 24 then '2小时-1天'
                when cdt.negotiation_result_category is not null  and  timestampdiff(second, di.created_at, cdt.updated_at)/3600 >= 24 and timestampdiff(second, di.created_at, cdt.updated_at)/3600 < 72 then '1-3天'
                else  '3天以上'
            end 处理时间
            ,count(di.id) 单量
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16
        group by 1,2,3,4

        union all

        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,case
                when cdt.negotiation_result_category is not null  and cdt.updated_at < concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') then '12点前处理完成'
                when cdt.negotiation_result_category is not null  and cdt.updated_at >= concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') and cdt.updated_at < concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 16:00:00') then '超时12小时以内'
                when cdt.negotiation_result_category is not null  and cdt.updated_at >= concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 16:00:00') and cdt.updated_at < concat(date_add(date(convert_tz(di.created_at, '+00:00','+08:00')), interval  1 day), ' 16:00:00') then '超时12-36小时内'
                when cdt.negotiation_result_category is not null  and cdt.updated_at >= concat(date_add(date(convert_tz(di.created_at, '+00:00','+08:00')), interval  1 day), ' 16:00:00') and cdt.updated_at < concat(date_add(date(convert_tz(di.created_at, '+00:00','+08:00')), interval  2 day), ' 04:00:00') then '超时36-48小时'
#                 when cdt.first_operated_at > concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00') and cdt.first_operated_at < date_add(concat(date(convert_tz(di.created_at, '+00:00','+08:00')), ' 04:00:00'), interval 2 day) then '0-2天内'
                else '超时2天以上+未处理'
            end 处理时间
#             ,convert_tz(di.created_at, '+00:00', '+08:00') 创建时间
#             ,convert_tz(cdt.first_operated_at, '+00:00', '+08:00') 第一次处理时间
            ,count(di.id) 单量
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and
            (hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 10 or hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 16)
        group by 1,2,3,4
    ) a
left join
    (
        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,sum(timestampdiff(second , di.created_at, cdt.updated_at)/3600)/count(di.id) avg_deal_h
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10
            and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16
            and cdt.negotiation_result_category is not null
        group by 1,2

        union all

        select
            di.diff_marker_category
            ,if(ss.category = 6, 'FH', '网点') 类型
            ,if(hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 10 and hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 16, '10-16', '16点-次日10点') 疑难件创建时间段
            ,sum(timestampdiff(second , di.created_at, cdt.updated_at)/3600)/count(di.id) avg_deal_h
        from ph_staging.diff_info di
        left join ph_staging.parcel_info pi on di.pno = pi.pno
        left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
        where
            di.created_at >= '2023-05-31 16:00:00'
            and di.created_at < '2023-06-19 16:00:00'
            and bc.client_id is null  -- ka&小c
            and
            (hour(convert_tz(di.created_at, '+00:00', '+08:00')) < 10 or hour(convert_tz(di.created_at, '+00:00', '+08:00')) >= 16)
            and cdt.negotiation_result_category is not null
        group by 1,2

    ) b on a.diff_marker_category = b.diff_marker_category and a.疑难件创建时间段 = b.疑难件创建时间段 and a.类型 = b.类型;
;-- -. . -..- - / . -. - .-. -.--
select
        bc.client_name
        ,tdt2.CN_element
        ,count(if(di.created_at >= date_sub('2023-06-26', interval 12 hour) and di.created_at < date_add('2023-06-26', interval  1 hour), di.id, null)) '20-9单量'
        ,count(if(di.created_at >= date_sub('2023-06-26', interval 12 hour) and di.created_at < date_add('2023-06-26', interval  1 hour) and sdt2.state = 2 , di.id, null)) '前日20-今日9点处理完成量'
        ,count(if(di.created_at >= date_sub('2023-06-26', interval 12 hour) and di.created_at < date_add('2023-06-26', interval  1 hour) and sdt2.state = 2 and di.updated_at < date_add('2023-06-26', interval  3 hour ) , di.id, null)) '20-9点11点处理完成量'
        ,count(if(di.created_at >= date_add('2023-06-26', interval  1 hour) and di.created_at < date_add('2023-06-26', interval 12 hour), di.id, null)) '9-20单量'
        ,count(if(di.created_at >= date_add('2023-06-26', interval  1 hour) and di.created_at < date_add('2023-06-26', interval 12 hour) and sdt2.state = 2 , di.id, null)) '9-20已处理单量'
        ,count(if(di.created_at >= date_add('2023-06-26', interval  1 hour) and di.created_at < date_add('2023-06-26', interval 12 hour) and sdt2.state = 2 and di.updated_at < date_add(di.created_at, interval  2 hour ), di.id, null)) '9-20已处理2小时内量'
    from ph_staging.diff_info di
    left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
    left join ph_staging.store_diff_ticket sdt2 on sdt2.diff_info_id = di.id
    left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
    left join ph_staging.parcel_info pi on pi.pno = di.pno
    join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
    where
        di.diff_marker_category in (23,73,29,78,25,75)
        and di.created_at >= date_sub('2023-06-26', interval 12 hour)
        and di.created_at < date_add('2023-06-26', interval 12 hour )
    group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
        bc.client_name
        ,tdt2.CN_element
        ,count(if(di.created_at >= date_sub('2023-06-26', interval 12 hour) and di.created_at < date_add('2023-06-26', interval  1 hour), di.id, null)) '20-9单量'
        ,count(if(di.created_at >= date_sub('2023-06-26', interval 12 hour) and di.created_at < date_add('2023-06-26', interval  1 hour) and di.state = 1 , di.id, null)) '前日20-今日9点处理完成量'
        ,count(if(di.created_at >= date_sub('2023-06-26', interval 12 hour) and di.created_at < date_add('2023-06-26', interval  1 hour) and di.state = 1 and di.updated_at < date_add('2023-06-26', interval  3 hour ) , di.id, null)) '20-9点11点处理完成量'
        ,count(if(di.created_at >= date_add('2023-06-26', interval  1 hour) and di.created_at < date_add('2023-06-26', interval 12 hour), di.id, null)) '9-20单量'
        ,count(if(di.created_at >= date_add('2023-06-26', interval  1 hour) and di.created_at < date_add('2023-06-26', interval 12 hour) and di.state = 1 , di.id, null)) '9-20已处理单量'
        ,count(if(di.created_at >= date_add('2023-06-26', interval  1 hour) and di.created_at < date_add('2023-06-26', interval 12 hour) and di.state = 1 and di.updated_at < date_add(di.created_at, interval  2 hour ), di.id, null)) '9-20已处理2小时内量'
    from ph_staging.diff_info di
    left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
    left join ph_staging.store_diff_ticket sdt2 on sdt2.diff_info_id = di.id
    left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
    left join ph_staging.parcel_info pi on pi.pno = di.pno
    join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
    where
        di.diff_marker_category in (23,73,29,78,25,75)
        and di.created_at >= date_sub('2023-06-26', interval 12 hour)
        and di.created_at < date_add('2023-06-26', interval 12 hour )
    group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
with a as
(
    select
        coalesce(a.client_name, '总计') client_name
        ,coalesce(a.疑难件原因, '总计') 疑难件原因
        ,a.`0-2小时`
        ,a.`2-4小时`
        ,a.`4-6小时`
        ,a.`6小时以上`
        ,a.总疑难件量
        ,a.继续配送
        ,a.退货
        ,a.平均处理时长_h
    from
        (
            select
                bc.client_name
                ,tdt2.cn_element 疑难件原因
                ,count(if(cdt.negotiation_result_category = 5, di.id, null)) 继续配送
                ,count(if(cdt.negotiation_result_category = 3, di.id, null)) 退货
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 2, di.id, null)) '0-2小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 2 and timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 4 , di.id, null)) '2-4小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 4 and timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 6, di.id, null )) '4-6小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 6 , di.id, null )) '6小时以上'
                ,sum(if(cdt.operator_id not in (10000,10001,100002), timestampdiff(second , cdt.created_at, cdt.updated_at)/3600, null))/count(if(cdt.operator_id not in (10000,10001,100002), di.id, null)) 平均处理时长_h
                ,count(di.id) 总疑难件量
            from ph_staging.diff_info di
            left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
            left join ph_staging.store_diff_ticket sdt on sdt.diff_info_id = di.id
            left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
            left join ph_staging.parcel_info pi on pi.pno = di.pno
            join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
            where
                di.updated_at >= date_sub('2023-06-26', interval 8 hour )
                and di.updated_at < date_add('2023-06-26', interval 16 hour ) -- 今日处理
                and di.state = 2 -- 已处理
                and di.diff_marker_category in (23,73,29,78,25,75)
            group by 1,2
            with rollup
        ) a
    order by 1,2
)
# b as
# (
#         select
#         coalesce(a.client_name, '总计') client_name
#         ,coalesce(a.疑难件原因, '总计') 疑难件原因
#         ,a.当日20点后
#         ,a.积压时间0day
#         ,a.积压1天及以上
#     from
#         (
#                 select
#                 coalesce(bc.client_name, '总计') client_name
#                 ,coalesce(tdt2.cn_element, '总计') 疑难件原因
#                 ,count(if(cdt.created_at >= date_add('${date1}', interval 12 hour), di.id, null)) 当日20点后
#                 ,count(if(cdt.created_at < date_add('${date1}', interval 12 hour ) and di.created_at >= date_sub('${date1}', interval 8 hour ), di.id, null)) '积压时间0day'
#                 ,count(if(cdt.created_at < date_sub('${date1}', interval 8 hour ), di.id, null)) '积压1天及以上'
#             from ph_staging.diff_info di
#             left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
#             left join ph_staging.store_diff_ticket sdt2 on sdt2.diff_info_id = di.id
#             left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
#             left join ph_staging.parcel_info pi on pi.pno = di.pno
#             join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
#             where
#                 di.diff_marker_category in (23,73,29,78,25,75)
#                 and
#                 (
#                     (sdt2.state in (0,1) and di.created_at < date_add('${date1}', interval  16 hour) )
#                     or (sdt2.state = 2 and di.created_at < date_add('${date1}', interval  16 hour) and di.updated_at >= date_add('${date1}', interval  16 hour))
#                 )
#             group by 1,2
#             with rollup
#         ) a
#     order by 1,2
# )
, b as
(
    select
        coalesce(a.client_name, '总计') client_name
        ,coalesce(a.疑难件原因, '总计') 疑难件原因
        ,a2.`20-9单量`
        ,a2.`前日20-今日9点处理完成量`
        ,a2.`20-9点11点处理完成量`
        ,a2.`9-20单量`
        ,a2.`9-20已处理单量`
        ,a2.`9-20已处理2小时内量`
    from
        (
           select
                bc.client_name
                ,tdt2.CN_element
                ,count(if(di.created_at >= date_sub('2023-06-26', interval 12 hour) and di.created_at < date_add('2023-06-26', interval  1 hour), di.id, null)) '20-9单量'
                ,count(if(di.created_at >= date_sub('2023-06-26', interval 12 hour) and di.created_at < date_add('2023-06-26', interval  1 hour) and di.state = 1 , di.id, null)) '前日20-今日9点处理完成量'
                ,count(if(di.created_at >= date_sub('2023-06-26', interval 12 hour) and di.created_at < date_add('2023-06-26', interval  1 hour) and di.state = 1 and di.updated_at < date_add('2023-06-26', interval  3 hour ) , di.id, null)) '20-9点11点处理完成量'
                ,count(if(di.created_at >= date_add('2023-06-26', interval  1 hour) and di.created_at < date_add('2023-06-26', interval 12 hour), di.id, null)) '9-20单量'
                ,count(if(di.created_at >= date_add('2023-06-26', interval  1 hour) and di.created_at < date_add('2023-06-26', interval 12 hour) and di.state = 1 , di.id, null)) '9-20已处理单量'
                ,count(if(di.created_at >= date_add('2023-06-26', interval  1 hour) and di.created_at < date_add('2023-06-26', interval 12 hour) and di.state = 1 and di.updated_at < date_add(di.created_at, interval  2 hour ), di.id, null)) '9-20已处理2小时内量'
            from ph_staging.diff_info di
            left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
            left join ph_staging.store_diff_ticket sdt2 on sdt2.diff_info_id = di.id
            left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
            left join ph_staging.parcel_info pi on pi.pno = di.pno
            join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
            where
                di.diff_marker_category in (23,73,29,78,25,75)
                and di.created_at >= date_sub('2023-06-26', interval 12 hour)
                and di.created_at < date_add('2023-06-26', interval 12 hour )
            group by 1,2
            with rollup
        ) a2
)
select
    t1.client_name
    ,t1.疑难件原因
    ,a1.`0-2小时`
    ,a1.`2-4小时`
    ,a1.`4-6小时`
    ,a1.`6小时以上`
    ,a1.继续配送
    ,a1.退货
    ,a1.平均处理时长_h
    ,a1.总疑难件量
    ,b1.`20-9单量`
    ,b1.`9-20已处理单量`
    ,b1.`20-9点11点处理完成量`
    ,b1.`9-20单量`
    ,b1.`9-20已处理单量`
    ,b1.`9-20已处理2小时内量`
from
    (
        select
            t1.疑难件原因
            ,t1.client_name
        from
            (
                select
                    a.client_name
                    ,a.疑难件原因
                from a

                union

                select
                    b.client_name
                    ,b.疑难件原因
                from b
            ) t1
        group by 1,2
    ) t1
left join a a1 on t1.client_name = a1.client_name and t1.疑难件原因 = a1.疑难件原因
left join b b1 on t1.client_name = b1.client_name and t1.疑难件原因 = b1.疑难件原因
order by 1,2;
;-- -. . -..- - / . -. - .-. -.--
with a as
(
    select
        coalesce(a.client_name, '总计') client_name
        ,coalesce(a.疑难件原因, '总计') 疑难件原因
        ,a.`0-2小时`
        ,a.`2-4小时`
        ,a.`4-6小时`
        ,a.`6小时以上`
        ,a.总疑难件量
        ,a.继续配送
        ,a.退货
        ,a.平均处理时长_h
    from
        (
            select
                bc.client_name
                ,tdt2.cn_element 疑难件原因
                ,count(if(cdt.negotiation_result_category = 5, di.id, null)) 继续配送
                ,count(if(cdt.negotiation_result_category = 3, di.id, null)) 退货
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 2, di.id, null)) '0-2小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 2 and timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 4 , di.id, null)) '2-4小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 4 and timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 6, di.id, null )) '4-6小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 6 , di.id, null )) '6小时以上'
                ,sum(if(cdt.operator_id not in (10000,10001,100002), timestampdiff(second , cdt.created_at, cdt.updated_at)/3600, null))/count(if(cdt.operator_id not in (10000,10001,100002), di.id, null)) 平均处理时长_h
                ,count(di.id) 总疑难件量
            from ph_staging.diff_info di
            left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
            left join ph_staging.store_diff_ticket sdt on sdt.diff_info_id = di.id
            left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
            left join ph_staging.parcel_info pi on pi.pno = di.pno
            join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
            where
                di.updated_at >= date_sub('2023-06-26', interval 8 hour )
                and di.updated_at < date_add('2023-06-26', interval 16 hour ) -- 今日处理
                and di.state = 2 -- 已处理
                and di.diff_marker_category in (23,73,29,78,25,75)
            group by 1,2
            with rollup
        ) a
    order by 1,2
)
# b as
# (
#         select
#         coalesce(a.client_name, '总计') client_name
#         ,coalesce(a.疑难件原因, '总计') 疑难件原因
#         ,a.当日20点后
#         ,a.积压时间0day
#         ,a.积压1天及以上
#     from
#         (
#                 select
#                 coalesce(bc.client_name, '总计') client_name
#                 ,coalesce(tdt2.cn_element, '总计') 疑难件原因
#                 ,count(if(cdt.created_at >= date_add('${date1}', interval 12 hour), di.id, null)) 当日20点后
#                 ,count(if(cdt.created_at < date_add('${date1}', interval 12 hour ) and di.created_at >= date_sub('${date1}', interval 8 hour ), di.id, null)) '积压时间0day'
#                 ,count(if(cdt.created_at < date_sub('${date1}', interval 8 hour ), di.id, null)) '积压1天及以上'
#             from ph_staging.diff_info di
#             left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
#             left join ph_staging.store_diff_ticket sdt2 on sdt2.diff_info_id = di.id
#             left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
#             left join ph_staging.parcel_info pi on pi.pno = di.pno
#             join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
#             where
#                 di.diff_marker_category in (23,73,29,78,25,75)
#                 and
#                 (
#                     (sdt2.state in (0,1) and di.created_at < date_add('${date1}', interval  16 hour) )
#                     or (sdt2.state = 2 and di.created_at < date_add('${date1}', interval  16 hour) and di.updated_at >= date_add('${date1}', interval  16 hour))
#                 )
#             group by 1,2
#             with rollup
#         ) a
#     order by 1,2
# )
, b as
(
    select
        coalesce(a2.client_name, '总计') client_name
        ,coalesce(a2.CN_element, '总计') 疑难件原因
        ,a2.`20-9单量`
        ,a2.`前日20-今日9点处理完成量`
        ,a2.`20-9点11点处理完成量`
        ,a2.`9-20单量`
        ,a2.`9-20已处理单量`
        ,a2.`9-20已处理2小时内量`
    from
        (
           select
                bc.client_name
                ,tdt2.CN_element
                ,count(if(di.created_at >= date_sub('2023-06-26', interval 12 hour) and di.created_at < date_add('2023-06-26', interval  1 hour), di.id, null)) '20-9单量'
                ,count(if(di.created_at >= date_sub('2023-06-26', interval 12 hour) and di.created_at < date_add('2023-06-26', interval  1 hour) and di.state = 1 , di.id, null)) '前日20-今日9点处理完成量'
                ,count(if(di.created_at >= date_sub('2023-06-26', interval 12 hour) and di.created_at < date_add('2023-06-26', interval  1 hour) and di.state = 1 and di.updated_at < date_add('2023-06-26', interval  3 hour ) , di.id, null)) '20-9点11点处理完成量'
                ,count(if(di.created_at >= date_add('2023-06-26', interval  1 hour) and di.created_at < date_add('2023-06-26', interval 12 hour), di.id, null)) '9-20单量'
                ,count(if(di.created_at >= date_add('2023-06-26', interval  1 hour) and di.created_at < date_add('2023-06-26', interval 12 hour) and di.state = 1 , di.id, null)) '9-20已处理单量'
                ,count(if(di.created_at >= date_add('2023-06-26', interval  1 hour) and di.created_at < date_add('2023-06-26', interval 12 hour) and di.state = 1 and di.updated_at < date_add(di.created_at, interval  2 hour ), di.id, null)) '9-20已处理2小时内量'
            from ph_staging.diff_info di
            left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
            left join ph_staging.store_diff_ticket sdt2 on sdt2.diff_info_id = di.id
            left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
            left join ph_staging.parcel_info pi on pi.pno = di.pno
            join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
            where
                di.diff_marker_category in (23,73,29,78,25,75)
                and di.created_at >= date_sub('2023-06-26', interval 12 hour)
                and di.created_at < date_add('2023-06-26', interval 12 hour )
            group by 1,2
            with rollup
        ) a2
)
select
    t1.client_name
    ,t1.疑难件原因
    ,a1.`0-2小时`
    ,a1.`2-4小时`
    ,a1.`4-6小时`
    ,a1.`6小时以上`
    ,a1.继续配送
    ,a1.退货
    ,a1.平均处理时长_h
    ,a1.总疑难件量
    ,b1.`20-9单量`
    ,b1.`9-20已处理单量`
    ,b1.`20-9点11点处理完成量`
    ,b1.`9-20单量`
    ,b1.`9-20已处理单量`
    ,b1.`9-20已处理2小时内量`
from
    (
        select
            t1.疑难件原因
            ,t1.client_name
        from
            (
                select
                    a.client_name
                    ,a.疑难件原因
                from a

                union

                select
                    b.client_name
                    ,b.疑难件原因
                from b
            ) t1
        group by 1,2
    ) t1
left join a a1 on t1.client_name = a1.client_name and t1.疑难件原因 = a1.疑难件原因
left join b b1 on t1.client_name = b1.client_name and t1.疑难件原因 = b1.疑难件原因
order by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
        coalesce(a.client_name, '总计') client_name
        ,coalesce(a.疑难件原因, '总计') 疑难件原因
        ,a.`0-2小时`
        ,a.`2-4小时`
        ,a.`4-6小时`
        ,a.`6小时以上`
        ,a.总疑难件量
        ,a.继续配送
        ,a.退货
        ,a.平均处理时长_h
    from
        (
            select
                bc.client_name
                ,tdt2.cn_element 疑难件原因
                ,count(if(cdt.negotiation_result_category = 5, di.id, null)) 继续配送
                ,count(if(cdt.negotiation_result_category = 3, di.id, null)) 退货
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 2, di.id, null)) '0-2小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 2 and timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 4 , di.id, null)) '2-4小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 4 and timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 6, di.id, null )) '4-6小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 6 , di.id, null )) '6小时以上'
                ,sum(if(cdt.operator_id not in (10000,10001,100002), timestampdiff(second , cdt.created_at, cdt.updated_at)/3600, null))/count(if(cdt.operator_id not in (10000,10001,100002), di.id, null)) 平均处理时长_h
                ,count(di.id) 总疑难件量
            from ph_staging.diff_info di
            left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
            left join ph_staging.store_diff_ticket sdt on sdt.diff_info_id = di.id
            left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
            left join ph_staging.parcel_info pi on pi.pno = di.pno
            join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
            where
                di.updated_at >= date_sub('2023-06-26', interval 8 hour )
                and di.updated_at < date_add('2023-06-26', interval 16 hour ) -- 今日处理
                and di.state = 2 -- 已处理
                and di.diff_marker_category in (23,73,29,78,25,75)
            group by 1,2
            with rollup
        ) a
    order by 1,2;
;-- -. . -..- - / . -. - .-. -.--
with a as
(
    select
        coalesce(a.client_name, '总计') client_name
        ,coalesce(a.疑难件原因, '总计') 疑难件原因
        ,a.`0-2小时`
        ,a.`2-4小时`
        ,a.`4-6小时`
        ,a.`6小时以上`
        ,a.总疑难件量
        ,a.继续配送
        ,a.退货
        ,a.平均处理时长_h
    from
        (
            select
                bc.client_name
                ,tdt2.cn_element 疑难件原因
                ,count(if(cdt.negotiation_result_category = 5, di.id, null)) 继续配送
                ,count(if(cdt.negotiation_result_category = 3, di.id, null)) 退货
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 2, di.id, null)) '0-2小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 2 and timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 4 , di.id, null)) '2-4小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 4 and timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 6, di.id, null )) '4-6小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 6 , di.id, null )) '6小时以上'
                ,sum(if(cdt.operator_id not in (10000,10001,100002), timestampdiff(second , cdt.created_at, cdt.updated_at)/3600, null))/count(if(cdt.operator_id not in (10000,10001,100002), di.id, null)) 平均处理时长_h
                ,count(di.id) 总疑难件量
            from ph_staging.diff_info di
            left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
            left join ph_staging.store_diff_ticket sdt on sdt.diff_info_id = di.id
            left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
            left join ph_staging.parcel_info pi on pi.pno = di.pno
            join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
            where
                di.updated_at >= date_sub('2023-06-26', interval 8 hour )
                and di.updated_at < date_add('2023-06-26', interval 16 hour ) -- 今日处理
                and di.state = 1 -- 已处理
                and di.diff_marker_category in (23,73,29,78,25,75)
            group by 1,2
            with rollup
        ) a
    order by 1,2
)
# b as
# (
#         select
#         coalesce(a.client_name, '总计') client_name
#         ,coalesce(a.疑难件原因, '总计') 疑难件原因
#         ,a.当日20点后
#         ,a.积压时间0day
#         ,a.积压1天及以上
#     from
#         (
#                 select
#                 coalesce(bc.client_name, '总计') client_name
#                 ,coalesce(tdt2.cn_element, '总计') 疑难件原因
#                 ,count(if(cdt.created_at >= date_add('${date1}', interval 12 hour), di.id, null)) 当日20点后
#                 ,count(if(cdt.created_at < date_add('${date1}', interval 12 hour ) and di.created_at >= date_sub('${date1}', interval 8 hour ), di.id, null)) '积压时间0day'
#                 ,count(if(cdt.created_at < date_sub('${date1}', interval 8 hour ), di.id, null)) '积压1天及以上'
#             from ph_staging.diff_info di
#             left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
#             left join ph_staging.store_diff_ticket sdt2 on sdt2.diff_info_id = di.id
#             left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
#             left join ph_staging.parcel_info pi on pi.pno = di.pno
#             join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
#             where
#                 di.diff_marker_category in (23,73,29,78,25,75)
#                 and
#                 (
#                     (sdt2.state in (0,1) and di.created_at < date_add('${date1}', interval  16 hour) )
#                     or (sdt2.state = 2 and di.created_at < date_add('${date1}', interval  16 hour) and di.updated_at >= date_add('${date1}', interval  16 hour))
#                 )
#             group by 1,2
#             with rollup
#         ) a
#     order by 1,2
# )
, b as
(
    select
        coalesce(a2.client_name, '总计') client_name
        ,coalesce(a2.CN_element, '总计') 疑难件原因
        ,a2.`20-9单量`
        ,a2.`前日20-今日9点处理完成量`
        ,a2.`20-9点11点处理完成量`
        ,a2.`9-20单量`
        ,a2.`9-20已处理单量`
        ,a2.`9-20已处理2小时内量`
    from
        (
           select
                bc.client_name
                ,tdt2.CN_element
                ,count(if(di.created_at >= date_sub('2023-06-26', interval 12 hour) and di.created_at < date_add('2023-06-26', interval  1 hour), di.id, null)) '20-9单量'
                ,count(if(di.created_at >= date_sub('2023-06-26', interval 12 hour) and di.created_at < date_add('2023-06-26', interval  1 hour) and di.state = 1 , di.id, null)) '前日20-今日9点处理完成量'
                ,count(if(di.created_at >= date_sub('2023-06-26', interval 12 hour) and di.created_at < date_add('2023-06-26', interval  1 hour) and di.state = 1 and di.updated_at < date_add('2023-06-26', interval  3 hour ) , di.id, null)) '20-9点11点处理完成量'
                ,count(if(di.created_at >= date_add('2023-06-26', interval  1 hour) and di.created_at < date_add('2023-06-26', interval 12 hour), di.id, null)) '9-20单量'
                ,count(if(di.created_at >= date_add('2023-06-26', interval  1 hour) and di.created_at < date_add('2023-06-26', interval 12 hour) and di.state = 1 , di.id, null)) '9-20已处理单量'
                ,count(if(di.created_at >= date_add('2023-06-26', interval  1 hour) and di.created_at < date_add('2023-06-26', interval 12 hour) and di.state = 1 and di.updated_at < date_add(di.created_at, interval  2 hour ), di.id, null)) '9-20已处理2小时内量'
            from ph_staging.diff_info di
            left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
            left join ph_staging.store_diff_ticket sdt2 on sdt2.diff_info_id = di.id
            left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
            left join ph_staging.parcel_info pi on pi.pno = di.pno
            join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
            where
                di.diff_marker_category in (23,73,29,78,25,75)
                and di.created_at >= date_sub('2023-06-26', interval 12 hour)
                and di.created_at < date_add('2023-06-26', interval 12 hour )
            group by 1,2
            with rollup
        ) a2
)
select
    t1.client_name
    ,t1.疑难件原因
    ,a1.`0-2小时`
    ,a1.`2-4小时`
    ,a1.`4-6小时`
    ,a1.`6小时以上`
    ,a1.继续配送
    ,a1.退货
    ,a1.平均处理时长_h
    ,a1.总疑难件量
    ,b1.`20-9单量`
    ,b1.`9-20已处理单量`
    ,b1.`20-9点11点处理完成量`
    ,b1.`9-20单量`
    ,b1.`9-20已处理单量`
    ,b1.`9-20已处理2小时内量`
from
    (
        select
            t1.疑难件原因
            ,t1.client_name
        from
            (
                select
                    a.client_name
                    ,a.疑难件原因
                from a

                union

                select
                    b.client_name
                    ,b.疑难件原因
                from b
            ) t1
        group by 1,2
    ) t1
left join a a1 on t1.client_name = a1.client_name and t1.疑难件原因 = a1.疑难件原因
left join b b1 on t1.client_name = b1.client_name and t1.疑难件原因 = b1.疑难件原因
order by 1,2;
;-- -. . -..- - / . -. - .-. -.--
with a as
(
    select
        coalesce(a.client_name, '总计') client_name
        ,coalesce(a.疑难件原因, '总计') 疑难件原因
        ,a.`0-2小时`
        ,a.`2-4小时`
        ,a.`4-6小时`
        ,a.`6小时以上`
        ,a.总疑难件量
        ,a.继续配送
        ,a.退货
        ,a.平均处理时长_h
    from
        (
            select
                bc.client_name
                ,tdt2.cn_element 疑难件原因
                ,count(if(cdt.negotiation_result_category = 5, di.id, null)) 继续配送
                ,count(if(cdt.negotiation_result_category = 3, di.id, null)) 退货
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 2, di.id, null)) '0-2小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 2 and timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 4 , di.id, null)) '2-4小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 4 and timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 6, di.id, null )) '4-6小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 6 , di.id, null )) '6小时以上'
                ,sum(if(cdt.operator_id not in (10000,10001,100002), timestampdiff(second , cdt.created_at, cdt.updated_at)/3600, null))/count(if(cdt.operator_id not in (10000,10001,100002), di.id, null)) 平均处理时长_h
                ,count(di.id) 总疑难件量
            from ph_staging.diff_info di
            left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
            left join ph_staging.store_diff_ticket sdt on sdt.diff_info_id = di.id
            left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
            left join ph_staging.parcel_info pi on pi.pno = di.pno
            join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
            where
                di.updated_at >= date_sub('2023-06-26', interval 8 hour )
                and di.updated_at < date_add('2023-06-26', interval 16 hour ) -- 今日处理
                and di.state = 1 -- 已处理
                and di.diff_marker_category in (23,73,29,78,25,75)
            group by 1,2
            with rollup
        ) a
    order by 1,2
)
# b as
# (
#         select
#         coalesce(a.client_name, '总计') client_name
#         ,coalesce(a.疑难件原因, '总计') 疑难件原因
#         ,a.当日20点后
#         ,a.积压时间0day
#         ,a.积压1天及以上
#     from
#         (
#                 select
#                 coalesce(bc.client_name, '总计') client_name
#                 ,coalesce(tdt2.cn_element, '总计') 疑难件原因
#                 ,count(if(cdt.created_at >= date_add('${date1}', interval 12 hour), di.id, null)) 当日20点后
#                 ,count(if(cdt.created_at < date_add('${date1}', interval 12 hour ) and di.created_at >= date_sub('${date1}', interval 8 hour ), di.id, null)) '积压时间0day'
#                 ,count(if(cdt.created_at < date_sub('${date1}', interval 8 hour ), di.id, null)) '积压1天及以上'
#             from ph_staging.diff_info di
#             left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
#             left join ph_staging.store_diff_ticket sdt2 on sdt2.diff_info_id = di.id
#             left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
#             left join ph_staging.parcel_info pi on pi.pno = di.pno
#             join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
#             where
#                 di.diff_marker_category in (23,73,29,78,25,75)
#                 and
#                 (
#                     (sdt2.state in (0,1) and di.created_at < date_add('${date1}', interval  16 hour) )
#                     or (sdt2.state = 2 and di.created_at < date_add('${date1}', interval  16 hour) and di.updated_at >= date_add('${date1}', interval  16 hour))
#                 )
#             group by 1,2
#             with rollup
#         ) a
#     order by 1,2
# )
, b as
(
    select
        coalesce(a2.client_name, '总计') client_name
        ,coalesce(a2.CN_element, '总计') 疑难件原因
        ,a2.`20-9单量`
        ,a2.`前日20-今日9点处理完成量`
        ,a2.`20-9点11点处理完成量`
        ,a2.`9-20单量`
        ,a2.`9-20已处理单量`
        ,a2.`9-20已处理2小时内量`
    from
        (
           select
                bc.client_name
                ,tdt2.CN_element
                ,count(if(di.created_at >= date_sub('2023-06-26', interval 12 hour) and di.created_at < date_add('2023-06-26', interval  1 hour), di.id, null)) '20-9单量'
                ,count(if(di.created_at >= date_sub('2023-06-26', interval 12 hour) and di.created_at < date_add('2023-06-26', interval  1 hour) and di.state = 1 , di.id, null)) '前日20-今日9点处理完成量'
                ,count(if(di.created_at >= date_sub('2023-06-26', interval 12 hour) and di.created_at < date_add('2023-06-26', interval  1 hour) and di.state = 1 and di.updated_at < date_add('2023-06-26', interval  3 hour ) , di.id, null)) '20-9点11点处理完成量'
                ,count(if(di.created_at >= date_add('2023-06-26', interval  1 hour) and di.created_at < date_add('2023-06-26', interval 12 hour), di.id, null)) '9-20单量'
                ,count(if(di.created_at >= date_add('2023-06-26', interval  1 hour) and di.created_at < date_add('2023-06-26', interval 12 hour) and di.state = 1 , di.id, null)) '9-20已处理单量'
                ,count(if(di.created_at >= date_add('2023-06-26', interval  1 hour) and di.created_at < date_add('2023-06-26', interval 12 hour) and di.state = 1 and di.updated_at < date_add(di.created_at, interval  2 hour ), di.id, null)) '9-20已处理2小时内量'
            from ph_staging.diff_info di
            left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
            left join ph_staging.store_diff_ticket sdt2 on sdt2.diff_info_id = di.id
            left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
            left join ph_staging.parcel_info pi on pi.pno = di.pno
            join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
            where
                di.diff_marker_category in (23,73,29,78,25,75)
                and di.created_at >= date_sub('2023-06-26', interval 12 hour)
                and di.created_at < date_add('2023-06-26', interval 12 hour )
            group by 1,2
            with rollup
        ) a2
)
select
    t1.client_name
    ,t1.疑难件原因
    ,a1.`0-2小时`
    ,a1.`2-4小时`
    ,a1.`4-6小时`
    ,a1.`6小时以上`
    ,a1.继续配送
    ,a1.退货
    ,a1.平均处理时长_h
    ,a1.总疑难件量
    ,b1.`20-9单量`
    ,b1.`前日20-今日9点处理完成量`
    ,b1.`20-9点11点处理完成量`
    ,b1.`9-20单量`
    ,b1.`9-20已处理单量`
    ,b1.`9-20已处理2小时内量`
from
    (
        select
            t1.疑难件原因
            ,t1.client_name
        from
            (
                select
                    a.client_name
                    ,a.疑难件原因
                from a

                union

                select
                    b.client_name
                    ,b.疑难件原因
                from b
            ) t1
        group by 1,2
    ) t1
left join a a1 on t1.client_name = a1.client_name and t1.疑难件原因 = a1.疑难件原因
left join b b1 on t1.client_name = b1.client_name and t1.疑难件原因 = b1.疑难件原因
order by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
	 di.pno '运单号'
     ,dd.client_name 客户名称
	 ,convert_tz(pi.created_at,'+00:00','+08:00') '揽收日期'
	 ,ss.name '揽收网点'
	 ,case pi.state
		  when 1 then '已揽收'
		  when 2 then '运输中'
		  when 3 then '派送中'
		  when 4 then '已滞留'
		  when 5 then '已签收'
		  when 6 then '疑难件处理中'
		  when 7 then '已退件'
		  when 8 then '异常关闭'
		  when 9 then '已撤销'
		  ELSE pi.state
		  end as '包裹状态'
	 ,ss1.name '目的地网点'
	 ,ss2.name '上报疑难件网点'
	, di.diff_marker_category
    ,tdt2.cn_element as ' 疑难件原因 '
	 ,convert_tz(di.created_at,'+00:00','+08:00') '上报时间'
     ,date(convert_tz(di.created_at,'+00:00','+08:00')) '上报日期'
	 ,di.staff_info_id '上报人'
	 ,hi.name '上报人姓名'
	 ,sd.name '处理机构'
	 ,cdt.operator_id '客服操作人ID'
	 ,convert_tz(cdt.first_operated_at,'+00:00','+08:00') '第一次处理时间'
	 ,ifnull(convert_tz(cdt.last_operated_at,'+00:00','+08:00'),convert_tz(cdt.first_operated_at,'+00:00','+08:00')) '最后一次处理时间'
	 ,case cdt.state
		  when 0 then '未处理'
		  when 1 then '已处理'
		  when 2 then '正在沟通中'
		  when 3 then '财务驳回'
		  when 4 then '客户未处理'
		  when 5 then '转交闪速系统'
		  when 6 then '转交QAQC'
		  else cdt.state
		  end '客服处理情况'

     ,case cdt.negotiation_result_category
          when 1 then '赔偿'
          when 2        then '关闭订单(不赔偿不退货)'
          when 3        then'退货'
          when 4        then '退货并赔偿'
          when 5        then '继续配送'
          when 6        then '继续配送并赔偿'
          when 7        then '正在沟通中'
          when 8        then '丢弃包裹的，换单后寄回BKK'
          when 9        then '货物找回，继续派送'
          when 10       then  '改包裹状态'
          when 11       then '需客户修改信息'
          when 12       then '丢弃并赔偿（包裹发到内部拍卖仓）'
	  end '处理结果'
	 ,datediff('hour',convert_tz(di.created_at,'+00:00','+08:00'),ifnull(convert_tz(cdt.last_operated_at,'+00:00','+08:00'),convert_tz(cdt.first_operated_at,'+00:00','+08:00'))) '客服处理-上报时长/h'
	 ,case di.state
		  when 0 then '未处理'
		  when 1 then '已处理'
		  else di.state
      end '疑难件处理情况'
	 ,if(di.state=1,convert_tz(di.updated_at,'+00:00','+08:00'),null)  '疑难件处理完成时间'
# 	 ,datediff('hour',convert_tz(di.created_at,'+00:00','+08:00'),if(di.state=1,convert_tz(di.updated_at,'+00:00','+08:00'),null)) '疑难件处理时长/h'
# 	 ,datediff(now(),if(di.state=0,convert_tz(di.created_at,'+00:00','+08:00'),null) ) '未处理当前时间-上报时间/d'
#     ,if(di.state = 0 and di.created_at >= concat(curdate(), ' 12:00:00'), '当日20点后', '之前') 8点判断
    ,case
        when di.created_at >= date_add('2023-06-26', interval 12 hour ) then '当日20点后'
        when di.created_at < date_add('2023-06-26', interval 12 hour ) and di.created_at >= date_sub('2023-06-26', interval 8 hour ) then '积压时间 0 day'
        when di.created_at < date_sub('2023-06-26', interval 8 hour ) then concat('积压时间', datediff('2023-06-26', convert_tz(di.created_at , '+00:00', '+08:00'), ' day'))
    end 积压时长
    ,if(di.state = 0 and di.created_at >= concat('2023-06-26', ' 12:00:00'), '当日20点后', '之前') 8点判断
from ph_staging.diff_info di
left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
join ph_staging.parcel_info pi on pi.pno=di.pno
join dwm.dwd_dim_bigClient dd on pi.client_id=dd.client_id
left join ph_bi.sys_store ss on ss.id=pi.ticket_pickup_store_id #揽收网点
left join ph_bi.sys_store ss1 on ss1.id=pi.dst_store_id#目的地网点
left join ph_bi.sys_store ss2 on ss2.id=di.store_id #上报当前网点
left join ph_bi.hr_staff_info hi on hi.staff_info_id=di.staff_info_id #疑难件处理人对应网点
left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id=di.id and cdt.organization_type=2 #疑难件处理进度
left join ph_bi.hr_staff_info hi2 on hi2.staff_info_id=cdt.operator_id #疑难件处理人对应网点
left join ph_bi.sys_department sd on sd.id=hi2.node_department_id
where
    di.diff_marker_category in (23,73,29,78,25,75)
    and di.created_at >= date_sub('2023-06-26', interval 12 hour)
    and di.created_at < date_add('2023-06-26', interval  1 hour);
;-- -. . -..- - / . -. - .-. -.--
select
	 di.pno '运单号'
     ,dd.client_name 客户名称
	 ,convert_tz(pi.created_at,'+00:00','+08:00') '揽收日期'
	 ,ss.name '揽收网点'
	 ,case pi.state
		  when 1 then '已揽收'
		  when 2 then '运输中'
		  when 3 then '派送中'
		  when 4 then '已滞留'
		  when 5 then '已签收'
		  when 6 then '疑难件处理中'
		  when 7 then '已退件'
		  when 8 then '异常关闭'
		  when 9 then '已撤销'
		  ELSE pi.state
		  end as '包裹状态'
	 ,ss1.name '目的地网点'
	 ,ss2.name '上报疑难件网点'
	, di.diff_marker_category
    ,tdt2.cn_element as ' 疑难件原因 '
	 ,convert_tz(di.created_at,'+00:00','+08:00') '上报时间'
     ,date(convert_tz(di.created_at,'+00:00','+08:00')) '上报日期'
	 ,di.staff_info_id '上报人'
	 ,hi.name '上报人姓名'
	 ,sd.name '处理机构'
	 ,cdt.operator_id '客服操作人ID'
	 ,convert_tz(cdt.first_operated_at,'+00:00','+08:00') '第一次处理时间'
	 ,ifnull(convert_tz(cdt.last_operated_at,'+00:00','+08:00'),convert_tz(cdt.first_operated_at,'+00:00','+08:00')) '最后一次处理时间'
	 ,case cdt.state
		  when 0 then '未处理'
		  when 1 then '已处理'
		  when 2 then '正在沟通中'
		  when 3 then '财务驳回'
		  when 4 then '客户未处理'
		  when 5 then '转交闪速系统'
		  when 6 then '转交QAQC'
		  else cdt.state
		  end '客服处理情况'

     ,case cdt.negotiation_result_category
          when 1 then '赔偿'
          when 2        then '关闭订单(不赔偿不退货)'
          when 3        then'退货'
          when 4        then '退货并赔偿'
          when 5        then '继续配送'
          when 6        then '继续配送并赔偿'
          when 7        then '正在沟通中'
          when 8        then '丢弃包裹的，换单后寄回BKK'
          when 9        then '货物找回，继续派送'
          when 10       then  '改包裹状态'
          when 11       then '需客户修改信息'
          when 12       then '丢弃并赔偿（包裹发到内部拍卖仓）'
	  end '处理结果'
	 ,datediff('hour',convert_tz(di.created_at,'+00:00','+08:00'),ifnull(convert_tz(cdt.last_operated_at,'+00:00','+08:00'),convert_tz(cdt.first_operated_at,'+00:00','+08:00'))) '客服处理-上报时长/h'
	 ,case di.state
		  when 0 then '未处理'
		  when 1 then '已处理'
		  else di.state
      end '疑难件处理情况'
	 ,if(di.state=1,convert_tz(di.updated_at,'+00:00','+08:00'),null)  '疑难件处理完成时间'
# 	 ,datediff('hour',convert_tz(di.created_at,'+00:00','+08:00'),if(di.state=1,convert_tz(di.updated_at,'+00:00','+08:00'),null)) '疑难件处理时长/h'
# 	 ,datediff(now(),if(di.state=0,convert_tz(di.created_at,'+00:00','+08:00'),null) ) '未处理当前时间-上报时间/d'
#     ,if(di.state = 0 and di.created_at >= concat(curdate(), ' 12:00:00'), '当日20点后', '之前') 8点判断
    ,case
        when di.created_at >= date_add('2023-06-26', interval 12 hour ) then '当日20点后'
        when di.created_at < date_add('2023-06-26', interval 12 hour ) and di.created_at >= date_sub('2023-06-26', interval 8 hour ) then '积压时间 0 day'
        when di.created_at < date_sub('2023-06-26', interval 8 hour ) then concat('积压时间', datediff('2023-06-26', convert_tz(di.created_at , '+00:00', '+08:00'), ' day'))
    end 积压时长
    ,case
        when di.state = 1 and di.updated_at <= date_add('2023-06-26', interval  3 hour ) then '及时'
        when di.state = 1 and di.updated_at > date_add('2023-06-26', interval  3 hour ) then '不及时'
        else null
    end 是否及时
from ph_staging.diff_info di
left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
join ph_staging.parcel_info pi on pi.pno=di.pno
join dwm.dwd_dim_bigClient dd on pi.client_id=dd.client_id
left join ph_bi.sys_store ss on ss.id=pi.ticket_pickup_store_id #揽收网点
left join ph_bi.sys_store ss1 on ss1.id=pi.dst_store_id#目的地网点
left join ph_bi.sys_store ss2 on ss2.id=di.store_id #上报当前网点
left join ph_bi.hr_staff_info hi on hi.staff_info_id=di.staff_info_id #疑难件处理人对应网点
left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id=di.id and cdt.organization_type=2 #疑难件处理进度
left join ph_bi.hr_staff_info hi2 on hi2.staff_info_id=cdt.operator_id #疑难件处理人对应网点
left join ph_bi.sys_department sd on sd.id=hi2.node_department_id
where
    di.diff_marker_category in (23,73,29,78,25,75)
    and di.created_at >= date_sub('2023-06-26', interval 12 hour)
    and di.created_at < date_add('2023-06-26', interval  1 hour);
;-- -. . -..- - / . -. - .-. -.--
select
	 di.pno '运单号'
     ,dd.client_name 客户名称
	 ,convert_tz(pi.created_at,'+00:00','+08:00') '揽收日期'
	 ,ss.name '揽收网点'
	 ,case pi.state
		  when 1 then '已揽收'
		  when 2 then '运输中'
		  when 3 then '派送中'
		  when 4 then '已滞留'
		  when 5 then '已签收'
		  when 6 then '疑难件处理中'
		  when 7 then '已退件'
		  when 8 then '异常关闭'
		  when 9 then '已撤销'
		  ELSE pi.state
		  end as '包裹状态'
	 ,ss1.name '目的地网点'
	 ,ss2.name '上报疑难件网点'
	, di.diff_marker_category
    ,tdt2.cn_element as ' 疑难件原因 '
	 ,convert_tz(di.created_at,'+00:00','+08:00') '上报时间'
     ,date(convert_tz(di.created_at,'+00:00','+08:00')) '上报日期'
	 ,di.staff_info_id '上报人'
	 ,hi.name '上报人姓名'
	 ,sd.name '处理机构'
	 ,cdt.operator_id '客服操作人ID'
	 ,convert_tz(cdt.first_operated_at,'+00:00','+08:00') '第一次处理时间'
	 ,ifnull(convert_tz(cdt.last_operated_at,'+00:00','+08:00'),convert_tz(cdt.first_operated_at,'+00:00','+08:00')) '最后一次处理时间'
	 ,case cdt.state
		  when 0 then '未处理'
		  when 1 then '已处理'
		  when 2 then '正在沟通中'
		  when 3 then '财务驳回'
		  when 4 then '客户未处理'
		  when 5 then '转交闪速系统'
		  when 6 then '转交QAQC'
		  else cdt.state
		  end '客服处理情况'

     ,case cdt.negotiation_result_category
          when 1 then '赔偿'
          when 2        then '关闭订单(不赔偿不退货)'
          when 3        then'退货'
          when 4        then '退货并赔偿'
          when 5        then '继续配送'
          when 6        then '继续配送并赔偿'
          when 7        then '正在沟通中'
          when 8        then '丢弃包裹的，换单后寄回BKK'
          when 9        then '货物找回，继续派送'
          when 10       then  '改包裹状态'
          when 11       then '需客户修改信息'
          when 12       then '丢弃并赔偿（包裹发到内部拍卖仓）'
	  end '处理结果'
	 ,datediff('hour',convert_tz(di.created_at,'+00:00','+08:00'),ifnull(convert_tz(cdt.last_operated_at,'+00:00','+08:00'),convert_tz(cdt.first_operated_at,'+00:00','+08:00'))) '客服处理-上报时长/h'
	 ,case di.state
		  when 0 then '未处理'
		  when 1 then '已处理'
		  else di.state
      end '疑难件处理情况'
	 ,if(di.state=1,convert_tz(di.updated_at,'+00:00','+08:00'),null)  '疑难件处理完成时间'
# 	 ,datediff('hour',convert_tz(di.created_at,'+00:00','+08:00'),if(di.state=1,convert_tz(di.updated_at,'+00:00','+08:00'),null)) '疑难件处理时长/h'
# 	 ,datediff(now(),if(di.state=0,convert_tz(di.created_at,'+00:00','+08:00'),null) ) '未处理当前时间-上报时间/d'
#     ,if(di.state = 0 and di.created_at >= concat(curdate(), ' 12:00:00'), '当日20点后', '之前') 8点判断
    ,case
        when di.created_at >= date_add('2023-06-26', interval 12 hour ) then '当日20点后'
        when di.created_at < date_add('2023-06-26', interval 12 hour ) and di.created_at >= date_sub('2023-06-26', interval 8 hour ) then '积压时间 0 day'
        when di.created_at < date_sub('2023-06-26', interval 8 hour ) then concat('积压时间', datediff('2023-06-26', convert_tz(di.created_at , '+00:00', '+08:00'), ' day'))
    end 积压时长
    ,case
        when di.state = 1 and di.updated_at <= date_add(di.created_at, interval  2 hour) then '及时'
        when di.state = 1 and di.updated_at > date_add(di.created_at, interval  2 hour) then '不及时'
        else null
    end 是否及时
from ph_staging.diff_info di
left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
join ph_staging.parcel_info pi on pi.pno=di.pno
join dwm.dwd_dim_bigClient dd on pi.client_id=dd.client_id
left join ph_bi.sys_store ss on ss.id=pi.ticket_pickup_store_id #揽收网点
left join ph_bi.sys_store ss1 on ss1.id=pi.dst_store_id#目的地网点
left join ph_bi.sys_store ss2 on ss2.id=di.store_id #上报当前网点
left join ph_bi.hr_staff_info hi on hi.staff_info_id=di.staff_info_id #疑难件处理人对应网点
left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id=di.id and cdt.organization_type=2 #疑难件处理进度
left join ph_bi.hr_staff_info hi2 on hi2.staff_info_id=cdt.operator_id #疑难件处理人对应网点
left join ph_bi.sys_department sd on sd.id=hi2.node_department_id
where
    di.diff_marker_category in (23,73,29,78,25,75)
    and di.created_at >= date_add('2023-06-26', interval  1 hour)
    and di.created_at < date_add('2023-06-26', interval 12 hour);
;-- -. . -..- - / . -. - .-. -.--
select
	 di.pno '运单号'
     ,dd.client_name 客户名称
	 ,convert_tz(pi.created_at,'+00:00','+08:00') '揽收日期'
	 ,ss.name '揽收网点'
	 ,case pi.state
		  when 1 then '已揽收'
		  when 2 then '运输中'
		  when 3 then '派送中'
		  when 4 then '已滞留'
		  when 5 then '已签收'
		  when 6 then '疑难件处理中'
		  when 7 then '已退件'
		  when 8 then '异常关闭'
		  when 9 then '已撤销'
		  ELSE pi.state
		  end as '包裹状态'
	 ,ss1.name '目的地网点'
	 ,ss2.name '上报疑难件网点'
	, di.diff_marker_category
    ,tdt2.cn_element as ' 疑难件原因 '
	 ,convert_tz(di.created_at,'+00:00','+08:00') '上报时间'
     ,date(convert_tz(di.created_at,'+00:00','+08:00')) '上报日期'
	 ,di.staff_info_id '上报人'
	 ,hi.name '上报人姓名'
	 ,sd.name '处理机构'
	 ,cdt.operator_id '客服操作人ID'
	 ,convert_tz(cdt.first_operated_at,'+00:00','+08:00') '第一次处理时间'
	 ,ifnull(convert_tz(cdt.last_operated_at,'+00:00','+08:00'),convert_tz(cdt.first_operated_at,'+00:00','+08:00')) '最后一次处理时间'
	 ,case cdt.state
		  when 0 then '未处理'
		  when 1 then '已处理'
		  when 2 then '正在沟通中'
		  when 3 then '财务驳回'
		  when 4 then '客户未处理'
		  when 5 then '转交闪速系统'
		  when 6 then '转交QAQC'
		  else cdt.state
		  end '客服处理情况'

     ,case cdt.negotiation_result_category
          when 1 then '赔偿'
          when 2        then '关闭订单(不赔偿不退货)'
          when 3        then'退货'
          when 4        then '退货并赔偿'
          when 5        then '继续配送'
          when 6        then '继续配送并赔偿'
          when 7        then '正在沟通中'
          when 8        then '丢弃包裹的，换单后寄回BKK'
          when 9        then '货物找回，继续派送'
          when 10       then  '改包裹状态'
          when 11       then '需客户修改信息'
          when 12       then '丢弃并赔偿（包裹发到内部拍卖仓）'
	  end '处理结果'
	 ,datediff('hour',convert_tz(di.created_at,'+00:00','+08:00'),ifnull(convert_tz(cdt.last_operated_at,'+00:00','+08:00'),convert_tz(cdt.first_operated_at,'+00:00','+08:00'))) '客服处理-上报时长/h'
	 ,case di.state
		  when 0 then '未处理'
		  when 1 then '已处理'
		  else di.state
      end '疑难件处理情况'
	 ,if(di.state=1,convert_tz(di.updated_at,'+00:00','+08:00'),null)  '疑难件处理完成时间'
# 	 ,datediff('hour',convert_tz(di.created_at,'+00:00','+08:00'),if(di.state=1,convert_tz(di.updated_at,'+00:00','+08:00'),null)) '疑难件处理时长/h'
# 	 ,datediff(now(),if(di.state=0,convert_tz(di.created_at,'+00:00','+08:00'),null) ) '未处理当前时间-上报时间/d'
#     ,if(di.state = 0 and di.created_at >= concat(curdate(), ' 12:00:00'), '当日20点后', '之前') 8点判断
    ,case
        when di.created_at >= date_add('2023-06-26', interval 12 hour ) then '当日20点后'
        when di.created_at < date_add('2023-06-26', interval 12 hour ) and di.created_at >= date_sub('2023-06-26', interval 8 hour ) then '积压时间 0 day'
        when di.created_at < date_sub('2023-06-26', interval 8 hour ) then concat('积压时间', datediff('2023-06-26', convert_tz(di.created_at , '+00:00', '+08:00'), ' day'))
    end 积压时长
    ,case
        when di.state = 1 and di.updated_at <= date_add(di.created_at, interval  2 hour) then '及时'
        when di.state = 1 and di.updated_at > date_add(di.created_at, interval  2 hour) then '不及时'
        else null
    end 是否及时
    ,if(di.state = 1 , round(timestampdiff(second, di.created_at, di.updated_at )/ 3600, 2), null) 处理时长_h
from ph_staging.diff_info di
left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
join ph_staging.parcel_info pi on pi.pno=di.pno
join dwm.dwd_dim_bigClient dd on pi.client_id=dd.client_id
left join ph_bi.sys_store ss on ss.id=pi.ticket_pickup_store_id #揽收网点
left join ph_bi.sys_store ss1 on ss1.id=pi.dst_store_id#目的地网点
left join ph_bi.sys_store ss2 on ss2.id=di.store_id #上报当前网点
left join ph_bi.hr_staff_info hi on hi.staff_info_id=di.staff_info_id #疑难件处理人对应网点
left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id=di.id and cdt.organization_type=2 #疑难件处理进度
left join ph_bi.hr_staff_info hi2 on hi2.staff_info_id=cdt.operator_id #疑难件处理人对应网点
left join ph_bi.sys_department sd on sd.id=hi2.node_department_id
where
    di.diff_marker_category in (23,73,29,78,25,75)
    and di.created_at >= date_add('2023-06-26', interval  1 hour)
    and di.created_at < date_add('2023-06-26', interval 12 hour);
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        ssp.pno
        ,ssp.inventory_class
        ,ssp.resp_store_id
        ,ssp.last_valid_action_route_at
        ,ddd2.CN_element
    from ph_bi.should_stocktaking_parcel_info_recently ssp
    left join dwm.dwd_dim_dict ddd2 on ddd2.element = ssp.last_valid_action and  ddd2.db = 'ph_staging' and ddd2.tablename = 'parcel_route'
    where
        ssp.stat_date = curdate()
        and ssp.hour = hour(now())
)
select
    t1.pno
    ,case t1.inventory_class
        when 1 then '今日应到包裹未入仓'
        when 2 then '历史应到包裹未更新'
        when 3 then '今日应盘留仓件'
        when 4 then '今日应盘问题件'
    end 应盘类型
    ,pi.src_name 寄件人姓名
    ,pi.src_detail_address 寄件人地址
    ,pi.dst_name 收件人姓名
    ,pi.dst_detail_address 收件人地址
    ,pi.dst_phone 收件人电话
    ,pi.dst_home_phone 收件人家庭电话
    ,dp.store_name 当前网点
    ,dp.piece_name 当前片区
    ,dp.region_name 当前大区
    ,case pi.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end 当前状态
    ,if(pi.returned = 1, '退件', '正向') 流向
    ,if(de.client_id in ('AA0050','AA0121','AA0139','AA0051','AA0080'), oi.insure_declare_value/100, oi.cogs_amount/100) 正向物品价值
    ,oi.cod_amount/100 COD金额
    ,convert_tz(pi.created_at, '+00:00', '+08:00') 揽收时间
    ,dp2.store_name 揽收网点
    ,dp2.piece_name 揽收片区
    ,dp2.region_name 揽收大区
    ,ss.name 目的地网点
    ,t1.CN_element 最后一条有效路由
    ,t1.last_valid_action_route_at 最后一条有效路由时间
    ,if(pi.state = 1, datediff(now(), convert_tz(pi.created_at, '+00:00', '+08:00')), datediff(now(), de.dst_routed_at)) 在仓天数
    ,de.discard_enabled 是否为丢弃
    ,de.inventorys 盘库次数
    ,convert_tz(pr2.routed_at, '+00:00', '+08:00') 最后一次盘库时间
    ,date(convert_tz(pr2.routed_at, '+00:00', '+08:00')) 最后一次盘库日期
    ,if(pr2.routed_at > date_add(curdate(), interval 8 hour), '是', '否') 是否有效盘库
    ,if(pr2.routed_at > date_sub(curdate(), interval 8 hour), convert_tz(pr2.routed_at, '+00:00', '+08:00'), null) 今日最后一次盘库时间
from  t t1
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join ph_staging.parcel_info pi on pi.pno = t1.pno
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = t1.resp_store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
left join ph_staging.order_info oi on if(pi.returned = 1, pi.customary_pno, pi.pno) = oi.pno
left join dwm.dim_ph_sys_store_rd dp2 on dp2.store_id = pi.ticket_pickup_store_id and dp2.stat_date = date_sub(curdate(), interval 1 day)
left join ph_staging.sys_store ss on ss.id = pi.dst_store_id
left join
    (
        select
            b.*
        from
            (
                select
                    pr.pno
                    ,pr.routed_at
                    ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rn
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.route_action = 'INVENTORY'
#                     and pr.routed_at >= date_add(curdate(), interval 8 hour)
            ) b
        where
            b.rn = 1
    ) pr2 on pr2.pno = t1.pno;
;-- -. . -..- - / . -. - .-. -.--
select
       count(*)
    from ph_bi.should_stocktaking_parcel_info_recently ssp
    left join dwm.dwd_dim_dict ddd2 on ddd2.element = ssp.last_valid_action and  ddd2.db = 'ph_staging' and ddd2.tablename = 'parcel_route'
    where
        ssp.stat_date = curdate()
        and ssp.hour = hour(now());
;-- -. . -..- - / . -. - .-. -.--
select
    ss.name
    ,count(distinct ppd.pno) 留仓件数
    ,count(distinct if(ppd.diff_marker_category in (9,14,70), ppd.pno, null)) 改约时间件数
    ,count(distinct if(ppd.diff_marker_category in (9,14,70), ppd.pno, null))/count(distinct ppd.pno) 改约占比
from ph_staging.parcel_problem_detail ppd
left join ph_staging.sys_store ss on ss.id = ppd.store_id
where
    ppd.parcel_problem_type_category = 2
    and ppd.created_at >= '2023-06-25 16:00:00'
    and ppd.created_at < '2023-06-26 16:00:00'
group by 1;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
        select
            ss.name
            ,ds.pno
            ,pi.client_id
        from ph_bi.dc_should_delivery_today ds
        left join ph_staging.parcel_info pi on pi.pno = ds.pno
        left join ph_staging.sys_store ss on ss.id = ds.store_id
        where
            ds.stat_date = '2023-06-26'
)
select
    b.CN_element
    ,b.num
    ,a.*
from
    (
        select
            t1.name
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null and bc.client_id is null then '普通ka'
                when kp.`id` is null then '小c'
            end 客户类型
            ,count(t1.pno) 应派量
            ,count(if(pr.pno is not null, t1.pno, null )) 交接量
            ,count(if(pr.pno is not null, t1.pno, null ))/count(t1.pno) 应派交接占比
        from t t1
        left join
            (
                select
                    pr.pno
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.created_at >= '2023-06-25 16:00:00'
                    and pr.created_at < '2023-06-26 16:00:00'
                    and pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                group by 1
            ) pr on pr.pno = t1.pno
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'ph_staging' and ddd.fieldname = 'diff_marker_category'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 2
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd on ppd.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1,2
    ) a
left join
    (
        select
            t1.name
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null and bc.client_id is null then '普通ka'
                when kp.`id` is null then '小c'
            end 客户类型
            ,ppd.CN_element
            ,count(t1.pno) num
        from t t1
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'ph_staging' and ddd.fieldname = 'diff_marker_category'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 2
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd on ppd.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1,2,3
    ) b on a.name = b.name and a.客户类型 = b.客户类型;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
        select
            ss.name
            ,ds.pno
            ,pi.client_id
        from ph_bi.dc_should_delivery_today ds
        left join ph_staging.parcel_info pi on pi.pno = ds.pno
        left join ph_staging.sys_store ss on ss.id = ds.store_id
        where
            ds.stat_date = '2023-06-26'
)
select
    b.CN_element
    ,b.num
    ,a.*
from
    (
        select
            t1.name
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null and bc.client_id is null then '普通ka'
                when kp.`id` is null then '小c'
            end 客户类型
            ,count(t1.pno) 应派量
            ,count(if(pr.pno is not null, t1.pno, null )) 交接量
            ,count(if(pr.pno is not null, t1.pno, null ))/count(t1.pno) 应派交接占比
        from t t1
        left join
            (
                select
                    pr.pno
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.created_at >= '2023-06-25 16:00:00'
                    and pr.created_at < '2023-06-26 16:00:00'
                    and pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                group by 1
            ) pr on pr.pno = t1.pno
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 2
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd on ppd.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1,2
    ) a
left join
    (
        select
            t1.name
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null and bc.client_id is null then '普通ka'
                when kp.`id` is null then '小c'
            end 客户类型
            ,ppd.CN_element
            ,count(t1.pno) num
        from t t1
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'ph_staging' and ddd.fieldname = 'diff_marker_category'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 2
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd on ppd.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1,2,3
    ) b on a.name = b.name and a.客户类型 = b.客户类型;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
        select
            ss.name
            ,ds.pno
            ,pi.client_id
        from ph_bi.dc_should_delivery_today ds
        left join ph_staging.parcel_info pi on pi.pno = ds.pno
        left join ph_staging.sys_store ss on ss.id = ds.store_id
        where
            ds.stat_date = '2023-06-26'
)
select
    b.CN_element
    ,b.num
    ,a.*
from
    (
        select
            t1.name
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null and bc.client_id is null then '普通ka'
                when kp.`id` is null then '小c'
            end 客户类型
            ,count(t1.pno) 应派量
            ,count(if(pr.pno is not null, t1.pno, null )) 交接量
            ,count(if(pr.pno is not null, t1.pno, null ))/count(t1.pno) 应派交接占比
        from t t1
        left join
            (
                select
                    pr.pno
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.created_at >= '2023-06-25 16:00:00'
                    and pr.created_at < '2023-06-26 16:00:00'
                    and pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                group by 1
            ) pr on pr.pno = t1.pno
#         left join
#             (
#                 select
#                     ppd.pno
#                     ,ppd.diff_marker_category
#                     ,ddd.CN_element
#                 from ph_staging.parcel_problem_detail ppd
#                 left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
#                 join t t1 on t1.pno = ppd.pno
#                 where
#                     ppd.parcel_problem_type_category = 2
#                     and ppd.created_at >= '2023-06-25 16:00:00'
#                     and ppd.created_at < '2023-06-26 16:00:00'
#             ) ppd on ppd.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1,2
    ) a
left join
    (
        select
            t1.name
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null and bc.client_id is null then '普通ka'
                when kp.`id` is null then '小c'
            end 客户类型
            ,ppd.CN_element
            ,count(t1.pno) num
        from t t1
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 2
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd on ppd.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1,2,3
    ) b on a.name = b.name and a.客户类型 = b.客户类型;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
        select
            ss.name
            ,ds.pno
            ,pi.client_id
        from ph_bi.dc_should_delivery_today ds
        left join ph_staging.parcel_info pi on pi.pno = ds.pno
        left join ph_staging.sys_store ss on ss.id = ds.store_id
        where
            ds.stat_date = '2023-06-26'
)
select
    b.CN_element
    ,b.diff_marker_category
    ,b.num
    ,a.*
from
    (
        select
            t1.name
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null and bc.client_id is null then '普通ka'
                when kp.`id` is null then '小c'
            end 客户类型
            ,count(t1.pno) 应派量
            ,count(if(pr.pno is not null, t1.pno, null )) 交接量
            ,count(if(pr.pno is not null, t1.pno, null ))/count(t1.pno) 应派交接占比
        from t t1
        left join
            (
                select
                    pr.pno
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.created_at >= '2023-06-25 16:00:00'
                    and pr.created_at < '2023-06-26 16:00:00'
                    and pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                group by 1
            ) pr on pr.pno = t1.pno
#         left join
#             (
#                 select
#                     ppd.pno
#                     ,ppd.diff_marker_category
#                     ,ddd.CN_element
#                 from ph_staging.parcel_problem_detail ppd
#                 left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
#                 join t t1 on t1.pno = ppd.pno
#                 where
#                     ppd.parcel_problem_type_category = 2
#                     and ppd.created_at >= '2023-06-25 16:00:00'
#                     and ppd.created_at < '2023-06-26 16:00:00'
#             ) ppd on ppd.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1,2
    ) a
left join
    (
        select
            t1.name
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null and bc.client_id is null then '普通ka'
                when kp.`id` is null then '小c'
            end 客户类型
            ,ppd.CN_element
            ,ppd.diff_marker_category
            ,count(t1.pno) num
        from t t1
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 2
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd on ppd.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1,2,3
    ) b on a.name = b.name and a.客户类型 = b.客户类型;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
        select
            ss.name
            ,ds.pno
            ,pi.client_id
        from ph_bi.dc_should_delivery_today ds
        left join ph_staging.parcel_info pi on pi.pno = ds.pno
        left join ph_staging.sys_store ss on ss.id = ds.store_id
        where
            ds.stat_date = '2023-06-26'
)
select
    b.CN_element
    ,b.diff_marker_category
    ,b.num
    ,a.*
from
    (
        select
            t1.name
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null and bc.client_id is null then '普通ka'
                when kp.`id` is null then '小c'
            end 客户类型
            ,count(t1.pno) 应派量
            ,count(if(pr.pno is not null, t1.pno, null )) 交接量
            ,count(if(ppd.pno is not null, t1.pno , null )) 留仓量
            ,count(if(pr.pno is not null, t1.pno, null ))/count(t1.pno) 应派交接占比
            ,count(if(ppd.pno is not null, t1.pno , null ))/count(t1.pno) 应派留仓占比
        from t t1
        left join
            (
                select
                    pr.pno
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.created_at >= '2023-06-25 16:00:00'
                    and pr.created_at < '2023-06-26 16:00:00'
                    and pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                group by 1
            ) pr on pr.pno = t1.pno
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 2
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd on ppd.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1,2
    ) a
left join
    (
        select
            t1.name
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null and bc.client_id is null then '普通ka'
                when kp.`id` is null then '小c'
            end 客户类型
            ,ppd.CN_element
            ,ppd.diff_marker_category
            ,count(t1.pno) num
        from t t1
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 2
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd on ppd.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1,2,3
    ) b on a.name = b.name and a.客户类型 = b.客户类型;
;-- -. . -..- - / . -. - .-. -.--
select
            t1.name
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null and bc.client_id is null then '普通ka'
                when kp.`id` is null then '小c'
            end 客户类型
            ,count(if(ppd.diff_marker_category in (1,40), ppd.pno, null)) '客户不在家/电话无人接听'
            ,count(if(ppd.diff_marker_category in (9,14,70), ppd.pno, null)) '客户改约时间'
            ,count(if(ppd.diff_marker_category in (15,71), ppd.pno, null))  '当日运力不足，无法派送'
        from t t1
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 2
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd on ppd.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
        select
            ss.name
            ,ds.pno
            ,pi.client_id
            ,pi.state
        from ph_bi.dc_should_delivery_today ds
        left join ph_staging.parcel_info pi on pi.pno = ds.pno
        left join ph_staging.sys_store ss on ss.id = ds.store_id
        where
            ds.stat_date = '2023-06-26'
)
# select
#     a.*
#     ,b.`客户不在家/电话无人接听`
#     ,b.客户改约时间
#     ,b.当日运力不足，无法派送
# from
#     (
#         select
#             t1.name
#             ,case
#                 when bc.`client_id` is not null then bc.client_name
#                 when kp.id is not null and bc.client_id is null then '普通ka'
#                 when kp.`id` is null then '小c'
#             end 客户类型
#             ,count(t1.pno) 应派量
#             ,count(if(pr.pno is not null, t1.pno, null )) 交接量
#             ,count(if(ppd.pno is not null, t1.pno , null )) 留仓量
#             ,count(if(ppd2.pno is not null, t1.pno , null )) 问题件量
#             ,count(if(t1.state = 5, t1.pno, null)) 妥投量
#             ,count(if(pr.pno is not null, t1.pno, null ))/count(t1.pno) 应派交接占比
#             ,count(if(ppd.pno is not null, t1.pno , null ))/count(t1.pno) 应派留仓占比
#         from t t1
#         left join
#             (
#                 select
#                     pr.pno
#                 from ph_staging.parcel_route pr
#                 join t t1 on t1.pno = pr.pno
#                 where
#                     pr.created_at >= '2023-06-25 16:00:00'
#                     and pr.created_at < '2023-06-26 16:00:00'
#                     and pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
#                 group by 1
#             ) pr on pr.pno = t1.pno
#         left join
#             (
#                 select
#                     ppd.pno
#                     ,ppd.diff_marker_category
#                     ,ddd.CN_element
#                 from ph_staging.parcel_problem_detail ppd
#                 left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
#                 join t t1 on t1.pno = ppd.pno
#                 where
#                     ppd.parcel_problem_type_category = 2
#                     and ppd.created_at >= '2023-06-25 16:00:00'
#                     and ppd.created_at < '2023-06-26 16:00:00'
#             ) ppd on ppd.pno = t1.pno
#         left join
#             (
#                 select
#                     ppd.pno
#                     ,ppd.diff_marker_category
#                     ,ddd.CN_element
#                 from ph_staging.parcel_problem_detail ppd
#                 left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
#                 join t t1 on t1.pno = ppd.pno
#                 where
#                     ppd.parcel_problem_type_category = 1
#                     and ppd.created_at >= '2023-06-25 16:00:00'
#                     and ppd.created_at < '2023-06-26 16:00:00'
#             ) ppd2 on ppd2.pno = t1.pno
#         left join ph_staging.ka_profile kp on kp.id = t1.client_id
#         left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
#         group by 1,2
#     ) a
# left join
#     (
        select
            t1.name
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null and bc.client_id is null then '普通ka'
                when kp.`id` is null then '小c'
            end 客户类型
            ,count(if(ppd.diff_marker_category in (1,40), ppd.pno, null)) '客户不在家/电话无人接听'
            ,count(if(ppd.diff_marker_category in (9,14,70), ppd.pno, null)) '客户改约时间'
            ,count(if(ppd.diff_marker_category in (15,71), ppd.pno, null))  '当日运力不足，无法派送'
        from t t1
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 2
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd on ppd.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
        select
            ss.name
            ,ds.pno
            ,pi.client_id
            ,pi.state
        from ph_bi.dc_should_delivery_today ds
        left join ph_staging.parcel_info pi on pi.pno = ds.pno
        left join ph_staging.sys_store ss on ss.id = ds.store_id
        where
            ds.stat_date = '2023-06-26'
)
select
    a.*
#     ,b.`客户不在家/电话无人接听`
#     ,b.客户改约时间
#     ,b.当日运力不足，无法派送
from
    (
        select
            t1.name
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null and bc.client_id is null then '普通ka'
                when kp.`id` is null then '小c'
            end 客户类型
            ,count(t1.pno) 应派量
            ,count(if(pr.pno is not null, t1.pno, null )) 交接量
            ,count(if(ppd.pno is not null, t1.pno , null )) 留仓量
            ,count(if(ppd2.pno is not null, t1.pno , null )) 问题件量
            ,count(if(t1.state = 5, t1.pno, null)) 妥投量
            ,count(if(pr.pno is not null, t1.pno, null ))/count(t1.pno) 应派交接占比
            ,count(if(ppd.pno is not null, t1.pno , null ))/count(t1.pno) 应派留仓占比
        from t t1
        left join
            (
                select
                    pr.pno
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.created_at >= '2023-06-25 16:00:00'
                    and pr.created_at < '2023-06-26 16:00:00'
                    and pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                group by 1
            ) pr on pr.pno = t1.pno
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 2
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd on ppd.pno = t1.pno
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 1
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd2 on ppd2.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
        select
            ss.name
            ,ds.pno
            ,pi.client_id
            ,pi.state
        from ph_bi.dc_should_delivery_today ds
        left join ph_staging.parcel_info pi on pi.pno = ds.pno
        left join ph_staging.sys_store ss on ss.id = ds.store_id
        where
            ds.stat_date = '2023-06-26'
)
select
    a.*
#     ,b.`客户不在家/电话无人接听`
#     ,b.客户改约时间
#     ,b.当日运力不足，无法派送
from
    (
        select
            t1.name
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null and bc.client_id is null then '普通ka'
                when kp.`id` is null then '小c'
            end 客户类型
            ,count(t1.pno) 应派量
            ,count(if(pr.pno is not null, t1.pno, null )) 交接量
            ,count(if(ppd.pno is not null, t1.pno , null )) 留仓量
            ,count(if(ppd2.pno is not null, t1.pno , null )) 问题件量
            ,count(if(t1.state = 5, t1.pno, null)) 妥投量
            ,count(if(pr.pno is not null, t1.pno, null ))/count(t1.pno) 应派交接占比
            ,count(if(ppd.pno is not null, t1.pno , null ))/count(t1.pno) 应派留仓占比
        from t t1
        left join
            (
                select
                    pr.pno
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.created_at >= '2023-06-25 16:00:00'
                    and pr.created_at < '2023-06-26 16:00:00'
                    and pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                group by 1
            ) pr on pr.pno = t1.pno
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 2
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd on ppd.pno = t1.pno
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 1
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd2 on ppd2.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1,2
    ) a;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
        select
            ss.name
            ,ds.pno
            ,pi.client_id
            ,pi.state
        from ph_bi.dc_should_delivery_today ds
        left join ph_staging.parcel_info pi on pi.pno = ds.pno
        left join ph_staging.sys_store ss on ss.id = ds.store_id
        where
            ds.stat_date = '2023-06-26'
)
select
    a.*
    ,b.`客户不在家/电话无人接听`
    ,b.客户改约时间
    ,b.当日运力不足，无法派送
from
    (
        select
            t1.name
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null and bc.client_id is null then '普通ka'
                when kp.`id` is null then '小c'
            end 客户类型
            ,count(t1.pno) 应派量
            ,count(if(pr.pno is not null, t1.pno, null )) 交接量
            ,count(if(ppd.pno is not null, t1.pno , null )) 留仓量
            ,count(if(ppd2.pno is not null, t1.pno , null )) 问题件量
            ,count(if(t1.state = 5, t1.pno, null)) 妥投量
            ,count(if(pr.pno is not null, t1.pno, null ))/count(t1.pno) 应派交接占比
            ,count(if(ppd.pno is not null, t1.pno , null ))/count(t1.pno) 应派留仓占比
        from t t1
        left join
            (
                select
                    pr.pno
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.created_at >= '2023-06-25 16:00:00'
                    and pr.created_at < '2023-06-26 16:00:00'
                    and pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                group by 1
            ) pr on pr.pno = t1.pno
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 2
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd on ppd.pno = t1.pno
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 1
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd2 on ppd2.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1,2
    ) a
left join
    (
        select
            t1.name
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null and bc.client_id is null then '普通ka'
                when kp.`id` is null then '小c'
            end 客户类型
            ,count(if(ppd.diff_marker_category in (1,40), ppd.pno, null)) '客户不在家/电话无人接听'
            ,count(if(ppd.diff_marker_category in (9,14,70), ppd.pno, null)) '客户改约时间'
            ,count(if(ppd.diff_marker_category in (15,71), ppd.pno, null))  '当日运力不足，无法派送'
        from t t1
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 2
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd on ppd.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1,2
    ) b on a.name = b.name and a.客户类型 = b.客户类型;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
        select
            ss.name
            ,ds.pno
            ,pi.client_id
            ,pi.state
        from ph_bi.dc_should_delivery_today ds
        left join ph_staging.parcel_info pi on pi.pno = ds.pno
        left join ph_staging.sys_store ss on ss.id = ds.store_id
        where
            ds.stat_date = '2023-06-26'
)
select
    a.name
    ,a.客户类型
    ,a.应派量
    ,a.交接量
    ,a.应派交接占比
    ,a.留仓量
    ,a.应派留仓占比
    ,a.妥投量
    ,a.问题件量
    ,b.`客户不在家/电话无人接听`
    ,b.客户改约时间
    ,b.当日运力不足，无法派送
from
    (
        select
            t1.name
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null and bc.client_id is null then '普通ka'
                when kp.`id` is null then '小c'
            end 客户类型
            ,count(t1.pno) 应派量
            ,count(if(pr.pno is not null, t1.pno, null )) 交接量
            ,count(if(ppd.pno is not null, t1.pno , null )) 留仓量
            ,count(if(ppd2.pno is not null, t1.pno , null )) 问题件量
            ,count(if(t1.state = 5, t1.pno, null)) 妥投量
            ,count(if(pr.pno is not null, t1.pno, null ))/count(t1.pno) 应派交接占比
            ,count(if(ppd.pno is not null, t1.pno , null ))/count(t1.pno) 应派留仓占比
        from t t1
        left join
            (
                select
                    pr.pno
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.created_at >= '2023-06-25 16:00:00'
                    and pr.created_at < '2023-06-26 16:00:00'
                    and pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                group by 1
            ) pr on pr.pno = t1.pno
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 2
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd on ppd.pno = t1.pno
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 1
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd2 on ppd2.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1,2
    ) a
left join
    (
        select
            t1.name
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null and bc.client_id is null then '普通ka'
                when kp.`id` is null then '小c'
            end 客户类型
            ,count(if(ppd.diff_marker_category in (1,40), ppd.pno, null)) '客户不在家/电话无人接听'
            ,count(if(ppd.diff_marker_category in (9,14,70), ppd.pno, null)) '客户改约时间'
            ,count(if(ppd.diff_marker_category in (15,71), ppd.pno, null))  '当日运力不足，无法派送'
        from t t1
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 2
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd on ppd.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1,2
    ) b on a.name = b.name and a.客户类型 = b.客户类型;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
        select
            ss.name
            ,ds.pno
            ,pi.client_id
            ,pi.state
        from ph_bi.dc_should_delivery_today ds
        left join ph_staging.parcel_info pi on pi.pno = ds.pno
        left join ph_staging.sys_store ss on ss.id = ds.store_id
        where
            ds.stat_date = '2023-06-26'
)
select
    a.name
    ,a.客户类型
    ,a.应派量
    ,a.交接量
    ,a.应派交接占比
    ,a.留仓量
    ,a.应派留仓占比
    ,a.妥投量
    ,a.问题件量
    ,b.`客户不在家/电话无人接听`
    ,b.客户改约时间
    ,b.`当日运力不足，无法派送`
from
    (
        select
            t1.name
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null and bc.client_id is null then '普通ka'
                when kp.`id` is null then '小c'
            end 客户类型
            ,count(t1.pno) 应派量
            ,count(if(pr.pno is not null, t1.pno, null )) 交接量
            ,count(if(ppd.pno is not null, t1.pno , null )) 留仓量
            ,count(if(ppd2.pno is not null, t1.pno , null )) 问题件量
            ,count(if(t1.state = 5, t1.pno, null)) 妥投量
            ,count(if(pr.pno is not null, t1.pno, null ))/count(t1.pno) 应派交接占比
            ,count(if(ppd.pno is not null, t1.pno , null ))/count(t1.pno) 应派留仓占比
        from t t1
        left join
            (
                select
                    pr.pno
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.created_at >= '2023-06-25 16:00:00'
                    and pr.created_at < '2023-06-26 16:00:00'
                    and pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                group by 1
            ) pr on pr.pno = t1.pno
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 2
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd on ppd.pno = t1.pno
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 1
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd2 on ppd2.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1,2
    ) a
left join
    (
        select
            t1.name
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null and bc.client_id is null then '普通ka'
                when kp.`id` is null then '小c'
            end 客户类型
            ,count(if(ppd.diff_marker_category in (1,40), ppd.pno, null)) '客户不在家/电话无人接听'
            ,count(if(ppd.diff_marker_category in (9,14,70), ppd.pno, null)) '客户改约时间'
            ,count(if(ppd.diff_marker_category in (15,71), ppd.pno, null))  '当日运力不足，无法派送'
        from t t1
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 2
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd on ppd.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1,2
    ) b on a.name = b.name and a.客户类型 = b.客户类型;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
        select
            ss.name
            ,ds.pno
            ,pi.client_id
            ,pi.state
        from ph_bi.dc_should_delivery_today ds
        left join ph_staging.parcel_info pi on pi.pno = ds.pno
        left join ph_staging.sys_store ss on ss.id = ds.store_id
        where
            ds.stat_date = '2023-06-26'
)
select
    a.name
    ,a.客户类型
    ,a.应派量
    ,a.交接量
    ,a.应派交接占比
    ,a.留仓量
    ,a.应派留仓占比
    ,a.妥投量
    ,a.问题件量
    ,a.`未妥投&未问题件&未留仓`
    ,b.`客户不在家/电话无人接听`
    ,b.客户改约时间
    ,b.`当日运力不足，无法派送`
from
    (
        select
            t1.name
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null and bc.client_id is null then '普通ka'
                when kp.`id` is null then '小c'
            end 客户类型
            ,count(t1.pno) 应派量
            ,count(if(pr.pno is not null, t1.pno, null )) 交接量
            ,count(if(ppd.pno is not null, t1.pno , null )) 留仓量
            ,count(if(ppd2.pno is not null, t1.pno , null )) 问题件量
            ,count(if(t1.state = 5, t1.pno, null)) 妥投量
            ,count(if(t1.state != 5 and ppd2.pno is null and ppd.pno is null, ppd.pno, null)) `未妥投&未问题件&未留仓`
            ,count(if(pr.pno is not null, t1.pno, null ))/count(t1.pno) 应派交接占比
            ,count(if(ppd.pno is not null, t1.pno , null ))/count(t1.pno) 应派留仓占比
        from t t1
        left join
            (
                select
                    pr.pno
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.created_at >= '2023-06-25 16:00:00'
                    and pr.created_at < '2023-06-26 16:00:00'
                    and pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                group by 1
            ) pr on pr.pno = t1.pno
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 2
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd on ppd.pno = t1.pno
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 1
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd2 on ppd2.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1,2
    ) a
left join
    (
        select
            t1.name
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null and bc.client_id is null then '普通ka'
                when kp.`id` is null then '小c'
            end 客户类型
            ,count(if(ppd.diff_marker_category in (1,40), ppd.pno, null)) '客户不在家/电话无人接听'
            ,count(if(ppd.diff_marker_category in (9,14,70), ppd.pno, null)) '客户改约时间'
            ,count(if(ppd.diff_marker_category in (15,71), ppd.pno, null))  '当日运力不足，无法派送'
        from t t1
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 2
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd on ppd.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1,2
    ) b on a.name = b.name and a.客户类型 = b.客户类型;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
        select
            dp.store_name
            ,dp.region_name
            ,dp.piece_name
            ,ds.pno
            ,pi.client_id
            ,pi.state
        from ph_bi.dc_should_delivery_today ds
        left join ph_staging.parcel_info pi on pi.pno = ds.pno
        left join dwm.dim_ph_sys_store_rd dp on dp.store_id = ds.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
        where
            ds.stat_date = '2023-06-26'
)
select
    a.region_name 大区
    ,a.piece_name 片区
    ,a.store_name 网点
    ,a.客户类型
    ,a.应派量
    ,a.交接量
    ,a.应派交接占比
    ,a.留仓量
    ,a.应派留仓占比
    ,a.妥投量
    ,a.问题件量
    ,a.`未妥投&未问题件&未留仓`
    ,b.`客户不在家/电话无人接听`
    ,b.客户改约时间
    ,b.`当日运力不足，无法派送`
from
    (
        select
            t1.store_name
            ,t1.region_name
            ,t1.piece_name
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null and bc.client_id is null then '普通ka'
                when kp.`id` is null then '小c'
            end 客户类型
            ,count(t1.pno) 应派量
            ,count(if(pr.pno is not null, t1.pno, null )) 交接量
            ,count(if(ppd.pno is not null, t1.pno , null )) 留仓量
            ,count(if(ppd2.pno is not null, t1.pno , null )) 问题件量
            ,count(if(t1.state = 5, t1.pno, null)) 妥投量
            ,count(if(t1.state != 5 and ppd2.pno is null and ppd.pno is null, ppd.pno, null)) `未妥投&未问题件&未留仓`
            ,count(if(pr.pno is not null, t1.pno, null ))/count(t1.pno) 应派交接占比
            ,count(if(ppd.pno is not null, t1.pno , null ))/count(t1.pno) 应派留仓占比
        from t t1
        left join
            (
                select
                    pr.pno
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.created_at >= '2023-06-25 16:00:00'
                    and pr.created_at < '2023-06-26 16:00:00'
                    and pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                group by 1
            ) pr on pr.pno = t1.pno
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 2
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd on ppd.pno = t1.pno
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 1
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd2 on ppd2.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1,2
    ) a
left join
    (
        select
            t1.store_name
            ,case
                when bc.`client_id` is not null then bc.client_name
                when kp.id is not null and bc.client_id is null then '普通ka'
                when kp.`id` is null then '小c'
            end 客户类型
            ,count(if(ppd.diff_marker_category in (1,40), ppd.pno, null)) '客户不在家/电话无人接听'
            ,count(if(ppd.diff_marker_category in (9,14,70), ppd.pno, null)) '客户改约时间'
            ,count(if(ppd.diff_marker_category in (15,71), ppd.pno, null))  '当日运力不足，无法派送'
        from t t1
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 2
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd on ppd.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1,2
    ) b on a.store_name = b.store_name and a.客户类型 = b.客户类型;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
        select
            dp.store_name
            ,dp.region_name
            ,dp.piece_name
            ,ds.pno
            ,pi.client_id
            ,pi.state
        from ph_bi.dc_should_delivery_today ds
        left join ph_staging.parcel_info pi on pi.pno = ds.pno
        left join dwm.dim_ph_sys_store_rd dp on dp.store_id = ds.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
        where
            ds.stat_date = '2023-06-26'
)
select
    a.region_name 大区
    ,a.piece_name 片区
    ,a.store_name 网点
    ,a.应派量
    ,a.交接量
    ,a.应派交接占比
    ,a.留仓量
    ,a.应派留仓占比
    ,a.妥投量
    ,a.问题件量
    ,a.`未妥投&未问题件&未留仓`
    ,b.`客户不在家/电话无人接听`
    ,b.客户改约时间
    ,b.`当日运力不足，无法派送`
from
    (
        select
            t1.store_name
            ,t1.region_name
            ,t1.piece_name
#             ,case
#                 when bc.`client_id` is not null then bc.client_name
#                 when kp.id is not null and bc.client_id is null then '普通ka'
#                 when kp.`id` is null then '小c'
#             end 客户类型
            ,count(t1.pno) 应派量
            ,count(if(pr.pno is not null, t1.pno, null )) 交接量
            ,count(if(ppd.pno is not null, t1.pno , null )) 留仓量
            ,count(if(ppd2.pno is not null, t1.pno , null )) 问题件量
            ,count(if(t1.state = 5, t1.pno, null)) 妥投量
            ,count(if(t1.state != 5 and ppd2.pno is null and ppd.pno is null, ppd.pno, null)) `未妥投&未问题件&未留仓`
            ,count(if(pr.pno is not null, t1.pno, null ))/count(t1.pno) 应派交接占比
            ,count(if(ppd.pno is not null, t1.pno , null ))/count(t1.pno) 应派留仓占比
        from t t1
        left join
            (
                select
                    pr.pno
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.created_at >= '2023-06-25 16:00:00'
                    and pr.created_at < '2023-06-26 16:00:00'
                    and pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                group by 1
            ) pr on pr.pno = t1.pno
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 2
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd on ppd.pno = t1.pno
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 1
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd2 on ppd2.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1,2
    ) a
left join
    (
        select
            t1.store_name
#             ,case
#                 when bc.`client_id` is not null then bc.client_name
#                 when kp.id is not null and bc.client_id is null then '普通ka'
#                 when kp.`id` is null then '小c'
#             end 客户类型
            ,count(if(ppd.diff_marker_category in (1,40), ppd.pno, null)) '客户不在家/电话无人接听'
            ,count(if(ppd.diff_marker_category in (9,14,70), ppd.pno, null)) '客户改约时间'
            ,count(if(ppd.diff_marker_category in (15,71), ppd.pno, null))  '当日运力不足，无法派送'
        from t t1
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 2
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd on ppd.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1,2
    ) b on a.store_name = b.store_name;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
        select
            dp.store_name
            ,dp.region_name
            ,dp.piece_name
            ,ds.pno
            ,pi.client_id
            ,pi.state
        from ph_bi.dc_should_delivery_today ds
        left join ph_staging.parcel_info pi on pi.pno = ds.pno
        left join dwm.dim_ph_sys_store_rd dp on dp.store_id = ds.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
        where
            ds.stat_date = '2023-06-26'
)
select
    a.region_name 大区
    ,a.piece_name 片区
    ,a.store_name 网点
    ,a.应派量
    ,a.交接量
    ,a.应派交接占比
    ,a.留仓量
    ,a.应派留仓占比
    ,a.妥投量
    ,a.问题件量
    ,a.`未妥投&未问题件&未留仓`
    ,b.`客户不在家/电话无人接听`
    ,b.客户改约时间
    ,b.`当日运力不足，无法派送`
from
    (
        select
            t1.store_name
            ,t1.region_name
            ,t1.piece_name
#             ,case
#                 when bc.`client_id` is not null then bc.client_name
#                 when kp.id is not null and bc.client_id is null then '普通ka'
#                 when kp.`id` is null then '小c'
#             end 客户类型
            ,count(t1.pno) 应派量
            ,count(if(pr.pno is not null, t1.pno, null )) 交接量
            ,count(if(ppd.pno is not null, t1.pno , null )) 留仓量
            ,count(if(ppd2.pno is not null, t1.pno , null )) 问题件量
            ,count(if(t1.state = 5, t1.pno, null)) 妥投量
            ,count(if(t1.state != 5 and ppd2.pno is null and ppd.pno is null, ppd.pno, null)) `未妥投&未问题件&未留仓`
            ,count(if(pr.pno is not null, t1.pno, null ))/count(t1.pno) 应派交接占比
            ,count(if(ppd.pno is not null, t1.pno , null ))/count(t1.pno) 应派留仓占比
        from t t1
        left join
            (
                select
                    pr.pno
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.created_at >= '2023-06-25 16:00:00'
                    and pr.created_at < '2023-06-26 16:00:00'
                    and pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                group by 1
            ) pr on pr.pno = t1.pno
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 2
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd on ppd.pno = t1.pno
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 1
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd2 on ppd2.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1,2,3
    ) a
left join
    (
        select
            t1.store_name
#             ,case
#                 when bc.`client_id` is not null then bc.client_name
#                 when kp.id is not null and bc.client_id is null then '普通ka'
#                 when kp.`id` is null then '小c'
#             end 客户类型
            ,count(if(ppd.diff_marker_category in (1,40), ppd.pno, null)) '客户不在家/电话无人接听'
            ,count(if(ppd.diff_marker_category in (9,14,70), ppd.pno, null)) '客户改约时间'
            ,count(if(ppd.diff_marker_category in (15,71), ppd.pno, null))  '当日运力不足，无法派送'
        from t t1
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 2
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd on ppd.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1
    ) b on a.store_name = b.store_name;
;-- -. . -..- - / . -. - .-. -.--
select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 2
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
                    and ppd.pno = 'PT240521T23Z2AL';
;-- -. . -..- - / . -. - .-. -.--
with t as
(
        select
            dp.store_name
            ,dp.region_name
            ,dp.piece_name
            ,ds.pno
            ,pi.client_id
            ,pi.state
        from ph_bi.dc_should_delivery_today ds
        left join ph_staging.parcel_info pi on pi.pno = ds.pno
        left join dwm.dim_ph_sys_store_rd dp on dp.store_id = ds.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
        where
            ds.stat_date = '2023-06-26'
)
select
    a.region_name 大区
    ,a.piece_name 片区
    ,a.store_name 网点
    ,a.应派量
    ,a.交接量
    ,a.应派交接占比
    ,a.留仓量
    ,a.应派留仓占比
    ,a.妥投量
    ,a.问题件量
    ,a.`未妥投&未问题件&未留仓`
    ,b.`客户不在家/电话无人接听`
    ,b.客户改约时间
    ,b.`当日运力不足，无法派送`
from
    (
        select
            t1.store_name
            ,t1.region_name
            ,t1.piece_name
#             ,case
#                 when bc.`client_id` is not null then bc.client_name
#                 when kp.id is not null and bc.client_id is null then '普通ka'
#                 when kp.`id` is null then '小c'
#             end 客户类型
            ,count(t1.pno) 应派量
            ,count(if(pr.pno is not null, t1.pno, null )) 交接量
            ,count(if(ppd.pno is not null, t1.pno , null )) 留仓量
            ,count(if(ppd2.pno is not null, t1.pno , null )) 问题件量
            ,count(if(t1.state = 5, t1.pno, null)) 妥投量
            ,count(if(t1.state != 5 and ppd2.pno is null and ppd.pno is null, t1.pno, null)) `未妥投&未问题件&未留仓`
            ,count(if(pr.pno is not null, t1.pno, null ))/count(t1.pno) 应派交接占比
            ,count(if(ppd.pno is not null, t1.pno , null ))/count(t1.pno) 应派留仓占比
        from t t1
        left join
            (
                select
                    pr.pno
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.created_at >= '2023-06-25 16:00:00'
                    and pr.created_at < '2023-06-26 16:00:00'
                    and pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                group by 1
            ) pr on pr.pno = t1.pno
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 2
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'

            ) ppd on ppd.pno = t1.pno
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 1
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd2 on ppd2.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1,2,3
    ) a
left join
    (
        select
            t1.store_name
#             ,case
#                 when bc.`client_id` is not null then bc.client_name
#                 when kp.id is not null and bc.client_id is null then '普通ka'
#                 when kp.`id` is null then '小c'
#             end 客户类型
            ,count(if(ppd.diff_marker_category in (1,40), ppd.pno, null)) '客户不在家/电话无人接听'
            ,count(if(ppd.diff_marker_category in (9,14,70), ppd.pno, null)) '客户改约时间'
            ,count(if(ppd.diff_marker_category in (15,71), ppd.pno, null))  '当日运力不足，无法派送'
        from t t1
        left join
            (
                select
                    ppd.pno
                    ,ppd.diff_marker_category
                    ,ddd.CN_element
                from ph_staging.parcel_problem_detail ppd
                left join dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
                join t t1 on t1.pno = ppd.pno
                where
                    ppd.parcel_problem_type_category = 2
                    and ppd.created_at >= '2023-06-25 16:00:00'
                    and ppd.created_at < '2023-06-26 16:00:00'
            ) ppd on ppd.pno = t1.pno
        left join ph_staging.ka_profile kp on kp.id = t1.client_id
        left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
        group by 1
    ) b on a.store_name = b.store_name;
;-- -. . -..- - / . -. - .-. -.--
select
    di.pno, di.id
from ph_staging.diff_info di
    left join ph_staging.parcel_info pi on di.pno = pi.pno
left join ph_staging.customer_diff_ticket cdt on di.id = cdt.diff_info_id
where ( pi.state in (5,7,8,9) or pi.state is null) and cdt.state != 1;
;-- -. . -..- - / . -. - .-. -.--
select
    t.pno
    ,case pi.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,pi.dst_phone 收件人电话
    ,pi.dst_home_phone 收件人家庭电话
from tmpale.tmp_ph_pno_0627 t
left join ph_staging.parcel_info pi on pi.pno = t.pno
where
    pi.state not in (5,7,8,9);
;-- -. . -..- - / . -. - .-. -.--
select
    ssp.hour
from ph_bi.should_stocktaking_parcel_info_recently ssp
where
    ssp.stat_date = date_sub(curdate(), interval  1 day)
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select hour(2023-06-23 00:12:00);
;-- -. . -..- - / . -. - .-. -.--
select hour('2023-06-28 17:29:29');
;-- -. . -..- - / . -. - .-. -.--
select hour('2023-06-28 00:29:29');
;-- -. . -..- - / . -. - .-. -.--
select
    plt.pno 运单号
    ,plt.created_at 任务生成时间
    ,case plt.source
        WHEN 1 THEN 'A-问题件-丢失'
        WHEN 2 THEN 'B-记录本-丢失'
        WHEN 3 THEN 'C-包裹状态未更新'
        WHEN 4 THEN 'D-问题件-破损/短少'
        WHEN 5 THEN 'E-记录本-索赔-丢失'
        WHEN 6 THEN 'F-记录本-索赔-破损/短少'
        WHEN 7 THEN 'G-记录本-索赔-其他'
        WHEN 8 THEN 'H-包裹状态未更新-IPC计数'
        WHEN 9 THEN 'I-问题件-外包装破损险'
        WHEN 10 THEN 'J-问题记录本-外包装破损险'
        when 11 then 'K-超时效包裹'
        when 12 then 'L-高度疑似丢失'
    end 问题来源渠道
    ,concat('SSRD', plt.id) 任务ID
    ,case plt.vip_enable
        when 0 then '普通客户'
        when 1 then 'KAM客户'
    end 客户类型
    ,plt.client_id 客户ID
    ,pi.cod_amount/100 COD金额
    ,oi.cogs_amount COGS
    ,ss.short_name 始发地
    ,ss2.short_name  目的地
    ,convert_tz(pi.created_at , '+00:00', '+07:00') 揽件时间
    ,cast(pi.exhibition_weight as double)/1000 '重量'
    ,concat(pi.exhibition_length,'*',pi.exhibition_width,'*',pi.exhibition_height) '尺寸'
    ,case pi.parcel_category
        when '0' then '文件'
        when '1' then '干燥食品'
        when '10' then '家居用具'
        when '11' then '水果'
        when '2' then '日用品'
        when '3' then '数码产品'
        when '4' then '衣物'
        when '5' then '书刊'
        when '6' then '汽车配件'
        when '7' then '鞋包'
        when '8' then '体育器材'
        when '9' then '化妆品'
        when '99' then '其它'
    end  as 物品类型
    ,case  plt.last_valid_action
        when 'ACCEPT_PARCEL' then '接件扫描'
         when 'ARRIVAL_GOODS_VAN_CHECK_SCAN' then '车货关联到港'
         when 'ARRIVAL_WAREHOUSE_SCAN' then '到件入仓扫描'
         when 'CANCEL_ARRIVAL_WAREHOUSE_SCAN' then '取消到件入仓扫描'
         when 'CANCEL_PARCEL' then '撤销包裹'
         when 'CANCEL_SHIPMENT_WAREHOUSE' then '取消发件出仓'
         when 'CHANGE_PARCEL_CANCEL' then '修改包裹为撤销'
         when 'CHANGE_PARCEL_CLOSE' then '修改包裹为异常关闭'
         when 'CHANGE_PARCEL_IN_TRANSIT' then '修改包裹为运输中'
         when 'CHANGE_PARCEL_INFO' then '修改包裹信息'
         when 'CHANGE_PARCEL_SIGNED' then '修改包裹为签收'
         when 'CLAIMS_CLOSE' then '理赔关闭'
         when 'CLAIMS_COMPLETE' then '理赔完成'
         when 'CLAIMS_CONTACT' then '已联系客户'
         when 'CLAIMS_TRANSFER_CS' then '转交总部cs处理'
         when 'CLOSE_ORDER' then '关闭订单'
         when 'CONTINUE_TRANSPORT' then '疑难件继续配送'
         when 'CREATE_WORK_ORDER' then '创建工单'
         when 'CUSTOMER_CHANGE_PARCEL_INFO' then '客户修改包裹信息'
         when 'CUSTOMER_OPERATING_RETURN' then '客户操作退回寄件人'
         when 'DELIVERY_CONFIRM' then '确认妥投'
         when 'DELIVERY_MARKER' then '派件标记'
         when 'DELIVERY_PICKUP_STORE_SCAN' then '自提取件扫描'
         when 'DELIVERY_TICKET_CREATION_SCAN' then '交接扫描'
         when 'DELIVERY_TRANSFER' then '派件转单'
         when 'DEPARTURE_GOODS_VAN_CK_SCAN' then '车货关联出港'
         when 'DETAIN_WAREHOUSE' then '货件留仓'
         when 'DIFFICULTY_FINISH_INDEMNITY' then '疑难件支付赔偿'
         when 'DIFFICULTY_HANDOVER' then '疑难件交接'
         when 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE' then '疑难件交接货件留仓'
         when 'DIFFICULTY_RE_TRANSIT' then '疑难件退回区域总部/重启运送'
         when 'DIFFICULTY_RETURN' then '疑难件退回寄件人'
         when 'DIFFICULTY_SEAL' then '集包异常'
         when 'DISCARD_RETURN_BKK' then '丢弃包裹的，换单后寄回BKK'
         when 'DISTRIBUTION_INVENTORY' then '分拨盘库'
         when 'DWS_WEIGHT_IMAGE' then 'DWS复秤照片'
         when 'EXCHANGE_PARCEL' then '换货'
         when 'FAKE_CANCEL_HANDLE' then '虚假撤销判责'
         when 'FLASH_HOME_SCAN' then 'FH交接扫描'
         when 'FORCE_TAKE_PHOTO' then '强制拍照路由'
         when 'HAVE_HAIR_SCAN_NO_TO' then '有发无到'
         when 'HURRY_PARCEL' then '催单'
         when 'INCOMING_CALL' then '来电接听'
         when 'INTERRUPT_PARCEL_AND_RETURN' then '中断运输并退回'
         when 'INVENTORY' then '盘库'
         when 'LOSE_PARCEL_TEAM_OPERATION' then '丢失件团队处理'
         when 'MANUAL_REMARK' then '添加备注'
         when 'MISS_PICKUP_HANDLE' then '漏包裹揽收判责'
         when 'MISSING_PARCEL_SCAN' then '丢失件包裹操作'
         when 'NOTICE_LOST_PARTS_TEAM' then '已通知丢失件团队'
         when 'PARCEL_HEADLESS_CLAIMED' then '无头件包裹已认领'
         when 'PARCEL_HEADLESS_PRINTED' then '无头件包裹已打单'
         when 'PENDING_RETURN' then '待退件'
         when 'PHONE' then '电话联系'
         when 'PICK_UP_STORE' then '待自提取件'
         when 'PICKUP_RETURN_RECEIPT' then '签回单揽收'
         when 'PRINTING' then '打印面单'
         when 'QAQC_OPERATION' then 'QAQC判责'
         when 'RECEIVE_WAREHOUSE_SCAN' then '收件入仓'
         when 'RECEIVED' then '已揽收,初始化动作，实际情况并没有作用'
         when 'REFUND_CONFIRM' then '退件妥投'
         when 'REPAIRED' then '上报问题修复路由'
         when 'REPLACE_PNO' then '换单'
         when 'REPLY_WORK_ORDER' then '回复工单'
         when 'REVISION_TIME' then '改约时间'
         when 'SEAL' then '集包'
         when 'SEAL_NUMBER_CHANGE' then '集包件数变化'
         when 'SHIPMENT_WAREHOUSE_SCAN' then '发件出仓扫描'
         when 'SORTER_WEIGHT_IMAGE' then '分拣机复秤照片'
         when 'SORTING_SCAN' then '分拣扫描'
         when 'STAFF_INFO_UPDATE_WEIGHT' then '快递员修改重量'
         when 'STORE_KEEPER_UPDATE_WEIGHT' then '仓管员复秤'
         when 'STORE_SORTER_UPDATE_WEIGHT' then '分拣机复秤'
         when 'SYSTEM_AUTO_RETURN' then '系统自动退件'
         when 'TAKE_PHOTO' then '异常打单拍照'
         when 'THIRD_EXPRESS_ROUTE' then '第三方公司路由'
         when 'THIRD_PARTY_REASON_DETAIN' then '第三方原因滞留'
         when 'TICKET_WEIGHT_IMAGE' then '揽收称重照片'
         when 'TRANSFER_LOST_PARTS_TEAM' then '已转交丢失件团队'
         when 'TRANSFER_QAQC' then '转交QAQC处理'
         when 'UNSEAL' then '拆包'
         when 'UNSEAL_NO_PARCEL' then '上报包裹不在集包里'
         when 'UNSEAL_NOT_SCANNED' then '集包已拆包，本包裹未被扫描'
         when 'VEHICLE_ACCIDENT_REG' then '车辆车祸登记'
         when 'VEHICLE_ACCIDENT_REGISTRATION' then '车辆车祸登记'
         when 'VEHICLE_WET_DAMAGE_REG' then '车辆湿损登记'
         when 'VEHICLE_WET_DAMAGE_REGISTRATION' then '车辆湿损登记'
    end 最后有效路由
    ,plt.last_valid_routed_at 最后有效路由网点
    ,plt.last_valid_staff_info_id 最后有效路由操作人
    ,ss3.name 最后有效路由网点
    ,case plt.is_abnormal
        when 1 then '是'
        when 0 then '否'
     end 是否异常
    ,group_concat(wo.order_no) 工单编号
    ,case plt.state
        when 1 then '丢失件待处理'
        when 2 then '疑似丢失件待处理'
        when 3 then '待工单回复'
        when 4 then '已工单回复'
        when 5 then '包裹未丢失'
        when 6 then '丢失件处理完成'
    end 状态
    ,if(plt.fleet_routeids is null, '一致', '不一致') 解封车是否异常
    ,plt.fleet_stores 异常区间
    ,fvp.van_line_name 异常车线
from ph_bi.parcel_lose_task plt
left join ph_staging.parcel_info pi on pi.pno = plt.pno
left join ph_staging.order_info oi on oi.pno = pi.pno
left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
left join ph_staging.sys_store ss2 on ss2.id = pi.dst_store_id
left join ph_staging.fleet_van_proof fvp on fvp.id = substring_index(plt.fleet_routeids, '/', 1)
left join ph_staging.sys_store ss3 on ss3.id = plt.last_valid_store_id
left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
where
    plt.state < 5
group by plt.id;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
        ,pi.returned
        ,pi.dst_store_id
        ,pi.client_id
        ,pi.cod_enabled
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-06-07 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,if(t1.returned = 1, '退件', '正向件')  方向
    ,t1.client_id 客户ID
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as 客户类型
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
    ,case
        when t1.state = 6 and di.pno is not null then di.sh_do
        when t1.state = 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is null and pct.pno is not null then 'qaqc-TeamB'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then pr.store_name
        else de.last_store_name
    end 待处理节点
    ,case
        when t1.state = 6 and di.pno is not null then 'KAM/揽件网点未协商'
        when t1.state = 6 and di.pno is null  then '闪速系统沟通处理中'
        when t1.state != 6 and plt.pno is not null and plt2.pno is not null then '闪速系统沟通处理中'
        when plt.pno is null and pct.pno is not null then '闪速超时效理赔未完成'
        when de.last_store_id = t1.ticket_pickup_store_id and plt2.pno is null then '揽件未发出'
        when t1.dst_store_id = 'PH19040F05' and plt2.pno is null then '弃件未到拍卖仓'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then 'QAQC无须追责后长期无有效路由'
        else null
    end 卡点原因
    ,de.last_store_name 当前节点
    ,datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) 最后有效路由距今天数
#     ,de.last_cn_route_action 最新一条有效路由
    ,case pr.route_action # 路由动作
         when 'ACCEPT_PARCEL' then '接件扫描'
         when 'ARRIVAL_GOODS_VAN_CHECK_SCAN' then '车货关联到港'
         when 'ARRIVAL_WAREHOUSE_SCAN' then '到件入仓扫描'
         when 'CANCEL_ARRIVAL_WAREHOUSE_SCAN' then '取消到件入仓扫描'
         when 'CANCEL_PARCEL' then '撤销包裹'
         when 'CANCEL_SHIPMENT_WAREHOUSE' then '取消发件出仓'
         when 'CHANGE_PARCEL_CANCEL' then '修改包裹为撤销'
         when 'CHANGE_PARCEL_CLOSE' then '修改包裹为异常关闭'
         when 'CHANGE_PARCEL_IN_TRANSIT' then '修改包裹为运输中'
         when 'CHANGE_PARCEL_INFO' then '修改包裹信息'
         when 'CHANGE_PARCEL_SIGNED' then '修改包裹为签收'
         when 'CLAIMS_CLOSE' then '理赔关闭'
         when 'CLAIMS_COMPLETE' then '理赔完成'
         when 'CLAIMS_CONTACT' then '已联系客户'
         when 'CLAIMS_TRANSFER_CS' then '转交总部cs处理'
         when 'CLOSE_ORDER' then '关闭订单'
         when 'CONTINUE_TRANSPORT' then '疑难件继续配送'
         when 'CREATE_WORK_ORDER' then '创建工单'
         when 'CUSTOMER_CHANGE_PARCEL_INFO' then '客户修改包裹信息'
         when 'CUSTOMER_OPERATING_RETURN' then '客户操作退回寄件人'
         when 'DELIVERY_CONFIRM' then '确认妥投'
         when 'DELIVERY_MARKER' then '派件标记'
         when 'DELIVERY_PICKUP_STORE_SCAN' then '自提取件扫描'
         when 'DELIVERY_TICKET_CREATION_SCAN' then '交接扫描'
         when 'DELIVERY_TRANSFER' then '派件转单'
         when 'DEPARTURE_GOODS_VAN_CK_SCAN' then '车货关联出港'
         when 'DETAIN_WAREHOUSE' then '货件留仓'
         when 'DIFFICULTY_FINISH_INDEMNITY' then '疑难件支付赔偿'
         when 'DIFFICULTY_HANDOVER' then '疑难件交接'
         when 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE' then '疑难件交接货件留仓'
         when 'DIFFICULTY_RE_TRANSIT' then '疑难件退回区域总部/重启运送'
         when 'DIFFICULTY_RETURN' then '疑难件退回寄件人'
         when 'DIFFICULTY_SEAL' then '集包异常'
         when 'DISCARD_RETURN_BKK' then '丢弃包裹的，换单后寄回BKK'
         when 'DISTRIBUTION_INVENTORY' then '分拨盘库'
         when 'DWS_WEIGHT_IMAGE' then 'DWS复秤照片'
         when 'EXCHANGE_PARCEL' then '换货'
         when 'FAKE_CANCEL_HANDLE' then '虚假撤销判责'
         when 'FLASH_HOME_SCAN' then 'FH交接扫描'
         when 'FORCE_TAKE_PHOTO' then '强制拍照路由'
         when 'HAVE_HAIR_SCAN_NO_TO' then '有发无到'
         when 'HURRY_PARCEL' then '催单'
         when 'INCOMING_CALL' then '来电接听'
         when 'INTERRUPT_PARCEL_AND_RETURN' then '中断运输并退回'
         when 'INVENTORY' then '盘库'
         when 'LOSE_PARCEL_TEAM_OPERATION' then '丢失件团队处理'
         when 'MANUAL_REMARK' then '添加备注'
         when 'MISS_PICKUP_HANDLE' then '漏包裹揽收判责'
         when 'MISSING_PARCEL_SCAN' then '丢失件包裹操作'
         when 'NOTICE_LOST_PARTS_TEAM' then '已通知丢失件团队'
         when 'PARCEL_HEADLESS_CLAIMED' then '无头件包裹已认领'
         when 'PARCEL_HEADLESS_PRINTED' then '无头件包裹已打单'
         when 'PENDING_RETURN' then '待退件'
         when 'PHONE' then '电话联系'
         when 'PICK_UP_STORE' then '待自提取件'
         when 'PICKUP_RETURN_RECEIPT' then '签回单揽收'
         when 'PRINTING' then '打印面单'
         when 'QAQC_OPERATION' then 'QAQC判责'
         when 'RECEIVE_WAREHOUSE_SCAN' then '收件入仓'
         when 'RECEIVED' then '已揽收,初始化动作，实际情况并没有作用'
         when 'REFUND_CONFIRM' then '退件妥投'
         when 'REPAIRED' then '上报问题修复路由'
         when 'REPLACE_PNO' then '换单'
         when 'REPLY_WORK_ORDER' then '回复工单'
         when 'REVISION_TIME' then '改约时间'
         when 'SEAL' then '集包'
         when 'SEAL_NUMBER_CHANGE' then '集包件数变化'
         when 'SHIPMENT_WAREHOUSE_SCAN' then '发件出仓扫描'
         when 'SORTER_WEIGHT_IMAGE' then '分拣机复秤照片'
         when 'SORTING_SCAN' then '分拣扫描'
         when 'STAFF_INFO_UPDATE_WEIGHT' then '快递员修改重量'
         when 'STORE_KEEPER_UPDATE_WEIGHT' then '仓管员复秤'
         when 'STORE_SORTER_UPDATE_WEIGHT' then '分拣机复秤'
         when 'SYSTEM_AUTO_RETURN' then '系统自动退件'
         when 'TAKE_PHOTO' then '异常打单拍照'
         when 'THIRD_EXPRESS_ROUTE' then '第三方公司路由'
         when 'THIRD_PARTY_REASON_DETAIN' then '第三方原因滞留'
         when 'TICKET_WEIGHT_IMAGE' then '揽收称重照片'
         when 'TRANSFER_LOST_PARTS_TEAM' then '已转交丢失件团队'
         when 'TRANSFER_QAQC' then '转交QAQC处理'
         when 'UNSEAL' then '拆包'
         when 'UNSEAL_NO_PARCEL' then '上报包裹不在集包里'
         when 'UNSEAL_NOT_SCANNED' then '集包已拆包，本包裹未被扫描'
         when 'VEHICLE_ACCIDENT_REG' then '车辆车祸登记'
         when 'VEHICLE_ACCIDENT_REGISTRATION' then '车辆车祸登记'
         when 'VEHICLE_WET_DAMAGE_REG' then '车辆湿损登记'
         when 'VEHICLE_WET_DAMAGE_REGISTRATION' then '车辆湿损登记'
        end as 最后一条路由
    ,convert_tz(pr.routed_at ,'+00:00', '+08:00') 最新一条有效路由时间
    ,datediff(now(), de.dst_routed_at) 目的地网点停留时间
    ,de.dst_store 目的地网点
    ,de.src_store 揽收网点
    ,de.pickup_time 揽收时间
    ,de.pick_date 揽收日期
    ,if(hold.pno is not null, 'yes', 'no' ) 是否有holding标记
    ,if(pr3.pno is not null, 'yes', 'no') 是否有待退件标记
from t t1
left join ph_staging.ka_profile kp on t1.client_id = kp.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,pr.route_action
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
left join
    (
        select
            plt.pno
        from ph_bi.parcel_claim_task plt
        join t t4  on t4.pno = plt.pno
        where
            plt.state not in (6,7,8)
            and plt.source = 11
        group by 1
    ) pct on pct.pno = t1.pno
left join
    (
        select
            pr2.pno
        from ph_staging.parcel_route pr2
        join t t1 on t1.pno = pr2.pno
        where
            pr2.route_action = 'REFUND_CONFIRM'
        group by 1
    ) hold on hold.pno = t1.pno
left join
    (
        select
            pr2.pno
        from  ph_staging.parcel_route pr2
        join t t1 on t1.pno = pr2.pno
        where
            pr2.route_action = 'PENDING_RETURN'
        group by 1
    ) pr3 on pr3.pno = t1.pno
group by t1.pno;
;-- -. . -..- - / . -. - .-. -.--
select
                dp.stat_date
                ,dp.store_id
            from dwm.dwm_ph_staff_wide_s dp
            where
                dp.stat_date >= date_sub(curdate(), interval 1 month )
                and dp.handover_par_cnt > 150
            group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
                dp.stat_date
                ,dp.store_id
                ,dp.store_name
            from dwm.dwm_ph_staff_wide_s dp
            where
                dp.stat_date >= date_sub(curdate(), interval 1 month )
                and dp.handover_par_cnt > 150
            group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
select
        fn.routed_date as 日期
       ,fn.store_name
       ,fn.piece_name
      ,fn.region_name
        ,count(distinct fn.pno) as 交接量
        ,count(distinct if(fn.type= '已妥投',fn.pno,null)) as  '已妥投量'
       ,count(distinct if(fn.type= '交接未留仓标记/疑难件标记',fn.pno,null)) as  '交接未留仓标记/疑难件标记量'
        ,count(distinct if(fn.type= '留仓件',fn.pno,null)) as  '留仓件量'
       ,count(distinct if(fn.type= '疑难件',fn.pno,null)) as  '疑难件量'
        ,count(distinct if(fn.CN_element1='客户不在家/电话无人接听' and fn.type= '留仓件',fn.pno,null)) as '留仓件_客户不在家/电话无人接听_交接占比'
       ,count(distinct if(fn.CN_element1='客户改约时间' and fn.type= '留仓件',fn.pno,null)) as '留仓件_客户改约时间_交接占比'
from
(
    select
        pr.pno
        ,pr.store_id
        ,pr.store_name
        ,pr.piece_name
        ,pr.region_name
        ,pr.routed_date
        ,pr.finished_date
       ,ppd.CN_element as CN_element1
        ,ppd.problem_type
        ,case when pr.routed_date=pr.finished_date then '已妥投'
                when (pr.routed_date<pr.finished_date or pr.finished_date is null) and ppd.problem_type is null  then '交接未留仓标记/疑难件标记'
                when (pr.routed_date<pr.finished_date or pr.finished_date is null) and ppd.problem_type='留仓件'  then '留仓件'
                when (pr.routed_date<pr.finished_date or pr.finished_date is null) and ppd.problem_type='疑难件'  then '疑难件' else 'others' end as type
    from
        (
                select
                    pr.pno
                    ,pr.store_id
                     ,dp.store_name
                    ,dp.piece_name
                    ,dp.region_name
                    ,if(pi.state=5,date(convert_tz(pi.finished_at,'+00:00','+08:00')) ,null) as finished_date
                    ,date(convert_tz(pr.routed_at,'+00:00','+08:00'))  as routed_date
                    ,row_number() over(partition by pr.pno,date(convert_tz(pr.routed_at,'+00:00','+08:00')) order by convert_tz(pr.routed_at,'+00:00','+08:00') desc) as rnk
             from ph_staging.parcel_route pr
            left join dwm.dim_ph_sys_store_rd dp on dp.store_id = pr.store_id and dp.stat_date = date(convert_tz(pr.routed_at,'+00:00','+08:00'))
             left join ph_staging.parcel_info pi on pr.pno=pi.pno
             where pr.routed_at>= date_sub(now(),interval 1 month)
             and pr.route_action in('DELIVERY_TICKET_CREATION_SCAN')
        )pr
    join
        (
            select
                dp.stat_date
                ,dp.store_id
                ,dp.store_name
            from dwm.dwm_ph_staff_wide_s dp
            where
                dp.stat_date >= date_sub(curdate(), interval 1 month )
                and dp.handover_par_cnt > 150
            group by 1,2
        ) dm on pr.routed_date = dm.stat_date and dm.store_id = pr.store_id
    left join
        (
           select
               ppd.pno
               ,ddd.CN_element
               ,case when ppd.parcel_problem_type_category = 2 then '留仓件' when ppd.parcel_problem_type_category = 1 then '疑难件' else null end as problem_type
                ,convert_tz(ppd.created_at,'+00:00','+08:00') as ppd_created_time
               ,date(convert_tz(ppd.created_at,'+00:00','+08:00')) as ppd_created_date
              ,row_number() over(partition by ppd.pno,date(convert_tz(ppd.created_at,'+00:00','+08:00')) order by convert_tz(ppd.created_at,'+00:00','+08:00') desc) as rk
           from ph_staging.parcel_problem_detail ppd
           left join dwm.dwd_dim_dict ddd on ddd.element = ppd.diff_marker_category and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category' and ddd.db = 'ph_staging'
           where ppd.parcel_problem_type_category  in(1,2)
        ) ppd  on pr.pno=ppd.pno and pr.routed_date=ppd.ppd_created_date and ppd.rk=1
where pr.rnk=1
)fn
group by  1,2,3,4
order by 1;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        plt.pno
        ,plt.updated_at
        ,pi.state
    from ph_bi.parcel_lose_task plt
    join ph_staging.parcel_info pi on plt.pno = pi.pno
    where
        plt.state = 6
        and plt.duty_result = 1
        and pi.state not in (5,7,8,9)
)
select
    t1.pno
    ,t1.updated_at 判责时间
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,pr.route_time 最后一次有效路由时间
from  t t1
left join
    (
        select
            pr.pno
            ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
            ,row_number() over (partition by pr.pno order by  pr.routed_at desc ) rk
        from ph_staging.parcel_route pr
        join t t1 on pr.pno = t1.pno
        where
            pr.route_action in ('DELIVERY_PICKUP_STORE_SCAN','SHIPMENT_WAREHOUSE_SCAN','RECEIVE_WAREHOUSE_SCAN','DIFFICULTY_HANDOVER','ARRIVAL_GOODS_VAN_CHECK_SCAN','FLASH_HOME_SCAN','RECEIVED','SEAL','UNSEAL','DISCARD_RETURN_BKK','REFUND_CONFIRM','ARRIVAL_WAREHOUSE_SCAN','DELIVERY_TRANSFER','DELIVERY_CONFIRM','STORE_KEEPER_UPDATE_WEIGHT','REPLACE_PNO','PICKUP_RETURN_RECEIPT','DETAIN_WAREHOUSE','DELIVERY_MARKER','DISTRIBUTION_INVENTORY','PARCEL_HEADLESS_PRINTED','STORE_SORTER_UPDATE_WEIGHT','SORTING_SCAN','DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE','DELIVERY_TICKET_CREATION_SCAN','INVENTORY','STAFF_INFO_UPDATE_WEIGHT','ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
where
    pr.route_time < t1.updated_at;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        de.pno
        ,de.dst_store_id
        ,de.dst_store
        ,de.dst_region
        ,de.dst_piece
        ,pi.state
        ,pi.dst_phone
        ,pi.dst_home_phone
    from dwm.dwd_ex_ph_parcel_details de
    left join ph_staging.parcel_info pi on de.pno = pi.pno
    left join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
    where
        datediff(now(), de.dst_routed_at) <= 7
        and pi.state not in (5,7,8,9)
        and bc.client_id is null
)
select
    t1.pno
    ,t1.dst_store 目的地网点
    ,t1.dst_store_id 目的网点ID
    ,t1.dst_piece 目的地片区
    ,t1.dst_region 目的地大区
    ,case t1.state
        when '1' then '已揽收'
        when '2' then '运输中'
        when '3' then '派送中'
        when '4' then '已滞留'
        when '5' then '已签收'
        when '6' then '疑难件处理中'
        when '7' then '已退件'
        when '8' then '异常关闭'
        when '9' then '已撤销'
    end as `包裹状态`
    ,t1.dst_phone 收件人电话
    ,t1.dst_home_phone 收件人家庭电话
#     ,count(distinct ppd.mark_date) 尝试天数
from t t1
left join
    (
        select
            td.pno
            ,date(convert_tz(tdm.created_at, '+00:00', '+08:00')) mark_date
        from ph_staging.ticket_delivery td
        join t t1 on t1.pno = td.pno
        left join ph_staging.ticket_delivery_marker tdm on tdm.delivery_id = td.id
        group by 1,2
    ) mark on mark.pno = t1.pno
left join
    (
        select
            ppd.pno
            ,date(convert_tz(ppd.created_at, '+00:00', '+08:00')) mark_date
        from ph_staging.parcel_problem_detail ppd
        join t t1 on t1.pno = ppd.pno
        group by 1,2
    ) ppd on ppd.pno = mark.pno and mark.mark_date = ppd.mark_date
where
    ppd.mark_date is not null
group by 1
having count(distinct ppd.mark_date) >= 3;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        de.pno
        ,de.dst_store_id
        ,de.dst_store
        ,de.dst_region
        ,de.dst_piece
        ,pi.state
        ,pi.dst_phone
        ,pi.dst_home_phone
    from dwm.dwd_ex_ph_parcel_details de
    left join ph_staging.parcel_info pi on de.pno = pi.pno
    left join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
    where
        datediff(now(), de.dst_routed_at) <= 7
        and pi.state not in (5,7,8,9)
        and bc.client_id is null
)
select
    t1.pno
    ,t1.dst_store 目的地网点
    ,t1.dst_store_id 目的网点ID
    ,t1.dst_piece 目的地片区
    ,t1.dst_region 目的地大区
    ,case t1.state
        when '1' then '已揽收'
        when '2' then '运输中'
        when '3' then '派送中'
        when '4' then '已滞留'
        when '5' then '已签收'
        when '6' then '疑难件处理中'
        when '7' then '已退件'
        when '8' then '异常关闭'
        when '9' then '已撤销'
    end as `包裹状态`
    ,t1.dst_phone 收件人电话
    ,t1.dst_home_phone 收件人家庭电话
    ,count(distinct ppd.mark_date) 尝试天数
from t t1
left join
    (
        select
            td.pno
            ,date(convert_tz(tdm.created_at, '+00:00', '+08:00')) mark_date
        from ph_staging.ticket_delivery td
        join t t1 on t1.pno = td.pno
        left join ph_staging.ticket_delivery_marker tdm on tdm.delivery_id = td.id
        group by 1,2
    ) mark on mark.pno = t1.pno
left join
    (
        select
            ppd.pno
            ,date(convert_tz(ppd.created_at, '+00:00', '+08:00')) mark_date
        from ph_staging.parcel_problem_detail ppd
        join t t1 on t1.pno = ppd.pno
        group by 1,2
    ) ppd on ppd.pno = mark.pno and mark.mark_date = ppd.mark_date
where
    ppd.mark_date is not null
group by 1
having count(distinct ppd.mark_date) >= 3;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        de.pno
        ,de.dst_store_id
        ,de.dst_store
        ,de.dst_region
        ,de.dst_piece
        ,pi.state
        ,pi.dst_phone
        ,pi.dst_home_phone
    from dwm.dwd_ex_ph_parcel_details de
    left join ph_staging.parcel_info pi on de.pno = pi.pno
    left join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
    left join ph_staging.parcel_route pr on pr.pno = de.pno and pr.route_action = 'PENDING_RETURN'
    where
        datediff(now(), de.dst_routed_at) <= 7
        and pi.state not in (5,7,8,9)
        and bc.client_id is null
        and pr.pno is not null 
    group by 1
)
select
    t1.pno
    ,t1.dst_store 目的地网点
    ,t1.dst_store_id 目的网点ID
    ,t1.dst_piece 目的地片区
    ,t1.dst_region 目的地大区
    ,case t1.state
        when '1' then '已揽收'
        when '2' then '运输中'
        when '3' then '派送中'
        when '4' then '已滞留'
        when '5' then '已签收'
        when '6' then '疑难件处理中'
        when '7' then '已退件'
        when '8' then '异常关闭'
        when '9' then '已撤销'
    end as `包裹状态`
    ,t1.dst_phone 收件人电话
    ,t1.dst_home_phone 收件人家庭电话
    ,count(distinct ppd.mark_date) 尝试天数
from t t1
left join
    (
        select
            td.pno
            ,date(convert_tz(tdm.created_at, '+00:00', '+08:00')) mark_date
        from ph_staging.ticket_delivery td
        join t t1 on t1.pno = td.pno
        left join ph_staging.ticket_delivery_marker tdm on tdm.delivery_id = td.id
        group by 1,2
    ) mark on mark.pno = t1.pno
left join
    (
        select
            ppd.pno
            ,date(convert_tz(ppd.created_at, '+00:00', '+08:00')) mark_date
        from ph_staging.parcel_problem_detail ppd
        join t t1 on t1.pno = ppd.pno
        group by 1,2
    ) ppd on ppd.pno = mark.pno and mark.mark_date = ppd.mark_date
where
    ppd.mark_date is not null
group by 1
having count(distinct ppd.mark_date) >= 3;
;-- -. . -..- - / . -. - .-. -.--
select
    di.pno
    ,cdt.organization_id
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join dwm.dwd_dim_dict ddd on ddd.element
where
    cdt.organization_type = 1 -- FH&miniCS
    and di.pno = 'P61201T24YBGH';
;-- -. . -..- - / . -. - .-. -.--
select
    di.pno
    ,cdt.organization_id
    ,ddd.CN_element
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
where
    cdt.organization_type = 1 -- FH&miniCS
    and di.pno = 'P61201T24YBGH';
;-- -. . -..- - / . -. - .-. -.--
select
#     di.pno
#     ,cdt.organization_id
#     ,ddd.CN_element
    ss.category
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
left join ph_staging.sys_store ss on ss.id = cdt.organization_id
where
    cdt.organization_type = 1 -- FH&miniCS
    and cdt.created_at >= '2023-06-01'
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
    di.pno
    ,cdt.organization_id
    ,ddd.CN_element
    ,cdt.created_at
#     ss.category
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
left join ph_staging.sys_store ss on ss.id = cdt.organization_id
where
    cdt.organization_type = 1 -- FH&miniCS
    and cdt.created_at >= '2023-06-01'
    and ss.category in (8,11)
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
    di.pno
    ,cdt.organization_id
    ,ddd.CN_element
    ,cdt.created_at
    ,ss.category
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
left join ph_staging.sys_store ss on ss.id = cdt.organization_id
where
    cdt.organization_type = 1 -- FH&miniCS
    and cdt.created_at >= '2023-06-01'
    and ss.category in (8,11)
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
    t.*
    ,if(pi.state = 5, convert_tz(pi.finished_at, '+00:00', '+08:00')) 妥投时间
from ph_staging.parcel_info pi
join tmpale.tmp_ph_pno_lj_0630 t on t.pno = pi.pno;
;-- -. . -..- - / . -. - .-. -.--
select
    t.*
     ,pi.state
    ,if(pi.state = 5, convert_tz(pi.finished_at, '+00:00', '+08:00')) 妥投时间
from ph_staging.parcel_info pi
join tmpale.tmp_ph_pno_lj_0630 t on t.pno = pi.pno;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        de.pno
        ,de.dst_store_id
        ,de.dst_store
        ,de.dst_region
        ,de.dst_piece
        ,pi.state
        ,pi.dst_phone
        ,pi.dst_home_phone
    from dwm.dwd_ex_ph_parcel_details de
    left join ph_staging.parcel_info pi on de.pno = pi.pno
    left join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
    left join ph_staging.parcel_route pr on pr.pno = de.pno and pr.route_action = 'PENDING_RETURN'
    where
        datediff(now(), de.dst_routed_at) <= 7
        and pi.state not in (5,7,8,9)
        and bc.client_id is null
        and pr.pno is not null
    group by 1
)
select
    t1.pno
    ,t1.dst_store 目的地网点
    ,t1.dst_store_id 目的网点ID
    ,t1.dst_piece 目的地片区
    ,t1.dst_region 目的地大区
    ,case t1.state
        when '1' then '已揽收'
        when '2' then '运输中'
        when '3' then '派送中'
        when '4' then '已滞留'
        when '5' then '已签收'
        when '6' then '疑难件处理中'
        when '7' then '已退件'
        when '8' then '异常关闭'
        when '9' then '已撤销'
    end as `包裹状态`
    ,t1.dst_phone 收件人电话
    ,t1.dst_home_phone 收件人家庭电话
    ,count(distinct ppd.mark_date) 尝试天数
from t t1
left join
    (
        select
            td.pno
            ,date(convert_tz(tdm.created_at, '+00:00', '+08:00')) mark_date
        from ph_staging.ticket_delivery td
        join t t1 on t1.pno = td.pno
        left join ph_staging.ticket_delivery_marker tdm on tdm.delivery_id = td.id
        group by 1,2
    ) mark on mark.pno = t1.pno
left join
    (
        select
            ppd.pno
            ,date(convert_tz(ppd.created_at, '+00:00', '+08:00')) mark_date
        from ph_staging.parcel_problem_detail ppd
        join t t1 on t1.pno = ppd.pno
        where
            ppd.diff_marker_category not in (7,22,5,20,6,21,15,71)
        group by 1,2
    ) ppd on ppd.pno = mark.pno and mark.mark_date = ppd.mark_date
where
    ppd.mark_date is not null
group by 1
having count(distinct ppd.mark_date) >= 3;
;-- -. . -..- - / . -. - .-. -.--
select
    di.pno
    ,cdt.organization_id
    ,ddd.CN_element
    ,cdt.created_at
    ,ss.category
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
left join ph_staging.sys_store ss on ss.id = cdt.organization_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    cdt.organization_type = 1 -- FH&miniCS
    and cdt.created_at >= '2023-06-01'
    and ss.category in (8,11)
    and bc.client_id is not null  
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
#     di.pno
#     ,cdt.organization_id
#     ,ddd.CN_element
#     ,cdt.created_at
    ss.category
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
left join ph_staging.sys_store ss on ss.id = cdt.organization_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    cdt.organization_type = 1 -- FH&miniCS
    and cdt.created_at >= '2023-06-01'
    and ss.category in (8,11)
    and bc.client_id is not null
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
#     di.pno
#     ,cdt.organization_id
#     ,ddd.CN_element
#     ,cdt.created_at
    ss.category
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
left join ph_staging.sys_store ss on ss.id = cdt.organization_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    cdt.organization_type = 1 -- FH&miniCS
    and cdt.created_at >= '2023-06-01'
    and ss.category in (8,11)
    and bc.client_id is  null
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
#     di.pno
#     ,cdt.organization_id
#     ,ddd.CN_element
#     ,cdt.created_at
    ss.category
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
left join ph_staging.sys_store ss on ss.id = cdt.organization_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    cdt.organization_type = 1 -- FH&miniCS
    and cdt.created_at >= '2023-06-01'
#     and ss.category in (8,11)
    and bc.client_id is  null
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
#     di.pno
#     ,cdt.organization_id
#     ,ddd.CN_element
#     ,cdt.created_at
    ss.category
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
left join ph_staging.sys_store ss on ss.id = cdt.organization_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    cdt.organization_type = 1 -- FH&miniCS
    and cdt.created_at >= '2023-06-01'
    and ss.category in (11)
    and bc.client_id is  null
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
    di.pno
    ,cdt.organization_id
    ,ddd.CN_element
    ,cdt.created_at
    ,ss.category
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
left join ph_staging.sys_store ss on ss.id = cdt.organization_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    cdt.organization_type = 1 -- FH&miniCS
    and cdt.created_at >= '2023-06-01'
    and ss.category in (11)
    and bc.client_id is  null
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
    di.pno
    ,cdt.organization_id
    ,ddd.CN_element
    ,cdt.created_at
    ,ss.category
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
left join ph_staging.sys_store ss on ss.id = cdt.organization_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    cdt.organization_type = 1 -- FH&miniCS
    and cdt.created_at >= '2023-06-01'
    and ss.category in (8)
    and bc.client_id is  null
group by 1;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
        ,pi.returned
        ,pi.dst_store_id
        ,pi.client_id
        ,pi.cod_enabled
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-06-07 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,if(t1.returned = 1, '退件', '正向件')  方向
    ,t1.client_id 客户ID
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as 客户类型
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
    ,case
        when t1.state = 6 and di.pno is not null then di.sh_do
        when t1.state = 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is null and pct.pno is not null then 'qaqc-TeamB'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then pr.store_name
        else de.last_store_name
    end 待处理节点
#     ,case
#         when t1.state = 6 and di.pno is not null then 'KAM/揽件网点未协商'
#         when t1.state = 6 and di.pno is null  then '闪速系统沟通处理中'
#         when t1.state != 6 and plt.pno is not null and plt2.pno is not null then '闪速系统沟通处理中'
#         when plt.pno is null and pct.pno is not null then '闪速超时效理赔未完成'
#         when de.last_store_id = t1.ticket_pickup_store_id and plt2.pno is null then '揽件未发出'
#         when t1.dst_store_id = 'PH19040F05' and plt2.pno is null then '弃件未到拍卖仓'
#         when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then 'QAQC无须追责后长期无有效路由'
#         else null
#     end 卡点原因
#     ,de.last_store_name 当前节点
    ,datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) 最后有效路由距今天数
#     ,de.last_cn_route_action 最新一条有效路由
    ,case pr.route_action # 路由动作
         when 'ACCEPT_PARCEL' then '接件扫描'
         when 'ARRIVAL_GOODS_VAN_CHECK_SCAN' then '车货关联到港'
         when 'ARRIVAL_WAREHOUSE_SCAN' then '到件入仓扫描'
         when 'CANCEL_ARRIVAL_WAREHOUSE_SCAN' then '取消到件入仓扫描'
         when 'CANCEL_PARCEL' then '撤销包裹'
         when 'CANCEL_SHIPMENT_WAREHOUSE' then '取消发件出仓'
         when 'CHANGE_PARCEL_CANCEL' then '修改包裹为撤销'
         when 'CHANGE_PARCEL_CLOSE' then '修改包裹为异常关闭'
         when 'CHANGE_PARCEL_IN_TRANSIT' then '修改包裹为运输中'
         when 'CHANGE_PARCEL_INFO' then '修改包裹信息'
         when 'CHANGE_PARCEL_SIGNED' then '修改包裹为签收'
         when 'CLAIMS_CLOSE' then '理赔关闭'
         when 'CLAIMS_COMPLETE' then '理赔完成'
         when 'CLAIMS_CONTACT' then '已联系客户'
         when 'CLAIMS_TRANSFER_CS' then '转交总部cs处理'
         when 'CLOSE_ORDER' then '关闭订单'
         when 'CONTINUE_TRANSPORT' then '疑难件继续配送'
         when 'CREATE_WORK_ORDER' then '创建工单'
         when 'CUSTOMER_CHANGE_PARCEL_INFO' then '客户修改包裹信息'
         when 'CUSTOMER_OPERATING_RETURN' then '客户操作退回寄件人'
         when 'DELIVERY_CONFIRM' then '确认妥投'
         when 'DELIVERY_MARKER' then '派件标记'
         when 'DELIVERY_PICKUP_STORE_SCAN' then '自提取件扫描'
         when 'DELIVERY_TICKET_CREATION_SCAN' then '交接扫描'
         when 'DELIVERY_TRANSFER' then '派件转单'
         when 'DEPARTURE_GOODS_VAN_CK_SCAN' then '车货关联出港'
         when 'DETAIN_WAREHOUSE' then '货件留仓'
         when 'DIFFICULTY_FINISH_INDEMNITY' then '疑难件支付赔偿'
         when 'DIFFICULTY_HANDOVER' then '疑难件交接'
         when 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE' then '疑难件交接货件留仓'
         when 'DIFFICULTY_RE_TRANSIT' then '疑难件退回区域总部/重启运送'
         when 'DIFFICULTY_RETURN' then '疑难件退回寄件人'
         when 'DIFFICULTY_SEAL' then '集包异常'
         when 'DISCARD_RETURN_BKK' then '丢弃包裹的，换单后寄回BKK'
         when 'DISTRIBUTION_INVENTORY' then '分拨盘库'
         when 'DWS_WEIGHT_IMAGE' then 'DWS复秤照片'
         when 'EXCHANGE_PARCEL' then '换货'
         when 'FAKE_CANCEL_HANDLE' then '虚假撤销判责'
         when 'FLASH_HOME_SCAN' then 'FH交接扫描'
         when 'FORCE_TAKE_PHOTO' then '强制拍照路由'
         when 'HAVE_HAIR_SCAN_NO_TO' then '有发无到'
         when 'HURRY_PARCEL' then '催单'
         when 'INCOMING_CALL' then '来电接听'
         when 'INTERRUPT_PARCEL_AND_RETURN' then '中断运输并退回'
         when 'INVENTORY' then '盘库'
         when 'LOSE_PARCEL_TEAM_OPERATION' then '丢失件团队处理'
         when 'MANUAL_REMARK' then '添加备注'
         when 'MISS_PICKUP_HANDLE' then '漏包裹揽收判责'
         when 'MISSING_PARCEL_SCAN' then '丢失件包裹操作'
         when 'NOTICE_LOST_PARTS_TEAM' then '已通知丢失件团队'
         when 'PARCEL_HEADLESS_CLAIMED' then '无头件包裹已认领'
         when 'PARCEL_HEADLESS_PRINTED' then '无头件包裹已打单'
         when 'PENDING_RETURN' then '待退件'
         when 'PHONE' then '电话联系'
         when 'PICK_UP_STORE' then '待自提取件'
         when 'PICKUP_RETURN_RECEIPT' then '签回单揽收'
         when 'PRINTING' then '打印面单'
         when 'QAQC_OPERATION' then 'QAQC判责'
         when 'RECEIVE_WAREHOUSE_SCAN' then '收件入仓'
         when 'RECEIVED' then '已揽收,初始化动作，实际情况并没有作用'
         when 'REFUND_CONFIRM' then '退件妥投'
         when 'REPAIRED' then '上报问题修复路由'
         when 'REPLACE_PNO' then '换单'
         when 'REPLY_WORK_ORDER' then '回复工单'
         when 'REVISION_TIME' then '改约时间'
         when 'SEAL' then '集包'
         when 'SEAL_NUMBER_CHANGE' then '集包件数变化'
         when 'SHIPMENT_WAREHOUSE_SCAN' then '发件出仓扫描'
         when 'SORTER_WEIGHT_IMAGE' then '分拣机复秤照片'
         when 'SORTING_SCAN' then '分拣扫描'
         when 'STAFF_INFO_UPDATE_WEIGHT' then '快递员修改重量'
         when 'STORE_KEEPER_UPDATE_WEIGHT' then '仓管员复秤'
         when 'STORE_SORTER_UPDATE_WEIGHT' then '分拣机复秤'
         when 'SYSTEM_AUTO_RETURN' then '系统自动退件'
         when 'TAKE_PHOTO' then '异常打单拍照'
         when 'THIRD_EXPRESS_ROUTE' then '第三方公司路由'
         when 'THIRD_PARTY_REASON_DETAIN' then '第三方原因滞留'
         when 'TICKET_WEIGHT_IMAGE' then '揽收称重照片'
         when 'TRANSFER_LOST_PARTS_TEAM' then '已转交丢失件团队'
         when 'TRANSFER_QAQC' then '转交QAQC处理'
         when 'UNSEAL' then '拆包'
         when 'UNSEAL_NO_PARCEL' then '上报包裹不在集包里'
         when 'UNSEAL_NOT_SCANNED' then '集包已拆包，本包裹未被扫描'
         when 'VEHICLE_ACCIDENT_REG' then '车辆车祸登记'
         when 'VEHICLE_ACCIDENT_REGISTRATION' then '车辆车祸登记'
         when 'VEHICLE_WET_DAMAGE_REG' then '车辆湿损登记'
         when 'VEHICLE_WET_DAMAGE_REGISTRATION' then '车辆湿损登记'
        end as 最后一条路由
    ,convert_tz(pr.routed_at ,'+00:00', '+08:00') 最新一条有效路由时间
    ,datediff(now(), de.dst_routed_at) 目的地网点停留时间
    ,de.dst_store 目的地网点
    ,de.src_store 揽收网点
    ,de.pickup_time 揽收时间
    ,de.pick_date 揽收日期
    ,if(hold.pno is not null, 'yes', 'no' ) 是否有holding标记
    ,if(pr3.pno is not null, 'yes', 'no') 是否有待退件标记
    ,de.try_delivery_markers 尝试派送次数
from t t1
left join ph_staging.ka_profile kp on t1.client_id = kp.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,pr.route_action
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
left join
    (
        select
            plt.pno
        from ph_bi.parcel_claim_task plt
        join t t4  on t4.pno = plt.pno
        where
            plt.state not in (6,7,8)
            and plt.source = 11
        group by 1
    ) pct on pct.pno = t1.pno
left join
    (
        select
            pr2.pno
        from ph_staging.parcel_route pr2
        join t t1 on t1.pno = pr2.pno
        where
            pr2.route_action = 'REFUND_CONFIRM'
        group by 1
    ) hold on hold.pno = t1.pno
left join
    (
        select
            pr2.pno
        from  ph_staging.parcel_route pr2
        join t t1 on t1.pno = pr2.pno
        where
            pr2.route_action = 'PENDING_RETURN'
        group by 1
    ) pr3 on pr3.pno = t1.pno
group by t1.pno;
;-- -. . -..- - / . -. - .-. -.--
select
    t.*
    ,pi.src_phone
    ,pi.src_name
    ,pi.dst_phone
    ,pi.dst_name
    ,fp.id
    ,fp.name
from ph_staging.parcel_info pi
join tmpale.tmp_ph_pno_0621 t on t.pno = pi.pno
left join ph_staging.sys_store ss on ss.id = pi.ticket_pickup_store_id
left join ph_staging.franchisee_profile fp on fp.id = ss.franchisee_id;
;-- -. . -..- - / . -. - .-. -.--
select
    pcd.field_name
from ph_staging.parcel_change_detail pcd
group by 1;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
        ,pi.returned
        ,pi.dst_store_id
        ,pi.client_id
        ,pi.cod_enabled
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-06-07 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,if(t1.returned = 1, '退件', '正向件')  方向
    ,t1.client_id 客户ID
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as 客户类型
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
    ,case
        when t1.state = 6 and di.pno is not null then di.sh_do
        when t1.state = 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is null and pct.pno is not null then 'qaqc-TeamB'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then pr.store_name
        else de.last_store_name
    end 待处理节点
#     ,case
#         when t1.state = 6 and di.pno is not null then 'KAM/揽件网点未协商'
#         when t1.state = 6 and di.pno is null  then '闪速系统沟通处理中'
#         when t1.state != 6 and plt.pno is not null and plt2.pno is not null then '闪速系统沟通处理中'
#         when plt.pno is null and pct.pno is not null then '闪速超时效理赔未完成'
#         when de.last_store_id = t1.ticket_pickup_store_id and plt2.pno is null then '揽件未发出'
#         when t1.dst_store_id = 'PH19040F05' and plt2.pno is null then '弃件未到拍卖仓'
#         when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then 'QAQC无须追责后长期无有效路由'
#         else null
#     end 卡点原因
#     ,de.last_store_name 当前节点
    ,datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) 最后有效路由距今天数
#     ,de.last_cn_route_action 最新一条有效路由
    ,case pr.route_action # 路由动作
         when 'ACCEPT_PARCEL' then '接件扫描'
         when 'ARRIVAL_GOODS_VAN_CHECK_SCAN' then '车货关联到港'
         when 'ARRIVAL_WAREHOUSE_SCAN' then '到件入仓扫描'
         when 'CANCEL_ARRIVAL_WAREHOUSE_SCAN' then '取消到件入仓扫描'
         when 'CANCEL_PARCEL' then '撤销包裹'
         when 'CANCEL_SHIPMENT_WAREHOUSE' then '取消发件出仓'
         when 'CHANGE_PARCEL_CANCEL' then '修改包裹为撤销'
         when 'CHANGE_PARCEL_CLOSE' then '修改包裹为异常关闭'
         when 'CHANGE_PARCEL_IN_TRANSIT' then '修改包裹为运输中'
         when 'CHANGE_PARCEL_INFO' then '修改包裹信息'
         when 'CHANGE_PARCEL_SIGNED' then '修改包裹为签收'
         when 'CLAIMS_CLOSE' then '理赔关闭'
         when 'CLAIMS_COMPLETE' then '理赔完成'
         when 'CLAIMS_CONTACT' then '已联系客户'
         when 'CLAIMS_TRANSFER_CS' then '转交总部cs处理'
         when 'CLOSE_ORDER' then '关闭订单'
         when 'CONTINUE_TRANSPORT' then '疑难件继续配送'
         when 'CREATE_WORK_ORDER' then '创建工单'
         when 'CUSTOMER_CHANGE_PARCEL_INFO' then '客户修改包裹信息'
         when 'CUSTOMER_OPERATING_RETURN' then '客户操作退回寄件人'
         when 'DELIVERY_CONFIRM' then '确认妥投'
         when 'DELIVERY_MARKER' then '派件标记'
         when 'DELIVERY_PICKUP_STORE_SCAN' then '自提取件扫描'
         when 'DELIVERY_TICKET_CREATION_SCAN' then '交接扫描'
         when 'DELIVERY_TRANSFER' then '派件转单'
         when 'DEPARTURE_GOODS_VAN_CK_SCAN' then '车货关联出港'
         when 'DETAIN_WAREHOUSE' then '货件留仓'
         when 'DIFFICULTY_FINISH_INDEMNITY' then '疑难件支付赔偿'
         when 'DIFFICULTY_HANDOVER' then '疑难件交接'
         when 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE' then '疑难件交接货件留仓'
         when 'DIFFICULTY_RE_TRANSIT' then '疑难件退回区域总部/重启运送'
         when 'DIFFICULTY_RETURN' then '疑难件退回寄件人'
         when 'DIFFICULTY_SEAL' then '集包异常'
         when 'DISCARD_RETURN_BKK' then '丢弃包裹的，换单后寄回BKK'
         when 'DISTRIBUTION_INVENTORY' then '分拨盘库'
         when 'DWS_WEIGHT_IMAGE' then 'DWS复秤照片'
         when 'EXCHANGE_PARCEL' then '换货'
         when 'FAKE_CANCEL_HANDLE' then '虚假撤销判责'
         when 'FLASH_HOME_SCAN' then 'FH交接扫描'
         when 'FORCE_TAKE_PHOTO' then '强制拍照路由'
         when 'HAVE_HAIR_SCAN_NO_TO' then '有发无到'
         when 'HURRY_PARCEL' then '催单'
         when 'INCOMING_CALL' then '来电接听'
         when 'INTERRUPT_PARCEL_AND_RETURN' then '中断运输并退回'
         when 'INVENTORY' then '盘库'
         when 'LOSE_PARCEL_TEAM_OPERATION' then '丢失件团队处理'
         when 'MANUAL_REMARK' then '添加备注'
         when 'MISS_PICKUP_HANDLE' then '漏包裹揽收判责'
         when 'MISSING_PARCEL_SCAN' then '丢失件包裹操作'
         when 'NOTICE_LOST_PARTS_TEAM' then '已通知丢失件团队'
         when 'PARCEL_HEADLESS_CLAIMED' then '无头件包裹已认领'
         when 'PARCEL_HEADLESS_PRINTED' then '无头件包裹已打单'
         when 'PENDING_RETURN' then '待退件'
         when 'PHONE' then '电话联系'
         when 'PICK_UP_STORE' then '待自提取件'
         when 'PICKUP_RETURN_RECEIPT' then '签回单揽收'
         when 'PRINTING' then '打印面单'
         when 'QAQC_OPERATION' then 'QAQC判责'
         when 'RECEIVE_WAREHOUSE_SCAN' then '收件入仓'
         when 'RECEIVED' then '已揽收,初始化动作，实际情况并没有作用'
         when 'REFUND_CONFIRM' then '退件妥投'
         when 'REPAIRED' then '上报问题修复路由'
         when 'REPLACE_PNO' then '换单'
         when 'REPLY_WORK_ORDER' then '回复工单'
         when 'REVISION_TIME' then '改约时间'
         when 'SEAL' then '集包'
         when 'SEAL_NUMBER_CHANGE' then '集包件数变化'
         when 'SHIPMENT_WAREHOUSE_SCAN' then '发件出仓扫描'
         when 'SORTER_WEIGHT_IMAGE' then '分拣机复秤照片'
         when 'SORTING_SCAN' then '分拣扫描'
         when 'STAFF_INFO_UPDATE_WEIGHT' then '快递员修改重量'
         when 'STORE_KEEPER_UPDATE_WEIGHT' then '仓管员复秤'
         when 'STORE_SORTER_UPDATE_WEIGHT' then '分拣机复秤'
         when 'SYSTEM_AUTO_RETURN' then '系统自动退件'
         when 'TAKE_PHOTO' then '异常打单拍照'
         when 'THIRD_EXPRESS_ROUTE' then '第三方公司路由'
         when 'THIRD_PARTY_REASON_DETAIN' then '第三方原因滞留'
         when 'TICKET_WEIGHT_IMAGE' then '揽收称重照片'
         when 'TRANSFER_LOST_PARTS_TEAM' then '已转交丢失件团队'
         when 'TRANSFER_QAQC' then '转交QAQC处理'
         when 'UNSEAL' then '拆包'
         when 'UNSEAL_NO_PARCEL' then '上报包裹不在集包里'
         when 'UNSEAL_NOT_SCANNED' then '集包已拆包，本包裹未被扫描'
         when 'VEHICLE_ACCIDENT_REG' then '车辆车祸登记'
         when 'VEHICLE_ACCIDENT_REGISTRATION' then '车辆车祸登记'
         when 'VEHICLE_WET_DAMAGE_REG' then '车辆湿损登记'
         when 'VEHICLE_WET_DAMAGE_REGISTRATION' then '车辆湿损登记'
        end as 最后一条路由
    ,convert_tz(pr.routed_at ,'+00:00', '+08:00') 最新一条有效路由时间
    ,datediff(now(), de.dst_routed_at) 目的地网点停留时间
    ,de.dst_store 目的地网点
    ,de.src_store 揽收网点
    ,de.pickup_time 揽收时间
    ,de.pick_date 揽收日期
    ,if(hold.pno is not null, 'yes', 'no' ) 是否有holding标记
    ,if(pr3.pno is not null, 'yes', 'no') 是否有待退件标记
    ,td.try_num 尝试派送次数
from t t1
left join ph_staging.ka_profile kp on t1.client_id = kp.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,pr.route_action
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
left join
    (
        select
            plt.pno
        from ph_bi.parcel_claim_task plt
        join t t4  on t4.pno = plt.pno
        where
            plt.state not in (6,7,8)
            and plt.source = 11
        group by 1
    ) pct on pct.pno = t1.pno
left join
    (
        select
            pr2.pno
        from ph_staging.parcel_route pr2
        join t t1 on t1.pno = pr2.pno
        where
            pr2.route_action = 'REFUND_CONFIRM'
        group by 1
    ) hold on hold.pno = t1.pno
left join
    (
        select
            pr2.pno
        from  ph_staging.parcel_route pr2
        join t t1 on t1.pno = pr2.pno
        where
            pr2.route_action = 'PENDING_RETURN'
        group by 1
    ) pr3 on pr3.pno = t1.pno
left join
    (
        select
            td.pno
            ,count(distinct date(convert_tz(tdm.created_at, '+00:00', '_08:00'))) try_num
        from ph_staging.ticket_delivery td
        join t t1 on t1.pno = td.pno
        left join ph_staging.ticket_delivery_marker tdm on tdm.delivery_id = td.id
        group by 1
    ) td on td.pno = t1.pno
group by t1.pno;
;-- -. . -..- - / . -. - .-. -.--
select
    di.pno
    ,cdt.organization_id
    ,ddd.CN_element
    ,cdt.created_at
    ,convert_tz(cdt.created_at, '+00:00', '+08:00') 创建时间
    ,'PDC' ss_category
    ,if(cdt.created_at < date_add(date_add(cdt.created_at, interval 12 hour), interval 2 hour), 'before_12', 'should_today') deal_staus
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
left join ph_staging.sys_store ss on ss.id = cdt.organization_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    cdt.organization_type = 1 -- FH&miniCS
    and bc.client_id is  null
    and ss.category in (14) -- PDC
    and date_add(cdt.created_at, interval 12 hour)>= '2023-06-28'
    and date_add(cdt.created_at, interval 12 hour) <= '2023-06-29';
;-- -. . -..- - / . -. - .-. -.--
select
    di.pno
    ,cdt.organization_id
    ,ddd.CN_element
    ,cdt.created_at
    ,convert_tz(cdt.created_at, '+00:00', '+08:00') 创建时间
    ,'PDC' ss_category
    ,if(cdt.created_at < date_add(date_add(cdt.created_at, interval 12 hour), interval 2 hour), 'before_12', 'should_today') deal_staus
    ,date(date_add(cdt.created_at, interval 12 hour)) 日期
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
left join ph_staging.sys_store ss on ss.id = cdt.organization_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    cdt.organization_type = 1 -- FH&miniCS
    and bc.client_id is  null
    and ss.category in (14);
;-- -. . -..- - / . -. - .-. -.--
select
    di.pno
    ,cdt.organization_id
    ,ddd.CN_element
    ,cdt.created_at
    ,convert_tz(cdt.created_at, '+00:00', '+08:00') 创建时间
    ,'PDC' ss_category
    ,if(cdt.created_at < date_add(date_add(cdt.created_at, interval 12 hour), interval 2 hour), 'before_12', 'should_today') deal_staus
    ,date(date_add(cdt.created_at, interval 12 hour)) 日期
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
left join ph_staging.sys_store ss on ss.id = cdt.organization_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    cdt.organization_type = 1 -- FH&miniCS
    and bc.client_id is  null
    and ss.category in (14) -- PDC
    and date_add(cdt.created_at, interval 12 hour)>= '2023-06-28'
    and date_add(cdt.created_at, interval 12 hour) <= '2023-06-29';
;-- -. . -..- - / . -. - .-. -.--
select
    di.pno
    ,cdt.organization_id
    ,ddd.CN_element
    ,cdt.created_at
    ,convert_tz(cdt.created_at, '+00:00', '+08:00') 创建时间
    ,'PDC' ss_category
    ,if(cdt.created_at < date_add(date_add(cdt.created_at, interval 12 hour), interval 2 hour), 'before_12', 'should_today') deal_staus
    ,date_add(date_add(cdt.created_at, interval 12 hour), interval 2 hour) jisu
    ,date(date_add(cdt.created_at, interval 12 hour)) 日期
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
left join ph_staging.sys_store ss on ss.id = cdt.organization_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    cdt.organization_type = 1 -- FH&miniCS
    and bc.client_id is  null
    and ss.category in (14) -- PDC
    and date_add(cdt.created_at, interval 12 hour)>= '2023-06-28'
    and date_add(cdt.created_at, interval 12 hour) <= '2023-06-29';
;-- -. . -..- - / . -. - .-. -.--
select
    di.pno
    ,cdt.organization_id
    ,ddd.CN_element
    ,cdt.created_at
    ,convert_tz(cdt.created_at, '+00:00', '+08:00') 创建时间
    ,'PDC' ss_category
    ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 12 hour)), interval 2 hour), 'before_12', 'should_today') deal_staus
    ,date_add(date(date_add(cdt.created_at, interval 12 hour)), interval 2 hour) jisu
    ,date(date_add(cdt.created_at, interval 12 hour)) 日期
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
left join ph_staging.sys_store ss on ss.id = cdt.organization_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    cdt.organization_type = 1 -- FH&miniCS
    and bc.client_id is  null
    and ss.category in (14) -- PDC
    and date_add(cdt.created_at, interval 12 hour)>= '2023-06-28'
    and date_add(cdt.created_at, interval 12 hour) <= '2023-06-29';
;-- -. . -..- - / . -. - .-. -.--
select
    di.pno
    ,cdt.organization_id
    ,ddd.CN_element
    ,cdt.created_at
    ,convert_tz(cdt.created_at, '+00:00', '+08:00') 创建时间
    ,'PDC' ss_category
    ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 12 hour)), interval 2 hour), 'before_12', 'should_today') deal_staus
    ,date_add(date(date_add(cdt.created_at, interval 12 hour)), interval 2 hour) jisu
    ,date(date_add(cdt.created_at, interval 12 hour)) 日期
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
left join ph_staging.sys_store ss on ss.id = cdt.organization_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    cdt.organization_type = 1 -- FH&miniCS
    and bc.client_id is  null
    and ss.category in (14) -- PDC
    and date(date_add(cdt.created_at, interval 12 hour)) >= '2023-06-28'
    and date(date_add(cdt.created_at, interval 12 hour)) <= '2023-06-29';
;-- -. . -..- - / . -. - .-. -.--
select
    di.pno
    ,ddd.CN_element
    ,convert_tz(cdt.created_at, '+00:00', '+08:00') creat_time
    ,'PDC' ss_category
    ,if(cdt.created_at < date(date_add(cdt.created_at, interval 12 hour)), 'before_12', 'should_today') deal_select
    ,date(date_add(cdt.created_at, interval 12 hour)) date_d
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
left join ph_staging.sys_store ss on ss.id = cdt.organization_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    cdt.organization_type = 1 -- FH&miniCS
    and bc.client_id is  null
    and ss.category in (1,6) -- PDC
    and date(date_add(cdt.created_at, interval 12 hour)) >= '2023-06-28'
    and date(date_add(cdt.created_at, interval 12 hour)) <= '2023-06-29';
;-- -. . -..- - / . -. - .-. -.--
select
    di.pno
    ,ddd.CN_element
    ,convert_tz(cdt.created_at, '+00:00', '+08:00') creat_time
    ,'PDC' ss_category
    ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 14 hour)), interval 2 hour), 'before_12', 'should_today') deal_select
    ,date(date_add(cdt.created_at, interval 14 hour)) date_d
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
left join ph_staging.sys_store ss on ss.id = cdt.organization_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    cdt.organization_type = 1 -- FH&miniCS
    and bc.client_id is  null
    and ss.category in (1,6) -- PDC
    and date(date_add(cdt.created_at, interval 14 hour)) >= '2023-06-28'
    and date(date_add(cdt.created_at, interval 14 hour)) <= '2023-06-29';
;-- -. . -..- - / . -. - .-. -.--
select
    di.pno
    ,ddd.CN_element
    ,convert_tz(cdt.created_at, '+00:00', '+08:00') creat_time
    ,'PDC' ss_category
    ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 12 hour)), interval 2 hour), 'before_12', 'should_today') deal_select
    ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 12 hour)), interval 2 hour), date_add(date(date_add(cdt.created_at, interval 12 hour)),interval 12 hour), date_add(date(date_add(cdt.created_at, interval 12 hour)),interval 24 hour)) should_deal_time
    ,date(date_add(cdt.created_at, interval 12 hour)) date_d
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
left join ph_staging.sys_store ss on ss.id = cdt.organization_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    cdt.organization_type = 1 -- FH&miniCS
    and bc.client_id is  null
    and ss.category in (14) -- PDC
    and date(date_add(cdt.created_at, interval 12 hour)) >= '2023-06-28'
    and date(date_add(cdt.created_at, interval 12 hour)) <= '2023-06-29'

union all

select
    di.pno
    ,ddd.CN_element
    ,convert_tz(cdt.created_at, '+00:00', '+08:00') creat_time
    ,if(ss.category = 1, 'SP', 'FH') ss_category
    ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 14 hour)), interval 2 hour), 'before_12', 'should_today') deal_select
    ,date(date_add(cdt.created_at, interval 14 hour)) date_d
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
left join ph_staging.sys_store ss on ss.id = cdt.organization_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    cdt.organization_type = 1 -- FH&miniCS
    and bc.client_id is  null
    and ss.category in (1,6) -- PDC
    and date(date_add(cdt.created_at, interval 14 hour)) >= '2023-06-28'
    and date(date_add(cdt.created_at, interval 14 hour)) <= '2023-06-29';
;-- -. . -..- - / . -. - .-. -.--
select
    di.pno
    ,ddd.CN_element
    ,convert_tz(cdt.created_at, '+00:00', '+08:00') creat_time
    ,'PDC' ss_category
    ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 12 hour)), interval 2 hour), 'before_12', 'should_today') deal_select
    ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 12 hour)), interval 2 hour), date_add(date(date_add(cdt.created_at, interval 12 hour)),interval 12 hour), date_add(date(date_add(cdt.created_at, interval 12 hour)),interval 24 hour)) should_deal_time
    ,date(date_add(cdt.created_at, interval 12 hour)) date_d
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
left join ph_staging.sys_store ss on ss.id = cdt.organization_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    cdt.organization_type = 1 -- FH&miniCS
    and bc.client_id is  null
    and ss.category in (14) -- PDC
    and date(date_add(cdt.created_at, interval 12 hour)) >= '2023-06-28'
    and date(date_add(cdt.created_at, interval 12 hour)) <= '2023-06-29'

union all

select
    di.pno
    ,ddd.CN_element
    ,convert_tz(cdt.created_at, '+00:00', '+08:00') creat_time
    ,if(ss.category = 1, 'SP', 'FH') ss_category
    ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 14 hour)), interval 2 hour), 'before_12', 'should_today') deal_select
    ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 14 hour)), interval 2 hour), date_add(date(date_add(cdt.created_at, interval 12 hour)),interval 12 hour), date_add(date(date_add(cdt.created_at, interval 12 hour)),interval 24 hour)) should_deal_time
    ,date(date_add(cdt.created_at, interval 14 hour)) date_d
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
left join ph_staging.sys_store ss on ss.id = cdt.organization_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    cdt.organization_type = 1 -- FH&miniCS
    and bc.client_id is  null
    and ss.category in (1,6) -- PDC
    and date(date_add(cdt.created_at, interval 14 hour)) >= '2023-06-28'
    and date(date_add(cdt.created_at, interval 14 hour)) <= '2023-06-29';
;-- -. . -..- - / . -. - .-. -.--
select
    di.pno
    ,ddd.CN_element
    ,convert_tz(cdt.created_at, '+00:00', '+08:00') creat_time
    ,'PDC' ss_category
    ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 12 hour)), interval 2 hour), 'before_12', 'should_today') deal_select
    ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 12 hour)), interval 2 hour), date_add(date(date_add(cdt.created_at, interval 12 hour)),interval 12 hour), date_add(date(date_add(cdt.created_at, interval 12 hour)),interval 24 hour)) should_deal_time
    ,date(date_add(cdt.created_at, interval 12 hour)) date_d
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
left join ph_staging.sys_store ss on ss.id = cdt.organization_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    cdt.organization_type = 1 -- FH&miniCS
    and bc.client_id is  null
    and ss.category in (14) -- PDC
    and date(date_add(cdt.created_at, interval 12 hour)) >= '2023-06-28'
    and date(date_add(cdt.created_at, interval 12 hour)) <= '2023-06-29'

union all

select
    di.pno
    ,ddd.CN_element
    ,convert_tz(cdt.created_at, '+00:00', '+08:00') creat_time
    ,if(ss.category = 1, 'SP', 'FH') ss_category
    ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 14 hour)), interval 2 hour), 'before_12', 'should_today') deal_select
    ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 14 hour)), interval 2 hour), date_add(date(date_add(cdt.created_at, interval 14 hour)),interval 12 hour), date_add(date(date_add(cdt.created_at, interval 14 hour)),interval 24 hour)) should_deal_time
    ,date(date_add(cdt.created_at, interval 14 hour)) date_d
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
left join ph_staging.sys_store ss on ss.id = cdt.organization_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
where
    cdt.organization_type = 1 -- FH&miniCS
    and bc.client_id is  null
    and ss.category in (1,6) -- PDC
    and date(date_add(cdt.created_at, interval 14 hour)) >= '2023-06-28'
    and date(date_add(cdt.created_at, interval 14 hour)) <= '2023-06-29';
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        di.pno
        ,ddd.CN_element
        ,convert_tz(cdt.created_at, '+00:00', '+08:00') creat_time
        ,if(cdt.state = 1, convert_tz(cdt.updated_at, '+00:00', '+08:00'), null) deal_time
        ,if(cdt.state = 1, 'y', 'n') deal_or_not
        ,'PDC' ss_category
        ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 12 hour)), interval 2 hour), 'before_12', 'should_today') deal_select
        ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 12 hour)), interval 2 hour), date_add(date(date_add(cdt.created_at, interval 12 hour)),interval 12 hour), date_add(date(date_add(cdt.created_at, interval 12 hour)),interval 24 hour)) should_deal_time
        ,date(date_add(cdt.created_at, interval 12 hour)) date_d
    from ph_staging.customer_diff_ticket cdt
    left join ph_staging.diff_info di on di.id = cdt.diff_info_id
    left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
    left join ph_staging.sys_store ss on ss.id = cdt.organization_id
    left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
    where
        cdt.organization_type = 1 -- FH&miniCS
        and bc.client_id is  null
        and ss.category in (14) -- PDC
        and date(date_add(cdt.created_at, interval 12 hour)) >= '2023-06-28'
        and date(date_add(cdt.created_at, interval 12 hour)) <= '2023-06-29'

    union all

    select
        di.pno
        ,ddd.CN_element
        ,convert_tz(cdt.created_at, '+00:00', '+08:00') creat_time
        ,if(cdt.state = 1, convert_tz(cdt.updated_at, '+00:00', '+08:00'), null) deal_time
        ,if(cdt.state = 1, 'y', 'n') deal_or_not
        ,if(ss.category = 1, 'SP', 'FH') ss_category
        ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 14 hour)), interval 2 hour), 'before_12', 'should_today') deal_select
        ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 14 hour)), interval 2 hour), date_add(date(date_add(cdt.created_at, interval 14 hour)),interval 12 hour), date_add(date(date_add(cdt.created_at, interval 14 hour)),interval 24 hour)) should_deal_time
        ,date(date_add(cdt.created_at, interval 14 hour)) date_d
    from ph_staging.customer_diff_ticket cdt
    left join ph_staging.diff_info di on di.id = cdt.diff_info_id
    left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
    left join ph_staging.sys_store ss on ss.id = cdt.organization_id
    left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
    where
        cdt.organization_type = 1 -- FH&miniCS
        and bc.client_id is  null
        and ss.category in (1,6) -- PDC
        and date(date_add(cdt.created_at, interval 14 hour)) >= '2023-06-28'
        and date(date_add(cdt.created_at, interval 14 hour)) <= '2023-06-29'
)
select
    total.*
    , pdc.before_12总量 before_12总量_pdc
    , pdc.before_12已处理量 before_12已处理量_pdc
    , pdc.before_12及时量 before_12及时量_pdc
    , pdc.before_12未处理量 before_12未处理量_pdc
    , pdc.should_today总量 should_today总量_pdc
    , pdc.should_today已处理量 should_today已处理量_pdc
    , pdc.should_today及时量 should_today及时量_pdc
    , pdc.should_today未处理量 should_today未处理量_pdc

    , sp.before_12总量 before_12总量_sp
    , sp.before_12已处理量 before_12已处理量_sp
    , sp.before_12及时量 before_12及时量_sp
    , sp.before_12未处理量 before_12未处理量_sp
    , sp.should_today总量 should_today总量_sp
    , sp.should_today已处理量 should_today已处理量_sp
    , sp.should_today及时量 should_today及时量_sp
    , sp.should_today未处理量 should_today未处理量_sp

    , fh.before_12总量 before_12总量_fh
    , fh.before_12已处理量 before_12已处理量_fh
    , fh.before_12及时量 before_12及时量_fh
    , fh.before_12未处理量 before_12未处理量_fh
    , fh.should_today总量 should_today总量_fh
    , fh.should_today已处理量 should_today已处理量_fh
    , fh.should_today及时量 should_today及时量_fh
    , fh.should_today未处理量 should_today未处理量_fh
from
    (
        select
            t1.date_d
            ,t1.CN_element
            ,count(if(t1.deal_select = 'before_12', t1.pno, null)) before_12总量
            ,count(if(t1.deal_select = 'before_12' and t1.deal_or_not = 'y', t1.pno, null)) before_12已处理量
            ,count(if(t1.deal_select = 'before_12' and t1.deal_time < t1.should_deal_time, t1.pno, null)) before_12及时量
            ,count(if(t1.deal_select = 'before_12' and t1.deal_or_not = 'n', t1.pno, null)) before_12未处理量
            ,count(if(t1.deal_select = 'should_today', t1.pno, null)) should_today总量
            ,count(if(t1.deal_select = 'should_today' and t1.deal_or_not = 'y', t1.pno, null)) should_today已处理量
            ,count(if(t1.deal_select = 'should_today' and t1.deal_time < t1.should_deal_time, t1.pno, null)) should_today及时量
            ,count(if(t1.deal_select = 'should_today' and t1.deal_or_not = 'n', t1.pno, null)) should_today未处理量
        from t t1
        group by 1,2
        order by 1,2
    ) total
left join
    (
        select
            t1.date_d
            ,t1.CN_element
            ,count(if(t1.deal_select = 'before_12', t1.pno, null)) before_12总量
            ,count(if(t1.deal_select = 'before_12' and t1.deal_or_not = 'y', t1.pno, null)) before_12已处理量
            ,count(if(t1.deal_select = 'before_12' and t1.deal_time < t1.should_deal_time, t1.pno, null)) before_12及时量
            ,count(if(t1.deal_select = 'before_12' and t1.deal_or_not = 'n', t1.pno, null)) before_12未处理量
            ,count(if(t1.deal_select = 'should_today', t1.pno, null)) should_today总量
            ,count(if(t1.deal_select = 'should_today' and t1.deal_or_not = 'y', t1.pno, null)) should_today已处理量
            ,count(if(t1.deal_select = 'should_today' and t1.deal_time < t1.should_deal_time, t1.pno, null)) should_today及时量
            ,count(if(t1.deal_select = 'should_today' and t1.deal_or_not = 'n', t1.pno, null)) should_today未处理量
        from t t1
        where
            t1.ss_category = 'PDC'
        group by 1,2
        order by 1,2
    ) pdc on pdc.date_d = total.date_d and pdc.CN_element = total.CN_element
left join
    (
        select
            t1.date_d
            ,t1.CN_element
            ,count(if(t1.deal_select = 'before_12', t1.pno, null)) before_12总量
            ,count(if(t1.deal_select = 'before_12' and t1.deal_or_not = 'y', t1.pno, null)) before_12已处理量
            ,count(if(t1.deal_select = 'before_12' and t1.deal_time < t1.should_deal_time, t1.pno, null)) before_12及时量
            ,count(if(t1.deal_select = 'before_12' and t1.deal_or_not = 'n', t1.pno, null)) before_12未处理量
            ,count(if(t1.deal_select = 'should_today', t1.pno, null)) should_today总量
            ,count(if(t1.deal_select = 'should_today' and t1.deal_or_not = 'y', t1.pno, null)) should_today已处理量
            ,count(if(t1.deal_select = 'should_today' and t1.deal_time < t1.should_deal_time, t1.pno, null)) should_today及时量
            ,count(if(t1.deal_select = 'should_today' and t1.deal_or_not = 'n', t1.pno, null)) should_today未处理量
        from t t1
        where
            t1.ss_category = 'SP'
        group by 1,2
        order by 1,2
    ) sp on sp.date_d = total.date_d and sp.CN_element = total.CN_element
left join
    (
        select
            t1.date_d
            ,t1.CN_element
            ,count(if(t1.deal_select = 'before_12', t1.pno, null)) before_12总量
            ,count(if(t1.deal_select = 'before_12' and t1.deal_or_not = 'y', t1.pno, null)) before_12已处理量
            ,count(if(t1.deal_select = 'before_12' and t1.deal_time < t1.should_deal_time, t1.pno, null)) before_12及时量
            ,count(if(t1.deal_select = 'before_12' and t1.deal_or_not = 'n', t1.pno, null)) before_12未处理量
            ,count(if(t1.deal_select = 'should_today', t1.pno, null)) should_today总量
            ,count(if(t1.deal_select = 'should_today' and t1.deal_or_not = 'y', t1.pno, null)) should_today已处理量
            ,count(if(t1.deal_select = 'should_today' and t1.deal_time < t1.should_deal_time, t1.pno, null)) should_today及时量
            ,count(if(t1.deal_select = 'should_today' and t1.deal_or_not = 'n', t1.pno, null)) should_today未处理量
        from t t1
        where
            t1.ss_category = 'FH'
        group by 1,2
        order by 1,2
    ) fh on fh.date_d = total.date_d and fh.CN_element = total.CN_element;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        di.pno
        ,ddd.CN_element
        ,ss.name ss_name
        ,convert_tz(cdt.created_at, '+00:00', '+08:00') creat_time
        ,if(cdt.state = 1, convert_tz(cdt.updated_at, '+00:00', '+08:00'), null) deal_time
        ,if(cdt.state = 1, 'y', 'n') deal_or_not
        ,'PDC' ss_category
        ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 12 hour)), interval 2 hour), 'before_12', 'should_today') deal_select
        ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 12 hour)), interval 2 hour), date_add(date(date_add(cdt.created_at, interval 12 hour)),interval 12 hour), date_add(date(date_add(cdt.created_at, interval 12 hour)),interval 24 hour)) should_deal_time
        ,date(date_add(cdt.created_at, interval 12 hour)) date_d
    from ph_staging.customer_diff_ticket cdt
    left join ph_staging.diff_info di on di.id = cdt.diff_info_id
    left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
    left join ph_staging.sys_store ss on ss.id = cdt.organization_id
    left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
    where
        cdt.organization_type = 1 -- FH&miniCS
        and bc.client_id is  null
        and ss.category in (14) -- PDC
        and date(date_add(cdt.created_at, interval 12 hour)) >= '2023-06-28'
        and date(date_add(cdt.created_at, interval 12 hour)) <= '2023-06-29'

    union all

    select
        di.pno
        ,ddd.CN_element
        ,ss.name ss_name
        ,convert_tz(cdt.created_at, '+00:00', '+08:00') creat_time
        ,if(cdt.state = 1, convert_tz(cdt.updated_at, '+00:00', '+08:00'), null) deal_time
        ,if(cdt.state = 1, 'y', 'n') deal_or_not
        ,if(ss.category = 1, 'SP', 'FH') ss_category
        ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 14 hour)), interval 2 hour), 'before_12', 'should_today') deal_select
        ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 14 hour)), interval 2 hour), date_add(date(date_add(cdt.created_at, interval 14 hour)),interval 12 hour), date_add(date(date_add(cdt.created_at, interval 14 hour)),interval 24 hour)) should_deal_time
        ,date(date_add(cdt.created_at, interval 14 hour)) date_d
    from ph_staging.customer_diff_ticket cdt
    left join ph_staging.diff_info di on di.id = cdt.diff_info_id
    left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
    left join ph_staging.sys_store ss on ss.id = cdt.organization_id
    left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
    where
        cdt.organization_type = 1 -- FH&miniCS
        and bc.client_id is  null
        and ss.category in (1,6) -- PDC
        and date(date_add(cdt.created_at, interval 14 hour)) >= '2023-06-28'
        and date(date_add(cdt.created_at, interval 14 hour)) <= '2023-06-29'
)
select
    t1.date_d
    ,t1.ss_name
    ,t1.ss_category
    ,count(if(t1.deal_select = 'before_12', t1.pno, null)) before_12总量
    ,count(if(t1.deal_select = 'before_12' and t1.deal_or_not = 'y', t1.pno, null)) before_12已处理量
    ,count(if(t1.deal_select = 'before_12' and t1.deal_or_not = 'y', t1.pno, null))/count(if(t1.deal_select = 'before_12', t1.pno, null)) before_12处理率
    ,count(if(t1.deal_select = 'before_12' and t1.deal_time < t1.should_deal_time, t1.pno, null)) before_12及时量
    ,count(if(t1.deal_select = 'before_12' and t1.deal_time < t1.should_deal_time, t1.pno, null))/count(if(t1.deal_select = 'before_12', t1.pno, null)) before_12及时率
    ,count(if(t1.deal_select = 'before_12' and t1.deal_or_not = 'n', t1.pno, null)) before_12未处理量
    ,count(if(t1.deal_select = 'should_today', t1.pno, null)) should_today总量
    ,count(if(t1.deal_select = 'should_today' and t1.deal_or_not = 'y', t1.pno, null)) should_today已处理量
    ,count(if(t1.deal_select = 'should_today' and t1.deal_or_not = 'y', t1.pno, null))/count(if(t1.deal_select = 'should_today', t1.pno, null)) should_today处理率
    ,count(if(t1.deal_select = 'should_today' and t1.deal_time < t1.should_deal_time, t1.pno, null)) should_today及时量
    ,count(if(t1.deal_select = 'should_today' and t1.deal_time < t1.should_deal_time, t1.pno, null))/count(if(t1.deal_select = 'should_today', t1.pno, null)) should_today及时率
    ,count(if(t1.deal_select = 'should_today' and t1.deal_or_not = 'n', t1.pno, null)) should_today未处理量
    ,count(if(t1.deal_or_not = 'n', t1.pno, null)) 未处理总量
    ,count(t1.pno) 总问题量
from t t1
group by 1,2,3
order by 16 desc;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
        ,pi.returned
        ,pi.dst_store_id
        ,pi.client_id
        ,pi.cod_enabled
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-06-07 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,if(t1.returned = 1, '退件', '正向件')  方向
    ,t1.client_id 客户ID
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as 客户类型
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
    ,case
        when t1.state = 6 and di.pno is not null then di.sh_do
        when t1.state = 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is null and pct.pno is not null then 'qaqc-TeamB'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then pr.store_name
        else de.last_store_name
    end 待处理节点
#     ,case
#         when t1.state = 6 and di.pno is not null then 'KAM/揽件网点未协商'
#         when t1.state = 6 and di.pno is null  then '闪速系统沟通处理中'
#         when t1.state != 6 and plt.pno is not null and plt2.pno is not null then '闪速系统沟通处理中'
#         when plt.pno is null and pct.pno is not null then '闪速超时效理赔未完成'
#         when de.last_store_id = t1.ticket_pickup_store_id and plt2.pno is null then '揽件未发出'
#         when t1.dst_store_id = 'PH19040F05' and plt2.pno is null then '弃件未到拍卖仓'
#         when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then 'QAQC无须追责后长期无有效路由'
#         else null
#     end 卡点原因
#     ,de.last_store_name 当前节点
    ,datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) 最后有效路由距今天数
#     ,de.last_cn_route_action 最新一条有效路由
    ,case pr.route_action # 路由动作
         when 'ACCEPT_PARCEL' then '接件扫描'
         when 'ARRIVAL_GOODS_VAN_CHECK_SCAN' then '车货关联到港'
         when 'ARRIVAL_WAREHOUSE_SCAN' then '到件入仓扫描'
         when 'CANCEL_ARRIVAL_WAREHOUSE_SCAN' then '取消到件入仓扫描'
         when 'CANCEL_PARCEL' then '撤销包裹'
         when 'CANCEL_SHIPMENT_WAREHOUSE' then '取消发件出仓'
         when 'CHANGE_PARCEL_CANCEL' then '修改包裹为撤销'
         when 'CHANGE_PARCEL_CLOSE' then '修改包裹为异常关闭'
         when 'CHANGE_PARCEL_IN_TRANSIT' then '修改包裹为运输中'
         when 'CHANGE_PARCEL_INFO' then '修改包裹信息'
         when 'CHANGE_PARCEL_SIGNED' then '修改包裹为签收'
         when 'CLAIMS_CLOSE' then '理赔关闭'
         when 'CLAIMS_COMPLETE' then '理赔完成'
         when 'CLAIMS_CONTACT' then '已联系客户'
         when 'CLAIMS_TRANSFER_CS' then '转交总部cs处理'
         when 'CLOSE_ORDER' then '关闭订单'
         when 'CONTINUE_TRANSPORT' then '疑难件继续配送'
         when 'CREATE_WORK_ORDER' then '创建工单'
         when 'CUSTOMER_CHANGE_PARCEL_INFO' then '客户修改包裹信息'
         when 'CUSTOMER_OPERATING_RETURN' then '客户操作退回寄件人'
         when 'DELIVERY_CONFIRM' then '确认妥投'
         when 'DELIVERY_MARKER' then '派件标记'
         when 'DELIVERY_PICKUP_STORE_SCAN' then '自提取件扫描'
         when 'DELIVERY_TICKET_CREATION_SCAN' then '交接扫描'
         when 'DELIVERY_TRANSFER' then '派件转单'
         when 'DEPARTURE_GOODS_VAN_CK_SCAN' then '车货关联出港'
         when 'DETAIN_WAREHOUSE' then '货件留仓'
         when 'DIFFICULTY_FINISH_INDEMNITY' then '疑难件支付赔偿'
         when 'DIFFICULTY_HANDOVER' then '疑难件交接'
         when 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE' then '疑难件交接货件留仓'
         when 'DIFFICULTY_RE_TRANSIT' then '疑难件退回区域总部/重启运送'
         when 'DIFFICULTY_RETURN' then '疑难件退回寄件人'
         when 'DIFFICULTY_SEAL' then '集包异常'
         when 'DISCARD_RETURN_BKK' then '丢弃包裹的，换单后寄回BKK'
         when 'DISTRIBUTION_INVENTORY' then '分拨盘库'
         when 'DWS_WEIGHT_IMAGE' then 'DWS复秤照片'
         when 'EXCHANGE_PARCEL' then '换货'
         when 'FAKE_CANCEL_HANDLE' then '虚假撤销判责'
         when 'FLASH_HOME_SCAN' then 'FH交接扫描'
         when 'FORCE_TAKE_PHOTO' then '强制拍照路由'
         when 'HAVE_HAIR_SCAN_NO_TO' then '有发无到'
         when 'HURRY_PARCEL' then '催单'
         when 'INCOMING_CALL' then '来电接听'
         when 'INTERRUPT_PARCEL_AND_RETURN' then '中断运输并退回'
         when 'INVENTORY' then '盘库'
         when 'LOSE_PARCEL_TEAM_OPERATION' then '丢失件团队处理'
         when 'MANUAL_REMARK' then '添加备注'
         when 'MISS_PICKUP_HANDLE' then '漏包裹揽收判责'
         when 'MISSING_PARCEL_SCAN' then '丢失件包裹操作'
         when 'NOTICE_LOST_PARTS_TEAM' then '已通知丢失件团队'
         when 'PARCEL_HEADLESS_CLAIMED' then '无头件包裹已认领'
         when 'PARCEL_HEADLESS_PRINTED' then '无头件包裹已打单'
         when 'PENDING_RETURN' then '待退件'
         when 'PHONE' then '电话联系'
         when 'PICK_UP_STORE' then '待自提取件'
         when 'PICKUP_RETURN_RECEIPT' then '签回单揽收'
         when 'PRINTING' then '打印面单'
         when 'QAQC_OPERATION' then 'QAQC判责'
         when 'RECEIVE_WAREHOUSE_SCAN' then '收件入仓'
         when 'RECEIVED' then '已揽收,初始化动作，实际情况并没有作用'
         when 'REFUND_CONFIRM' then '退件妥投'
         when 'REPAIRED' then '上报问题修复路由'
         when 'REPLACE_PNO' then '换单'
         when 'REPLY_WORK_ORDER' then '回复工单'
         when 'REVISION_TIME' then '改约时间'
         when 'SEAL' then '集包'
         when 'SEAL_NUMBER_CHANGE' then '集包件数变化'
         when 'SHIPMENT_WAREHOUSE_SCAN' then '发件出仓扫描'
         when 'SORTER_WEIGHT_IMAGE' then '分拣机复秤照片'
         when 'SORTING_SCAN' then '分拣扫描'
         when 'STAFF_INFO_UPDATE_WEIGHT' then '快递员修改重量'
         when 'STORE_KEEPER_UPDATE_WEIGHT' then '仓管员复秤'
         when 'STORE_SORTER_UPDATE_WEIGHT' then '分拣机复秤'
         when 'SYSTEM_AUTO_RETURN' then '系统自动退件'
         when 'TAKE_PHOTO' then '异常打单拍照'
         when 'THIRD_EXPRESS_ROUTE' then '第三方公司路由'
         when 'THIRD_PARTY_REASON_DETAIN' then '第三方原因滞留'
         when 'TICKET_WEIGHT_IMAGE' then '揽收称重照片'
         when 'TRANSFER_LOST_PARTS_TEAM' then '已转交丢失件团队'
         when 'TRANSFER_QAQC' then '转交QAQC处理'
         when 'UNSEAL' then '拆包'
         when 'UNSEAL_NO_PARCEL' then '上报包裹不在集包里'
         when 'UNSEAL_NOT_SCANNED' then '集包已拆包，本包裹未被扫描'
         when 'VEHICLE_ACCIDENT_REG' then '车辆车祸登记'
         when 'VEHICLE_ACCIDENT_REGISTRATION' then '车辆车祸登记'
         when 'VEHICLE_WET_DAMAGE_REG' then '车辆湿损登记'
         when 'VEHICLE_WET_DAMAGE_REGISTRATION' then '车辆湿损登记'
        end as 最后一条路由
    ,convert_tz(pr.routed_at ,'+00:00', '+08:00') 最新一条有效路由时间
    ,datediff(now(), de.dst_routed_at) 目的地网点停留时间
    ,de.dst_store 目的地网点
    ,de.src_store 揽收网点
    ,de.pickup_time 揽收时间
    ,de.pick_date 揽收日期
    ,if(hold.pno is not null, 'yes', 'no' ) 是否有holding标记
    ,if(pr3.pno is not null, 'yes', 'no') 是否有待退件标记
    ,td.try_num 尝试派送次数
from t t1
left join ph_staging.ka_profile kp on t1.client_id = kp.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,pr.route_action
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
left join
    (
        select
            plt.pno
        from ph_bi.parcel_claim_task plt
        join t t4  on t4.pno = plt.pno
        where
            plt.state not in (6,7,8)
            and plt.source = 11
        group by 1
    ) pct on pct.pno = t1.pno
left join
    (
        select
            pr2.pno
        from ph_staging.parcel_route pr2
        join t t1 on t1.pno = pr2.pno
        where
            pr2.route_action = 'REFUND_CONFIRM'
        group by 1
    ) hold on hold.pno = t1.pno
left join
    (
        select
            pr2.pno
        from  ph_staging.parcel_route pr2
        join t t1 on t1.pno = pr2.pno
        where
            pr2.route_action = 'PENDING_RETURN'
        group by 1
    ) pr3 on pr3.pno = t1.pno
left join
    (
        select
            td.pno
            ,count(distinct date(convert_tz(tdm.created_at, '+00:00', '+08:00'))) try_num
        from ph_staging.ticket_delivery td
        join t t1 on t1.pno = td.pno
        left join ph_staging.ticket_delivery_marker tdm on tdm.delivery_id = td.id
        group by 1
    ) td on td.pno = t1.pno
group by t1.pno;
;-- -. . -..- - / . -. - .-. -.--
with a as
(
    select
        coalesce(a.client_name, '总计') client_name
        ,coalesce(a.疑难件原因, '总计') 疑难件原因
        ,a.`0-2小时`
        ,a.`2-4小时`
        ,a.`4-6小时`
        ,a.`6小时以上`
        ,a.总疑难件量
        ,a.继续配送
        ,a.退货
        ,a.平均处理时长_h
    from
        (
            select
                bc.client_name
                ,tdt2.cn_element 疑难件原因
                ,count(if(cdt.negotiation_result_category = 5, di.id, null)) 继续配送
                ,count(if(cdt.negotiation_result_category = 3, di.id, null)) 退货
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 2, di.id, null)) '0-2小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 2 and timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 4 , di.id, null)) '2-4小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 4 and timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 6, di.id, null )) '4-6小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 6 , di.id, null )) '6小时以上'
                ,sum(if(cdt.operator_id not in (10000,10001,100002), timestampdiff(second , cdt.created_at, cdt.updated_at)/3600, null))/count(if(cdt.operator_id not in (10000,10001,100002), di.id, null)) 平均处理时长_h
                ,count(di.id) 总疑难件量
            from ph_staging.diff_info di
            left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
            left join ph_staging.store_diff_ticket sdt on sdt.diff_info_id = di.id
            left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
            left join ph_staging.parcel_info pi on pi.pno = di.pno
            join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
            where
                di.updated_at >= date_sub('2023-07-01', interval 8 hour )
                and di.updated_at < date_add('2023-07-01', interval 16 hour ) -- 今日处理
                and cdt.state = 1 -- 已处理
                and di.diff_marker_category in (23,73,29,78,25,75,31,79)
            group by 1,2
            with rollup
        ) a
    order by 1,2
)
# b as
# (
#         select
#         coalesce(a.client_name, '总计') client_name
#         ,coalesce(a.疑难件原因, '总计') 疑难件原因
#         ,a.当日20点后
#         ,a.积压时间0day
#         ,a.积压1天及以上
#     from
#         (
#                 select
#                 coalesce(bc.client_name, '总计') client_name
#                 ,coalesce(tdt2.cn_element, '总计') 疑难件原因
#                 ,count(if(cdt.created_at >= date_add('${date1}', interval 12 hour), di.id, null)) 当日20点后
#                 ,count(if(cdt.created_at < date_add('${date1}', interval 12 hour ) and di.created_at >= date_sub('${date1}', interval 8 hour ), di.id, null)) '积压时间0day'
#                 ,count(if(cdt.created_at < date_sub('${date1}', interval 8 hour ), di.id, null)) '积压1天及以上'
#             from ph_staging.diff_info di
#             left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
#             left join ph_staging.store_diff_ticket sdt2 on sdt2.diff_info_id = di.id
#             left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
#             left join ph_staging.parcel_info pi on pi.pno = di.pno
#             join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
#             where
#                 di.diff_marker_category in (23,73,29,78,25,75,31,79)
#                 and
#                 (
#                     (sdt2.state in (0,1) and di.created_at < date_add('${date1}', interval  16 hour) )
#                     or (sdt2.state = 2 and di.created_at < date_add('${date1}', interval  16 hour) and di.updated_at >= date_add('${date1}', interval  16 hour))
#                 )
#             group by 1,2
#             with rollup
#         ) a
#     order by 1,2
# )
, b as
(
    select
        coalesce(a2.client_name, '总计') client_name
        ,coalesce(a2.CN_element, '总计') 疑难件原因
        ,a2.`20-9单量`
        ,a2.`前日20-今日9点处理完成量`
        ,a2.`20-9点11点处理完成量`
        ,a2.`9-20单量`
        ,a2.`9-20已处理单量`
        ,a2.`9-20已处理2小时内量`
    from
        (
           select
                bc.client_name
                ,tdt2.CN_element
                ,count(if(di.created_at >= date_sub('2023-07-01', interval 12 hour) and di.created_at < date_add('2023-07-01', interval  1 hour), di.id, null)) '20-9单量'
                ,count(if(di.created_at >= date_sub('2023-07-01', interval 12 hour) and di.created_at < date_add('2023-07-01', interval  1 hour) and cdt.state = 1 , di.id, null)) '前日20-今日9点处理完成量'
                ,count(if(di.created_at >= date_sub('2023-07-01', interval 12 hour) and di.created_at < date_add('2023-07-01', interval  1 hour) and cdt.state = 1 and di.updated_at < date_add('2023-07-01', interval  3 hour ) , di.id, null)) '20-9点11点处理完成量'
                ,count(if(di.created_at >= date_add('2023-07-01', interval  1 hour) and di.created_at < date_add('2023-07-01', interval 12 hour), di.id, null)) '9-20单量'
                ,count(if(di.created_at >= date_add('2023-07-01', interval  1 hour) and di.created_at < date_add('2023-07-01', interval 12 hour) and cdt.state = 1 , di.id, null)) '9-20已处理单量'
                ,count(if(di.created_at >= date_add('2023-07-01', interval  1 hour) and di.created_at < date_add('2023-07-01', interval 12 hour) and cdt.state = 1 and di.updated_at < date_add(di.created_at, interval  2 hour ), di.id, null)) '9-20已处理2小时内量'
            from ph_staging.diff_info di
            join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
            left join ph_staging.store_diff_ticket sdt2 on sdt2.diff_info_id = di.id
            left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
            left join ph_staging.parcel_info pi on pi.pno = di.pno
            join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
            where
                di.diff_marker_category in (23,73,29,78,25,75,31,79)
                and di.created_at >= date_sub('2023-07-01', interval 12 hour)
                and di.created_at < date_add('2023-07-01', interval 12 hour )
            group by 1,2
            with rollup
        ) a2
)
select
    t1.client_name
    ,t1.疑难件原因
    ,a1.`0-2小时`
    ,a1.`2-4小时`
    ,a1.`4-6小时`
    ,a1.`6小时以上`
    ,a1.继续配送
    ,a1.退货
    ,a1.平均处理时长_h
    ,a1.总疑难件量
    ,b1.`20-9单量`
    ,b1.`前日20-今日9点处理完成量`
    ,b1.`20-9点11点处理完成量`
    ,b1.`9-20单量`
    ,b1.`9-20已处理单量`
    ,b1.`9-20已处理2小时内量`
from
    (
        select
            t1.疑难件原因
            ,t1.client_name
        from
            (
                select
                    a.client_name
                    ,a.疑难件原因
                from a

                union

                select
                    b.client_name
                    ,b.疑难件原因
                from b
            ) t1
        group by 1,2
    ) t1
left join a a1 on t1.client_name = a1.client_name and t1.疑难件原因 = a1.疑难件原因
left join b b1 on t1.client_name = b1.client_name and t1.疑难件原因 = b1.疑难件原因
order by t1.client_name,case t1.疑难件原因
                            when '总计' then 1
                            when '收件人/地址不清晰或不正确' then 1
                            when '收件人电话号码是空号' then 2
                            when '收件人电话号码错误' then 3
                            when '快件分错网点-地址错误' then 4
                        end;
;-- -. . -..- - / . -. - .-. -.--
select
    min(plt.created_at) min_cr
    ,max(plt.created_at) max_cr
    ,min(plt.parcel_created_at) min_pick
    ,max(plt.parcel_created_at) max_pick
from ph_bi.parcel_lose_task plt
where
    plt.state = 6
    and plt.duty_result = 1
    and plt.updated_at >= '2023-05-01'
    and plt.updated_at < '2023-06-01';
;-- -. . -..- - / . -. - .-. -.--
select

    date(plt.parcel_created_at) max_pick
from ph_bi.parcel_lose_task plt
where
    plt.state = 6
    and plt.duty_result = 1
    and plt.updated_at >= '2023-05-01'
    and plt.updated_at < '2023-06-01'
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select

    date(plt.parcel_created_at) max_pick
    ,count(plt.pno)
from ph_bi.parcel_lose_task plt
where
    plt.state = 6
    and plt.duty_result = 1
    and plt.updated_at >= '2023-05-01'
    and plt.updated_at < '2023-06-01'
    and date(plt.parcel_created_at) is null
group by 1;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        plt.pno
    from ph_bi.parcel_lose_task plt
    where
        plt.state = 6
        and plt.duty_result = 1
        and plt.updated_at >= '2023-05-01'
        and plt.updated_at < '2023-06-01'
    group by 1
)
select
    count(`if`(inv.inv_num = 1, inv.pno, null)) `盘库1次`
    ,count(`if`(inv.inv_num = 2, inv.pno, null)) `盘库2次`
    ,count(`if`(inv.inv_num = 3, inv.pno, null)) `盘库3次`
    ,count(`if`(inv.inv_num = 4, inv.pno, null)) `盘库4次`
    ,count(`if`(inv.inv_num = 5, inv.pno, null)) `盘库5次`
    ,count(`if`(inv.inv_num = 6, inv.pno, null)) `盘库6次`
    ,c;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        plt.pno
    from ph_bi.parcel_lose_task plt
    where
        plt.state = 6
        and plt.duty_result = 1
        and plt.updated_at >= '2023-05-01'
        and plt.updated_at < '2023-06-01'
    group by 1
)
select
    count(if(inv.inv_num = 1, inv.pno, null)) `盘库1次`
    ,count(if(inv.inv_num = 2, inv.pno, null)) `盘库2次`
    ,count(if(inv.inv_num = 3, inv.pno, null)) `盘库3次`
    ,count(if(inv.inv_num = 4, inv.pno, null)) `盘库4次`
    ,count(if(inv.inv_num = 5, inv.pno, null)) `盘库5次`
    ,count(if(inv.inv_num = 6, inv.pno, null)) `盘库6次`
    ,count(if(inv.inv_num >= 7, inv.pno, null)) `盘库7次以上`
from t t1
left join
    (
        select
            pr.pno
            ,count(pr.id) inv_num
        from ph_staging.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'INVENTORY'
        group by 1
    ) inv on inv.pno = t1.pno;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        plt.pno
    from ph_bi.parcel_lose_task plt
    where
        plt.state = 6
        and plt.duty_result = 1
        and plt.updated_at >= '2023-05-01'
        and plt.updated_at < '2023-06-01'
    group by 1
)
select
    count(if(inv.inv_num = 1, inv.pno, null)) `改约1次`
    ,count(if(inv.inv_num = 2, inv.pno, null)) `改约2次`
    ,count(if(inv.inv_num = 3, inv.pno, null)) `改约3次`
    ,count(if(inv.inv_num = 4, inv.pno, null)) `改约4次`
    ,count(if(inv.inv_num = 5, inv.pno, null)) `改约5次`
    ,count(if(inv.inv_num = 6, inv.pno, null)) `改约6次`
    ,count(if(inv.inv_num >= 7, inv.pno, null)) `改约7次以上`
from t t1
left join
    (
        select
            pr.pno
            ,count(pr.id) inv_num
        from ph_staging.parcel_route pr
        join t t1 on t1.pno = pr.pno
        where
            pr.route_action = 'DELIVERY_MARKER'
            and pr.marker_category in (9,14,70)
        group by 1
    ) inv on inv.pno = t1.pno;
;-- -. . -..- - / . -. - .-. -.--
with  t as
(
select
    plt.pno
    ,plt.id
    ,plt.updated_at
    ,plt.state
    ,plt.penalties
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as  ka_type
from ph_bi.parcel_lose_task plt
left join ph_staging.ka_profile kp on plt.client_id = kp.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = plt.client_id
where
    plt.updated_at >= '2023-05-01'
    and plt.updated_at < '2023-06-01'
    and plt.duty_result = 1
    and plt.state = 6
#     and plt.source = 12
)
select
    b.ka_type 客户分类
    ,count(b.id) 5月判责丢失量
    ,count(if(b.24hour = 'y', b.id, null)) 丢失后24H内找回量
    ,count(if(b.24hour = 'n', b.id, null)) 判责丢失后24H后找回量
from
    (
        select
            t2.*
            ,case
                when timestampdiff(second, t2.updated_at, pr.min_prat)/3600 <= 24 then 'y'
                when timestampdiff(second, t2.updated_at, pr.min_prat)/3600 > 24 then 'n'
                else null
            end 24hour
        from t t2
        left join
            (
                select
                    pr.pno
                    ,min(convert_tz(pr.routed_at, '+00:00', '+08:00')) min_prat
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                join dwm.dwd_dim_dict ddd on ddd.element = pr.route_action and ddd.db = 'ph_staging' and ddd.tablename = 'parcel_route' and ddd.fieldname = 'route_action' and ddd.remark = 'valid'
                where
                    pr.routed_at > date_sub(t1.updated_at, interval 8 hour)
                group by 1
            ) pr on pr.pno = t2.pno
    ) b
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select
    plt.pno
    ,plt.id
    ,plt.updated_at
    ,plt.state
    ,plt.penalties
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as  ka_type
from ph_bi.parcel_lose_task plt
left join ph_staging.ka_profile kp on plt.client_id = kp.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = plt.client_id
where
    plt.updated_at >= '2023-05-01'
    and plt.updated_at < '2023-06-01'
    and plt.duty_result = 1
    and plt.state = 6;
;-- -. . -..- - / . -. - .-. -.--
with  t as
(
select
    plt.pno
    ,plt.id
    ,plt.updated_at
    ,plt.state
    ,plt.penalties
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as  ka_type
from ph_bi.parcel_lose_task plt
left join ph_staging.ka_profile kp on plt.client_id = kp.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = plt.client_id
where
    plt.updated_at >= '2023-05-01'
    and plt.updated_at < '2023-06-01'
    and plt.duty_result = 1
    and plt.state = 6
#     and plt.source = 12
)
# select
#     b.ka_type 客户分类
#     ,count(b.id) 5月判责丢失量
#     ,count(if(b.24hour = 'y', b.id, null)) 丢失后24H内找回量
#     ,count(if(b.24hour = 'n', b.id, null)) 判责丢失后24H后找回量
# from
#     (
#         select
#             t2.*
#             ,case
#                 when timestampdiff(second, t2.updated_at, pr.min_prat)/3600 <= 24 then 'y'
#                 when timestampdiff(second, t2.updated_at, pr.min_prat)/3600 > 24 then 'n'
#                 else null
#             end 24hour
#         from t t2
#         left join
#             (
                select
                    pr.pno
                    ,min(convert_tz(pr.routed_at, '+00:00', '+08:00')) min_prat
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                join dwm.dwd_dim_dict ddd on ddd.element = pr.route_action and ddd.db = 'ph_staging' and ddd.tablename = 'parcel_route' and ddd.fieldname = 'route_action' and ddd.remark = 'valid'
                where
                    pr.routed_at > date_sub(t1.updated_at, interval 8 hour)
                group by 1;
;-- -. . -..- - / . -. - .-. -.--
with  t as
(
select
    plt.pno
    ,plt.id
    ,plt.updated_at
    ,plt.state
    ,plt.penalties
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as  ka_type
from ph_bi.parcel_lose_task plt
left join ph_staging.ka_profile kp on plt.client_id = kp.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = plt.client_id
where
    plt.updated_at >= '2023-05-01'
    and plt.updated_at < '2023-06-01'
    and plt.duty_result = 1
    and plt.state = 6
#     and plt.source = 12
)
select
    b.ka_type 客户分类
    ,count(b.id) 5月判责丢失量
    ,count(if(b.24hour = 'y', b.id, null)) 丢失后24H内找回量
    ,count(if(b.24hour = 'n', b.id, null)) 判责丢失后24H后找回量
from
    (
        select
            t2.*
            ,case
                when timestampdiff(second, t2.updated_at, pr.min_prat)/3600 <= 24 then 'y'
                when timestampdiff(second, t2.updated_at, pr.min_prat)/3600 > 24 then 'n'
                else null
            end 24hour
        from t t2
        left join
            (
                select
                    pr.pno
                    ,min(convert_tz(pr.routed_at, '+00:00', '+08:00')) min_prat
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                join dwm.dwd_dim_dict ddd on ddd.element = pr.route_action and ddd.db = 'ph_staging' and ddd.tablename = 'parcel_route' and ddd.fieldname = 'route_action' and ddd.remark = 'valid'
                where
                    pr.routed_at > date_sub(t1.updated_at, interval 8 hour)
                    and pr.routed_at > '2023-04-30 16:00:00'
                group by 1
            ) pr on pr.pno = t2.pno
    ) b
group by 1;
;-- -. . -..- - / . -. - .-. -.--
select time(now());
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
    from ph_bi.dc_should_delivery_today ds
    where
     ds.stat_date = date_sub(curdate(), interval 1 day)
)
select
    a.store_id
    ,dp.store_name
    ,dp.region_name
    ,dp.piece_name
    ,a.应交接
    ,a.已交接
    ,a.交接率
    ,a.A_rate
    ,a.B_rate
    ,a.C_rate
    ,a.D_rate
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), if(a.a_check is null  and a.d_check is null and a.b_check is null, 'C', '')) 交接评级
from
    (
        select
            t1.store_id
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) D_rate
            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.3, 'D', null ) d_check
        from t t1
        left join
            (
                select
                    pr.pno
                    ,pr.store_id
                    ,pr.store_name
                    ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                    ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                    and pr.routed_at >= date_sub(curdate(), interval 32 hour)
                    and pr.routed_at < date_sub(curdate(), interval 8 hour )
            ) sc on sc.store_id = t1.store_id and sc.pno = t1.pno
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day);
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
    from ph_bi.dc_should_delivery_today ds
    where
     ds.stat_date = date_sub(curdate(), interval 1 day)
)
select
    a.store_id
    ,dp.store_name
    ,dp.region_name
    ,dp.piece_name
    ,a.应交接
    ,a.已交接
    ,a.交接率
    ,a.A_rate
    ,a.B_rate
    ,a.C_rate
    ,a.D_rate
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), if(a.a_check is null  and a.d_check is null and a.b_check is null, 'C', '')) 交接评级
from
    (
        select
            t1.store_id
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) D_rate
            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.3, 'D', null ) d_check
        from t t1
        left join
            (
                select
                    pr.pno
                    ,pr.store_id
                    ,pr.store_name
                    ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                    ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                    and pr.routed_at >= date_sub(curdate(), interval 32 hour)
                    and pr.routed_at < date_sub(curdate(), interval 8 hour )
            ) sc on sc.store_id = t1.store_id and sc.pno = t1.pno and sc.rk = 1
        group by 1
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day);
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
    from ph_bi.dc_should_delivery_today ds
    where
     ds.stat_date = date_sub(curdate(), interval 1 day)
)
select
    a.store_id
    ,dp.store_name
    ,dp.region_name
    ,dp.piece_name
    ,a.应交接
    ,a.已交接
    ,a.交接率
    ,a.A_rate
    ,a.B_rate
    ,a.C_rate
    ,a.D_rate
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), if(a.a_check is null  and a.d_check is null and a.b_check is null, 'C', '')) 交接评级
from
    (
        select
            t1.store_id
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) D_rate
            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
        from t t1
        left join
            (
                select
                    pr.pno
                    ,pr.store_id
                    ,pr.store_name
                    ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                    ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                    and pr.routed_at >= date_sub(curdate(), interval 32 hour)
                    and pr.routed_at < date_sub(curdate(), interval 8 hour )
            ) sc on sc.store_id = t1.store_id and sc.pno = t1.pno and sc.rk = 1
        group by 1
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day);
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
    from ph_bi.dc_should_delivery_today ds
    where
     ds.stat_date = date_sub(curdate(), interval 1 day)
)
select
    a.store_id
    ,dp.store_name
    ,dp.region_name
    ,dp.piece_name
    ,a.应交接
    ,a.已交接
    ,a.交接率
    ,a.A_rate
    ,a.B_rate
    ,a.C_rate
    ,a.D_rate
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), if(a.a_check is null  and a.d_check is null and a.b_check is null, 'C', '')) 交接评级
from
    (
        select
            t1.store_id
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) D_rate
            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
        from t t1
        left join
            (
                select
                    pr.pno
                    ,pr.store_id
                    ,pr.store_name
                    ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                    ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                    and pr.routed_at >= date_sub(curdate(), interval 32 hour)
                    and pr.routed_at < date_sub(curdate(), interval 8 hour )
            ) sc on sc.store_id = t1.store_id and sc.pno = t1.pno and sc.rk = 1
        group by 1
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
where
    dp.store_category = 1;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date = date_sub(curdate(), interval 1 day)
        and ds.store_id = 'PH77050A00'
)
# select
#     a.store_id
#     ,dp.store_name
#     ,dp.region_name
#     ,dp.piece_name
#     ,a.应交接
#     ,a.已交接
#     ,a.交接率
#     ,a.A_rate
#     ,a.B_rate
#     ,a.C_rate
#     ,a.D_rate
#     ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), if(a.a_check is null  and a.d_check is null and a.b_check is null, 'C', '')) 交接评级
# from
#     (
        select
            t1.store_id
            ,sc.route_time 第一次交接时间
#             ,count(t1.pno) 应交接
#             ,count(if(sc.pno is not null , t1.pno, null)) 已交接
#             ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
#             ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) A_rate
#             ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) B_rate
#             ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) C_rate
#             ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) D_rate
#             ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
#             ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98, 'B', null ) b_check
#             ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
        from t t1
        left join
            (
                select
                    pr.pno
                    ,pr.store_id
                    ,pr.store_name
                    ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                    ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                    and pr.routed_at >= date_sub(curdate(), interval 32 hour)
                    and pr.routed_at < date_sub(curdate(), interval 8 hour )
            ) sc on sc.store_id = t1.store_id and sc.pno = t1.pno and sc.rk = 1;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds

    union all

    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_2023_06 ds
)
select
    a.store_id
    ,dp.store_name
    ,dp.region_name
    ,dp.piece_name
    ,a.应交接
    ,a.已交接
    ,a.交接率
    ,a.A_rate
    ,a.B_rate
    ,a.C_rate
    ,a.D_rate
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), if(a.a_check is null  and a.d_check is null and a.b_check is null, 'C', '')) 交接评级
from
    (
        select
            t1.store_id
#             ,sc.route_time 第一次交接时间
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) D_rate
            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
        from t t1
        left join
            (
                select
                    pr.pno
                    ,pr.store_id
                    ,pr.store_name
                    ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                    ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                    and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                    and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
            ) sc on sc.store_id = t1.store_id and sc.pno = t1.pno and sc.rk = 1
        group by 1
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day);
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds

    union all

    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_2023_06 ds
)
select
    a.stat_date
    ,a.store_id
    ,dp.store_name
    ,dp.region_name
    ,dp.piece_name
    ,a.应交接
    ,a.已交接
    ,a.交接率
    ,a.A_rate
    ,a.B_rate
    ,a.C_rate
    ,a.D_rate
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), if(a.a_check is null  and a.d_check is null and a.b_check is null, 'C', '')) 交接评级
from
    (
        select
            t1.store_id
            ,t1.stat_date
#             ,sc.route_time 第一次交接时间
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) D_rate
            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
        from t t1
        left join
            (
                select
                    pr.pno
                    ,pr.store_id
                    ,pr.store_name
                    ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                    ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                    and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                    and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
            ) sc on sc.store_id = t1.store_id and sc.pno = t1.pno and sc.rk = 1
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day);
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds

    union all

    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_2023_06 ds
)
select
    a.stat_date
    ,a.store_id
    ,dp.store_name
    ,dp.region_name
    ,dp.piece_name
    ,a.应交接
    ,a.已交接
    ,a.交接率
    ,a.A_rate
    ,a.B_rate
    ,a.C_rate
    ,a.D_rate
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), if(a.a_check is null  and a.d_check is null and a.b_check is null, 'C', '')) 交接评级
from
    (
        select
            t1.store_id
            ,t1.stat_date
#             ,sc.route_time 第一次交接时间
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) D_rate
            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
        from t t1
        left join
            (
                select
                    pr.pno
                    ,pr.store_id
                    ,pr.store_name
                    ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                    ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                    and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                    and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
            ) sc on sc.store_id = t1.store_id and sc.pno = t1.pno and sc.rk = 1
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day);
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
     ds.stat_date = date_sub(curdate(), interval 1 day)
#     union all
#
#     select
#          ds.store_id
#         ,ds.pno
#         ,ds.stat_date
#     from ph_bi.dc_should_delivery_2023_06 ds
)
select
    a.stat_date
    ,a.store_id
    ,dp.store_name
    ,dp.region_name
    ,dp.piece_name
    ,a.应交接
    ,a.已交接
    ,a.交接率
    ,a.A_rate
    ,a.B_rate
    ,a.C_rate
    ,a.D_rate
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), if(a.a_check is null  and a.d_check is null and a.b_check is null, 'C', '')) 交接评级
from
    (
        select
            t1.store_id
            ,t1.stat_date
#             ,sc.route_time 第一次交接时间
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) D_rate
            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 and count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) < 0.1, 'E', null ) e_check
        from t t1
        left join
            (
                select
                    pr.pno
                    ,pr.store_id
                    ,pr.store_name
                    ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                    ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                    and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                    and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
            ) sc on sc.store_id = t1.store_id and sc.pno = t1.pno and sc.rk = 1
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day);
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
     ds.stat_date = date_sub(curdate(), interval 1 day)
#     union all
#
#     select
#          ds.store_id
#         ,ds.pno
#         ,ds.stat_date
#     from ph_bi.dc_should_delivery_2023_06 ds
)
select
    a.stat_date
    ,a.store_id
    ,dp.store_name
    ,dp.region_name
    ,dp.piece_name
    ,a.应交接
    ,a.已交接
    ,a.交接率
    ,a.A_rate
    ,a.B_rate
    ,a.C_rate
    ,a.D_rate
    ,a.e_check
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), if(a.a_check is null  and a.d_check is null and a.b_check is null, 'C', '')) 交接评级
from
    (
        select
            t1.store_id
            ,t1.stat_date
#             ,sc.route_time 第一次交接时间
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) D_rate
            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 and count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) < 0.1, 'E', null ) e_check
        from t t1
        left join
            (
                select
                    pr.pno
                    ,pr.store_id
                    ,pr.store_name
                    ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                    ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                    and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                    and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
            ) sc on sc.store_id = t1.store_id and sc.pno = t1.pno and sc.rk = 1
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day);
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
     ds.stat_date = date_sub(curdate(), interval 1 day)
#     union all
#
#     select
#          ds.store_id
#         ,ds.pno
#         ,ds.stat_date
#     from ph_bi.dc_should_delivery_2023_06 ds
)
select
    a.stat_date
    ,a.store_id
    ,dp.store_name
    ,dp.region_name
    ,dp.piece_name
    ,a.应交接
    ,a.已交接
    ,a.交接率
    ,a.A_rate
    ,a.B_rate
    ,a.C_rate
    ,a.D_rate
    ,a.e_check
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null, 'C', '')) 交接评级
from
    (
        select
            t1.store_id
            ,t1.stat_date
#             ,sc.route_time 第一次交接时间
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 and count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) < 0.1, 'E', null ) e_check
        from t t1
        left join
            (
                select
                    pr.pno
                    ,pr.store_id
                    ,pr.store_name
                    ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                    ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                    and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                    and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
            ) sc on sc.store_id = t1.store_id and sc.pno = t1.pno and sc.rk = 1
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day);
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
     ds.stat_date = date_sub(curdate(), interval 1 day)
#     union all
#
#     select
#          ds.store_id
#         ,ds.pno
#         ,ds.stat_date
#     from ph_bi.dc_should_delivery_2023_06 ds
)
select
    a.stat_date
    ,a.store_id
    ,dp.store_name
    ,dp.region_name
    ,dp.piece_name
    ,a.应交接
    ,a.已交接
    ,a.交接率
    ,a.A_rate
    ,a.B_rate
    ,a.C_rate
    ,a.D_rate
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null, 'C', '')) 交接评级
from
    (
        select
            t1.store_id
            ,t1.stat_date
#             ,sc.route_time 第一次交接时间
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 and count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) < 0.1, 'E', null ) e_check
        from t t1
        left join
            (
                select
                    pr.pno
                    ,pr.store_id
                    ,pr.store_name
                    ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                    ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                    and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                    and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
            ) sc on sc.store_id = t1.store_id and sc.pno = t1.pno and sc.rk = 1
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day);
;-- -. . -..- - / . -. - .-. -.--
select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
     ds.stat_date = date_sub(curdate(), interval 1 day)
        and ds.store_id = 'PH47080301';
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
     ds.stat_date = date_sub(curdate(), interval 1 day)
#     union all
#
#     select
#          ds.store_id
#         ,ds.pno
#         ,ds.stat_date
#     from ph_bi.dc_should_delivery_2023_06 ds
)
select
    a.stat_date
    ,a.store_id
    ,dp.store_name
    ,dp.region_name
    ,dp.piece_name
    ,a.应交接
    ,a.已交接
    ,a.交接率
    ,a.A_rate
    ,a.B_rate
    ,a.C_rate
    ,a.D_rate
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null, 'C', '')) 交接评级
from
    (
        select
            t1.store_id
            ,t1.stat_date
#             ,sc.route_time 第一次交接时间
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 and count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) < 0.1, 'E', null ) e_check
        from t t1
        left join
            (
                select
                    pr.pno
                    ,pr.store_id
                    ,pr.store_name
                    ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                    ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                    and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                    and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
            ) sc on sc.pno = t1.pno and sc.rk = 1
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day);
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
     ds.stat_date = curdate()
#     union all
#
#     select
#          ds.store_id
#         ,ds.pno
#         ,ds.stat_date
#     from ph_bi.dc_should_delivery_2023_06 ds
)
select
    a.stat_date
    ,a.store_id
    ,dp.store_name
    ,dp.region_name
    ,dp.piece_name
    ,a.应交接
    ,a.已交接
    ,a.交接率
    ,a.A_rate
    ,a.B_rate
    ,a.C_rate
    ,a.D_rate
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null, 'C', '')) 交接评级
from
    (
        select
            t1.store_id
            ,t1.stat_date
#             ,sc.route_time 第一次交接时间
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 and count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) < 0.1, 'E', null ) e_check
        from t t1
        left join
            (
                select
                    pr.pno
                    ,pr.store_id
                    ,pr.store_name
                    ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                    ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
#                     and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
#                     and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
                    and pr.routed_at >= date_sub(curdate(), interval 8 hour )
            ) sc on sc.pno = t1.pno and sc.rk = 1
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day);
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
     ds.stat_date = curdate()
#     union all
#
#     select
#          ds.store_id
#         ,ds.pno
#         ,ds.stat_date
#     from ph_bi.dc_should_delivery_2023_06 ds
)
select
    a.stat_date 统计日期
    ,a.store_id 网点ID
    ,dp.store_name 网点名称
    ,dp.region_name 大区
    ,dp.piece_name 片区
    ,a.应交接
    ,a.已交接
    ,a.交接率
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null, 'C', '')) 交接评级
    ,a.A_rate 'A（<0930 ）'
    ,a.B_rate 'B（0930<=X<1200）'
    ,a.C_rate 'C（1200<=X<1600 ）'
    ,a.D_rate 'D（>=1600）'
from
    (
        select
            t1.store_id
            ,t1.stat_date
#             ,sc.route_time 第一次交接时间
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 and count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) < 0.1, 'E', null ) e_check
        from t t1
        left join
            (
                select
                    pr.pno
                    ,pr.store_id
                    ,pr.store_name
                    ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                    ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
#                     and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
#                     and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
                    and pr.routed_at >= date_sub(curdate(), interval 8 hour )
            ) sc on sc.pno = t1.pno and sc.rk = 1
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day);
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
     ds.stat_date = curdate()
#     union all
#
#     select
#          ds.store_id
#         ,ds.pno
#         ,ds.stat_date
#     from ph_bi.dc_should_delivery_2023_06 ds
)
select
    now() 统计日期
    ,a.store_id 网点ID
    ,dp.store_name 网点名称
    ,dp.region_name 大区
    ,dp.piece_name 片区
    ,a.应交接
    ,a.已交接
    ,a.交接率
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null, 'C', '')) 交接评级
    ,a.A_rate 'A（<0930 ）'
    ,a.B_rate 'B（0930<=X<1200）'
    ,a.C_rate 'C（1200<=X<1600 ）'
    ,a.D_rate 'D（>=1600）'
from
    (
        select
            t1.store_id
            ,t1.stat_date
#             ,sc.route_time 第一次交接时间
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 and count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) < 0.1, 'E', null ) e_check
        from t t1
        left join
            (
                select
                    pr.pno
                    ,pr.store_id
                    ,pr.store_name
                    ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                    ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
#                     and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
#                     and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
                    and pr.routed_at >= date_sub(curdate(), interval 8 hour )
            ) sc on sc.pno = t1.pno and sc.rk = 1
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
where
    dp.store_category = 1;
;-- -. . -..- - / . -. - .-. -.--
select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
     ds.stat_date = curdate()
    and ds.store_id = 'PH45212600';
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
     ds.stat_date = curdate()
    and ds.store_id = 'PH45212600'
#     union all
#
#     select
#          ds.store_id
#         ,ds.pno
#         ,ds.stat_date
#     from ph_bi.dc_should_delivery_2023_06 ds
)
# select
#     now() 统计日期
#     ,a.store_id 网点ID
#     ,dp.store_name 网点名称
#     ,dp.region_name 大区
#     ,dp.piece_name 片区
#     ,a.应交接
#     ,a.已交接
#     ,a.交接率
#     ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null, 'C', '')) 交接评级
#     ,a.A_rate 'A（<0930 ）'
#     ,a.B_rate 'B（0930<=X<1200）'
#     ,a.C_rate 'C（1200<=X<1600 ）'
#     ,a.D_rate 'D（>=1600）'
# from
#     (
#         select
#             t1.store_id
#             ,t1.stat_date
# #             ,sc.route_time 第一次交接时间
#             ,count(t1.pno) 应交接
#             ,count(if(sc.pno is not null , t1.pno, null)) 已交接
#             ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
#             ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) A_rate
#             ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) B_rate
#             ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) C_rate
#             ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) D_rate
#
#             ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
#             ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
#             ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
#             ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 and count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) < 0.1, 'E', null ) e_check
#         from t t1
#         left join
#             (
select
   t1.*
    ,a.route_time
from t t1
left join
    (
         select
                    pr.pno
                    ,pr.store_id
                    ,pr.store_name
                    ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                    ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
#                     and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
#                     and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
                    and pr.routed_at >= date_sub(curdate(), interval 8 hour )
    ) a on a.pno = t1.pno
where
    a.rk = 1;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
     ds.stat_date = curdate()
    and ds.store_id = 'PH45212600'
#     union all
#
#     select
#          ds.store_id
#         ,ds.pno
#         ,ds.stat_date
#     from ph_bi.dc_should_delivery_2023_06 ds
)
# select
#     now() 统计日期
#     ,a.store_id 网点ID
#     ,dp.store_name 网点名称
#     ,dp.region_name 大区
#     ,dp.piece_name 片区
#     ,a.应交接
#     ,a.已交接
#     ,a.交接率
#     ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null, 'C', '')) 交接评级
#     ,a.A_rate 'A（<0930 ）'
#     ,a.B_rate 'B（0930<=X<1200）'
#     ,a.C_rate 'C（1200<=X<1600 ）'
#     ,a.D_rate 'D（>=1600）'
# from
#     (
#         select
#             t1.store_id
#             ,t1.stat_date
# #             ,sc.route_time 第一次交接时间
#             ,count(t1.pno) 应交接
#             ,count(if(sc.pno is not null , t1.pno, null)) 已交接
#             ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
#             ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) A_rate
#             ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) B_rate
#             ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) C_rate
#             ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) D_rate
#
#             ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
#             ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
#             ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
#             ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 and count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) < 0.1, 'E', null ) e_check
#         from t t1
#         left join
#             (
select
   t1.*
    ,a.route_time
from t t1
left join
    (
         select
                    pr.pno
                    ,pr.store_id
                    ,pr.store_name
                    ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                    ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
#                     and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
#                     and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
                    and pr.routed_at >= date_sub(curdate(), interval 8 hour )
    ) a on a.pno = t1.pno and a.rk = 1;
;-- -. . -..- - / . -. - .-. -.--
with a as
(
    select
        coalesce(a.client_name, '总计') client_name
        ,coalesce(a.疑难件原因, '总计') 疑难件原因
        ,a.`0-2小时`
        ,a.`2-4小时`
        ,a.`4-6小时`
        ,a.`6小时以上`
        ,a.总疑难件量
        ,a.继续配送
        ,a.退货
        ,a.平均处理时长_h
    from
        (
            select
                bc.client_name
                ,case di.diff_marker_category # 疑难原因
                    when 1 then '客户不在家/电话无人接听'
                    when 2 then '收件人拒收'
                    when 3 then '快件分错网点'
                    when 4 then '外包装破损'
                    when 5 then '货物破损'
                    when 6 then '货物短少'
                    when 7 then '货物丢失'
                    when 8 then '电话联系不上'
                    when 9 then '客户改约时间'
                    when 10 then '客户不在'
                    when 11 then '客户取消任务'
                    when 12 then '无人签收'
                    when 13 then '客户周末或假期不收货'
                    when 14 then '客户改约时间'
                    when 15 then '当日运力不足，无法派送'
                    when 16 then '联系不上收件人'
                    when 17 then '收件人拒收'
                    when 18 then '快件分错网点'
                    when 19 then '外包装破损'
                    when 20 then '货物破损'
                    when 21 then '货物短少'
                    when 22 then '货物丢失'
                    when 23 then '详细地址错误'
                    when 24 then '收件地址已废弃或不存在'
                    when 25 then '收件人电话号码错误'
                    when 26 then 'cod金额不正确'
                    when 27 then '无实际包裹'
                    when 28 then '已妥投未交接'
                    when 29 then '收件人电话号码是空号'
                    when 30 then '送错网点'
                    when 31 then '省市乡邮编错误'
                    when 32 then '禁运品'
                    when 33 then '严重破损（丢弃）'
                    when 34 then '退件两次尝试派送失败'
                    when 35 then '不能打开locker'
                    when 36 then 'locker不能使用'
                    when 37 then '该地址找不到lockerstation'
                    when 38 then '一票多件'
                    when 39 then '多次尝试派件失败'
                    when 40 then '客户不在家/电话无人接听'
                    when 41 then '错过班车时间'
                    when 42 then '目的地是偏远地区,留仓待次日派送'
                    when 43 then '目的地是岛屿,留仓待次日派送'
                    when 44 then '企业/机构当天已下班'
                    when 45 then '子母件包裹未全部到达网点'
                    when 46 then '不可抗力原因留仓(台风)'
                    when 47 then '虚假包裹'
                    when 50 then '客户取消寄件'
                    when 51 then '信息录入错误'
                    when 52 then '客户取消寄件'
                    when 53 then 'lazada仓库拒收'
                    when 69 then '禁运品'
                    when 70 then '客户改约时间'
                    when 71 then '当日运力不足，无法派送'
                    when 72 then '客户周末或假期不收货'
                    when 73 then '详细地址错误'
                    when 74 then '收件地址已废弃或不存在'
                    when 75 then '收件人电话号码错误'
                    when 76 then 'cod金额不正确'
                    when 77 then '企业/机构当天已下班'
                    when 78 then '收件人电话号码是空号'
                    when 79 then '快件分错网点-地址错误'
                    when 80 then '客户取消任务'
                    when 81 then '重复下单'
                    when 82 then '已完成揽件'
                    when 83 then '联系不上客户'
                    when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
                    when 85 then '寄件人电话号码是空号'
                    when 86 then '包裹不符合揽收条件超大件'
                    when 87 then '包裹不符合揽收条件违禁品'
                    when 88 then '寄件人地址为岛屿'
                    when 89 then '运力短缺，跟客户协商推迟揽收'
                    when 90 then '包裹未准备好推迟揽收'
                    when 91 then '包裹包装不符合运输标准'
                    when 92 then '客户提供的清单里没有此包裹'
                    when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
                    when 94 then '客户取消寄件/客户实际不想寄此包裹'
                    when 95 then '车辆/人力短缺推迟揽收'
                    when 96 then '遗漏揽收(已停用)'
                    when 97 then '子母件(一个单号多个包裹)'
                    when 98 then '地址错误addresserror'
                    when 99 then '包裹不符合揽收条件：超大件'
                    when 100 then '包裹不符合揽收条件：违禁品'
                    when 101 then '包裹包装不符合运输标准'
                    when 102 then '包裹未准备好'
                    when 103 then '运力短缺，跟客户协商推迟揽收'
                    when 104 then '子母件(一个单号多个包裹)'
                    when 105 then '破损包裹'
                    when 106 then '空包裹'
                    when 107 then '不能打开locker(密码错误)'
                    when 108 then 'locker不能使用'
                    when 109 then 'locker找不到'
                    when 110 then '运单号与实际包裹的单号不一致'
                    when 111 then 'box客户取消任务'
                    when 112 then '不能打开locker(密码错误)'
                    when 113 then 'locker不能使用'
                    when 114 then 'locker找不到'
                    when 115 then '实际重量尺寸大于客户下单的重量尺寸'
                    when 116 then '客户仓库关闭'
                    when 117 then '客户仓库关闭'
                    when 118 then 'SHOPEE订单系统自动关闭'
                    when 119 then '客户取消包裹'
                    when 121 then '地址错误'
                    when 122 then '当日运力不足，无法揽收'
                end as 疑难件原因
                ,count(if(cdt.negotiation_result_category = 5, di.id, null)) 继续配送
                ,count(if(cdt.negotiation_result_category = 3, di.id, null)) 退货
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 2, di.id, null)) '0-2小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 2 and timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 4 , di.id, null)) '2-4小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 4 and timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 6, di.id, null )) '4-6小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 6 , di.id, null )) '6小时以上'
                ,sum(if(cdt.operator_id not in (10000,10001,100002), timestampdiff(second , cdt.created_at, cdt.updated_at)/3600, null))/count(if(cdt.operator_id not in (10000,10001,100002), di.id, null)) 平均处理时长_h
                ,count(di.id) 总疑难件量
            from ph_staging.diff_info di
            left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
            left join ph_staging.store_diff_ticket sdt on sdt.diff_info_id = di.id
#             left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
            left join ph_staging.parcel_info pi on pi.pno = di.pno
            join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
            where
                di.updated_at >= date_sub('2023-07-03', interval 8 hour )
                and di.updated_at < date_add('2023-07-03', interval 16 hour ) -- 今日处理
                and cdt.state = 1 -- 已处理
                and di.diff_marker_category in (23,73,29,78,25,75,31,79)
            group by 1,2
            with rollup
        ) a
    order by 1,2
)
# b as
# (
#         select
#         coalesce(a.client_name, '总计') client_name
#         ,coalesce(a.疑难件原因, '总计') 疑难件原因
#         ,a.当日20点后
#         ,a.积压时间0day
#         ,a.积压1天及以上
#     from
#         (
#                 select
#                 coalesce(bc.client_name, '总计') client_name
#                 ,coalesce(tdt2.cn_element, '总计') 疑难件原因
#                 ,count(if(cdt.created_at >= date_add('${date1}', interval 12 hour), di.id, null)) 当日20点后
#                 ,count(if(cdt.created_at < date_add('${date1}', interval 12 hour ) and di.created_at >= date_sub('${date1}', interval 8 hour ), di.id, null)) '积压时间0day'
#                 ,count(if(cdt.created_at < date_sub('${date1}', interval 8 hour ), di.id, null)) '积压1天及以上'
#             from ph_staging.diff_info di
#             left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
#             left join ph_staging.store_diff_ticket sdt2 on sdt2.diff_info_id = di.id
#             left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
#             left join ph_staging.parcel_info pi on pi.pno = di.pno
#             join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
#             where
#                 di.diff_marker_category in (23,73,29,78,25,75,31,79)
#                 and
#                 (
#                     (sdt2.state in (0,1) and di.created_at < date_add('${date1}', interval  16 hour) )
#                     or (sdt2.state = 2 and di.created_at < date_add('${date1}', interval  16 hour) and di.updated_at >= date_add('${date1}', interval  16 hour))
#                 )
#             group by 1,2
#             with rollup
#         ) a
#     order by 1,2
# )
, b as
(
    select
        coalesce(a2.client_name, '总计') client_name
        ,coalesce(a2.CN_element, '总计') 疑难件原因
        ,a2.`20-9单量`
        ,a2.`前日20-今日9点处理完成量`
        ,a2.`20-9点11点处理完成量`
        ,a2.`9-20单量`
        ,a2.`9-20已处理单量`
        ,a2.`9-20已处理2小时内量`
    from
        (
           select
                bc.client_name
                ,tdt2.CN_element
                ,count(if(di.created_at >= date_sub('2023-07-03', interval 12 hour) and di.created_at < date_add('2023-07-03', interval  1 hour), di.id, null)) '20-9单量'
                ,count(if(di.created_at >= date_sub('2023-07-03', interval 12 hour) and di.created_at < date_add('2023-07-03', interval  1 hour) and cdt.state = 1 , di.id, null)) '前日20-今日9点处理完成量'
                ,count(if(di.created_at >= date_sub('2023-07-03', interval 12 hour) and di.created_at < date_add('2023-07-03', interval  1 hour) and cdt.state = 1 and cdt.updated_at < date_add('2023-07-03', interval  3 hour ) , di.id, null)) '20-9点11点处理完成量'
                ,count(if(di.created_at >= date_add('2023-07-03', interval  1 hour) and di.created_at < date_add('2023-07-03', interval 12 hour), di.id, null)) '9-20单量'
                ,count(if(di.created_at >= date_add('2023-07-03', interval  1 hour) and di.created_at < date_add('2023-07-03', interval 12 hour) and cdt.state = 1 , di.id, null)) '9-20已处理单量'
                ,count(if(di.created_at >= date_add('2023-07-03', interval  1 hour) and di.created_at < date_add('2023-07-03', interval 12 hour) and cdt.state = 1 and cdt.updated_at < date_add(di.created_at, interval  2 hour ), di.id, null)) '9-20已处理2小时内量'
            from ph_staging.diff_info di
            join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
            left join ph_staging.store_diff_ticket sdt2 on sdt2.diff_info_id = di.id
            left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
            left join ph_staging.parcel_info pi on pi.pno = di.pno
            join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
            where
                di.diff_marker_category in (23,73,29,78,25,75,31,79)
                and di.created_at >= date_sub('2023-07-03', interval 12 hour)
                and di.created_at < date_add('2023-07-03', interval 12 hour )
            group by 1,2
            with rollup
        ) a2
)
select
    t1.client_name
    ,t1.疑难件原因
    ,a1.`0-2小时`
    ,a1.`2-4小时`
    ,a1.`4-6小时`
    ,a1.`6小时以上`
    ,a1.继续配送
    ,a1.退货
    ,a1.平均处理时长_h
    ,a1.总疑难件量
    ,b1.`20-9单量`
    ,b1.`前日20-今日9点处理完成量`
    ,b1.`20-9点11点处理完成量`
    ,b1.`9-20单量`
    ,b1.`9-20已处理单量`
    ,b1.`9-20已处理2小时内量`
from
    (
        select
            t1.疑难件原因
            ,t1.client_name
        from
            (
                select
                    a.client_name
                    ,a.疑难件原因
                from a

                union

                select
                    b.client_name
                    ,b.疑难件原因
                from b
            ) t1
        group by 1,2
    ) t1
left join a a1 on t1.client_name = a1.client_name and t1.疑难件原因 = a1.疑难件原因
left join b b1 on t1.client_name = b1.client_name and t1.疑难件原因 = b1.疑难件原因
order by t1.client_name,case t1.疑难件原因
                            when '总计' then 1
                            when '详细地址错误' then 1
                            when '收件人电话号码是空号' then 2
                            when '收件人电话号码错误' then 3
                            when '省市乡邮编错误' then 4
                        end;
;-- -. . -..- - / . -. - .-. -.--
with a as
(
    select
        coalesce(a.client_name, '总计') client_name
        ,coalesce(a.疑难件原因, '总计') 疑难件原因
        ,a.`0-2小时`
        ,a.`2-4小时`
        ,a.`4-6小时`
        ,a.`6小时以上`
        ,a.总疑难件量
        ,a.继续配送
        ,a.退货
        ,a.平均处理时长_h
    from
        (
            select
                bc.client_name
                ,case di.diff_marker_category # 疑难原因
                    when 1 then '客户不在家/电话无人接听'
                    when 2 then '收件人拒收'
                    when 3 then '快件分错网点'
                    when 4 then '外包装破损'
                    when 5 then '货物破损'
                    when 6 then '货物短少'
                    when 7 then '货物丢失'
                    when 8 then '电话联系不上'
                    when 9 then '客户改约时间'
                    when 10 then '客户不在'
                    when 11 then '客户取消任务'
                    when 12 then '无人签收'
                    when 13 then '客户周末或假期不收货'
                    when 14 then '客户改约时间'
                    when 15 then '当日运力不足，无法派送'
                    when 16 then '联系不上收件人'
                    when 17 then '收件人拒收'
                    when 18 then '快件分错网点'
                    when 19 then '外包装破损'
                    when 20 then '货物破损'
                    when 21 then '货物短少'
                    when 22 then '货物丢失'
                    when 23 then '详细地址错误'
                    when 24 then '收件地址已废弃或不存在'
                    when 25 then '收件人电话号码错误'
                    when 26 then 'cod金额不正确'
                    when 27 then '无实际包裹'
                    when 28 then '已妥投未交接'
                    when 29 then '收件人电话号码是空号'
                    when 30 then '送错网点'
                    when 31 then '省市乡邮编错误'
                    when 32 then '禁运品'
                    when 33 then '严重破损（丢弃）'
                    when 34 then '退件两次尝试派送失败'
                    when 35 then '不能打开locker'
                    when 36 then 'locker不能使用'
                    when 37 then '该地址找不到lockerstation'
                    when 38 then '一票多件'
                    when 39 then '多次尝试派件失败'
                    when 40 then '客户不在家/电话无人接听'
                    when 41 then '错过班车时间'
                    when 42 then '目的地是偏远地区,留仓待次日派送'
                    when 43 then '目的地是岛屿,留仓待次日派送'
                    when 44 then '企业/机构当天已下班'
                    when 45 then '子母件包裹未全部到达网点'
                    when 46 then '不可抗力原因留仓(台风)'
                    when 47 then '虚假包裹'
                    when 50 then '客户取消寄件'
                    when 51 then '信息录入错误'
                    when 52 then '客户取消寄件'
                    when 53 then 'lazada仓库拒收'
                    when 69 then '禁运品'
                    when 70 then '客户改约时间'
                    when 71 then '当日运力不足，无法派送'
                    when 72 then '客户周末或假期不收货'
                    when 73 then '详细地址错误'
                    when 74 then '收件地址已废弃或不存在'
                    when 75 then '收件人电话号码错误'
                    when 76 then 'cod金额不正确'
                    when 77 then '企业/机构当天已下班'
                    when 78 then '收件人电话号码是空号'
                    when 79 then '快件分错网点-地址错误'
                    when 80 then '客户取消任务'
                    when 81 then '重复下单'
                    when 82 then '已完成揽件'
                    when 83 then '联系不上客户'
                    when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
                    when 85 then '寄件人电话号码是空号'
                    when 86 then '包裹不符合揽收条件超大件'
                    when 87 then '包裹不符合揽收条件违禁品'
                    when 88 then '寄件人地址为岛屿'
                    when 89 then '运力短缺，跟客户协商推迟揽收'
                    when 90 then '包裹未准备好推迟揽收'
                    when 91 then '包裹包装不符合运输标准'
                    when 92 then '客户提供的清单里没有此包裹'
                    when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
                    when 94 then '客户取消寄件/客户实际不想寄此包裹'
                    when 95 then '车辆/人力短缺推迟揽收'
                    when 96 then '遗漏揽收(已停用)'
                    when 97 then '子母件(一个单号多个包裹)'
                    when 98 then '地址错误addresserror'
                    when 99 then '包裹不符合揽收条件：超大件'
                    when 100 then '包裹不符合揽收条件：违禁品'
                    when 101 then '包裹包装不符合运输标准'
                    when 102 then '包裹未准备好'
                    when 103 then '运力短缺，跟客户协商推迟揽收'
                    when 104 then '子母件(一个单号多个包裹)'
                    when 105 then '破损包裹'
                    when 106 then '空包裹'
                    when 107 then '不能打开locker(密码错误)'
                    when 108 then 'locker不能使用'
                    when 109 then 'locker找不到'
                    when 110 then '运单号与实际包裹的单号不一致'
                    when 111 then 'box客户取消任务'
                    when 112 then '不能打开locker(密码错误)'
                    when 113 then 'locker不能使用'
                    when 114 then 'locker找不到'
                    when 115 then '实际重量尺寸大于客户下单的重量尺寸'
                    when 116 then '客户仓库关闭'
                    when 117 then '客户仓库关闭'
                    when 118 then 'SHOPEE订单系统自动关闭'
                    when 119 then '客户取消包裹'
                    when 121 then '地址错误'
                    when 122 then '当日运力不足，无法揽收'
                end as 疑难件原因
                ,count(if(cdt.negotiation_result_category = 5, di.id, null)) 继续配送
                ,count(if(cdt.negotiation_result_category = 3, di.id, null)) 退货
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 2, di.id, null)) '0-2小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 2 and timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 4 , di.id, null)) '2-4小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 4 and timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 6, di.id, null )) '4-6小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 6 , di.id, null )) '6小时以上'
                ,sum(if(cdt.operator_id not in (10000,10001,100002), timestampdiff(second , cdt.created_at, cdt.updated_at)/3600, null))/count(if(cdt.operator_id not in (10000,10001,100002), di.id, null)) 平均处理时长_h
                ,count(di.id) 总疑难件量
            from ph_staging.diff_info di
            left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
            left join ph_staging.store_diff_ticket sdt on sdt.diff_info_id = di.id
#             left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
            left join ph_staging.parcel_info pi on pi.pno = di.pno
            join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
            where
                di.updated_at >= date_sub('2023-07-03', interval 8 hour )
                and di.updated_at < date_add('2023-07-03', interval 16 hour ) -- 今日处理
                and cdt.state = 1 -- 已处理
                and di.diff_marker_category in (23,73,29,78,25,75,31,79)
            group by 1,2
            with rollup
        ) a
    order by 1,2
)
# b as
# (
#         select
#         coalesce(a.client_name, '总计') client_name
#         ,coalesce(a.疑难件原因, '总计') 疑难件原因
#         ,a.当日20点后
#         ,a.积压时间0day
#         ,a.积压1天及以上
#     from
#         (
#                 select
#                 coalesce(bc.client_name, '总计') client_name
#                 ,coalesce(tdt2.cn_element, '总计') 疑难件原因
#                 ,count(if(cdt.created_at >= date_add('${date1}', interval 12 hour), di.id, null)) 当日20点后
#                 ,count(if(cdt.created_at < date_add('${date1}', interval 12 hour ) and di.created_at >= date_sub('${date1}', interval 8 hour ), di.id, null)) '积压时间0day'
#                 ,count(if(cdt.created_at < date_sub('${date1}', interval 8 hour ), di.id, null)) '积压1天及以上'
#             from ph_staging.diff_info di
#             left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
#             left join ph_staging.store_diff_ticket sdt2 on sdt2.diff_info_id = di.id
#             left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
#             left join ph_staging.parcel_info pi on pi.pno = di.pno
#             join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
#             where
#                 di.diff_marker_category in (23,73,29,78,25,75,31,79)
#                 and
#                 (
#                     (sdt2.state in (0,1) and di.created_at < date_add('${date1}', interval  16 hour) )
#                     or (sdt2.state = 2 and di.created_at < date_add('${date1}', interval  16 hour) and di.updated_at >= date_add('${date1}', interval  16 hour))
#                 )
#             group by 1,2
#             with rollup
#         ) a
#     order by 1,2
# )
, b as
(
    select
        coalesce(a2.client_name, '总计') client_name
        ,coalesce(a2.CN_element, '总计') 疑难件原因
        ,a2.`20-9单量`
        ,a2.`前日20-今日9点处理完成量`
        ,a2.`20-9点11点处理完成量`
        ,a2.`9-20单量`
        ,a2.`9-20已处理单量`
        ,a2.`9-20已处理2小时内量`
    from
        (
           select
                bc.client_name
                ,case di.diff_marker_category # 疑难原因
                    when 1 then '客户不在家/电话无人接听'
                    when 2 then '收件人拒收'
                    when 3 then '快件分错网点'
                    when 4 then '外包装破损'
                    when 5 then '货物破损'
                    when 6 then '货物短少'
                    when 7 then '货物丢失'
                    when 8 then '电话联系不上'
                    when 9 then '客户改约时间'
                    when 10 then '客户不在'
                    when 11 then '客户取消任务'
                    when 12 then '无人签收'
                    when 13 then '客户周末或假期不收货'
                    when 14 then '客户改约时间'
                    when 15 then '当日运力不足，无法派送'
                    when 16 then '联系不上收件人'
                    when 17 then '收件人拒收'
                    when 18 then '快件分错网点'
                    when 19 then '外包装破损'
                    when 20 then '货物破损'
                    when 21 then '货物短少'
                    when 22 then '货物丢失'
                    when 23 then '详细地址错误'
                    when 24 then '收件地址已废弃或不存在'
                    when 25 then '收件人电话号码错误'
                    when 26 then 'cod金额不正确'
                    when 27 then '无实际包裹'
                    when 28 then '已妥投未交接'
                    when 29 then '收件人电话号码是空号'
                    when 30 then '送错网点'
                    when 31 then '省市乡邮编错误'
                    when 32 then '禁运品'
                    when 33 then '严重破损（丢弃）'
                    when 34 then '退件两次尝试派送失败'
                    when 35 then '不能打开locker'
                    when 36 then 'locker不能使用'
                    when 37 then '该地址找不到lockerstation'
                    when 38 then '一票多件'
                    when 39 then '多次尝试派件失败'
                    when 40 then '客户不在家/电话无人接听'
                    when 41 then '错过班车时间'
                    when 42 then '目的地是偏远地区,留仓待次日派送'
                    when 43 then '目的地是岛屿,留仓待次日派送'
                    when 44 then '企业/机构当天已下班'
                    when 45 then '子母件包裹未全部到达网点'
                    when 46 then '不可抗力原因留仓(台风)'
                    when 47 then '虚假包裹'
                    when 50 then '客户取消寄件'
                    when 51 then '信息录入错误'
                    when 52 then '客户取消寄件'
                    when 53 then 'lazada仓库拒收'
                    when 69 then '禁运品'
                    when 70 then '客户改约时间'
                    when 71 then '当日运力不足，无法派送'
                    when 72 then '客户周末或假期不收货'
                    when 73 then '详细地址错误'
                    when 74 then '收件地址已废弃或不存在'
                    when 75 then '收件人电话号码错误'
                    when 76 then 'cod金额不正确'
                    when 77 then '企业/机构当天已下班'
                    when 78 then '收件人电话号码是空号'
                    when 79 then '快件分错网点-地址错误'
                    when 80 then '客户取消任务'
                    when 81 then '重复下单'
                    when 82 then '已完成揽件'
                    when 83 then '联系不上客户'
                    when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
                    when 85 then '寄件人电话号码是空号'
                    when 86 then '包裹不符合揽收条件超大件'
                    when 87 then '包裹不符合揽收条件违禁品'
                    when 88 then '寄件人地址为岛屿'
                    when 89 then '运力短缺，跟客户协商推迟揽收'
                    when 90 then '包裹未准备好推迟揽收'
                    when 91 then '包裹包装不符合运输标准'
                    when 92 then '客户提供的清单里没有此包裹'
                    when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
                    when 94 then '客户取消寄件/客户实际不想寄此包裹'
                    when 95 then '车辆/人力短缺推迟揽收'
                    when 96 then '遗漏揽收(已停用)'
                    when 97 then '子母件(一个单号多个包裹)'
                    when 98 then '地址错误addresserror'
                    when 99 then '包裹不符合揽收条件：超大件'
                    when 100 then '包裹不符合揽收条件：违禁品'
                    when 101 then '包裹包装不符合运输标准'
                    when 102 then '包裹未准备好'
                    when 103 then '运力短缺，跟客户协商推迟揽收'
                    when 104 then '子母件(一个单号多个包裹)'
                    when 105 then '破损包裹'
                    when 106 then '空包裹'
                    when 107 then '不能打开locker(密码错误)'
                    when 108 then 'locker不能使用'
                    when 109 then 'locker找不到'
                    when 110 then '运单号与实际包裹的单号不一致'
                    when 111 then 'box客户取消任务'
                    when 112 then '不能打开locker(密码错误)'
                    when 113 then 'locker不能使用'
                    when 114 then 'locker找不到'
                    when 115 then '实际重量尺寸大于客户下单的重量尺寸'
                    when 116 then '客户仓库关闭'
                    when 117 then '客户仓库关闭'
                    when 118 then 'SHOPEE订单系统自动关闭'
                    when 119 then '客户取消包裹'
                    when 121 then '地址错误'
                    when 122 then '当日运力不足，无法揽收'
                end as 疑难件原因
                ,count(if(di.created_at >= date_sub('2023-07-03', interval 12 hour) and di.created_at < date_add('2023-07-03', interval  1 hour), di.id, null)) '20-9单量'
                ,count(if(di.created_at >= date_sub('2023-07-03', interval 12 hour) and di.created_at < date_add('2023-07-03', interval  1 hour) and cdt.state = 1 , di.id, null)) '前日20-今日9点处理完成量'
                ,count(if(di.created_at >= date_sub('2023-07-03', interval 12 hour) and di.created_at < date_add('2023-07-03', interval  1 hour) and cdt.state = 1 and cdt.updated_at < date_add('2023-07-03', interval  3 hour ) , di.id, null)) '20-9点11点处理完成量'
                ,count(if(di.created_at >= date_add('2023-07-03', interval  1 hour) and di.created_at < date_add('2023-07-03', interval 12 hour), di.id, null)) '9-20单量'
                ,count(if(di.created_at >= date_add('2023-07-03', interval  1 hour) and di.created_at < date_add('2023-07-03', interval 12 hour) and cdt.state = 1 , di.id, null)) '9-20已处理单量'
                ,count(if(di.created_at >= date_add('2023-07-03', interval  1 hour) and di.created_at < date_add('2023-07-03', interval 12 hour) and cdt.state = 1 and cdt.updated_at < date_add(di.created_at, interval  2 hour ), di.id, null)) '9-20已处理2小时内量'
            from ph_staging.diff_info di
            join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
            left join ph_staging.store_diff_ticket sdt2 on sdt2.diff_info_id = di.id
#             left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
            left join ph_staging.parcel_info pi on pi.pno = di.pno
            join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
            where
                di.diff_marker_category in (23,73,29,78,25,75,31,79)
                and di.created_at >= date_sub('2023-07-03', interval 12 hour)
                and di.created_at < date_add('2023-07-03', interval 12 hour )
            group by 1,2
            with rollup
        ) a2
)
select
    t1.client_name
    ,t1.疑难件原因
    ,a1.`0-2小时`
    ,a1.`2-4小时`
    ,a1.`4-6小时`
    ,a1.`6小时以上`
    ,a1.继续配送
    ,a1.退货
    ,a1.平均处理时长_h
    ,a1.总疑难件量
    ,b1.`20-9单量`
    ,b1.`前日20-今日9点处理完成量`
    ,b1.`20-9点11点处理完成量`
    ,b1.`9-20单量`
    ,b1.`9-20已处理单量`
    ,b1.`9-20已处理2小时内量`
from
    (
        select
            t1.疑难件原因
            ,t1.client_name
        from
            (
                select
                    a.client_name
                    ,a.疑难件原因
                from a

                union

                select
                    b.client_name
                    ,b.疑难件原因
                from b
            ) t1
        group by 1,2
    ) t1
left join a a1 on t1.client_name = a1.client_name and t1.疑难件原因 = a1.疑难件原因
left join b b1 on t1.client_name = b1.client_name and t1.疑难件原因 = b1.疑难件原因
order by t1.client_name,case t1.疑难件原因
                            when '总计' then 1
                            when '详细地址错误' then 1
                            when '收件人电话号码是空号' then 2
                            when '收件人电话号码错误' then 3
                            when '省市乡邮编错误' then 4
                        end;
;-- -. . -..- - / . -. - .-. -.--
with a as
(
    select
        coalesce(a.client_name, '总计') client_name
        ,coalesce(a.疑难件原因, '总计') 疑难件原因
        ,a.`0-2小时`
        ,a.`2-4小时`
        ,a.`4-6小时`
        ,a.`6小时以上`
        ,a.总疑难件量
        ,a.继续配送
        ,a.退货
        ,a.平均处理时长_h
    from
        (
            select
                bc.client_name
                ,case di.diff_marker_category # 疑难原因
                    when 1 then '客户不在家/电话无人接听'
                    when 2 then '收件人拒收'
                    when 3 then '快件分错网点'
                    when 4 then '外包装破损'
                    when 5 then '货物破损'
                    when 6 then '货物短少'
                    when 7 then '货物丢失'
                    when 8 then '电话联系不上'
                    when 9 then '客户改约时间'
                    when 10 then '客户不在'
                    when 11 then '客户取消任务'
                    when 12 then '无人签收'
                    when 13 then '客户周末或假期不收货'
                    when 14 then '客户改约时间'
                    when 15 then '当日运力不足，无法派送'
                    when 16 then '联系不上收件人'
                    when 17 then '收件人拒收'
                    when 18 then '快件分错网点'
                    when 19 then '外包装破损'
                    when 20 then '货物破损'
                    when 21 then '货物短少'
                    when 22 then '货物丢失'
                    when 23 then '详细地址错误'
                    when 24 then '收件地址已废弃或不存在'
                    when 25 then '收件人电话号码错误'
                    when 26 then 'cod金额不正确'
                    when 27 then '无实际包裹'
                    when 28 then '已妥投未交接'
                    when 29 then '收件人电话号码是空号'
                    when 30 then '送错网点'
                    when 31 then '省市乡邮编错误'
                    when 32 then '禁运品'
                    when 33 then '严重破损（丢弃）'
                    when 34 then '退件两次尝试派送失败'
                    when 35 then '不能打开locker'
                    when 36 then 'locker不能使用'
                    when 37 then '该地址找不到lockerstation'
                    when 38 then '一票多件'
                    when 39 then '多次尝试派件失败'
                    when 40 then '客户不在家/电话无人接听'
                    when 41 then '错过班车时间'
                    when 42 then '目的地是偏远地区,留仓待次日派送'
                    when 43 then '目的地是岛屿,留仓待次日派送'
                    when 44 then '企业/机构当天已下班'
                    when 45 then '子母件包裹未全部到达网点'
                    when 46 then '不可抗力原因留仓(台风)'
                    when 47 then '虚假包裹'
                    when 50 then '客户取消寄件'
                    when 51 then '信息录入错误'
                    when 52 then '客户取消寄件'
                    when 53 then 'lazada仓库拒收'
                    when 69 then '禁运品'
                    when 70 then '客户改约时间'
                    when 71 then '当日运力不足，无法派送'
                    when 72 then '客户周末或假期不收货'
                    when 73 then '详细地址错误'
                    when 74 then '收件地址已废弃或不存在'
                    when 75 then '收件人电话号码错误'
                    when 76 then 'cod金额不正确'
                    when 77 then '企业/机构当天已下班'
                    when 78 then '收件人电话号码是空号'
                    when 79 then '快件分错网点-地址错误'
                    when 80 then '客户取消任务'
                    when 81 then '重复下单'
                    when 82 then '已完成揽件'
                    when 83 then '联系不上客户'
                    when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
                    when 85 then '寄件人电话号码是空号'
                    when 86 then '包裹不符合揽收条件超大件'
                    when 87 then '包裹不符合揽收条件违禁品'
                    when 88 then '寄件人地址为岛屿'
                    when 89 then '运力短缺，跟客户协商推迟揽收'
                    when 90 then '包裹未准备好推迟揽收'
                    when 91 then '包裹包装不符合运输标准'
                    when 92 then '客户提供的清单里没有此包裹'
                    when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
                    when 94 then '客户取消寄件/客户实际不想寄此包裹'
                    when 95 then '车辆/人力短缺推迟揽收'
                    when 96 then '遗漏揽收(已停用)'
                    when 97 then '子母件(一个单号多个包裹)'
                    when 98 then '地址错误addresserror'
                    when 99 then '包裹不符合揽收条件：超大件'
                    when 100 then '包裹不符合揽收条件：违禁品'
                    when 101 then '包裹包装不符合运输标准'
                    when 102 then '包裹未准备好'
                    when 103 then '运力短缺，跟客户协商推迟揽收'
                    when 104 then '子母件(一个单号多个包裹)'
                    when 105 then '破损包裹'
                    when 106 then '空包裹'
                    when 107 then '不能打开locker(密码错误)'
                    when 108 then 'locker不能使用'
                    when 109 then 'locker找不到'
                    when 110 then '运单号与实际包裹的单号不一致'
                    when 111 then 'box客户取消任务'
                    when 112 then '不能打开locker(密码错误)'
                    when 113 then 'locker不能使用'
                    when 114 then 'locker找不到'
                    when 115 then '实际重量尺寸大于客户下单的重量尺寸'
                    when 116 then '客户仓库关闭'
                    when 117 then '客户仓库关闭'
                    when 118 then 'SHOPEE订单系统自动关闭'
                    when 119 then '客户取消包裹'
                    when 121 then '地址错误'
                    when 122 then '当日运力不足，无法揽收'
                end as 疑难件原因
                ,count(if(cdt.negotiation_result_category = 5, di.id, null)) 继续配送
                ,count(if(cdt.negotiation_result_category = 3, di.id, null)) 退货
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 2, di.id, null)) '0-2小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 2 and timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 4 , di.id, null)) '2-4小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 4 and timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 6, di.id, null )) '4-6小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 6 , di.id, null )) '6小时以上'
                ,sum(if(cdt.operator_id not in (10000,10001,100002), timestampdiff(second , cdt.created_at, cdt.updated_at)/3600, null))/count(if(cdt.operator_id not in (10000,10001,100002), di.id, null)) 平均处理时长_h
                ,count(di.id) 总疑难件量
            from ph_staging.diff_info di
            left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
            left join ph_staging.store_diff_ticket sdt on sdt.diff_info_id = di.id
#             left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
            left join ph_staging.parcel_info pi on pi.pno = di.pno
            join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
            where
                di.updated_at >= date_sub('2023-07-03', interval 8 hour )
                and di.updated_at < date_add('2023-07-03', interval 16 hour ) -- 今日处理
                and cdt.state = 1 -- 已处理
                and di.diff_marker_category in (23,73,29,78,25,75,31,79)
            group by 1,2
            with rollup
        ) a
    order by 1,2
)
# b as
# (
#         select
#         coalesce(a.client_name, '总计') client_name
#         ,coalesce(a.疑难件原因, '总计') 疑难件原因
#         ,a.当日20点后
#         ,a.积压时间0day
#         ,a.积压1天及以上
#     from
#         (
#                 select
#                 coalesce(bc.client_name, '总计') client_name
#                 ,coalesce(tdt2.cn_element, '总计') 疑难件原因
#                 ,count(if(cdt.created_at >= date_add('${date1}', interval 12 hour), di.id, null)) 当日20点后
#                 ,count(if(cdt.created_at < date_add('${date1}', interval 12 hour ) and di.created_at >= date_sub('${date1}', interval 8 hour ), di.id, null)) '积压时间0day'
#                 ,count(if(cdt.created_at < date_sub('${date1}', interval 8 hour ), di.id, null)) '积压1天及以上'
#             from ph_staging.diff_info di
#             left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
#             left join ph_staging.store_diff_ticket sdt2 on sdt2.diff_info_id = di.id
#             left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
#             left join ph_staging.parcel_info pi on pi.pno = di.pno
#             join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
#             where
#                 di.diff_marker_category in (23,73,29,78,25,75,31,79)
#                 and
#                 (
#                     (sdt2.state in (0,1) and di.created_at < date_add('${date1}', interval  16 hour) )
#                     or (sdt2.state = 2 and di.created_at < date_add('${date1}', interval  16 hour) and di.updated_at >= date_add('${date1}', interval  16 hour))
#                 )
#             group by 1,2
#             with rollup
#         ) a
#     order by 1,2
# )
, b as
(
    select
        coalesce(a2.client_name, '总计') client_name
        ,coalesce(a2.疑难件原因, '总计') 疑难件原因
        ,a2.`20-9单量`
        ,a2.`前日20-今日9点处理完成量`
        ,a2.`20-9点11点处理完成量`
        ,a2.`9-20单量`
        ,a2.`9-20已处理单量`
        ,a2.`9-20已处理2小时内量`
    from
        (
           select
                bc.client_name
                ,case di.diff_marker_category # 疑难原因
                    when 1 then '客户不在家/电话无人接听'
                    when 2 then '收件人拒收'
                    when 3 then '快件分错网点'
                    when 4 then '外包装破损'
                    when 5 then '货物破损'
                    when 6 then '货物短少'
                    when 7 then '货物丢失'
                    when 8 then '电话联系不上'
                    when 9 then '客户改约时间'
                    when 10 then '客户不在'
                    when 11 then '客户取消任务'
                    when 12 then '无人签收'
                    when 13 then '客户周末或假期不收货'
                    when 14 then '客户改约时间'
                    when 15 then '当日运力不足，无法派送'
                    when 16 then '联系不上收件人'
                    when 17 then '收件人拒收'
                    when 18 then '快件分错网点'
                    when 19 then '外包装破损'
                    when 20 then '货物破损'
                    when 21 then '货物短少'
                    when 22 then '货物丢失'
                    when 23 then '详细地址错误'
                    when 24 then '收件地址已废弃或不存在'
                    when 25 then '收件人电话号码错误'
                    when 26 then 'cod金额不正确'
                    when 27 then '无实际包裹'
                    when 28 then '已妥投未交接'
                    when 29 then '收件人电话号码是空号'
                    when 30 then '送错网点'
                    when 31 then '省市乡邮编错误'
                    when 32 then '禁运品'
                    when 33 then '严重破损（丢弃）'
                    when 34 then '退件两次尝试派送失败'
                    when 35 then '不能打开locker'
                    when 36 then 'locker不能使用'
                    when 37 then '该地址找不到lockerstation'
                    when 38 then '一票多件'
                    when 39 then '多次尝试派件失败'
                    when 40 then '客户不在家/电话无人接听'
                    when 41 then '错过班车时间'
                    when 42 then '目的地是偏远地区,留仓待次日派送'
                    when 43 then '目的地是岛屿,留仓待次日派送'
                    when 44 then '企业/机构当天已下班'
                    when 45 then '子母件包裹未全部到达网点'
                    when 46 then '不可抗力原因留仓(台风)'
                    when 47 then '虚假包裹'
                    when 50 then '客户取消寄件'
                    when 51 then '信息录入错误'
                    when 52 then '客户取消寄件'
                    when 53 then 'lazada仓库拒收'
                    when 69 then '禁运品'
                    when 70 then '客户改约时间'
                    when 71 then '当日运力不足，无法派送'
                    when 72 then '客户周末或假期不收货'
                    when 73 then '详细地址错误'
                    when 74 then '收件地址已废弃或不存在'
                    when 75 then '收件人电话号码错误'
                    when 76 then 'cod金额不正确'
                    when 77 then '企业/机构当天已下班'
                    when 78 then '收件人电话号码是空号'
                    when 79 then '快件分错网点-地址错误'
                    when 80 then '客户取消任务'
                    when 81 then '重复下单'
                    when 82 then '已完成揽件'
                    when 83 then '联系不上客户'
                    when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
                    when 85 then '寄件人电话号码是空号'
                    when 86 then '包裹不符合揽收条件超大件'
                    when 87 then '包裹不符合揽收条件违禁品'
                    when 88 then '寄件人地址为岛屿'
                    when 89 then '运力短缺，跟客户协商推迟揽收'
                    when 90 then '包裹未准备好推迟揽收'
                    when 91 then '包裹包装不符合运输标准'
                    when 92 then '客户提供的清单里没有此包裹'
                    when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
                    when 94 then '客户取消寄件/客户实际不想寄此包裹'
                    when 95 then '车辆/人力短缺推迟揽收'
                    when 96 then '遗漏揽收(已停用)'
                    when 97 then '子母件(一个单号多个包裹)'
                    when 98 then '地址错误addresserror'
                    when 99 then '包裹不符合揽收条件：超大件'
                    when 100 then '包裹不符合揽收条件：违禁品'
                    when 101 then '包裹包装不符合运输标准'
                    when 102 then '包裹未准备好'
                    when 103 then '运力短缺，跟客户协商推迟揽收'
                    when 104 then '子母件(一个单号多个包裹)'
                    when 105 then '破损包裹'
                    when 106 then '空包裹'
                    when 107 then '不能打开locker(密码错误)'
                    when 108 then 'locker不能使用'
                    when 109 then 'locker找不到'
                    when 110 then '运单号与实际包裹的单号不一致'
                    when 111 then 'box客户取消任务'
                    when 112 then '不能打开locker(密码错误)'
                    when 113 then 'locker不能使用'
                    when 114 then 'locker找不到'
                    when 115 then '实际重量尺寸大于客户下单的重量尺寸'
                    when 116 then '客户仓库关闭'
                    when 117 then '客户仓库关闭'
                    when 118 then 'SHOPEE订单系统自动关闭'
                    when 119 then '客户取消包裹'
                    when 121 then '地址错误'
                    when 122 then '当日运力不足，无法揽收'
                end as 疑难件原因
                ,count(if(di.created_at >= date_sub('2023-07-03', interval 12 hour) and di.created_at < date_add('2023-07-03', interval  1 hour), di.id, null)) '20-9单量'
                ,count(if(di.created_at >= date_sub('2023-07-03', interval 12 hour) and di.created_at < date_add('2023-07-03', interval  1 hour) and cdt.state = 1 , di.id, null)) '前日20-今日9点处理完成量'
                ,count(if(di.created_at >= date_sub('2023-07-03', interval 12 hour) and di.created_at < date_add('2023-07-03', interval  1 hour) and cdt.state = 1 and cdt.updated_at < date_add('2023-07-03', interval  3 hour ) , di.id, null)) '20-9点11点处理完成量'
                ,count(if(di.created_at >= date_add('2023-07-03', interval  1 hour) and di.created_at < date_add('2023-07-03', interval 12 hour), di.id, null)) '9-20单量'
                ,count(if(di.created_at >= date_add('2023-07-03', interval  1 hour) and di.created_at < date_add('2023-07-03', interval 12 hour) and cdt.state = 1 , di.id, null)) '9-20已处理单量'
                ,count(if(di.created_at >= date_add('2023-07-03', interval  1 hour) and di.created_at < date_add('2023-07-03', interval 12 hour) and cdt.state = 1 and cdt.updated_at < date_add(di.created_at, interval  2 hour ), di.id, null)) '9-20已处理2小时内量'
            from ph_staging.diff_info di
            join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
            left join ph_staging.store_diff_ticket sdt2 on sdt2.diff_info_id = di.id
#             left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
            left join ph_staging.parcel_info pi on pi.pno = di.pno
            join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
            where
                di.diff_marker_category in (23,73,29,78,25,75,31,79)
                and di.created_at >= date_sub('2023-07-03', interval 12 hour)
                and di.created_at < date_add('2023-07-03', interval 12 hour )
            group by 1,2
            with rollup
        ) a2
)
select
    t1.client_name
    ,t1.疑难件原因
    ,a1.`0-2小时`
    ,a1.`2-4小时`
    ,a1.`4-6小时`
    ,a1.`6小时以上`
    ,a1.继续配送
    ,a1.退货
    ,a1.平均处理时长_h
    ,a1.总疑难件量
    ,b1.`20-9单量`
    ,b1.`前日20-今日9点处理完成量`
    ,b1.`20-9点11点处理完成量`
    ,b1.`9-20单量`
    ,b1.`9-20已处理单量`
    ,b1.`9-20已处理2小时内量`
from
    (
        select
            t1.疑难件原因
            ,t1.client_name
        from
            (
                select
                    a.client_name
                    ,a.疑难件原因
                from a

                union

                select
                    b.client_name
                    ,b.疑难件原因
                from b
            ) t1
        group by 1,2
    ) t1
left join a a1 on t1.client_name = a1.client_name and t1.疑难件原因 = a1.疑难件原因
left join b b1 on t1.client_name = b1.client_name and t1.疑难件原因 = b1.疑难件原因
order by t1.client_name,case t1.疑难件原因
                            when '总计' then 1
                            when '详细地址错误' then 1
                            when '收件人电话号码是空号' then 2
                            when '收件人电话号码错误' then 3
                            when '省市乡邮编错误' then 4
                        end;
;-- -. . -..- - / . -. - .-. -.--
with a as
(
    select
        coalesce(a.client_name, '总计') client_name
        ,coalesce(a.疑难件原因, '总计') 疑难件原因
        ,a.`0-2小时`
        ,a.`2-4小时`
        ,a.`4-6小时`
        ,a.`6小时以上`
        ,a.总疑难件量
        ,a.继续配送
        ,a.退货
        ,a.平均处理时长_h
    from
        (
            select
                bc.client_name
                ,case di.diff_marker_category # 疑难原因
                    when 1 then '客户不在家/电话无人接听'
                    when 2 then '收件人拒收'
                    when 3 then '快件分错网点'
                    when 4 then '外包装破损'
                    when 5 then '货物破损'
                    when 6 then '货物短少'
                    when 7 then '货物丢失'
                    when 8 then '电话联系不上'
                    when 9 then '客户改约时间'
                    when 10 then '客户不在'
                    when 11 then '客户取消任务'
                    when 12 then '无人签收'
                    when 13 then '客户周末或假期不收货'
                    when 14 then '客户改约时间'
                    when 15 then '当日运力不足，无法派送'
                    when 16 then '联系不上收件人'
                    when 17 then '收件人拒收'
                    when 18 then '快件分错网点'
                    when 19 then '外包装破损'
                    when 20 then '货物破损'
                    when 21 then '货物短少'
                    when 22 then '货物丢失'
                    when 23 then '详细地址错误'
                    when 24 then '收件地址已废弃或不存在'
                    when 25 then '收件人电话号码错误'
                    when 26 then 'cod金额不正确'
                    when 27 then '无实际包裹'
                    when 28 then '已妥投未交接'
                    when 29 then '收件人电话号码是空号'
                    when 30 then '送错网点'
                    when 31 then '省市乡邮编错误'
                    when 32 then '禁运品'
                    when 33 then '严重破损（丢弃）'
                    when 34 then '退件两次尝试派送失败'
                    when 35 then '不能打开locker'
                    when 36 then 'locker不能使用'
                    when 37 then '该地址找不到lockerstation'
                    when 38 then '一票多件'
                    when 39 then '多次尝试派件失败'
                    when 40 then '客户不在家/电话无人接听'
                    when 41 then '错过班车时间'
                    when 42 then '目的地是偏远地区,留仓待次日派送'
                    when 43 then '目的地是岛屿,留仓待次日派送'
                    when 44 then '企业/机构当天已下班'
                    when 45 then '子母件包裹未全部到达网点'
                    when 46 then '不可抗力原因留仓(台风)'
                    when 47 then '虚假包裹'
                    when 50 then '客户取消寄件'
                    when 51 then '信息录入错误'
                    when 52 then '客户取消寄件'
                    when 53 then 'lazada仓库拒收'
                    when 69 then '禁运品'
                    when 70 then '客户改约时间'
                    when 71 then '当日运力不足，无法派送'
                    when 72 then '客户周末或假期不收货'
                    when 73 then '详细地址错误'
                    when 74 then '收件地址已废弃或不存在'
                    when 75 then '收件人电话号码错误'
                    when 76 then 'cod金额不正确'
                    when 77 then '企业/机构当天已下班'
                    when 78 then '收件人电话号码是空号'
                    when 79 then '快件分错网点-地址错误'
                    when 80 then '客户取消任务'
                    when 81 then '重复下单'
                    when 82 then '已完成揽件'
                    when 83 then '联系不上客户'
                    when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
                    when 85 then '寄件人电话号码是空号'
                    when 86 then '包裹不符合揽收条件超大件'
                    when 87 then '包裹不符合揽收条件违禁品'
                    when 88 then '寄件人地址为岛屿'
                    when 89 then '运力短缺，跟客户协商推迟揽收'
                    when 90 then '包裹未准备好推迟揽收'
                    when 91 then '包裹包装不符合运输标准'
                    when 92 then '客户提供的清单里没有此包裹'
                    when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
                    when 94 then '客户取消寄件/客户实际不想寄此包裹'
                    when 95 then '车辆/人力短缺推迟揽收'
                    when 96 then '遗漏揽收(已停用)'
                    when 97 then '子母件(一个单号多个包裹)'
                    when 98 then '地址错误addresserror'
                    when 99 then '包裹不符合揽收条件：超大件'
                    when 100 then '包裹不符合揽收条件：违禁品'
                    when 101 then '包裹包装不符合运输标准'
                    when 102 then '包裹未准备好'
                    when 103 then '运力短缺，跟客户协商推迟揽收'
                    when 104 then '子母件(一个单号多个包裹)'
                    when 105 then '破损包裹'
                    when 106 then '空包裹'
                    when 107 then '不能打开locker(密码错误)'
                    when 108 then 'locker不能使用'
                    when 109 then 'locker找不到'
                    when 110 then '运单号与实际包裹的单号不一致'
                    when 111 then 'box客户取消任务'
                    when 112 then '不能打开locker(密码错误)'
                    when 113 then 'locker不能使用'
                    when 114 then 'locker找不到'
                    when 115 then '实际重量尺寸大于客户下单的重量尺寸'
                    when 116 then '客户仓库关闭'
                    when 117 then '客户仓库关闭'
                    when 118 then 'SHOPEE订单系统自动关闭'
                    when 119 then '客户取消包裹'
                    when 121 then '地址错误'
                    when 122 then '当日运力不足，无法揽收'
                end as 疑难件原因
                ,count(if(cdt.negotiation_result_category = 5, di.id, null)) 继续配送
                ,count(if(cdt.negotiation_result_category = 3, di.id, null)) 退货
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 2, di.id, null)) '0-2小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 2 and timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 4 , di.id, null)) '2-4小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 4 and timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 < 6, di.id, null )) '4-6小时'
                ,count(if(timestampdiff(second , cdt.created_at, cdt.updated_at)/3600 >= 6 , di.id, null )) '6小时以上'
                ,sum(if(cdt.operator_id not in (10000,10001,100002), timestampdiff(second , cdt.created_at, cdt.updated_at)/3600, null))/count(if(cdt.operator_id not in (10000,10001,100002), di.id, null)) 平均处理时长_h
                ,count(di.id) 总疑难件量
            from ph_staging.diff_info di
            left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
            left join ph_staging.store_diff_ticket sdt on sdt.diff_info_id = di.id
#             left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
            left join ph_staging.parcel_info pi on pi.pno = di.pno
            join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
            where
                di.updated_at >= date_sub('2023-07-03', interval 8 hour )
                and di.updated_at < date_add('2023-07-03', interval 16 hour ) -- 今日处理
                and cdt.state = 1 -- 已处理
                and di.diff_marker_category in (23,73,29,78,25,75,31,79,30)
            group by 1,2
            with rollup
        ) a
    order by 1,2
)
# b as
# (
#         select
#         coalesce(a.client_name, '总计') client_name
#         ,coalesce(a.疑难件原因, '总计') 疑难件原因
#         ,a.当日20点后
#         ,a.积压时间0day
#         ,a.积压1天及以上
#     from
#         (
#                 select
#                 coalesce(bc.client_name, '总计') client_name
#                 ,coalesce(tdt2.cn_element, '总计') 疑难件原因
#                 ,count(if(cdt.created_at >= date_add('${date1}', interval 12 hour), di.id, null)) 当日20点后
#                 ,count(if(cdt.created_at < date_add('${date1}', interval 12 hour ) and di.created_at >= date_sub('${date1}', interval 8 hour ), di.id, null)) '积压时间0day'
#                 ,count(if(cdt.created_at < date_sub('${date1}', interval 8 hour ), di.id, null)) '积压1天及以上'
#             from ph_staging.diff_info di
#             left join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
#             left join ph_staging.store_diff_ticket sdt2 on sdt2.diff_info_id = di.id
#             left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
#             left join ph_staging.parcel_info pi on pi.pno = di.pno
#             join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
#             where
#                 di.diff_marker_category in (23,73,29,78,25,75,31,79)
#                 and
#                 (
#                     (sdt2.state in (0,1) and di.created_at < date_add('${date1}', interval  16 hour) )
#                     or (sdt2.state = 2 and di.created_at < date_add('${date1}', interval  16 hour) and di.updated_at >= date_add('${date1}', interval  16 hour))
#                 )
#             group by 1,2
#             with rollup
#         ) a
#     order by 1,2
# )
, b as
(
    select
        coalesce(a2.client_name, '总计') client_name
        ,coalesce(a2.疑难件原因, '总计') 疑难件原因
        ,a2.`20-9单量`
        ,a2.`前日20-今日9点处理完成量`
        ,a2.`20-9点11点处理完成量`
        ,a2.`9-20单量`
        ,a2.`9-20已处理单量`
        ,a2.`9-20已处理2小时内量`
    from
        (
           select
                bc.client_name
                ,case di.diff_marker_category # 疑难原因
                    when 1 then '客户不在家/电话无人接听'
                    when 2 then '收件人拒收'
                    when 3 then '快件分错网点'
                    when 4 then '外包装破损'
                    when 5 then '货物破损'
                    when 6 then '货物短少'
                    when 7 then '货物丢失'
                    when 8 then '电话联系不上'
                    when 9 then '客户改约时间'
                    when 10 then '客户不在'
                    when 11 then '客户取消任务'
                    when 12 then '无人签收'
                    when 13 then '客户周末或假期不收货'
                    when 14 then '客户改约时间'
                    when 15 then '当日运力不足，无法派送'
                    when 16 then '联系不上收件人'
                    when 17 then '收件人拒收'
                    when 18 then '快件分错网点'
                    when 19 then '外包装破损'
                    when 20 then '货物破损'
                    when 21 then '货物短少'
                    when 22 then '货物丢失'
                    when 23 then '详细地址错误'
                    when 24 then '收件地址已废弃或不存在'
                    when 25 then '收件人电话号码错误'
                    when 26 then 'cod金额不正确'
                    when 27 then '无实际包裹'
                    when 28 then '已妥投未交接'
                    when 29 then '收件人电话号码是空号'
                    when 30 then '送错网点'
                    when 31 then '省市乡邮编错误'
                    when 32 then '禁运品'
                    when 33 then '严重破损（丢弃）'
                    when 34 then '退件两次尝试派送失败'
                    when 35 then '不能打开locker'
                    when 36 then 'locker不能使用'
                    when 37 then '该地址找不到lockerstation'
                    when 38 then '一票多件'
                    when 39 then '多次尝试派件失败'
                    when 40 then '客户不在家/电话无人接听'
                    when 41 then '错过班车时间'
                    when 42 then '目的地是偏远地区,留仓待次日派送'
                    when 43 then '目的地是岛屿,留仓待次日派送'
                    when 44 then '企业/机构当天已下班'
                    when 45 then '子母件包裹未全部到达网点'
                    when 46 then '不可抗力原因留仓(台风)'
                    when 47 then '虚假包裹'
                    when 50 then '客户取消寄件'
                    when 51 then '信息录入错误'
                    when 52 then '客户取消寄件'
                    when 53 then 'lazada仓库拒收'
                    when 69 then '禁运品'
                    when 70 then '客户改约时间'
                    when 71 then '当日运力不足，无法派送'
                    when 72 then '客户周末或假期不收货'
                    when 73 then '详细地址错误'
                    when 74 then '收件地址已废弃或不存在'
                    when 75 then '收件人电话号码错误'
                    when 76 then 'cod金额不正确'
                    when 77 then '企业/机构当天已下班'
                    when 78 then '收件人电话号码是空号'
                    when 79 then '快件分错网点-地址错误'
                    when 80 then '客户取消任务'
                    when 81 then '重复下单'
                    when 82 then '已完成揽件'
                    when 83 then '联系不上客户'
                    when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
                    when 85 then '寄件人电话号码是空号'
                    when 86 then '包裹不符合揽收条件超大件'
                    when 87 then '包裹不符合揽收条件违禁品'
                    when 88 then '寄件人地址为岛屿'
                    when 89 then '运力短缺，跟客户协商推迟揽收'
                    when 90 then '包裹未准备好推迟揽收'
                    when 91 then '包裹包装不符合运输标准'
                    when 92 then '客户提供的清单里没有此包裹'
                    when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
                    when 94 then '客户取消寄件/客户实际不想寄此包裹'
                    when 95 then '车辆/人力短缺推迟揽收'
                    when 96 then '遗漏揽收(已停用)'
                    when 97 then '子母件(一个单号多个包裹)'
                    when 98 then '地址错误addresserror'
                    when 99 then '包裹不符合揽收条件：超大件'
                    when 100 then '包裹不符合揽收条件：违禁品'
                    when 101 then '包裹包装不符合运输标准'
                    when 102 then '包裹未准备好'
                    when 103 then '运力短缺，跟客户协商推迟揽收'
                    when 104 then '子母件(一个单号多个包裹)'
                    when 105 then '破损包裹'
                    when 106 then '空包裹'
                    when 107 then '不能打开locker(密码错误)'
                    when 108 then 'locker不能使用'
                    when 109 then 'locker找不到'
                    when 110 then '运单号与实际包裹的单号不一致'
                    when 111 then 'box客户取消任务'
                    when 112 then '不能打开locker(密码错误)'
                    when 113 then 'locker不能使用'
                    when 114 then 'locker找不到'
                    when 115 then '实际重量尺寸大于客户下单的重量尺寸'
                    when 116 then '客户仓库关闭'
                    when 117 then '客户仓库关闭'
                    when 118 then 'SHOPEE订单系统自动关闭'
                    when 119 then '客户取消包裹'
                    when 121 then '地址错误'
                    when 122 then '当日运力不足，无法揽收'
                end as 疑难件原因
                ,count(if(di.created_at >= date_sub('2023-07-03', interval 12 hour) and di.created_at < date_add('2023-07-03', interval  1 hour), di.id, null)) '20-9单量'
                ,count(if(di.created_at >= date_sub('2023-07-03', interval 12 hour) and di.created_at < date_add('2023-07-03', interval  1 hour) and cdt.state = 1 , di.id, null)) '前日20-今日9点处理完成量'
                ,count(if(di.created_at >= date_sub('2023-07-03', interval 12 hour) and di.created_at < date_add('2023-07-03', interval  1 hour) and cdt.state = 1 and cdt.updated_at < date_add('2023-07-03', interval  3 hour ) , di.id, null)) '20-9点11点处理完成量'
                ,count(if(di.created_at >= date_add('2023-07-03', interval  1 hour) and di.created_at < date_add('2023-07-03', interval 12 hour), di.id, null)) '9-20单量'
                ,count(if(di.created_at >= date_add('2023-07-03', interval  1 hour) and di.created_at < date_add('2023-07-03', interval 12 hour) and cdt.state = 1 , di.id, null)) '9-20已处理单量'
                ,count(if(di.created_at >= date_add('2023-07-03', interval  1 hour) and di.created_at < date_add('2023-07-03', interval 12 hour) and cdt.state = 1 and cdt.updated_at < date_add(di.created_at, interval  2 hour ), di.id, null)) '9-20已处理2小时内量'
            from ph_staging.diff_info di
            join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
            left join ph_staging.store_diff_ticket sdt2 on sdt2.diff_info_id = di.id
#             left join dwm.dwd_dim_dict tdt2 on di.diff_marker_category= tdt2.element and tdt2.db = 'ph_staging' and tdt2.tablename = 'diff_info' and tdt2.fieldname = 'diff_marker_category' -- 标记原因
            left join ph_staging.parcel_info pi on pi.pno = di.pno
            join dwm.dwd_dim_bigClient bc on bc.client_id = pi.client_id
            where
                di.diff_marker_category in (23,73,29,78,25,75,31,79)
                and di.created_at >= date_sub('2023-07-03', interval 12 hour)
                and di.created_at < date_add('2023-07-03', interval 12 hour )
            group by 1,2
            with rollup
        ) a2
)
select
    t1.client_name
    ,t1.疑难件原因
    ,a1.`0-2小时`
    ,a1.`2-4小时`
    ,a1.`4-6小时`
    ,a1.`6小时以上`
    ,a1.继续配送
    ,a1.退货
    ,a1.平均处理时长_h
    ,a1.总疑难件量
    ,b1.`20-9单量`
    ,b1.`前日20-今日9点处理完成量`
    ,b1.`20-9点11点处理完成量`
    ,b1.`9-20单量`
    ,b1.`9-20已处理单量`
    ,b1.`9-20已处理2小时内量`
from
    (
        select
            t1.疑难件原因
            ,t1.client_name
        from
            (
                select
                    a.client_name
                    ,a.疑难件原因
                from a

                union

                select
                    b.client_name
                    ,b.疑难件原因
                from b
            ) t1
        group by 1,2
    ) t1
left join a a1 on t1.client_name = a1.client_name and t1.疑难件原因 = a1.疑难件原因
left join b b1 on t1.client_name = b1.client_name and t1.疑难件原因 = b1.疑难件原因
order by t1.client_name,case t1.疑难件原因
                            when '总计' then 1
                            when '详细地址错误' then 2
                            when '收件人电话号码是空号' then 3
                            when '收件人电话号码错误' then 4
                            when '省市乡邮编错误' then 5
                        end;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pr.pno
        ,pr.routed_at
        ,pr.id
        ,case json_extract(pr.extra_value, '$.forceTakePhotoCategory')
            when 1 then '打印面单'
            when 2 then '收件人拒收'
            when 3 then '滞留包裹强制拍照'
        end photo_type
    from ph_staging.parcel_route pr
    where
        pr.route_action = 'TAKE_PHOTO'
        and pr.routed_at > '2023-06-14 16:00:00'
        and pr.routed_at < '2023-06-30 16:00:00'
)
select
    ddd.CN_element
    ,a.photo_type
    ,count(a.id) action_count
from
    (
        select
            t1.pno
            ,t1.id
            ,t1.photo_type
            ,pr2.remark
            ,row_number() over (partition by pr2.pno order by pr2.routed_at desc) rk
        from ph_staging.parcel_route pr2
        join t t1 on pr2.pno = t1.pno
        where
            pr2.routed_at < t1.routed_at
            and pr2.route_action = 'FORCE_TAKE_PHOTO'
            and pr2.routed_at > '2023-06-14 16:00:00'
            and pr2.routed_at < '2023-06-30 16:00:00'
#             and pr2.route_action = 'ARRIVAL_WAREHOUSE_SCAN'
    ) a
left join dwm.dwd_dim_dict ddd on ddd.element = a.remark and ddd.db = 'ph_staging' and ddd.tablename = 'parcel_route' and ddd.fieldname = 'route_action'
where
    a.rk = 1
#     and ddd.CN_element = '到件入仓扫描'
group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
select
    plt.pno
    ,plt.id
    ,plt.created_at
    ,plt.state
    ,plt.client_id
    ,plt.last_valid_store_id
    ,if(plt.state = 6 and plt.duty_result = 1, plt.updated_at, null) updated_time
    ,group_concat(plr.staff_id) staff
from ph_bi.parcel_lose_task plt
left join ph_bi.parcel_lose_responsible plr on plr.lose_task_id = plt.id
where
    plt.created_at >= '2023-06-14 16:00:00'
    and plt.created_at < '2023-06-30 16:00:00'
    and plt.source = 12
group by 1
)
select
    a.pno
    ,case a.force_take_photos_type
        when 1 then '打印面单'
        when 2 then '收件人拒收'
        when 3 then '滞留强制拍照'
    end 拍照类型
    ,case a.state
        when 1 then '丢失件待处理'
        when 2 then '疑似丢失件待处理'
        when 3 then '待工单回复'
        when 4 then '已工单回复'
        when 5 then '包裹未丢失'
        when 6 then '丢失件处理完成'
    end 判责结果
    ,a.staff 责任人
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.id is null then '普通ka'
        when kp.`id` is null then '小c'
    end 客户类型
    ,b.24hour 判责丢失24小时判断
    ,pi.cod_amount/100 cod金额
    ,case pi.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,if(dt.爆仓预警 = 'Alert', '是', '否') 当日是否爆仓
    ,plt3.pl_source 进L来源同时是否有替他来源任务
    ,timestampdiff(hour, a.created_at, a.updated_time) 进入L来源时间到已处理时间段_hour
from
    (
        select
            sf.*
        from
            (
                select
                    t1.*
                    ,sfp.force_take_photos_type
                    ,row_number() over (partition by sfp.pno order by sfp.created_at desc) rk
                from ph_staging.stranded_force_photo_ai_record sfp
                join t t1 on t1.pno = sfp.pno
                where
                    sfp.created_at < date_sub(t1.created_at, interval 8 hour)
                    and (sfp.parcel_enabled = 0 or sfp.matching_enabled = 0)
                    and sfp.force_take_photos_type is not null
            ) sf
        where
            sf.rk = 1
    ) a
left join ph_staging.ka_profile kp on kp.id = a.client_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = a.client_id
left join ph_staging.parcel_info pi on pi.pno = a.pno
left join
    (
        select
            t2.*
            ,case
                when timestampdiff(second, t2.updated_time, pr.min_prat)/3600 <= 24 then '1'
                when timestampdiff(second, t2.updated_time, pr.min_prat)/3600 > 24 then '2'
                else 0
            end 24hour
        from t t2
        left join
            (
                select
                    pr.pno
                    ,min(convert_tz(pr.routed_at, '+00:00', '+08:00')) min_prat
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                join dwm.dwd_dim_dict ddd on ddd.element = pr.route_action and ddd.db = 'ph_staging' and ddd.tablename = 'parcel_route' and ddd.fieldname = 'route_action' and ddd.remark = 'valid'
                where
                    pr.routed_at > date_sub(t1.updated_time, interval 8 hour)
                group by 1
            ) pr on pr.pno = t2.pno
    ) b on b.pno = a.pno
left join dwm.dwd_ph_network_spill_detl_rd dt on dt.统计日期 = date(a.created_at) and dt.网点ID = a.last_valid_store_id
left join
    (
        select
            t1.pno
            ,group_concat(pl.plt_source) pl_source
        from
            (
                select
                    plt3.pno
                    ,plt3.source
                    ,case plt3.source
                        WHEN 1 THEN 'A'
                        WHEN 2 THEN 'B'
                        WHEN 3 THEN 'C'
                        WHEN 4 THEN 'D'
                        WHEN 5 THEN 'E'
                        WHEN 6 THEN 'F'
                        WHEN 7 THEN 'G'
                        WHEN 8 THEN 'H'
                        WHEN 9 THEN 'I'
                        WHEN 10 THEN 'J'
                        when 11 then 'K'
                        when 12 then 'L'
                    end plt_source
                    ,plt3.created_at created_time
                    ,if(plt3.state in (5,6), plt3.updated_at, now()) updated_time
                from ph_bi.parcel_lose_task plt3
                where
                    plt3.created_at >= '2023-06-14 16:00:00'
                    and plt3.created_at < '2023-06-30 16:00:00'
                    and plt3.source != 12 -- 非L来源
            ) pl
        join t t1 on t1.pno = pl.pno
        where
            pl.updated_time > t1.created_at
            and pl.created_time < t1.updated_time
        group by 1
    ) plt3 on plt3.pno = a.pno;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
select
    plt.pno
    ,plt.id
    ,plt.created_at
    ,plt.state
    ,plt.client_id
    ,plt.last_valid_store_id
    ,if(plt.state = 6 and plt.duty_result = 1, plt.updated_at, null) updated_time
    ,group_concat(plr.staff_id) staff
from ph_bi.parcel_lose_task plt
left join ph_bi.parcel_lose_responsible plr on plr.lose_task_id = plt.id
where
    plt.created_at >= '2023-06-14 16:00:00'
    and plt.created_at < '2023-06-30 16:00:00'
    and plt.source = 12
group by 1
)
select
    a.pno
    ,case a.force_take_photos_type
        when 1 then '打印面单'
        when 2 then '收件人拒收'
        when 3 then '滞留强制拍照'
    end 拍照类型
    ,case a.state
        when 1 then '丢失件待处理'
        when 2 then '疑似丢失件待处理'
        when 3 then '待工单回复'
        when 4 then '已工单回复'
        when 5 then '包裹未丢失'
        when 6 then '丢失件处理完成'
    end 判责结果
    ,a.staff 责任人
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end 客户类型
    ,b.24hour 判责丢失24小时判断
    ,pi.cod_amount/100 cod金额
    ,case pi.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,if(dt.爆仓预警 = 'Alert', '是', '否') 当日是否爆仓
    ,plt3.pl_source 进L来源同时是否有替他来源任务
    ,timestampdiff(hour, a.created_at, a.updated_time) 进入L来源时间到已处理时间段_hour
from
    (
        select
            sf.*
        from
            (
                select
                    t1.*
                    ,sfp.force_take_photos_type
                    ,row_number() over (partition by sfp.pno order by sfp.created_at desc) rk
                from ph_staging.stranded_force_photo_ai_record sfp
                join t t1 on t1.pno = sfp.pno
                where
                    sfp.created_at < date_sub(t1.created_at, interval 8 hour)
                    and (sfp.parcel_enabled = 0 or sfp.matching_enabled = 0)
                    and sfp.force_take_photos_type is not null
            ) sf
        where
            sf.rk = 1
    ) a
left join ph_staging.ka_profile kp on kp.id = a.client_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = a.client_id
left join ph_staging.parcel_info pi on pi.pno = a.pno
left join
    (
        select
            t2.*
            ,case
                when timestampdiff(second, t2.updated_time, pr.min_prat)/3600 <= 24 then '1'
                when timestampdiff(second, t2.updated_time, pr.min_prat)/3600 > 24 then '2'
                else 0
            end 24hour
        from t t2
        left join
            (
                select
                    pr.pno
                    ,min(convert_tz(pr.routed_at, '+00:00', '+08:00')) min_prat
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                join dwm.dwd_dim_dict ddd on ddd.element = pr.route_action and ddd.db = 'ph_staging' and ddd.tablename = 'parcel_route' and ddd.fieldname = 'route_action' and ddd.remark = 'valid'
                where
                    pr.routed_at > date_sub(t1.updated_time, interval 8 hour)
                group by 1
            ) pr on pr.pno = t2.pno
    ) b on b.pno = a.pno
left join dwm.dwd_ph_network_spill_detl_rd dt on dt.统计日期 = date(a.created_at) and dt.网点ID = a.last_valid_store_id
left join
    (
        select
            t1.pno
            ,group_concat(pl.plt_source) pl_source
        from
            (
                select
                    plt3.pno
                    ,plt3.source
                    ,case plt3.source
                        WHEN 1 THEN 'A'
                        WHEN 2 THEN 'B'
                        WHEN 3 THEN 'C'
                        WHEN 4 THEN 'D'
                        WHEN 5 THEN 'E'
                        WHEN 6 THEN 'F'
                        WHEN 7 THEN 'G'
                        WHEN 8 THEN 'H'
                        WHEN 9 THEN 'I'
                        WHEN 10 THEN 'J'
                        when 11 then 'K'
                        when 12 then 'L'
                    end plt_source
                    ,plt3.created_at created_time
                    ,if(plt3.state in (5,6), plt3.updated_at, now()) updated_time
                from ph_bi.parcel_lose_task plt3
                where
                    plt3.created_at >= '2023-06-14 16:00:00'
                    and plt3.created_at < '2023-06-30 16:00:00'
                    and plt3.source != 12 -- 非L来源
            ) pl
        join t t1 on t1.pno = pl.pno
        where
            pl.updated_time > t1.created_at
            and pl.created_time < t1.updated_time
        group by 1
    ) plt3 on plt3.pno = a.pno;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
        ,pi.returned
        ,pi.dst_store_id
        ,pi.client_id
        ,pi.cod_enabled
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-06-14 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,if(t1.returned = 1, '退件', '正向件')  方向
    ,t1.client_id 客户ID
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as 客户类型
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
    ,case
        when t1.state = 6 and di.pno is not null then di.sh_do
        when t1.state = 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is not null then plt.should_do
        when t1.state != 6 and plt.pno is null and pct.pno is not null then 'qaqc-TeamB'
        when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then pr.store_name
        else de.last_store_name
    end 待处理节点
#     ,case
#         when t1.state = 6 and di.pno is not null then 'KAM/揽件网点未协商'
#         when t1.state = 6 and di.pno is null  then '闪速系统沟通处理中'
#         when t1.state != 6 and plt.pno is not null and plt2.pno is not null then '闪速系统沟通处理中'
#         when plt.pno is null and pct.pno is not null then '闪速超时效理赔未完成'
#         when de.last_store_id = t1.ticket_pickup_store_id and plt2.pno is null then '揽件未发出'
#         when t1.dst_store_id = 'PH19040F05' and plt2.pno is null then '弃件未到拍卖仓'
#         when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then 'QAQC无须追责后长期无有效路由'
#         else null
#     end 卡点原因
#     ,de.last_store_name 当前节点
    ,datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) 最后有效路由距今天数
#     ,de.last_cn_route_action 最新一条有效路由
    ,case pr.route_action # 路由动作
         when 'ACCEPT_PARCEL' then '接件扫描'
         when 'ARRIVAL_GOODS_VAN_CHECK_SCAN' then '车货关联到港'
         when 'ARRIVAL_WAREHOUSE_SCAN' then '到件入仓扫描'
         when 'CANCEL_ARRIVAL_WAREHOUSE_SCAN' then '取消到件入仓扫描'
         when 'CANCEL_PARCEL' then '撤销包裹'
         when 'CANCEL_SHIPMENT_WAREHOUSE' then '取消发件出仓'
         when 'CHANGE_PARCEL_CANCEL' then '修改包裹为撤销'
         when 'CHANGE_PARCEL_CLOSE' then '修改包裹为异常关闭'
         when 'CHANGE_PARCEL_IN_TRANSIT' then '修改包裹为运输中'
         when 'CHANGE_PARCEL_INFO' then '修改包裹信息'
         when 'CHANGE_PARCEL_SIGNED' then '修改包裹为签收'
         when 'CLAIMS_CLOSE' then '理赔关闭'
         when 'CLAIMS_COMPLETE' then '理赔完成'
         when 'CLAIMS_CONTACT' then '已联系客户'
         when 'CLAIMS_TRANSFER_CS' then '转交总部cs处理'
         when 'CLOSE_ORDER' then '关闭订单'
         when 'CONTINUE_TRANSPORT' then '疑难件继续配送'
         when 'CREATE_WORK_ORDER' then '创建工单'
         when 'CUSTOMER_CHANGE_PARCEL_INFO' then '客户修改包裹信息'
         when 'CUSTOMER_OPERATING_RETURN' then '客户操作退回寄件人'
         when 'DELIVERY_CONFIRM' then '确认妥投'
         when 'DELIVERY_MARKER' then '派件标记'
         when 'DELIVERY_PICKUP_STORE_SCAN' then '自提取件扫描'
         when 'DELIVERY_TICKET_CREATION_SCAN' then '交接扫描'
         when 'DELIVERY_TRANSFER' then '派件转单'
         when 'DEPARTURE_GOODS_VAN_CK_SCAN' then '车货关联出港'
         when 'DETAIN_WAREHOUSE' then '货件留仓'
         when 'DIFFICULTY_FINISH_INDEMNITY' then '疑难件支付赔偿'
         when 'DIFFICULTY_HANDOVER' then '疑难件交接'
         when 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE' then '疑难件交接货件留仓'
         when 'DIFFICULTY_RE_TRANSIT' then '疑难件退回区域总部/重启运送'
         when 'DIFFICULTY_RETURN' then '疑难件退回寄件人'
         when 'DIFFICULTY_SEAL' then '集包异常'
         when 'DISCARD_RETURN_BKK' then '丢弃包裹的，换单后寄回BKK'
         when 'DISTRIBUTION_INVENTORY' then '分拨盘库'
         when 'DWS_WEIGHT_IMAGE' then 'DWS复秤照片'
         when 'EXCHANGE_PARCEL' then '换货'
         when 'FAKE_CANCEL_HANDLE' then '虚假撤销判责'
         when 'FLASH_HOME_SCAN' then 'FH交接扫描'
         when 'FORCE_TAKE_PHOTO' then '强制拍照路由'
         when 'HAVE_HAIR_SCAN_NO_TO' then '有发无到'
         when 'HURRY_PARCEL' then '催单'
         when 'INCOMING_CALL' then '来电接听'
         when 'INTERRUPT_PARCEL_AND_RETURN' then '中断运输并退回'
         when 'INVENTORY' then '盘库'
         when 'LOSE_PARCEL_TEAM_OPERATION' then '丢失件团队处理'
         when 'MANUAL_REMARK' then '添加备注'
         when 'MISS_PICKUP_HANDLE' then '漏包裹揽收判责'
         when 'MISSING_PARCEL_SCAN' then '丢失件包裹操作'
         when 'NOTICE_LOST_PARTS_TEAM' then '已通知丢失件团队'
         when 'PARCEL_HEADLESS_CLAIMED' then '无头件包裹已认领'
         when 'PARCEL_HEADLESS_PRINTED' then '无头件包裹已打单'
         when 'PENDING_RETURN' then '待退件'
         when 'PHONE' then '电话联系'
         when 'PICK_UP_STORE' then '待自提取件'
         when 'PICKUP_RETURN_RECEIPT' then '签回单揽收'
         when 'PRINTING' then '打印面单'
         when 'QAQC_OPERATION' then 'QAQC判责'
         when 'RECEIVE_WAREHOUSE_SCAN' then '收件入仓'
         when 'RECEIVED' then '已揽收,初始化动作，实际情况并没有作用'
         when 'REFUND_CONFIRM' then '退件妥投'
         when 'REPAIRED' then '上报问题修复路由'
         when 'REPLACE_PNO' then '换单'
         when 'REPLY_WORK_ORDER' then '回复工单'
         when 'REVISION_TIME' then '改约时间'
         when 'SEAL' then '集包'
         when 'SEAL_NUMBER_CHANGE' then '集包件数变化'
         when 'SHIPMENT_WAREHOUSE_SCAN' then '发件出仓扫描'
         when 'SORTER_WEIGHT_IMAGE' then '分拣机复秤照片'
         when 'SORTING_SCAN' then '分拣扫描'
         when 'STAFF_INFO_UPDATE_WEIGHT' then '快递员修改重量'
         when 'STORE_KEEPER_UPDATE_WEIGHT' then '仓管员复秤'
         when 'STORE_SORTER_UPDATE_WEIGHT' then '分拣机复秤'
         when 'SYSTEM_AUTO_RETURN' then '系统自动退件'
         when 'TAKE_PHOTO' then '异常打单拍照'
         when 'THIRD_EXPRESS_ROUTE' then '第三方公司路由'
         when 'THIRD_PARTY_REASON_DETAIN' then '第三方原因滞留'
         when 'TICKET_WEIGHT_IMAGE' then '揽收称重照片'
         when 'TRANSFER_LOST_PARTS_TEAM' then '已转交丢失件团队'
         when 'TRANSFER_QAQC' then '转交QAQC处理'
         when 'UNSEAL' then '拆包'
         when 'UNSEAL_NO_PARCEL' then '上报包裹不在集包里'
         when 'UNSEAL_NOT_SCANNED' then '集包已拆包，本包裹未被扫描'
         when 'VEHICLE_ACCIDENT_REG' then '车辆车祸登记'
         when 'VEHICLE_ACCIDENT_REGISTRATION' then '车辆车祸登记'
         when 'VEHICLE_WET_DAMAGE_REG' then '车辆湿损登记'
         when 'VEHICLE_WET_DAMAGE_REGISTRATION' then '车辆湿损登记'
        end as 最后一条路由
    ,convert_tz(pr.routed_at ,'+00:00', '+08:00') 最新一条有效路由时间
    ,datediff(now(), de.dst_routed_at) 目的地网点停留时间
    ,de.dst_store 目的地网点
    ,de.src_store 揽收网点
    ,de.pickup_time 揽收时间
    ,de.pick_date 揽收日期
    ,if(hold.pno is not null, 'yes', 'no' ) 是否有holding标记
    ,if(pr3.pno is not null, 'yes', 'no') 是否有待退件标记
    ,td.try_num 尝试派送次数
from t t1
left join ph_staging.ka_profile kp on t1.client_id = kp.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,pr.route_action
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
    ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
left join
    (
        select
            plt.pno
        from ph_bi.parcel_claim_task plt
        join t t4  on t4.pno = plt.pno
        where
            plt.state not in (6,7,8)
            and plt.source = 11
        group by 1
    ) pct on pct.pno = t1.pno
left join
    (
        select
            pr2.pno
        from ph_staging.parcel_route pr2
        join t t1 on t1.pno = pr2.pno
        where
            pr2.route_action = 'REFUND_CONFIRM'
        group by 1
    ) hold on hold.pno = t1.pno
left join
    (
        select
            pr2.pno
        from  ph_staging.parcel_route pr2
        join t t1 on t1.pno = pr2.pno
        where
            pr2.route_action = 'PENDING_RETURN'
        group by 1
    ) pr3 on pr3.pno = t1.pno
left join
    (
        select
            td.pno
            ,count(distinct date(convert_tz(tdm.created_at, '+00:00', '+08:00'))) try_num
        from ph_staging.ticket_delivery td
        join t t1 on t1.pno = td.pno
        left join ph_staging.ticket_delivery_marker tdm on tdm.delivery_id = td.id
        group by 1
    ) td on td.pno = t1.pno
group by t1.pno;
;-- -. . -..- - / . -. - .-. -.--
select
    di.pno 运单号
    ,if(kp.id is not null, 'KA', 'GE') 客户类型
    ,ddd.CN_element 疑难件原因
    ,ss.name miniCS处理网点
    ,ss2.name 揽收网点
    ,ss3.name 上报网点
    ,case pi.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,convert_tz(pi.created_at, '+00:00', '+08:00') 揽收时间
    ,convert_tz(cdt.created_at, '+00:00', '+08:00') 疑难件上报时间
    ,date(convert_tz(cdt.created_at, '+00:00', '+08:00')) 疑难件上报日期
    ,if(cdt.state = 1, convert_tz(cdt.updated_at, '+00:00', '+08:00'), null) 处理完成时间
    ,if(cdt.state = 1, '是', '否') 是否时效内处理完成
    ,'PDC' miniCS处理网点类型
#     ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 12 hour)), interval 2 hour), 'before_12', 'should_today') deal_select
#     ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 12 hour)), interval 2 hour), date_add(date(date_add(cdt.created_at, interval 12 hour)),interval 12 hour), date_add(date(date_add(cdt.created_at, interval 12 hour)),interval 24 hour)) should_deal_time
    ,date(date_add(cdt.created_at, interval 12 hour)) 日期
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join ph_staging.parcel_info pi on pi.pno = di.pno
left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
left join ph_staging.sys_store ss on ss.id = cdt.organization_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
left join ph_staging.sys_store ss2 on ss2.id = pi.ticket_pickup_store_id
left join ph_staging.ka_profile kp on kp.id = cdt.client_id
left join ph_staging.sys_store ss3 on ss3.id = di.store_id
where
    cdt.organization_type = 1 -- FH&miniCS
    and bc.client_id is  null
    and ss.category in (14) --
        and di.diff_marker_category not in (38,39,2,17,32,69,7,22)
    and date(date_add(cdt.created_at, interval 12 hour)) >= '2023-07-01'
    and date(date_add(cdt.created_at, interval 12 hour)) <= '2023-07-04'

union all

select
    di.pno 运单号
    ,if(kp.id is not null, 'KA', 'GE') 客户类型
    ,ddd.CN_element 疑难件原因
    ,ss.name miniCS处理网点
    ,ss2.name 揽收网点
    ,ss3.name 上报网点
    ,case pi.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,convert_tz(pi.created_at, '+00:00', '+08:00') 揽收时间
    ,convert_tz(cdt.created_at, '+00:00', '+08:00') 疑难件上报时间
    ,date(convert_tz(cdt.created_at, '+00:00', '+08:00')) 疑难件上报日期
    ,if(cdt.state = 1, convert_tz(cdt.updated_at, '+00:00', '+08:00'), null) 处理完成时间
    ,if(cdt.state = 1, '是', '否') 是否时效内处理完成
    ,if(ss.category = 1, 'SP', 'FH') miniCS处理网点类型
#     ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 14 hour)), interval 2 hour), 'before_12', 'should_today') deal_select
#     ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 14 hour)), interval 2 hour), date_add(date(date_add(cdt.created_at, interval 14 hour)),interval 12 hour), date_add(date(date_add(cdt.created_at, interval 14 hour)),interval 24 hour)) should_deal_time
    ,date(date_add(cdt.created_at, interval 14 hour)) 日期
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join ph_staging.parcel_info pi on pi.pno = di.pno
left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
left join ph_staging.sys_store ss on ss.id = cdt.organization_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
left join ph_staging.sys_store ss2 on ss2.id = pi.ticket_pickup_store_id
left join ph_staging.ka_profile kp on kp.id = cdt.client_id
left join ph_staging.sys_store ss3 on ss3.id = di.store_id
where
    cdt.organization_type = 1 -- FH&miniCS
    and bc.client_id is  null
    and ss.category in (1,6) -- PDC
    and di.diff_marker_category not in (38,39,2,17,32,69,7,22)
    and date(date_add(cdt.created_at, interval 14 hour)) >= '2023-07-01'
    and date(date_add(cdt.created_at, interval 14 hour)) <= '2023-07-04';
;-- -. . -..- - / . -. - .-. -.--
select
    di.pno 运单号
    ,if(kp.id is not null, 'KA', 'GE') 客户类型
    ,ddd.CN_element 疑难件原因
    ,ss.name miniCS处理网点
    ,ss2.name 揽收网点
    ,ss3.name 上报网点
    ,case pi.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,convert_tz(pi.created_at, '+00:00', '+08:00') 揽收时间
    ,convert_tz(cdt.created_at, '+00:00', '+08:00') 疑难件上报时间
    ,date(convert_tz(cdt.created_at, '+00:00', '+08:00')) 疑难件上报日期
    ,if(cdt.state = 1, convert_tz(cdt.updated_at, '+00:00', '+08:00'), null) 处理完成时间
    ,if(cdt.state = 1, '是', '否') 是否时效内处理完成
    ,'PDC' miniCS处理网点类型
#     ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 12 hour)), interval 2 hour), 'before_12', 'should_today') deal_select
#     ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 12 hour)), interval 2 hour), date_add(date(date_add(cdt.created_at, interval 12 hour)),interval 12 hour), date_add(date(date_add(cdt.created_at, interval 12 hour)),interval 24 hour)) should_deal_time
    ,date(date_add(cdt.created_at, interval 12 hour)) 日期
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join ph_staging.parcel_info pi on pi.pno = di.pno
left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
left join ph_staging.sys_store ss on ss.id = cdt.organization_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
left join ph_staging.sys_store ss2 on ss2.id = pi.ticket_pickup_store_id
left join ph_staging.ka_profile kp on kp.id = cdt.client_id
left join ph_staging.sys_store ss3 on ss3.id = di.store_id
where
    cdt.organization_type = 1 -- FH&miniCS
    and bc.client_id is  null
    and ss.category = 14
    and di.diff_marker_category not in (38,39,2,17,32,69,7,22)
    and date(date_add(cdt.created_at, interval 12 hour)) >= '2023-07-01'
    and date(date_add(cdt.created_at, interval 12 hour)) <= '2023-07-04'

union all

select
    di.pno 运单号
    ,if(kp.id is not null, 'KA', 'GE') 客户类型
    ,ddd.CN_element 疑难件原因
    ,ss.name miniCS处理网点
    ,ss2.name 揽收网点
    ,ss3.name 上报网点
    ,case pi.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,convert_tz(pi.created_at, '+00:00', '+08:00') 揽收时间
    ,convert_tz(cdt.created_at, '+00:00', '+08:00') 疑难件上报时间
    ,date(convert_tz(cdt.created_at, '+00:00', '+08:00')) 疑难件上报日期
    ,if(cdt.state = 1, convert_tz(cdt.updated_at, '+00:00', '+08:00'), null) 处理完成时间
    ,if(cdt.state = 1, '是', '否') 是否时效内处理完成
    ,if(ss.category = 1, 'SP', 'FH') miniCS处理网点类型
#     ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 14 hour)), interval 2 hour), 'before_12', 'should_today') deal_select
#     ,if(cdt.created_at < date_add(date(date_add(cdt.created_at, interval 14 hour)), interval 2 hour), date_add(date(date_add(cdt.created_at, interval 14 hour)),interval 12 hour), date_add(date(date_add(cdt.created_at, interval 14 hour)),interval 24 hour)) should_deal_time
    ,date(date_add(cdt.created_at, interval 14 hour)) 日期
from ph_staging.customer_diff_ticket cdt
left join ph_staging.diff_info di on di.id = cdt.diff_info_id
left join ph_staging.parcel_info pi on pi.pno = di.pno
left join dwm.dwd_dim_dict ddd on ddd.element = di.diff_marker_category and ddd.db = 'ph_staging' and ddd.tablename = 'diff_info' and ddd.fieldname = 'diff_marker_category'
left join ph_staging.sys_store ss on ss.id = cdt.organization_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = cdt.client_id
left join ph_staging.sys_store ss2 on ss2.id = pi.ticket_pickup_store_id
left join ph_staging.ka_profile kp on kp.id = cdt.client_id
left join ph_staging.sys_store ss3 on ss3.id = di.store_id
where
    cdt.organization_type = 1 -- FH&miniCS
    and bc.client_id is  null
    and ss.category in (1,6) -- PDC
    and di.diff_marker_category not in (38,39,2,17,32,69,7,22)
    and date(date_add(cdt.created_at, interval 14 hour)) >= '2023-07-01'
    and date(date_add(cdt.created_at, interval 14 hour)) <= '2023-07-04';
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date >= '$.2023-07-03'
        and ds.stat_date <= '$.2023-07-03'
)
select
    a.stat_date
#     ,a.store_id
#     ,dp.store_name
#     ,dp.region_name
#     ,dp.piece_name
#     ,a.应交接
#     ,a.已交接
#     ,concat(round(a.交接率*100,2),'%') as 交接率
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null and a.e_check is null, 'C', '')) 交接评级
    ,count(distinct a.store_id) 网点数
#     ,concat(round(a.A_rate * 100,2),'%')  'A（<0930 ）'
#     ,concat(round(a.B_rate * 100,2),'%') 'B（0930<=X<1200）'
#     ,concat(round(a.C_rate * 100,2),'%')'C（1200<=X<1600 ）'
#     ,concat(round(a.D_rate * 100,2),'%')'D（>=1600）'
from
    (
        select
            t1.store_id
            ,t1.stat_date
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 , 'E', null ) e_check
        from t t1
        left join
            (
                select
                    pr.pno
                    ,pr.store_id
                    ,pr.store_name
                    ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                    ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                   and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                  and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
            ) sc on sc.pno = t1.pno and sc.rk = 1
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
where
    dp.store_category = 1
group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date >= '2023-07-01'
        and ds.stat_date <= '2023-07-03'
)
select
    a.stat_date
#     ,a.store_id
#     ,dp.store_name
#     ,dp.region_name
#     ,dp.piece_name
#     ,a.应交接
#     ,a.已交接
#     ,concat(round(a.交接率*100,2),'%') as 交接率
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null and a.e_check is null, 'C', '')) 交接评级
    ,count(distinct a.store_id) 网点数
#     ,concat(round(a.A_rate * 100,2),'%')  'A（<0930 ）'
#     ,concat(round(a.B_rate * 100,2),'%') 'B（0930<=X<1200）'
#     ,concat(round(a.C_rate * 100,2),'%')'C（1200<=X<1600 ）'
#     ,concat(round(a.D_rate * 100,2),'%')'D（>=1600）'
from
    (
        select
            t1.store_id
            ,t1.stat_date
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 , 'E', null ) e_check
        from t t1
        left join
            (
                select
                    pr.pno
                    ,pr.store_id
                    ,pr.store_name
                    ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                    ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                   and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                  and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
            ) sc on sc.pno = t1.pno and sc.rk = 1
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
where
    dp.store_category = 1
group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
     ds.stat_date = date_sub(curdate(),interval 1 day)
)
select
    now() 统计时间
    ,a.store_id 网点ID
    ,dp.store_name 网点名称
    ,dp.region_name 大区
    ,dp.piece_name 片区
    ,a.应交接
    ,a.已交接
    ,concat(round(a.交接率*100,2),'%') as 交接率
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null and a.e_check is null, 'C', '')) 交接评级

    ,concat(round(a.A_rate*100,2),'%')  'A（<0930 ）'
    ,concat(round(a.B_rate *100,2),'%') 'B（0930<=X<1200）'
    ,concat(round(a.C_rate *100,2),'%')'C（1200<=X<1600 ）'
    ,concat(round(a.D_rate  *100,2),'%')'D（>=1600）'
from
    (
        select
            t1.store_id
            ,t1.stat_date
#             ,sc.route_time 第一次交接时间
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 , 'E', null ) e_check
        from t t1
        left join
            (
                select
                    pr.pno
                    ,pr.store_id
                    ,pr.store_name
                    ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                    ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                   and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                  and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
            ) sc on sc.pno = t1.pno and sc.rk = 1
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
where
    dp.store_category = 1;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date >= '2023-07-03'
        and ds.stat_date <= '2023-07-03'
)
select
    a.stat_date
#     ,a.store_id
#     ,dp.store_name
#     ,dp.region_name
#     ,dp.piece_name
#     ,a.应交接
#     ,a.已交接
#     ,concat(round(a.交接率*100,2),'%') as 交接率
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null and a.e_check is null, 'C', '')) 交接评级
    ,count(distinct a.store_id) 网点数
#     ,concat(round(a.A_rate * 100,2),'%')  'A（<0930 ）'
#     ,concat(round(a.B_rate * 100,2),'%') 'B（0930<=X<1200）'
#     ,concat(round(a.C_rate * 100,2),'%')'C（1200<=X<1600 ）'
#     ,concat(round(a.D_rate * 100,2),'%')'D（>=1600）'
from
    (
        select
            t1.store_id
            ,t1.stat_date
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 , 'E', null ) e_check
        from t t1
        left join
            (
                select
                    pr.pno
                    ,pr.store_id
                    ,pr.store_name
                    ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                    ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                   and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                  and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
            ) sc on sc.pno = t1.pno and sc.rk = 1
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
where
    dp.store_category = 1
group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date >= '2023-07-02'
        and ds.stat_date <= '2023-07-03'
)
select
    a.stat_date
#     ,a.store_id
#     ,dp.store_name
#     ,dp.region_name
#     ,dp.piece_name
#     ,a.应交接
#     ,a.已交接
#     ,concat(round(a.交接率*100,2),'%') as 交接率
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null and a.e_check is null, 'C', '')) 交接评级
    ,count(distinct a.store_id) 网点数
#     ,concat(round(a.A_rate * 100,2),'%')  'A（<0930 ）'
#     ,concat(round(a.B_rate * 100,2),'%') 'B（0930<=X<1200）'
#     ,concat(round(a.C_rate * 100,2),'%')'C（1200<=X<1600 ）'
#     ,concat(round(a.D_rate * 100,2),'%')'D（>=1600）'
from
    (
        select
            t1.store_id
            ,t1.stat_date
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 , 'E', null ) e_check
        from t t1
        left join
            (
                select
                    pr.pno
                    ,pr.store_id
                    ,pr.store_name
                    ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                    ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                   and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                  and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
            ) sc on sc.pno = t1.pno and sc.rk = 1
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
where
    dp.store_category = 1
group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date >= '2023-07-02'
        and ds.stat_date <= '2023-07-03'
)
select
    a.stat_date
#     ,a.store_id
#     ,dp.store_name
#     ,dp.region_name
#     ,dp.piece_name
#     ,a.应交接
#     ,a.已交接
#     ,concat(round(a.交接率*100,2),'%') as 交接率
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null and a.e_check is null, 'C', '')) 交接评级
    ,count(distinct a.store_id) 网点数
#     ,concat(round(a.A_rate * 100,2),'%')  'A（<0930 ）'
#     ,concat(round(a.B_rate * 100,2),'%') 'B（0930<=X<1200）'
#     ,concat(round(a.C_rate * 100,2),'%')'C（1200<=X<1600 ）'
#     ,concat(round(a.D_rate * 100,2),'%')'D（>=1600）'
from
    (
        select
            t1.store_id
            ,t1.stat_date
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 , 'E', null ) e_check
        from t t1
        left join
            (
                select
                    pr.pno
                    ,pr.store_id
                    ,pr.store_name
                    ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                    ,date(convert_tz(pr.routed_at, '+00:00', '+08:00')) route_date
                    ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                where
                    pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                   and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                  and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
            ) sc on sc.pno = t1.pno and sc.rk = 1 and t1.stat_date = sc.route_date
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
where
    dp.store_category = 1
group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date >= '2023-07-02'
        and ds.stat_date <= '2023-07-03'
)
select
    a.stat_date
#     ,a.store_id
#     ,dp.store_name
#     ,dp.region_name
#     ,dp.piece_name
#     ,a.应交接
#     ,a.已交接
#     ,concat(round(a.交接率*100,2),'%') as 交接率
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null and a.e_check is null, 'C', '')) 交接评级
    ,count(distinct a.store_id) 网点数
#     ,concat(round(a.A_rate * 100,2),'%')  'A（<0930 ）'
#     ,concat(round(a.B_rate * 100,2),'%') 'B（0930<=X<1200）'
#     ,concat(round(a.C_rate * 100,2),'%')'C（1200<=X<1600 ）'
#     ,concat(round(a.D_rate * 100,2),'%')'D（>=1600）'
from
    (
        select
            t1.store_id
            ,t1.stat_date
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 , 'E', null ) e_check
        from t t1
        left join
            (
                select
                    sc.*
                from
                    (
                        select
                            pr.pno
                            ,pr.store_id
                            ,pr.store_name
                            ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                            ,date(convert_tz(pr.routed_at, '+00:00', '+08:00')) route_date
                            ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                        from ph_staging.parcel_route pr
                        join t t1 on t1.pno = pr.pno
                        where
                            pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                           and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                          and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
                    ) sc
                where
                    sc.rk = 1
            ) sc on sc.pno = t1.pno and t1.stat_date = sc.route_date
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
where
    dp.store_category = 1
group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date >= '2023-07-02'
        and ds.stat_date <= '2023-07-03'
)
select
    a.stat_date
#     ,a.store_id
#     ,dp.store_name
#     ,dp.region_name
#     ,dp.piece_name
#     ,a.应交接
#     ,a.已交接
#     ,concat(round(a.交接率*100,2),'%') as 交接率
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null and a.e_check is null, 'C', '')) 交接评级
    ,count(distinct a.store_id) 网点数
#     ,concat(round(a.A_rate * 100,2),'%')  'A（<0930 ）'
#     ,concat(round(a.B_rate * 100,2),'%') 'B（0930<=X<1200）'
#     ,concat(round(a.C_rate * 100,2),'%')'C（1200<=X<1600 ）'
#     ,concat(round(a.D_rate * 100,2),'%')'D（>=1600）'
from
    (
        select
            t1.store_id
            ,t1.stat_date
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 , 'E', null ) e_check
        from t t1
        left join
            (
                select
                    sc.*
                from
                    (
                        select
                            pr.pno
                            ,pr.store_id
                            ,pr.store_name
                            ,t1.stat_date
                            ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                            ,date(convert_tz(pr.routed_at, '+00:00', '+08:00')) route_date
                            ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                        from ph_staging.parcel_route pr
                        join t t1 on t1.pno = pr.pno
                        where
                            pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                           and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                          and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
                    ) sc
                where
                    sc.rk = 1
            ) sc on sc.pno = t1.pno and t1.stat_date = sc.stat_date
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
where
    dp.store_category = 1
group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date >= '2023-07-03'
        and ds.stat_date <= '2023-07-03'
)
select
    a.stat_date
#     ,a.store_id
#     ,dp.store_name
#     ,dp.region_name
#     ,dp.piece_name
#     ,a.应交接
#     ,a.已交接
#     ,concat(round(a.交接率*100,2),'%') as 交接率
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null and a.e_check is null, 'C', '')) 交接评级
    ,count(distinct a.store_id) 网点数
#     ,concat(round(a.A_rate * 100,2),'%')  'A（<0930 ）'
#     ,concat(round(a.B_rate * 100,2),'%') 'B（0930<=X<1200）'
#     ,concat(round(a.C_rate * 100,2),'%')'C（1200<=X<1600 ）'
#     ,concat(round(a.D_rate * 100,2),'%')'D（>=1600）'
from
    (
        select
            t1.store_id
            ,t1.stat_date
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 , 'E', null ) e_check
        from t t1
        left join
            (
                select
                    sc.*
                from
                    (
                        select
                            pr.pno
                            ,pr.store_id
                            ,pr.store_name
                            ,t1.stat_date
                            ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                            ,date(convert_tz(pr.routed_at, '+00:00', '+08:00')) route_date
                            ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                        from ph_staging.parcel_route pr
                        join t t1 on t1.pno = pr.pno
                        where
                            pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                           and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                          and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
                    ) sc
                where
                    sc.rk = 1
            ) sc on sc.pno = t1.pno and t1.stat_date = sc.stat_date
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
where
    dp.store_category = 1
group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date >= '2023-07-03'
        and ds.stat_date <= '2023-07-03'
)
select
    a.stat_date
    ,a.store_id
    ,dp.store_name
    ,dp.region_name
    ,dp.piece_name
    ,a.应交接
    ,a.已交接
#     ,concat(round(a.交接率*100,2),'%') as 交接率
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null and a.e_check is null, 'C', '')) 交接评级
    ,count(distinct a.store_id) 网点数
    ,concat(round(a.A_rate * 100,2),'%')  'A（<0930 ）'
    ,concat(round(a.B_rate * 100,2),'%') 'B（0930<=X<1200）'
    ,concat(round(a.C_rate * 100,2),'%')'C（1200<=X<1600 ）'
    ,concat(round(a.D_rate * 100,2),'%')'D（>=1600）'
from
    (
        select
            t1.store_id
            ,t1.stat_date
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 , 'E', null ) e_check
        from t t1
        left join
            (
                select
                    sc.*
                from
                    (
                        select
                            pr.pno
                            ,pr.store_id
                            ,pr.store_name
                            ,t1.stat_date
                            ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                            ,date(convert_tz(pr.routed_at, '+00:00', '+08:00')) route_date
                            ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                        from ph_staging.parcel_route pr
                        join t t1 on t1.pno = pr.pno
                        where
                            pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                           and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                          and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
                    ) sc
                where
                    sc.rk = 1
            ) sc on sc.pno = t1.pno and t1.stat_date = sc.stat_date
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
where
    dp.store_category = 1;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date >= '2023-07-03'
        and ds.stat_date <= '2023-07-03'
)
select
    a.stat_date
    ,a.store_id
    ,dp.store_name
    ,dp.region_name
    ,dp.piece_name
    ,a.应交接
    ,a.已交接
    ,concat(round(a.交接率*100,2),'%') as 交接率
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null and a.e_check is null, 'C', '')) 交接评级
#     ,count(distinct a.store_id) 网点数
    ,concat(round(a.A_rate * 100,2),'%')  'A（<0930 ）'
    ,concat(round(a.B_rate * 100,2),'%') 'B（0930<=X<1200）'
    ,concat(round(a.C_rate * 100,2),'%')'C（1200<=X<1600 ）'
    ,concat(round(a.D_rate * 100,2),'%')'D（>=1600）'
from
    (
        select
            t1.store_id
            ,t1.stat_date
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 , 'E', null ) e_check
        from t t1
        left join
            (
                select
                    sc.*
                from
                    (
                        select
                            pr.pno
                            ,pr.store_id
                            ,pr.store_name
                            ,t1.stat_date
                            ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                            ,date(convert_tz(pr.routed_at, '+00:00', '+08:00')) route_date
                            ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                        from ph_staging.parcel_route pr
                        join t t1 on t1.pno = pr.pno
                        where
                            pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                           and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                          and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
                    ) sc
                where
                    sc.rk = 1
            ) sc on sc.pno = t1.pno and t1.stat_date = sc.stat_date
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
where
    dp.store_category = 1;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date >= '2023-07-02'
        and ds.stat_date <= '2023-07-03'
)
select
    a.stat_date
    ,a.store_id
    ,dp.store_name
    ,dp.region_name
    ,dp.piece_name
    ,a.应交接
    ,a.已交接
    ,concat(round(a.交接率*100,2),'%') as 交接率
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null and a.e_check is null, 'C', '')) 交接评级
#     ,count(distinct a.store_id) 网点数
    ,concat(round(a.A_rate * 100,2),'%')  'A（<0930 ）'
    ,concat(round(a.B_rate * 100,2),'%') 'B（0930<=X<1200）'
    ,concat(round(a.C_rate * 100,2),'%')'C（1200<=X<1600 ）'
    ,concat(round(a.D_rate * 100,2),'%')'D（>=1600）'
from
    (
        select
            t1.store_id
            ,t1.stat_date
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 , 'E', null ) e_check
        from t t1
        left join
            (
                select
                    sc.*
                from
                    (
                        select
                            pr.pno
                            ,pr.store_id
                            ,pr.store_name
                            ,t1.stat_date
                            ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                            ,date(convert_tz(pr.routed_at, '+00:00', '+08:00')) route_date
                            ,row_number() over (partition by pr.pno order by pr.routed_at) rk
                        from ph_staging.parcel_route pr
                        join t t1 on t1.pno = pr.pno
                        where
                            pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                           and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                          and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
                    ) sc
                where
                    sc.rk = 1
            ) sc on sc.pno = t1.pno and t1.stat_date = sc.stat_date
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
where
    dp.store_category = 1;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date >= '2023-07-02'
        and ds.stat_date <= '2023-07-03'
)
select
    a.stat_date
    ,a.store_id
    ,dp.store_name
    ,dp.region_name
    ,dp.piece_name
    ,a.应交接
    ,a.已交接
    ,concat(round(a.交接率*100,2),'%') as 交接率
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null and a.e_check is null, 'C', '')) 交接评级
#     ,count(distinct a.store_id) 网点数
    ,concat(round(a.A_rate * 100,2),'%')  'A（<0930 ）'
    ,concat(round(a.B_rate * 100,2),'%') 'B（0930<=X<1200）'
    ,concat(round(a.C_rate * 100,2),'%')'C（1200<=X<1600 ）'
    ,concat(round(a.D_rate * 100,2),'%')'D（>=1600）'
from
    (
        select
            t1.store_id
            ,t1.stat_date
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 , 'E', null ) e_check
        from t t1
        left join
            (
                select
                    sc.*
                from
                    (
                        select
                            pr.pno
                            ,pr.store_id
                            ,pr.store_name
                            ,t1.stat_date
                            ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                            ,date(convert_tz(pr.routed_at, '+00:00', '+08:00')) route_date
                            ,row_number() over (partition by pr.pno,t1.stat_date order by pr.routed_at) rk
                        from ph_staging.parcel_route pr
                        join t t1 on t1.pno = pr.pno
                        where
                            pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                           and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                          and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
                    ) sc
                where
                    sc.rk = 1
            ) sc on sc.pno = t1.pno and t1.stat_date = sc.stat_date
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
where
    dp.store_category = 1;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date >= '2023-07-02'
        and ds.stat_date <= '2023-07-03'
)
select
    a.stat_date
    ,a.store_id
    ,dp.store_name
#     ,dp.region_name
#     ,dp.piece_name
#     ,a.应交接
#     ,a.已交接
#     ,concat(round(a.交接率*100,2),'%') as 交接率
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null and a.e_check is null, 'C', '')) 交接评级
    ,count(distinct a.store_id) 网点数
#     ,concat(round(a.A_rate * 100,2),'%')  'A（<0930 ）'
#     ,concat(round(a.B_rate * 100,2),'%') 'B（0930<=X<1200）'
#     ,concat(round(a.C_rate * 100,2),'%')'C（1200<=X<1600 ）'
#     ,concat(round(a.D_rate * 100,2),'%')'D（>=1600）'
from
    (
        select
            t1.store_id
            ,t1.stat_date
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 , 'E', null ) e_check
        from t t1
        left join
            (
                select
                    sc.*
                from
                    (
                        select
                            pr.pno
                            ,pr.store_id
                            ,pr.store_name
                            ,t1.stat_date
                            ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                            ,date(convert_tz(pr.routed_at, '+00:00', '+08:00')) route_date
                            ,row_number() over (partition by pr.pno,t1.stat_date order by pr.routed_at) rk
                        from ph_staging.parcel_route pr
                        join t t1 on t1.pno = pr.pno
                        where
                            pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                           and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                          and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
                    ) sc
                where
                    sc.rk = 1
            ) sc on sc.pno = t1.pno and t1.stat_date = sc.stat_date
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
where
    dp.store_category = 1
group by 1,2,3,4;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date >= '2023-07-02'
        and ds.stat_date <= '2023-07-03'
)
select
    a.stat_date
#     ,a.store_id
#     ,dp.store_name
#     ,dp.region_name
#     ,dp.piece_name
#     ,a.应交接
#     ,a.已交接
#     ,concat(round(a.交接率*100,2),'%') as 交接率
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null and a.e_check is null, 'C', '')) 交接评级
    ,count(distinct a.store_id) 网点数
#     ,concat(round(a.A_rate * 100,2),'%')  'A（<0930 ）'
#     ,concat(round(a.B_rate * 100,2),'%') 'B（0930<=X<1200）'
#     ,concat(round(a.C_rate * 100,2),'%')'C（1200<=X<1600 ）'
#     ,concat(round(a.D_rate * 100,2),'%')'D（>=1600）'
from
    (
        select
            t1.store_id
            ,t1.stat_date
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 , 'E', null ) e_check
        from t t1
        left join
            (
                select
                    sc.*
                from
                    (
                        select
                            pr.pno
                            ,pr.store_id
                            ,pr.store_name
                            ,t1.stat_date
                            ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                            ,date(convert_tz(pr.routed_at, '+00:00', '+08:00')) route_date
                            ,row_number() over (partition by pr.pno,t1.stat_date order by pr.routed_at) rk
                        from ph_staging.parcel_route pr
                        join t t1 on t1.pno = pr.pno
                        where
                            pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                           and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                          and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
                    ) sc
                where
                    sc.rk = 1
            ) sc on sc.pno = t1.pno and t1.stat_date = sc.stat_date
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
where
    dp.store_category = 1
group by 1,2,3,4;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date >= '2023-07-02'
        and ds.stat_date <= '2023-07-03'
)
select
    a.stat_date
#     ,a.store_id
#     ,dp.store_name
#     ,dp.region_name
#     ,dp.piece_name
#     ,a.应交接
#     ,a.已交接
#     ,concat(round(a.交接率*100,2),'%') as 交接率
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null and a.e_check is null, 'C', '')) 交接评级
    ,count(distinct a.store_id) 网点数
#     ,concat(round(a.A_rate * 100,2),'%')  'A（<0930 ）'
#     ,concat(round(a.B_rate * 100,2),'%') 'B（0930<=X<1200）'
#     ,concat(round(a.C_rate * 100,2),'%')'C（1200<=X<1600 ）'
#     ,concat(round(a.D_rate * 100,2),'%')'D（>=1600）'
from
    (
        select
            t1.store_id
            ,t1.stat_date
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 , 'E', null ) e_check
        from t t1
        left join
            (
                select
                    sc.*
                from
                    (
                        select
                            pr.pno
                            ,pr.store_id
                            ,pr.store_name
                            ,t1.stat_date
                            ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                            ,date(convert_tz(pr.routed_at, '+00:00', '+08:00')) route_date
                            ,row_number() over (partition by pr.pno,t1.stat_date order by pr.routed_at) rk
                        from ph_staging.parcel_route pr
                        join t t1 on t1.pno = pr.pno
                        where
                            pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                           and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                          and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
                    ) sc
                where
                    sc.rk = 1
            ) sc on sc.pno = t1.pno and t1.stat_date = sc.stat_date
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
where
    dp.store_category = 1
group by 1,2;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
        ,pi.returned
        ,pi.dst_store_id
        ,pi.client_id
        ,pi.cod_enabled
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-06-14 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,if(t1.returned = 1, '退件', '正向件')  方向
    ,t1.client_id 客户ID
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as 客户类型
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
#     ,case
#         when t1.state = 6 and di.pno is not null then 'KAM/揽件网点未协商'
#         when t1.state = 6 and di.pno is null  then '闪速系统沟通处理中'
#         when t1.state != 6 and plt.pno is not null and plt2.pno is not null then '闪速系统沟通处理中'
#         when plt.pno is null and pct.pno is not null then '闪速超时效理赔未完成'
#         when de.last_store_id = t1.ticket_pickup_store_id and plt2.pno is null then '揽件未发出'
#         when t1.dst_store_id = 'PH19040F05' and plt2.pno is null then '弃件未到拍卖仓'
#         when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then 'QAQC无须追责后长期无有效路由'
#         else null
#     end 卡点原因
#     ,de.last_store_name 当前节点
    ,datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) 最后有效路由距今天数
#     ,de.last_cn_route_action 最新一条有效路由
    ,case pr.route_action # 路由动作
         when 'ACCEPT_PARCEL' then '接件扫描'
         when 'ARRIVAL_GOODS_VAN_CHECK_SCAN' then '车货关联到港'
         when 'ARRIVAL_WAREHOUSE_SCAN' then '到件入仓扫描'
         when 'CANCEL_ARRIVAL_WAREHOUSE_SCAN' then '取消到件入仓扫描'
         when 'CANCEL_PARCEL' then '撤销包裹'
         when 'CANCEL_SHIPMENT_WAREHOUSE' then '取消发件出仓'
         when 'CHANGE_PARCEL_CANCEL' then '修改包裹为撤销'
         when 'CHANGE_PARCEL_CLOSE' then '修改包裹为异常关闭'
         when 'CHANGE_PARCEL_IN_TRANSIT' then '修改包裹为运输中'
         when 'CHANGE_PARCEL_INFO' then '修改包裹信息'
         when 'CHANGE_PARCEL_SIGNED' then '修改包裹为签收'
         when 'CLAIMS_CLOSE' then '理赔关闭'
         when 'CLAIMS_COMPLETE' then '理赔完成'
         when 'CLAIMS_CONTACT' then '已联系客户'
         when 'CLAIMS_TRANSFER_CS' then '转交总部cs处理'
         when 'CLOSE_ORDER' then '关闭订单'
         when 'CONTINUE_TRANSPORT' then '疑难件继续配送'
         when 'CREATE_WORK_ORDER' then '创建工单'
         when 'CUSTOMER_CHANGE_PARCEL_INFO' then '客户修改包裹信息'
         when 'CUSTOMER_OPERATING_RETURN' then '客户操作退回寄件人'
         when 'DELIVERY_CONFIRM' then '确认妥投'
         when 'DELIVERY_MARKER' then '派件标记'
         when 'DELIVERY_PICKUP_STORE_SCAN' then '自提取件扫描'
         when 'DELIVERY_TICKET_CREATION_SCAN' then '交接扫描'
         when 'DELIVERY_TRANSFER' then '派件转单'
         when 'DEPARTURE_GOODS_VAN_CK_SCAN' then '车货关联出港'
         when 'DETAIN_WAREHOUSE' then '货件留仓'
         when 'DIFFICULTY_FINISH_INDEMNITY' then '疑难件支付赔偿'
         when 'DIFFICULTY_HANDOVER' then '疑难件交接'
         when 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE' then '疑难件交接货件留仓'
         when 'DIFFICULTY_RE_TRANSIT' then '疑难件退回区域总部/重启运送'
         when 'DIFFICULTY_RETURN' then '疑难件退回寄件人'
         when 'DIFFICULTY_SEAL' then '集包异常'
         when 'DISCARD_RETURN_BKK' then '丢弃包裹的，换单后寄回BKK'
         when 'DISTRIBUTION_INVENTORY' then '分拨盘库'
         when 'DWS_WEIGHT_IMAGE' then 'DWS复秤照片'
         when 'EXCHANGE_PARCEL' then '换货'
         when 'FAKE_CANCEL_HANDLE' then '虚假撤销判责'
         when 'FLASH_HOME_SCAN' then 'FH交接扫描'
         when 'FORCE_TAKE_PHOTO' then '强制拍照路由'
         when 'HAVE_HAIR_SCAN_NO_TO' then '有发无到'
         when 'HURRY_PARCEL' then '催单'
         when 'INCOMING_CALL' then '来电接听'
         when 'INTERRUPT_PARCEL_AND_RETURN' then '中断运输并退回'
         when 'INVENTORY' then '盘库'
         when 'LOSE_PARCEL_TEAM_OPERATION' then '丢失件团队处理'
         when 'MANUAL_REMARK' then '添加备注'
         when 'MISS_PICKUP_HANDLE' then '漏包裹揽收判责'
         when 'MISSING_PARCEL_SCAN' then '丢失件包裹操作'
         when 'NOTICE_LOST_PARTS_TEAM' then '已通知丢失件团队'
         when 'PARCEL_HEADLESS_CLAIMED' then '无头件包裹已认领'
         when 'PARCEL_HEADLESS_PRINTED' then '无头件包裹已打单'
         when 'PENDING_RETURN' then '待退件'
         when 'PHONE' then '电话联系'
         when 'PICK_UP_STORE' then '待自提取件'
         when 'PICKUP_RETURN_RECEIPT' then '签回单揽收'
         when 'PRINTING' then '打印面单'
         when 'QAQC_OPERATION' then 'QAQC判责'
         when 'RECEIVE_WAREHOUSE_SCAN' then '收件入仓'
         when 'RECEIVED' then '已揽收,初始化动作，实际情况并没有作用'
         when 'REFUND_CONFIRM' then '退件妥投'
         when 'REPAIRED' then '上报问题修复路由'
         when 'REPLACE_PNO' then '换单'
         when 'REPLY_WORK_ORDER' then '回复工单'
         when 'REVISION_TIME' then '改约时间'
         when 'SEAL' then '集包'
         when 'SEAL_NUMBER_CHANGE' then '集包件数变化'
         when 'SHIPMENT_WAREHOUSE_SCAN' then '发件出仓扫描'
         when 'SORTER_WEIGHT_IMAGE' then '分拣机复秤照片'
         when 'SORTING_SCAN' then '分拣扫描'
         when 'STAFF_INFO_UPDATE_WEIGHT' then '快递员修改重量'
         when 'STORE_KEEPER_UPDATE_WEIGHT' then '仓管员复秤'
         when 'STORE_SORTER_UPDATE_WEIGHT' then '分拣机复秤'
         when 'SYSTEM_AUTO_RETURN' then '系统自动退件'
         when 'TAKE_PHOTO' then '异常打单拍照'
         when 'THIRD_EXPRESS_ROUTE' then '第三方公司路由'
         when 'THIRD_PARTY_REASON_DETAIN' then '第三方原因滞留'
         when 'TICKET_WEIGHT_IMAGE' then '揽收称重照片'
         when 'TRANSFER_LOST_PARTS_TEAM' then '已转交丢失件团队'
         when 'TRANSFER_QAQC' then '转交QAQC处理'
         when 'UNSEAL' then '拆包'
         when 'UNSEAL_NO_PARCEL' then '上报包裹不在集包里'
         when 'UNSEAL_NOT_SCANNED' then '集包已拆包，本包裹未被扫描'
         when 'VEHICLE_ACCIDENT_REG' then '车辆车祸登记'
         when 'VEHICLE_ACCIDENT_REGISTRATION' then '车辆车祸登记'
         when 'VEHICLE_WET_DAMAGE_REG' then '车辆湿损登记'
         when 'VEHICLE_WET_DAMAGE_REGISTRATION' then '车辆湿损登记'
        end as 最后一条路由
    ,convert_tz(pr.routed_at ,'+00:00', '+08:00') 最新一条有效路由时间
    ,datediff(now(), de.dst_routed_at) 目的地网点停留时间
    ,de.dst_store 目的地网点
    ,de.src_store 揽收网点
    ,de.pickup_time 揽收时间
    ,de.pick_date 揽收日期
    ,if(hold.pno is not null, 'yes', 'no' ) 是否有holding标记
    ,if(pr3.pno is not null, 'yes', 'no') 是否有待退件标记
    ,td.try_num 尝试派送次数
from t t1
left join ph_staging.ka_profile kp on t1.client_id = kp.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,pr.route_action
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
            and pr.organization_type = 1
        ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
left join
    (
        select
            plt.pno
        from ph_bi.parcel_claim_task plt
        join t t4  on t4.pno = plt.pno
        where
            plt.state not in (6,7,8)
            and plt.source = 11
        group by 1
    ) pct on pct.pno = t1.pno
left join
    (
        select
            pr2.pno
        from ph_staging.parcel_route pr2
        join t t1 on t1.pno = pr2.pno
        where
            pr2.route_action = 'REFUND_CONFIRM'
        group by 1
    ) hold on hold.pno = t1.pno
left join
    (
        select
            pr2.pno
        from  ph_staging.parcel_route pr2
        join t t1 on t1.pno = pr2.pno
        where
            pr2.route_action = 'PENDING_RETURN'
        group by 1
    ) pr3 on pr3.pno = t1.pno
left join
    (
        select
            td.pno
            ,count(distinct date(convert_tz(tdm.created_at, '+00:00', '+08:00'))) try_num
        from ph_staging.ticket_delivery td
        join t t1 on t1.pno = td.pno
        left join ph_staging.ticket_delivery_marker tdm on tdm.delivery_id = td.id
        group by 1
    ) td on td.pno = t1.pno
group by t1.pno;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date >= '2023-07-05'
        and ds.stat_date <= '2023-07-05'
        and ds.arrival_scan_route_at < concat(ds.stat_date, ' 09:00:00')
)

select
    a.stat_date 日期
    ,a.store_id 网点ID
    ,dp.store_name 网点名称
    ,dp.region_name 大区
    ,dp.piece_name 片区
    ,a.应交接
    ,a.已交接
    ,concat(round(a.交接率*100,2),'%') as 交接率
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null and a.e_check is null, 'C', '')) 交接评级
    ,concat(round(a.A_rate * 100,2),'%')  'A时段（<0930 ）'
    ,concat(round(a.B_rate * 100,2),'%') 'B时段（0930<=X<1200）'
    ,concat(round(a.C_rate * 100,2),'%')'C时段（1200<=X<1600 ）'
    ,concat(round(a.D_rate * 100,2),'%')'D时段（>=1600）'
from
    (
        select
            t1.store_id
            ,t1.stat_date
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 , 'E', null ) e_check
        from t t1
        left join
            (
                select
                    sc.*
                from
                    (
                        select
                            pr.pno
                            ,pr.store_id
                            ,pr.store_name
                            ,t1.stat_date
                            ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                            ,date(convert_tz(pr.routed_at, '+00:00', '+08:00')) route_date
                            ,row_number() over (partition by pr.pno,t1.stat_date order by pr.routed_at) rk
                        from ph_staging.parcel_route pr
                        join t t1 on t1.pno = pr.pno
                        where
                            pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                           and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                          and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
                    ) sc
                where
                    sc.rk = 1
            ) sc on sc.pno = t1.pno and t1.stat_date = sc.stat_date
        group by 1,2
    ) a
left join dwm.dim_th_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
where
    dp.store_category in (1,10,13,14);
;-- -. . -..- - / . -. - .-. -.--
select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date >= '2023-07-05'
        and ds.stat_date <= '2023-07-05'
        and ds.arrival_scan_route_at < concat(ds.stat_date, ' 09:00:00');
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date >= '2023-07-05'
        and ds.stat_date <= '2023-07-05'
        and ds.arrival_scan_route_at < concat(ds.stat_date, ' 09:00:00')
)
#
# select
#     a.stat_date 日期
#     ,a.store_id 网点ID
#     ,dp.store_name 网点名称
#     ,dp.region_name 大区
#     ,dp.piece_name 片区
#     ,a.应交接
#     ,a.已交接
#     ,concat(round(a.交接率*100,2),'%') as 交接率
#     ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null and a.e_check is null, 'C', '')) 交接评级
#     ,concat(round(a.A_rate * 100,2),'%')  'A时段（<0930 ）'
#     ,concat(round(a.B_rate * 100,2),'%') 'B时段（0930<=X<1200）'
#     ,concat(round(a.C_rate * 100,2),'%')'C时段（1200<=X<1600 ）'
#     ,concat(round(a.D_rate * 100,2),'%')'D时段（>=1600）'
# from
#     (
#         select
#             t1.store_id
#             ,t1.stat_date
#             ,count(t1.pno) 应交接
#             ,count(if(sc.pno is not null , t1.pno, null)) 已交接
#             ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
#             ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as A_rate
#             ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as B_rate
#             ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as C_rate
#             ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as D_rate
#
#             ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
#             ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
#             ,if(count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
#             ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 , 'E', null ) e_check
#         from t t1
#         left join
#             (
                select
                    sc.*
                from
                    (
                        select
                            pr.pno
                            ,pr.store_id
                            ,pr.store_name
                            ,t1.stat_date
                            ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                            ,date(convert_tz(pr.routed_at, '+00:00', '+08:00')) route_date
                            ,row_number() over (partition by pr.pno,t1.stat_date order by pr.routed_at) rk
                        from ph_staging.parcel_route pr
                        join t t1 on t1.pno = pr.pno
                        where
                            pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                           and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                          and pr.routed_at < date_add(t1.stat_date, interval 16 hour );
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date >= '2023-07-05'
        and ds.stat_date <= '2023-07-05'
        and ds.arrival_scan_route_at < concat(ds.stat_date, ' 09:00:00')
)
#
# select
#     a.stat_date 日期
#     ,a.store_id 网点ID
#     ,dp.store_name 网点名称
#     ,dp.region_name 大区
#     ,dp.piece_name 片区
#     ,a.应交接
#     ,a.已交接
#     ,concat(round(a.交接率*100,2),'%') as 交接率
#     ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null and a.e_check is null, 'C', '')) 交接评级
#     ,concat(round(a.A_rate * 100,2),'%')  'A时段（<0930 ）'
#     ,concat(round(a.B_rate * 100,2),'%') 'B时段（0930<=X<1200）'
#     ,concat(round(a.C_rate * 100,2),'%')'C时段（1200<=X<1600 ）'
#     ,concat(round(a.D_rate * 100,2),'%')'D时段（>=1600）'
# from
#     (
#         select
#             t1.store_id
#             ,t1.stat_date
#             ,count(t1.pno) 应交接
#             ,count(if(sc.pno is not null , t1.pno, null)) 已交接
#             ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
#             ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as A_rate
#             ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as B_rate
#             ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as C_rate
#             ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as D_rate
#
#             ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
#             ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
#             ,if(count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
#             ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 , 'E', null ) e_check
#         from t t1
#         left join
#             (
                select
                    sc.*
                from
                    (
                        select
                            pr.pno
                            ,pr.store_id
                            ,pr.store_name
                            ,t1.stat_date
                            ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                            ,date(convert_tz(pr.routed_at, '+00:00', '+08:00')) route_date
                            ,row_number() over (partition by pr.pno,t1.stat_date order by pr.routed_at) rk
                        from ph_staging.parcel_route pr
                        join t t1 on t1.pno = pr.pno
                        where
                            pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                           and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                          and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
                    ) sc;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date >= '2023-07-05'
        and ds.stat_date <= '2023-07-05'
        and ds.arrival_scan_route_at < concat(ds.stat_date, ' 09:00:00')
)

select
    a.stat_date 日期
    ,a.store_id 网点ID
    ,dp.store_name 网点名称
    ,dp.region_name 大区
    ,dp.piece_name 片区
    ,a.应交接
    ,a.已交接
    ,concat(round(a.交接率*100,2),'%') as 交接率
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null and a.e_check is null, 'C', '')) 交接评级
    ,concat(round(a.A_rate * 100,2),'%')  'A时段（<0930 ）'
    ,concat(round(a.B_rate * 100,2),'%') 'B时段（0930<=X<1200）'
    ,concat(round(a.C_rate * 100,2),'%')'C时段（1200<=X<1600 ）'
    ,concat(round(a.D_rate * 100,2),'%')'D时段（>=1600）'
from
    (
        select
            t1.store_id
            ,t1.stat_date
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 , 'E', null ) e_check
        from t t1
        left join
            (
                select
                    sc.*
                from
                    (
                        select
                            pr.pno
                            ,pr.store_id
                            ,pr.store_name
                            ,t1.stat_date
                            ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                            ,date(convert_tz(pr.routed_at, '+00:00', '+08:00')) route_date
                            ,row_number() over (partition by pr.pno,t1.stat_date order by pr.routed_at) rk
                        from ph_staging.parcel_route pr
                        join t t1 on t1.pno = pr.pno
                        where
                            pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                           and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                          and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
                    ) sc
                where
                    sc.rk = 1
            ) sc on sc.pno = t1.pno and t1.stat_date = sc.stat_date
        group by 1,2
    ) a
left join dwm.dim_th_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day);
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date >= '2023-07-05'
        and ds.stat_date <= '2023-07-05'
        and ds.arrival_scan_route_at < concat(ds.stat_date, ' 09:00:00')
)

select
    a.stat_date 日期
    ,a.store_id 网点ID
    ,dp.store_name 网点名称
    ,dp.region_name 大区
    ,dp.piece_name 片区
    ,a.应交接
    ,a.已交接
    ,concat(round(a.交接率*100,2),'%') as 交接率
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null and a.e_check is null, 'C', '')) 交接评级
    ,concat(round(a.A_rate * 100,2),'%')  'A时段（<0930 ）'
    ,concat(round(a.B_rate * 100,2),'%') 'B时段（0930<=X<1200）'
    ,concat(round(a.C_rate * 100,2),'%')'C时段（1200<=X<1600 ）'
    ,concat(round(a.D_rate * 100,2),'%')'D时段（>=1600）'
from
    (
        select
            t1.store_id
            ,t1.stat_date
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 , 'E', null ) e_check
        from t t1
        left join
            (
                select
                    sc.*
                from
                    (
                        select
                            pr.pno
                            ,pr.store_id
                            ,pr.store_name
                            ,t1.stat_date
                            ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                            ,date(convert_tz(pr.routed_at, '+00:00', '+08:00')) route_date
                            ,row_number() over (partition by pr.pno,t1.stat_date order by pr.routed_at) rk
                        from ph_staging.parcel_route pr
                        join t t1 on t1.pno = pr.pno
                        where
                            pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                           and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                          and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
                    ) sc
                where
                    sc.rk = 1
            ) sc on sc.pno = t1.pno and t1.stat_date = sc.stat_date
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
where
    dp.store_category in (1,10,13,14);
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date >= '2023-07-05'
        and ds.stat_date <= '2023-07-05'
        and ds.arrival_scan_route_at < concat(ds.stat_date, ' 09:00:00')
)

select
    a.stat_date 日期
    ,a.store_id 网点ID
    ,dp.store_name 网点名称
    ,dp.region_name 大区
    ,dp.piece_name 片区
    ,a.应交接
    ,a.已交接
    ,concat(round(a.交接率*100,2),'%') as 交接率
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null and a.e_check is null, 'C', '')) 交接评级
    ,concat(round(a.A_rate * 100,2),'%')  'A时段（<0930 ）'
    ,concat(round(a.B_rate * 100,2),'%') 'B时段（0930<=X<1200）'
    ,concat(round(a.C_rate * 100,2),'%')'C时段（1200<=X<1600 ）'
    ,concat(round(a.D_rate * 100,2),'%')'D时段（>=1600）'
from
    (
        select
            t1.store_id
            ,t1.stat_date
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 , 'E', null ) e_check
        from t t1
        left join
            (
                select
                    sc.*
                from
                    (
                        select
                            pr.pno
                            ,pr.store_id
                            ,pr.store_name
                            ,t1.stat_date
                            ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                            ,date(convert_tz(pr.routed_at, '+00:00', '+08:00')) route_date
                            ,row_number() over (partition by pr.pno,t1.stat_date order by pr.routed_at) rk
                        from ph_staging.parcel_route pr
                        join t t1 on t1.pno = pr.pno
                        where
                            pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                           and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                          and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
                    ) sc
                where
                    sc.rk = 1
            ) sc on sc.pno = t1.pno and t1.stat_date = sc.stat_date
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
where
    dp.store_category in (1,14);
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date >= '2023-07-05'
        and ds.stat_date <= '2023-07-05'
        and ds.arrival_scan_route_at < concat(ds.stat_date, ' 09:00:00')
)

select
    a.stat_date 日期
    ,a.store_id 网点ID
    ,dp.store_name 网点名称
    ,dp.region_name 大区
    ,dp.piece_name 片区
    ,a.应交接
    ,a.已交接
    ,concat(round(a.交接率*100,2),'%') as 交接率
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null and a.e_check is null, 'C', '')) 交接评级
    ,concat(round(a.A_rate * 100,2),'%')  'A时段（<0930 ）'
    ,concat(round(a.B_rate * 100,2),'%') 'B时段（0930<=X<1200）'
    ,concat(round(a.C_rate * 100,2),'%')'C时段（1200<=X<1600 ）'
    ,concat(round(a.D_rate * 100,2),'%')'D时段（>=1600）'
from
    (
        select
            t1.store_id
            ,t1.stat_date
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 , 'E', null ) e_check
        from t t1
        left join
            (
                select
                    sc.*
                from
                    (
                        select
                            pr.pno
                            ,pr.store_id
                            ,pr.store_name
                            ,t1.stat_date
                            ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                            ,date(convert_tz(pr.routed_at, '+00:00', '+08:00')) route_date
                            ,row_number() over (partition by pr.pno,t1.stat_date order by pr.routed_at) rk
                        from ph_staging.parcel_route pr
                        join t t1 on t1.pno = pr.pno
                        where
                            pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                           and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                          and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
                    ) sc
                where
                    sc.rk = 1
            ) sc on sc.pno = t1.pno and t1.stat_date = sc.stat_date
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
where
    dp.store_category in (1);
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date >= '2023-07-05'
        and ds.stat_date <= '2023-07-05'
        and ds.arrival_scan_route_at < concat(ds.stat_date, ' 09:00:00')
)

select
    a.stat_date 日期
    ,a.store_id 网点ID
    ,dp.store_name 网点名称
    ,dp.region_name 大区
    ,case
        when dp.region_name in ('Area3', 'Area6') then '彭万松'
        when dp.region_name in ('Area4', 'Area9') then '韩钥'
        when dp.region_name in ('Area7', 'Area8','Area10', 'Area11') then '张可新'
        when dp.region_name in ('Area1', 'Area2','Area5', 'Area12') then '李俊'
    end 大区负责人
    ,dp.piece_name 片区
    ,a.应交接
    ,a.已交接
    ,concat(round(a.交接率*100,2),'%') as 交接率
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null and a.e_check is null, 'C', '')) 交接评级
    ,concat(round(a.A_rate * 100,2),'%')  'A时段（<0930 ）'
    ,concat(round(a.B_rate * 100,2),'%') 'B时段（0930<=X<1200）'
    ,concat(round(a.C_rate * 100,2),'%')'C时段（1200<=X<1600 ）'
    ,concat(round(a.D_rate * 100,2),'%')'D时段（>=1600）'
from
    (
        select
            t1.store_id
            ,t1.stat_date
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 , 'E', null ) e_check
        from t t1
        left join
            (
                select
                    sc.*
                from
                    (
                        select
                            pr.pno
                            ,pr.store_id
                            ,pr.store_name
                            ,t1.stat_date
                            ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                            ,date(convert_tz(pr.routed_at, '+00:00', '+08:00')) route_date
                            ,row_number() over (partition by pr.pno,t1.stat_date order by pr.routed_at) rk
                        from ph_staging.parcel_route pr
                        join t t1 on t1.pno = pr.pno
                        where
                            pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                           and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                          and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
                    ) sc
                where
                    sc.rk = 1
            ) sc on sc.pno = t1.pno and t1.stat_date = sc.stat_date
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
where
    dp.store_category in (1);
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date >= '2023-07-05'
        and ds.stat_date <= '2023-07-05'
        and ds.arrival_scan_route_at < concat(ds.stat_date, ' 09:00:00')
)

select
    a.stat_date 日期
    ,a.store_id 网点ID
    ,dp.store_name 网点名称
    ,dp.region_name 大区
    ,case
        when dp.region_name in ('Area3', 'Area6') then '彭万松'
        when dp.region_name in ('Area4', 'Area9') then '韩钥'
        when dp.region_name in ('Area7', 'Area8','Area10', 'Area11') then '张可新'
        when dp.region_name in ('Area1', 'Area2','Area5', 'Area12') then '李俊'
    end 大区负责人
    ,dp.piece_name 片区
    ,a.应交接
    ,a.已交接
    ,concat(round(a.交接率*100,2),'%') as 交接率
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null and a.e_check is null, 'C', '')) 交接评级
    ,concat(round(a.A_rate * 100,2),'%')  'A时段（<0930 ）'
    ,concat(round(a.B_rate * 100,2),'%') 'B时段（0930<=X<1200）'
    ,concat(round(a.C_rate * 100,2),'%')'C时段（1200<=X<1600 ）'
    ,concat(round(a.D_rate * 100,2),'%')'D时段（>=1600）'
from
    (
        select
            t1.store_id
            ,t1.stat_date
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 , 'E', null ) e_check
        from t t1
        left join
            (
                select
                    sc.*
                from
                    (
                        select
                            pr.pno
                            ,pr.store_id
                            ,pr.store_name
                            ,t1.stat_date
                            ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                            ,date(convert_tz(pr.routed_at, '+00:00', '+08:00')) route_date
                            ,row_number() over (partition by pr.pno,t1.stat_date order by pr.routed_at) rk
                        from ph_staging.parcel_route pr
                        join t t1 on t1.pno = pr.pno
                        where
                            pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                           and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                          and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
                    ) sc
                where
                    sc.rk = 1
            ) sc on sc.pno = t1.pno and t1.stat_date = sc.stat_date
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
where
    dp.store_category in (1)
order by 5,9;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date >= '2023-07-05'
        and ds.stat_date <= '2023-07-05'
        and ds.arrival_scan_route_at < concat(ds.stat_date, ' 09:00:00')
)

select
    a.stat_date 日期
    ,a.store_id 网点ID
    ,dp.store_name 网点名称
    ,dp.region_name 大区
    ,case
        when dp.region_name in ('Area3', 'Area6') then '彭万松'
        when dp.region_name in ('Area4', 'Area9') then '韩钥'
        when dp.region_name in ('Area7', 'Area8','Area10', 'Area11','FHome') then '张可新'
        when dp.region_name in ('Area1', 'Area2','Area5', 'Area12') then '李俊'
    end 大区负责人
    ,dp.piece_name 片区
    ,a.应交接
    ,a.已交接
    ,concat(round(a.交接率*100,2),'%') as 交接率
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null and a.e_check is null, 'C', '')) 交接评级
    ,concat(round(a.A_rate * 100,2),'%')  'A时段（<0930 ）'
    ,concat(round(a.B_rate * 100,2),'%') 'B时段（0930<=X<1200）'
    ,concat(round(a.C_rate * 100,2),'%')'C时段（1200<=X<1600 ）'
    ,concat(round(a.D_rate * 100,2),'%')'D时段（>=1600）'
from
    (
        select
            t1.store_id
            ,t1.stat_date
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 , 'E', null ) e_check
        from t t1
        left join
            (
                select
                    sc.*
                from
                    (
                        select
                            pr.pno
                            ,pr.store_id
                            ,pr.store_name
                            ,t1.stat_date
                            ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                            ,date(convert_tz(pr.routed_at, '+00:00', '+08:00')) route_date
                            ,row_number() over (partition by pr.pno,t1.stat_date order by pr.routed_at) rk
                        from ph_staging.parcel_route pr
                        join t t1 on t1.pno = pr.pno
                        where
                            pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                           and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                          and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
                    ) sc
                where
                    sc.rk = 1
            ) sc on sc.pno = t1.pno and t1.stat_date = sc.stat_date
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
where
    dp.store_category in (1)
order by 5,9;
;-- -. . -..- - / . -. - .-. -.--
select
   fn.运单号
   ,fn.妥投快递员ID
   ,fn.妥投时间
   ,fn.妥投网点
   , fn.平台账号ID
   , fn.平台名称
   , fn.包裹最新状态
   , fn.包裹签收时间
   , fn.最后一条路由操作时间
   , fn.最后一条有效路由
   , fn.最后一条有效路由所在网点ID
   , fn.最后一条有效路由所在网点名称
   , fn.片区
   , fn.大区
   , fn.操作人员ID
   , fn.操作人员名称
   , fn.收件人姓名
   , fn.收件人电话
   , fn.收件人地址
from
(
    select
       pr.pno as 运单号
       ,pi.ticket_delivery_staff_info_id 妥投快递员ID
       ,ss2.name 妥投网点
       ,convert_tz(pi.finished_at,'+00:00','+08:00') 妥投时间
        , db.client_id as 平台账号ID
        , db.client_name as 平台名称
       , convert_tz(pr.created_at,'+00:00','+08:00') as 最后一条路由操作时间
        , convert_tz(pi.finished_at,'+00:00','+08:00') as 包裹签收时间
       , pr.route_action as 最后一条有效路由
        , pr.staff_info_id as 操作人员ID
        , pr.staff_info_name as 操作人员名称
        , pi.dst_name as 收件人姓名
        , pi.dst_phone as 收件人电话
        , pi.dst_detail_address as 收件人地址
       , pr.store_id as 最后一条有效路由所在网点ID
       , pr.store_name as 最后一条有效路由所在网点名称
       , mr.name as 大区
       , mp.name as 片区
        , case when pi.state = 1 then '已揽收'
          when pi.state = 2 then '运输中'
          when pi.state = 3 then '派送中'
          when pi.state = 4 then '已滞留'
          when pi.state = 5 then '已签收'
          when pi.state = 6 then '疑难件处理中'
          when pi.state = 7 then '已退件'
          when pi.state = 8 then '异常关闭'
          when pi.state = 9 then '已撤销'
         end as 包裹最新状态
      , row_number() over (partition by  pr.pno order by pr.created_at desc) as rnk
   from ph_staging.parcel_route pr
   join ph_staging.parcel_info pi on pr.pno=pi.pno
   left join ph_staging.sys_store ss2 on ss2.id = pi.ticket_delivery_store_id
   left join dwm.dwd_dim_bigClient db on pi.client_id=db.client_id
   join ph_staging.sys_store ss on pr.store_id=ss.id
   left join ph_staging.sys_manage_piece mp on mp.id= ss.manage_piece
   left join ph_staging.sys_manage_region mr on mr.id= ss.manage_region
   where pr.route_action in
   ('RECEIVED'
   ,'RECEIVE_WAREHOUSE_SCAN'
   ,'SORTING_SCAN'
   ,'DELIVERY_TICKET_CREATION_SCAN'
   ,'ARRIVAL_WAREHOUSE_SCAN'
   ,'SHIPMENT_WAREHOUSE_SCAN'
   ,'DETAIN_WAREHOUSE'
   ,'DELIVERY_CONFIRM'
   ,'DIFFICULTY_HANDOVER'
   ,'DELIVERY_MARKER'
   ,'REPLACE_PNO'
   ,'SEAL'
   ,'UNSEAL'
   ,'PARCEL_HEADLESS_PRINTED'
   ,'STAFF_INFO_UPDATE_WEIGHT'
   ,'STORE_KEEPER_UPDATE_WEIGHT'
   ,'STORE_SORTER_UPDATE_WEIGHT'
   ,'DISCARD_RETURN_BKK'
   ,'DELIVERY_TRANSFER'
   ,'PICKUP_RETURN_RECEIPT'
   ,'FLASH_HOME_SCAN'
   ,'seal.ARRIVAL_WAREHOUSE_SCAN'
   ,'INVENTORY'
   ,'SORTING_SCAN'
   ,'PHONE'
   )
   and pi.state=5
   and pi.finished_at>=date_sub(current_date,interval 1 day)
)fn
where fn.rnk=1;
;-- -. . -..- - / . -. - .-. -.--
select
   fn.运单号
   ,fn.妥投快递员ID
   ,fn.妥投时间
   ,fn.妥投网点
   , fn.平台账号ID
   , fn.平台名称
   , fn.包裹最新状态
   , fn.包裹签收时间
   , fn.最后一条路由操作时间
   , fn.最后一条有效路由
   , fn.最后一条有效路由所在网点ID
   , fn.最后一条有效路由所在网点名称
   , fn.片区
   , fn.大区
   , fn.操作人员ID
   , fn.操作人员名称
   , fn.收件人姓名
   , fn.收件人电话
   , fn.收件人地址
from
(
    select
       pr.pno as 运单号
       ,pi.ticket_delivery_staff_info_id 妥投快递员ID
       ,ss2.name 妥投网点
       ,convert_tz(pi.finished_at,'+00:00','+08:00') 妥投时间
        , db.client_id as 平台账号ID
        , db.client_name as 平台名称
       , convert_tz(pr.created_at,'+00:00','+08:00') as 最后一条路由操作时间
        , convert_tz(pi.finished_at,'+00:00','+08:00') as 包裹签收时间
       , pr.route_action as 最后一条有效路由
        , pr.staff_info_id as 操作人员ID
        , pr.staff_info_name as 操作人员名称
        , pi.dst_name as 收件人姓名
        , pi.dst_phone as 收件人电话
        , pi.dst_detail_address as 收件人地址
       , pr.store_id as 最后一条有效路由所在网点ID
       , pr.store_name as 最后一条有效路由所在网点名称
       , mr.name as 大区
       , mp.name as 片区
        , case when pi.state = 1 then '已揽收'
          when pi.state = 2 then '运输中'
          when pi.state = 3 then '派送中'
          when pi.state = 4 then '已滞留'
          when pi.state = 5 then '已签收'
          when pi.state = 6 then '疑难件处理中'
          when pi.state = 7 then '已退件'
          when pi.state = 8 then '异常关闭'
          when pi.state = 9 then '已撤销'
         end as 包裹最新状态
      , row_number() over (partition by  pr.pno order by pr.created_at desc) as rnk
   from ph_staging.parcel_route pr
   join ph_staging.parcel_info pi on pr.pno=pi.pno
   left join ph_staging.sys_store ss2 on ss2.id = pi.ticket_delivery_store_id
   left join dwm.dwd_dim_bigClient db on pi.client_id=db.client_id
   join ph_staging.sys_store ss on pr.store_id=ss.id
   left join ph_staging.sys_manage_piece mp on mp.id= ss.manage_piece
   left join ph_staging.sys_manage_region mr on mr.id= ss.manage_region
   where pr.route_action in
   ('RECEIVED'
   ,'RECEIVE_WAREHOUSE_SCAN'
   ,'SORTING_SCAN'
   ,'DELIVERY_TICKET_CREATION_SCAN'
   ,'ARRIVAL_WAREHOUSE_SCAN'
   ,'SHIPMENT_WAREHOUSE_SCAN'
   ,'DETAIN_WAREHOUSE'
   ,'DELIVERY_CONFIRM'
   ,'DIFFICULTY_HANDOVER'
   ,'DELIVERY_MARKER'
   ,'REPLACE_PNO'
   ,'SEAL'
   ,'UNSEAL'
   ,'PARCEL_HEADLESS_PRINTED'
   ,'STAFF_INFO_UPDATE_WEIGHT'
   ,'STORE_KEEPER_UPDATE_WEIGHT'
   ,'STORE_SORTER_UPDATE_WEIGHT'
   ,'DISCARD_RETURN_BKK'
   ,'DELIVERY_TRANSFER'
   ,'PICKUP_RETURN_RECEIPT'
   ,'FLASH_HOME_SCAN'
   ,'seal.ARRIVAL_WAREHOUSE_SCAN'
   ,'INVENTORY'
   ,'SORTING_SCAN'
   ,'PHONE'
   )
   and pi.state=5
   and pi.finished_at>=date_sub(current_date,interval 1 day)
)fn
where fn.rnk=1
    and timestampdiff(second,fn.包裹签收时间,fn.最后一条路由操作时间)>=100;
;-- -. . -..- - / . -. - .-. -.--
select
   fn.运单号
   ,fn.妥投快递员ID
   ,fn.妥投时间
   ,fn.妥投网点
   , fn.平台账号ID
   , fn.平台名称
   , fn.包裹最新状态
   , fn.包裹签收时间
,date(fn.妥投时间) 妥投日期
   , fn.最后一条路由操作时间
   , fn.最后一条有效路由
   , fn.最后一条有效路由所在网点ID
   , fn.最后一条有效路由所在网点名称
   , fn.片区
   , fn.大区
   , fn.操作人员ID
   , fn.操作人员名称
   , fn.收件人姓名
   , fn.收件人电话
   , fn.收件人地址
from
(
    select
       pr.pno as 运单号
       ,pi.ticket_delivery_staff_info_id 妥投快递员ID
       ,ss2.name 妥投网点
       ,convert_tz(pi.finished_at,'+00:00','+08:00') 妥投时间
        , db.client_id as 平台账号ID
        , db.client_name as 平台名称
       , convert_tz(pr.created_at,'+00:00','+08:00') as 最后一条路由操作时间
        , convert_tz(pi.finished_at,'+00:00','+08:00') as 包裹签收时间
       , pr.route_action as 最后一条有效路由
        , pr.staff_info_id as 操作人员ID
        , pr.staff_info_name as 操作人员名称
        , pi.dst_name as 收件人姓名
        , pi.dst_phone as 收件人电话
        , pi.dst_detail_address as 收件人地址
       , pr.store_id as 最后一条有效路由所在网点ID
       , pr.store_name as 最后一条有效路由所在网点名称
       , mr.name as 大区
       , mp.name as 片区
        , case when pi.state = 1 then '已揽收'
          when pi.state = 2 then '运输中'
          when pi.state = 3 then '派送中'
          when pi.state = 4 then '已滞留'
          when pi.state = 5 then '已签收'
          when pi.state = 6 then '疑难件处理中'
          when pi.state = 7 then '已退件'
          when pi.state = 8 then '异常关闭'
          when pi.state = 9 then '已撤销'
         end as 包裹最新状态
      , row_number() over (partition by  pr.pno order by pr.created_at desc) as rnk
   from ph_staging.parcel_route pr
    left join dwm.dwd_dim_dict ddd on ddd.element = pr.route_action and ddd.db = ''
   join ph_staging.parcel_info pi on pr.pno=pi.pno
   left join ph_staging.sys_store ss2 on ss2.id = pi.ticket_delivery_store_id
   left join dwm.dwd_dim_bigClient db on pi.client_id=db.client_id
   join ph_staging.sys_store ss on pr.store_id=ss.id
   left join ph_staging.sys_manage_piece mp on mp.id= ss.manage_piece
   left join ph_staging.sys_manage_region mr on mr.id= ss.manage_region
   where pr.route_action in
   ('RECEIVED'
   ,'RECEIVE_WAREHOUSE_SCAN'
   ,'SORTING_SCAN'
   ,'DELIVERY_TICKET_CREATION_SCAN'
   ,'ARRIVAL_WAREHOUSE_SCAN'
   ,'SHIPMENT_WAREHOUSE_SCAN'
   ,'DETAIN_WAREHOUSE'
   ,'DELIVERY_CONFIRM'
   ,'DIFFICULTY_HANDOVER'
   ,'DELIVERY_MARKER'
   ,'REPLACE_PNO'
   ,'SEAL'
   ,'UNSEAL'
   ,'PARCEL_HEADLESS_PRINTED'
   ,'STAFF_INFO_UPDATE_WEIGHT'
   ,'STORE_KEEPER_UPDATE_WEIGHT'
   ,'STORE_SORTER_UPDATE_WEIGHT'
   ,'DISCARD_RETURN_BKK'
   ,'DELIVERY_TRANSFER'
   ,'PICKUP_RETURN_RECEIPT'
   ,'FLASH_HOME_SCAN'
   ,'seal.ARRIVAL_WAREHOUSE_SCAN'
   ,'INVENTORY'
   ,'SORTING_SCAN'
   ,'PHONE'
   )
   and pi.state=5
   and pi.finished_at>=date_sub(date_sub(current_date,interval 2 day), interval 8 hour )
)fn
where fn.rnk=1
    and timestampdiff(second,fn.包裹签收时间,fn.最后一条路由操作时间)>=100;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
select
    plt.pno
    ,plt.id
    ,plt.created_at
    ,plt.updated_at
    ,plt.state
    ,plt.operator_id
    ,plt.client_id
    ,plt.last_valid_store_id
    ,if(plt.state = 6 and plt.duty_result = 1, plt.updated_at, null) updated_time
from ph_bi.parcel_lose_task plt
where
    plt.created_at >= '2023-06-14 16:00:00'
    and plt.created_at < '2023-06-30 16:00:00'
    and plt.source = 12
)
, po as
(
    select
        pr.pno
        ,dpr.route_extra_id
        ,pr.store_id
        ,pr.staff_info_id
        ,replace(replace(replace(json_extract(dpr.extra_value, '$.images'), '"', ''),'[', ''),']', '') image
    from ph_staging.parcel_route pr
    left join dwm.drds_ph_parcel_route_extra dpr on dpr.route_extra_id = json_extract(pr.extra_value, '$.routeExtraId')
    join
        (
            select
                t1.pno
            from t t1
            group by 1
        ) pl on pl.pno = pr.pno
    where
        pr.routed_at > '2023-06-01'
        and pr.route_action = 'TAKE_PHOTO'
)
select
    a.pno
    ,case a.force_take_photos_type
        when 1 then '打印面单'
        when 2 then '收件人拒收'
        when 3 then '滞留强制拍照'
    end 拍照类型
    ,case
        when  a.state = 1 then '丢失件待处理'
        when  a.state = 2 then '疑似丢失件待处理'
        when  a.state = 3 then '待工单回复'
        when  a.state = 4 then '已工单回复'
        when  a.state = 5 and a.operator_id in (10000,10001,10002) then '自动判责—包裹未丢失'
        when  a.state = 5 and a.operator_id not in (10000,10001,10002) then '人工-包裹未丢失'
        when  a.state = 6 then '丢失件处理完成'
    end 判责结果
    ,po1.staff_info_id 拍照快递员
    ,dt.store_name 拍照网点
    ,dt.piece_name 拍照网点片区
    ,dt.region_name 拍照网点大区
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.id is null then '普通ka'
        when kp.`id` is null then '小c'
    end 客户类型
    ,b.24hour 判责丢失24小时判断
    ,pi.cod_amount/100 cod金额
    ,case pi.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case pi2.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 退件包裹包裹状态
    ,if(dt.双重预警 = 'Alert', '是', '否') 当日是否爆仓
    ,plt3.pl_source 进L来源同时是否有替他来源任务
    ,if(a.state in (5,6) ,timestampdiff(hour, a.created_at, a.updated_at), null) 进入L来源时间到已处理时间段_hour
from
    (
        select
            sf.*
        from
            (
                select
                    t1.*
                    ,sfp.force_take_photos_type
                    ,sfp.id record_id
                    ,row_number() over (partition by sfp.pno order by sfp.created_at desc) rk
                from ph_staging.stranded_force_photo_ai_record sfp
                join t t1 on t1.pno = sfp.pno
                where
                    sfp.created_at < date_sub(t1.created_at, interval 7 hour)
                    and (sfp.parcel_enabled = 0 or sfp.matching_enabled = 0)
                    and sfp.force_take_photos_type is not null
            ) sf
        where
            sf.rk = 1
    ) a
left join ph_staging.ka_profile kp on kp.id = a.client_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = a.client_id
left join ph_staging.parcel_info pi on pi.pno = a.pno
left join
    (
        select
            t2.*
            ,case
                when timestampdiff(second, t2.updated_time, pr.min_prat)/3600 <= 24 then '1'
                when timestampdiff(second, t2.updated_time, pr.min_prat)/3600 > 24 then '2'
                else 0
            end 24hour
        from t t2
        left join
            (
                select
                    pr.pno
                    ,min(convert_tz(pr.routed_at, '+00:00', '+07:00')) min_prat
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                join dwm.dwd_dim_dict ddd on ddd.element = pr.route_action and ddd.db = 'rot_pro' and ddd.tablename = 'parcel_route' and ddd.fieldname = 'route_action' and ddd.remark = 'valid'
                where
                    pr.routed_at > date_sub(t1.updated_time, interval 8 hour)
                group by 1
            ) pr on pr.pno = t2.pno
    ) b on b.pno = a.pno
left join dwm.dwd_ph_network_spill_detl_rd dt on dt.统计日期 = date(a.created_at) and dt.网点ID = a.last_valid_store_id
left join
    (
        select
            t1.pno
            ,group_concat(pl.plt_source) pl_source
        from
            (
                select
                    plt3.pno
                    ,plt3.source
                    ,case plt3.source
                        WHEN 1 THEN 'A'
                        WHEN 2 THEN 'B'
                        WHEN 3 THEN 'C'
                        WHEN 4 THEN 'D'
                        WHEN 5 THEN 'E'
                        WHEN 6 THEN 'F'
                        WHEN 7 THEN 'G'
                        WHEN 8 THEN 'H'
                        WHEN 9 THEN 'I'
                        WHEN 10 THEN 'J'
                        when 11 then 'K'
                        when 12 then 'L'
                    end plt_source
                    ,plt3.created_at created_time
                    ,if(plt3.state in (5,6), plt3.updated_at, now()) updated_time
                from ph_bi.parcel_lose_task plt3
                where
                    plt3.created_at >= '2023-06-14 16:00:00'
                    and plt3.created_at < '2023-06-30 16:00:00'
                    and plt3.source != 12 -- 非L来源
            ) pl
        join t t1 on t1.pno = pl.pno
        where
            pl.updated_time > t1.created_at
            and pl.created_time < t1.updated_time
        group by 1
    ) plt3 on plt3.pno = a.pno
left join ph_staging.stranded_force_photo_info sfp on sfp.ai_record_id = a.record_id
left join ph_staging.sys_attachment sa on sa.object_key = sfp.url
left join po po1 on po1.image = sa.id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = po1.store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join ph_staging.parcel_info pi2 on pi2.pno = pi.returned_pno;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
select
    plt.pno
    ,plt.id
    ,plt.created_at
    ,plt.updated_at
    ,plt.state
    ,plt.operator_id
    ,plt.client_id
    ,plt.last_valid_store_id
    ,if(plt.state = 6 and plt.duty_result = 1, plt.updated_at, null) updated_time
from ph_bi.parcel_lose_task plt
where
    plt.created_at >= '2023-06-14 16:00:00'
    and plt.created_at < '2023-06-30 16:00:00'
    and plt.source = 12
)
, po as
(
    select
        pr.pno
        ,dpr.route_extra_id
        ,pr.store_id
        ,pr.staff_info_id
        ,replace(replace(replace(json_extract(dpr.extra_value, '$.images'), '"', ''),'[', ''),']', '') image
    from ph_staging.parcel_route pr
    left join dwm.drds_ph_parcel_route_extra dpr on dpr.route_extra_id = json_extract(pr.extra_value, '$.routeExtraId')
    join
        (
            select
                t1.pno
            from t t1
            group by 1
        ) pl on pl.pno = pr.pno
    where
        pr.routed_at > '2023-06-01'
        and pr.route_action = 'TAKE_PHOTO'
)
select
    a.pno
    ,case a.force_take_photos_type
        when 1 then '打印面单'
        when 2 then '收件人拒收'
        when 3 then '滞留强制拍照'
    end 拍照类型
    ,case
        when  a.state = 1 then '丢失件待处理'
        when  a.state = 2 then '疑似丢失件待处理'
        when  a.state = 3 then '待工单回复'
        when  a.state = 4 then '已工单回复'
        when  a.state = 5 and a.operator_id in (10000,10001,10002) then '自动判责—包裹未丢失'
        when  a.state = 5 and a.operator_id not in (10000,10001,10002) then '人工-包裹未丢失'
        when  a.state = 6 then '丢失件处理完成'
    end 判责结果
    ,po1.staff_info_id 拍照快递员
    ,dt.store_name 拍照网点
    ,dt.piece_name 拍照网点片区
    ,dt.region_name 拍照网点大区
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end 客户类型
    ,b.24hour 判责丢失24小时判断
    ,pi.cod_amount/100 cod金额
    ,case pi.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case pi2.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 退件包裹包裹状态
    ,if(dt.双重预警 = 'Alert', '是', '否') 当日是否爆仓
    ,plt3.pl_source 进L来源同时是否有替他来源任务
    ,if(a.state in (5,6) ,timestampdiff(hour, a.created_at, a.updated_at), null) 进入L来源时间到已处理时间段_hour
from
    (
        select
            sf.*
        from
            (
                select
                    t1.*
                    ,sfp.force_take_photos_type
                    ,sfp.id record_id
                    ,row_number() over (partition by sfp.pno order by sfp.created_at desc) rk
                from ph_staging.stranded_force_photo_ai_record sfp
                join t t1 on t1.pno = sfp.pno
                where
                    sfp.created_at < date_sub(t1.created_at, interval 7 hour)
                    and (sfp.parcel_enabled = 0 or sfp.matching_enabled = 0)
                    and sfp.force_take_photos_type is not null
            ) sf
        where
            sf.rk = 1
    ) a
left join ph_staging.ka_profile kp on kp.id = a.client_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = a.client_id
left join ph_staging.parcel_info pi on pi.pno = a.pno
left join
    (
        select
            t2.*
            ,case
                when timestampdiff(second, t2.updated_time, pr.min_prat)/3600 <= 24 then '1'
                when timestampdiff(second, t2.updated_time, pr.min_prat)/3600 > 24 then '2'
                else 0
            end 24hour
        from t t2
        left join
            (
                select
                    pr.pno
                    ,min(convert_tz(pr.routed_at, '+00:00', '+07:00')) min_prat
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                join dwm.dwd_dim_dict ddd on ddd.element = pr.route_action and ddd.db = 'rot_pro' and ddd.tablename = 'parcel_route' and ddd.fieldname = 'route_action' and ddd.remark = 'valid'
                where
                    pr.routed_at > date_sub(t1.updated_time, interval 8 hour)
                group by 1
            ) pr on pr.pno = t2.pno
    ) b on b.pno = a.pno
left join dwm.dwd_ph_network_spill_detl_rd dt on dt.统计日期 = date(a.created_at) and dt.网点ID = a.last_valid_store_id
left join
    (
        select
            t1.pno
            ,group_concat(pl.plt_source) pl_source
        from
            (
                select
                    plt3.pno
                    ,plt3.source
                    ,case plt3.source
                        WHEN 1 THEN 'A'
                        WHEN 2 THEN 'B'
                        WHEN 3 THEN 'C'
                        WHEN 4 THEN 'D'
                        WHEN 5 THEN 'E'
                        WHEN 6 THEN 'F'
                        WHEN 7 THEN 'G'
                        WHEN 8 THEN 'H'
                        WHEN 9 THEN 'I'
                        WHEN 10 THEN 'J'
                        when 11 then 'K'
                        when 12 then 'L'
                    end plt_source
                    ,plt3.created_at created_time
                    ,if(plt3.state in (5,6), plt3.updated_at, now()) updated_time
                from ph_bi.parcel_lose_task plt3
                where
                    plt3.created_at >= '2023-06-14 16:00:00'
                    and plt3.created_at < '2023-06-30 16:00:00'
                    and plt3.source != 12 -- 非L来源
            ) pl
        join t t1 on t1.pno = pl.pno
        where
            pl.updated_time > t1.created_at
            and pl.created_time < t1.updated_time
        group by 1
    ) plt3 on plt3.pno = a.pno
left join ph_staging.stranded_force_photo_info sfp on sfp.ai_record_id = a.record_id
left join ph_staging.sys_attachment sa on sa.object_key = sfp.url
left join po po1 on po1.image = sa.id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = po1.store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join ph_staging.parcel_info pi2 on pi2.pno = pi.returned_pno;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
select
    plt.pno
    ,plt.id
    ,plt.created_at
    ,plt.updated_at
    ,plt.state
    ,plt.operator_id
    ,plt.client_id
    ,plt.last_valid_store_id
    ,if(plt.state = 6 and plt.duty_result = 1, plt.updated_at, null) updated_time
from ph_bi.parcel_lose_task plt
where
    plt.created_at >= '2023-06-14 16:00:00'
    and plt.created_at < '2023-06-30 16:00:00'
    and plt.source = 12
)
, po as
(
    select
        pr.pno
        ,dpr.route_extra_id
        ,pr.store_id
        ,pr.staff_info_id
        ,replace(replace(replace(json_extract(dpr.extra_value, '$.images'), '"', ''),'[', ''),']', '') image
    from ph_staging.parcel_route pr
    left join dwm.drds_ph_parcel_route_extra dpr on dpr.route_extra_id = json_extract(pr.extra_value, '$.routeExtraId')
    join
        (
            select
                t1.pno
            from t t1
            group by 1
        ) pl on pl.pno = pr.pno
    where
        pr.routed_at > '2023-06-01'
        and pr.route_action = 'TAKE_PHOTO'
)
select
    a.pno
    ,case a.force_take_photos_type
        when 1 then '打印面单'
        when 2 then '收件人拒收'
        when 3 then '滞留强制拍照'
    end 拍照类型
    ,case
        when  a.state = 1 then '丢失件待处理'
        when  a.state = 2 then '疑似丢失件待处理'
        when  a.state = 3 then '待工单回复'
        when  a.state = 4 then '已工单回复'
        when  a.state = 5 and a.operator_id in (10000,10001,10002) then '自动判责—包裹未丢失'
        when  a.state = 5 and a.operator_id not in (10000,10001,10002) then '人工-包裹未丢失'
        when  a.state = 6 then '丢失件处理完成'
    end 判责结果
    ,po1.staff_info_id 拍照快递员
    ,dt.store_name 拍照网点
    ,dt.piece_name 拍照网点片区
    ,dt.region_name 拍照网点大区
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end 客户类型
    ,b.24hour 判责丢失24小时判断
    ,pi.cod_amount/100 cod金额
    ,case pi.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case pi2.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 退件包裹包裹状态
    ,if(dt.爆仓预警 = 'Alert', '是', '否') 当日是否爆仓
    ,plt3.pl_source 进L来源同时是否有替他来源任务
    ,if(a.state in (5,6) ,timestampdiff(hour, a.created_at, a.updated_at), null) 进入L来源时间到已处理时间段_hour
from
    (
        select
            sf.*
        from
            (
                select
                    t1.*
                    ,sfp.force_take_photos_type
                    ,sfp.id record_id
                    ,row_number() over (partition by sfp.pno order by sfp.created_at desc) rk
                from ph_staging.stranded_force_photo_ai_record sfp
                join t t1 on t1.pno = sfp.pno
                where
                    sfp.created_at < date_sub(t1.created_at, interval 7 hour)
                    and (sfp.parcel_enabled = 0 or sfp.matching_enabled = 0)
                    and sfp.force_take_photos_type is not null
            ) sf
        where
            sf.rk = 1
    ) a
left join ph_staging.ka_profile kp on kp.id = a.client_id
left join dwm.dwd_dim_bigClient bc on bc.client_id = a.client_id
left join ph_staging.parcel_info pi on pi.pno = a.pno
left join
    (
        select
            t2.*
            ,case
                when timestampdiff(second, t2.updated_time, pr.min_prat)/3600 <= 24 then '1'
                when timestampdiff(second, t2.updated_time, pr.min_prat)/3600 > 24 then '2'
                else 0
            end 24hour
        from t t2
        left join
            (
                select
                    pr.pno
                    ,min(convert_tz(pr.routed_at, '+00:00', '+07:00')) min_prat
                from ph_staging.parcel_route pr
                join t t1 on t1.pno = pr.pno
                join dwm.dwd_dim_dict ddd on ddd.element = pr.route_action and ddd.db = 'rot_pro' and ddd.tablename = 'parcel_route' and ddd.fieldname = 'route_action' and ddd.remark = 'valid'
                where
                    pr.routed_at > date_sub(t1.updated_time, interval 8 hour)
                group by 1
            ) pr on pr.pno = t2.pno
    ) b on b.pno = a.pno
left join dwm.dwd_ph_network_spill_detl_rd dt on dt.统计日期 = date(a.created_at) and dt.网点ID = a.last_valid_store_id
left join
    (
        select
            t1.pno
            ,group_concat(pl.plt_source) pl_source
        from
            (
                select
                    plt3.pno
                    ,plt3.source
                    ,case plt3.source
                        WHEN 1 THEN 'A'
                        WHEN 2 THEN 'B'
                        WHEN 3 THEN 'C'
                        WHEN 4 THEN 'D'
                        WHEN 5 THEN 'E'
                        WHEN 6 THEN 'F'
                        WHEN 7 THEN 'G'
                        WHEN 8 THEN 'H'
                        WHEN 9 THEN 'I'
                        WHEN 10 THEN 'J'
                        when 11 then 'K'
                        when 12 then 'L'
                    end plt_source
                    ,plt3.created_at created_time
                    ,if(plt3.state in (5,6), plt3.updated_at, now()) updated_time
                from ph_bi.parcel_lose_task plt3
                where
                    plt3.created_at >= '2023-06-14 16:00:00'
                    and plt3.created_at < '2023-06-30 16:00:00'
                    and plt3.source != 12 -- 非L来源
            ) pl
        join t t1 on t1.pno = pl.pno
        where
            pl.updated_time > t1.created_at
            and pl.created_time < t1.updated_time
        group by 1
    ) plt3 on plt3.pno = a.pno
left join ph_staging.stranded_force_photo_info sfp on sfp.ai_record_id = a.record_id
left join ph_staging.sys_attachment sa on sa.object_key = sfp.url
left join po po1 on po1.image = sa.id
left join dwm.dim_th_sys_store_rd dt on dt.store_id = po1.store_id and dt.stat_date = date_sub(curdate(), interval 1 day)
left join ph_staging.parcel_info pi2 on pi2.pno = pi.returned_pno;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
select
    plt.pno
    ,plt.id
    ,plt.created_at
    ,plt.updated_at
    ,plt.state
    ,plt.operator_id
    ,plt.client_id
    ,plt.last_valid_store_id
    ,if(plt.state = 6 and plt.duty_result = 1, plt.updated_at, null) updated_time
from ph_bi.parcel_lose_task plt
where
    plt.created_at >= '2023-06-14 16:00:00'
    and plt.created_at < '2023-06-30 16:00:00'
    and plt.source = 12
)
# , po as
# (
    select
        pr.pno
        ,dpr.route_extra_id
        ,pr.store_id
        ,pr.staff_info_id
        ,replace(replace(replace(json_extract(dpr.extra_value, '$.images'), '"', ''),'[', ''),']', '') image
    from ph_staging.parcel_route pr
    left join dwm.drds_ph_parcel_route_extra dpr on dpr.route_extra_id = json_extract(pr.extra_value, '$.routeExtraId')
    join
        (
            select
                t1.pno
            from t t1
            group by 1
        ) pl on pl.pno = pr.pno
    where
        pr.routed_at > '2023-06-01'
        and pr.route_action = 'TAKE_PHOTO';
;-- -. . -..- - / . -. - .-. -.--
select
       a.*
        ,link_id
   from
       (
            select
                pr.pno
                ,dpr.route_extra_id
                ,pr.store_id
                ,pr.staff_info_id
                ,replace(replace(replace(json_extract(dpr.extra_value, '$.images'), '"', ''),'[', ''),']', '') image
            from ph_staging.parcel_route pr
            left join dwm.drds_ph_parcel_route_extra dpr on dpr.route_extra_id = json_extract(pr.extra_value, '$.routeExtraId')
            join
                (
                    select
                        t1.pno
                    from t t1
                    group by 1
                ) pl on pl.pno = pr.pno
            where
                pr.routed_at > '2023-06-01'
                and pr.route_action = 'TAKE_PHOTO'
       ) a
    lateral view explode(split(a.image, ',')) as link_id;
;-- -. . -..- - / . -. - .-. -.--
select
    t.name
    , t.所属大区
    , t.所属片区
    , sum(if(t.是否应该集包 = '应该集包', 1, 0)) as '应集包数量'
    , sum(if(t.是否应该集包 = '不应该集包', 1, 0)) as '不应该集包数量'
    , sum(if(t.是否集包 = '集包' and t.是否应该集包 = '应该集包', 1, 0)) as '应集包且实际集包数量'
    , sum(if(t.是否集包 = '集包' and t.是否应该集包 = '应该集包', 1, 0)) / sum(if(t.是否应该集包 = '应该集包', 1, 0)) as '集包率'
    , sum(if(t.是否集包 = '集包' and t.是否应该集包 = '不应该集包', 1, 0)) as '不应集包且实际集包数量'
#     , max(coalesce(pkl.揽收包裹数,0)) as 揽收包裹数
#     , max(coalesce(pkl.未发出包裹数,0)) as 未发出包裹数
from
    (
        select
            distinct
            ss.`name`
            , date(ft.`real_leave_time`) real_date
            , mr.`name` as '所属大区'
            , mp.`name` as '所属片区'
            , pi.pno,
            if(pi.exhibition_weight <= 3000
            and pi.exhibition_length <= 30
            and pi.exhibition_width <= 30
            and pi.`article_category` <> 11
            and pi.exhibition_height <= 30
            and pi.exhibition_length + pi.exhibition_width + pi.exhibition_height <= 60
            and dst.category != 10
            , '应该集包', '不应该集包') as '是否应该集包'
            , fv.pack_no
            , if(fv.pack_no is null, '未集包', '集包') as '是否集包'
        from `ph_staging`.`fleet_van_proof_parcel_detail` fv
        join `ph_staging`.`parcel_info` pi on pi.`pno` = fv.`recent_pno`
        join ph_staging.sys_store dst on pi.dst_store_id = dst.id
        left join ph_bi.fleet_time ft on ft.proof_id = fv.proof_id and ft.store_id = fv.store_id
        join `ph_staging`.`sys_store` ss on ss.`id` = ft.`store_id`
        left join ph_staging.sys_manage_region mr on ss.manage_region = mr.`id`
        left join ph_staging.sys_manage_piece mp on ss.manage_piece = mp.`id`
        where pi.`state` <> 9
            and pi.`returned` = 0
#             and ft.`real_leave_time` >= date_add (current_date(), interval -24 hour)
#             and ft.`real_leave_time` < current_date()
            and ft.real_leave_time >= '2023-06-01'
            and ft.real_leave_time < '2023-07-01'
            and ss.category in (1, 4, 5, 7, 10,14)
            and ss.id = pi.ticket_pickup_store_id
    )t
# left join
#     (
#         select
#             store_name
#             ,stat_date
#             ,count(distinct pno) as 揽收包裹数
#             ,count(distinct if(leave_src_time is not null
#                                or dst_valid_route_time is not null
#                                or par_valid_route_time is not null
#                                or par_par_valid_route_time is not null
#                                ,null,pno)) as 未发出包裹数
#
#             from dwm.dwd_ph_pickup_leave_detl_rd
#             where
# #                 stat_date = date_sub(date(date_sub(now(), interval 1 hour)), 1)
#                 stat_date >= '2023-06-01'
#                 and stat_date < '2023-07-01'
#             group by 1
#     )pkl on t.name = pkl.store_name and t.real_date = pkl.stat_date
group by 1, 2, 3
order by 2, 3, 1;
;-- -. . -..- - / . -. - .-. -.--
select
    tp.ka_warehouse_id
from nl_production.customer_complaint_collects ccc
left join ph_staging.ticket_pickup tp on tp.id = ccc.merge_column
where
    ccc.created_at >= '2023-01-01'
    and ccc.ticket_type = 1
group by 1;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date >= '2023-07-06'
        and ds.stat_date <= '2023-07-06'
        and ds.arrival_scan_route_at < concat(ds.stat_date, ' 09:00:00')
)

select
    a.stat_date 日期
    ,a.store_id 网点ID
    ,dp.store_name 网点名称
    ,dp.region_name 大区
    ,case
        when dp.region_name in ('Area3', 'Area6') then '彭万松'
        when dp.region_name in ('Area4', 'Area9') then '韩钥'
        when dp.region_name in ('Area7', 'Area8','Area10', 'Area11','FHome') then '张可新'
        when dp.region_name in ('Area1', 'Area2','Area5', 'Area12') then '李俊'
    end 大区负责人
    ,dp.piece_name 片区
    ,a.应交接
    ,a.已交接
    ,concat(round(a.交接率*100,2),'%') as 交接率
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null and a.e_check is null, 'C', '')) 交接评级
    ,concat(round(a.A_rate * 100,2),'%')  'A时段（<0930 ）'
    ,concat(round(a.B_rate * 100,2),'%') 'B时段（0930<=X<1200）'
    ,concat(round(a.C_rate * 100,2),'%')'C时段（1200<=X<1600 ）'
    ,concat(round(a.D_rate * 100,2),'%')'D时段（>=1600）'
from
    (
        select
            t1.store_id
            ,t1.stat_date
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 , 'E', null ) e_check
        from t t1
        left join
            (
                select
                    sc.*
                from
                    (
                        select
                            pr.pno
                            ,pr.store_id
                            ,pr.store_name
                            ,t1.stat_date
                            ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                            ,date(convert_tz(pr.routed_at, '+00:00', '+08:00')) route_date
                            ,row_number() over (partition by pr.pno,t1.stat_date order by pr.routed_at) rk
                        from ph_staging.parcel_route pr
                        join t t1 on t1.pno = pr.pno
                        where
                            pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                           and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                          and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
                    ) sc
                where
                    sc.rk = 1
            ) sc on sc.pno = t1.pno and t1.stat_date = sc.stat_date
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
where
    dp.store_category in (1)
order by 5,9;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
        pi.pno
        ,pi.state
        ,pi.ticket_pickup_store_id
        ,pi.returned
        ,pi.dst_store_id
        ,pi.client_id
        ,pi.cod_enabled
    from ph_staging.parcel_info pi
    where
        pi.created_at < '2023-06-14 16:00:00'
        and pi.state not in (5,7,8,9)
#         and pi.pno = 'P35231NPHV3BE'
)
select
    t1.pno
    ,if(t1.returned = 1, '退件', '正向件')  方向
    ,t1.client_id 客户ID
    ,case
        when bc.`client_id` is not null then bc.client_name
        when kp.id is not null and bc.client_id is null then '普通ka'
        when kp.`id` is null then '小c'
    end as 客户类型
    ,case t1.state
        when 1 then '已揽收'
        when 2 then '运输中'
        when 3 then '派送中'
        when 4 then '已滞留'
        when 5 then '已签收'
        when 6 then '疑难件处理中'
        when 7 then '已退件'
        when 8 then '异常关闭'
        when 9 then '已撤销'
    end as 包裹状态
    ,case di.diff_marker_category # 疑难原因
        when 1 then '客户不在家/电话无人接听'
        when 2 then '收件人拒收'
        when 3 then '快件分错网点'
        when 4 then '外包装破损'
        when 5 then '货物破损'
        when 6 then '货物短少'
        when 7 then '货物丢失'
        when 8 then '电话联系不上'
        when 9 then '客户改约时间'
        when 10 then '客户不在'
        when 11 then '客户取消任务'
        when 12 then '无人签收'
        when 13 then '客户周末或假期不收货'
        when 14 then '客户改约时间'
        when 15 then '当日运力不足，无法派送'
        when 16 then '联系不上收件人'
        when 17 then '收件人拒收'
        when 18 then '快件分错网点'
        when 19 then '外包装破损'
        when 20 then '货物破损'
        when 21 then '货物短少'
        when 22 then '货物丢失'
        when 23 then '收件人/地址不清晰或不正确'
        when 24 then '收件地址已废弃或不存在'
        when 25 then '收件人电话号码错误'
        when 26 then 'cod金额不正确'
        when 27 then '无实际包裹'
        when 28 then '已妥投未交接'
        when 29 then '收件人电话号码是空号'
        when 30 then '快件分错网点-地址正确'
        when 31 then '快件分错网点-地址错误'
        when 32 then '禁运品'
        when 33 then '严重破损（丢弃）'
        when 34 then '退件两次尝试派送失败'
        when 35 then '不能打开locker'
        when 36 then 'locker不能使用'
        when 37 then '该地址找不到lockerstation'
        when 38 then '一票多件'
        when 39 then '多次尝试派件失败'
        when 40 then '客户不在家/电话无人接听'
        when 41 then '错过班车时间'
        when 42 then '目的地是偏远地区,留仓待次日派送'
        when 43 then '目的地是岛屿,留仓待次日派送'
        when 44 then '企业/机构当天已下班'
        when 45 then '子母件包裹未全部到达网点'
        when 46 then '不可抗力原因留仓(台风)'
        when 47 then '虚假包裹'
        when 48 then '转交FH包裹留仓'
        when 50 then '客户取消寄件'
        when 51 then '信息录入错误'
        when 52 then '客户取消寄件'
        when 53 then 'lazada仓库拒收'
        when 69 then '禁运品'
        when 70 then '客户改约时间'
        when 71 then '当日运力不足，无法派送'
        when 72 then '客户周末或假期不收货'
        when 73 then '收件人/地址不清晰或不正确'
        when 74 then '收件地址已废弃或不存在'
        when 75 then '收件人电话号码错误'
        when 76 then 'cod金额不正确'
        when 77 then '企业/机构当天已下班'
        when 78 then '收件人电话号码是空号'
        when 79 then '快件分错网点-地址错误'
        when 80 then '客户取消任务'
        when 81 then '重复下单'
        when 82 then '已完成揽件'
        when 83 then '联系不上客户'
        when 84 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 85 then '寄件人电话号码是空号'
        when 86 then '包裹不符合揽收条件超大件'
        when 87 then '包裹不符合揽收条件违禁品'
        when 88 then '寄件人地址为岛屿'
        when 89 then '运力短缺，跟客户协商推迟揽收'
        when 90 then '包裹未准备好推迟揽收'
        when 91 then '包裹包装不符合运输标准'
        when 92 then '客户提供的清单里没有此包裹'
        when 93 then '包裹不符合揽收条件（超大件、违禁物品）'
        when 94 then '客户取消寄件/客户实际不想寄此包裹'
        when 95 then '车辆/人力短缺推迟揽收'
        when 96 then '遗漏揽收(已停用)'
        when 97 then '子母件(一个单号多个包裹)'
        when 98 then '地址错误addresserror'
        when 99 then '包裹不符合揽收条件：超大件'
        when 100 then '包裹不符合揽收条件：违禁品'
        when 101 then '包裹包装不符合运输标准'
        when 102 then '包裹未准备好'
        when 103 then '运力短缺，跟客户协商推迟揽收'
        when 104 then '子母件(一个单号多个包裹)'
        when 105 then '破损包裹'
        when 106 then '空包裹'
        when 107 then '不能打开locker(密码错误)'
        when 108 then 'locker不能使用'
        when 109 then 'locker找不到'
        when 110 then '运单号与实际包裹的单号不一致'
        when 111 then 'box客户取消任务'
        when 112 then '不能打开locker(密码错误)'
        when 113 then 'locker不能使用'
        when 114 then 'locker找不到'
        when 115 then '实际重量尺寸大于客户下单的重量尺寸'
        when 116 then '客户仓库关闭'
        when 117 then '客户仓库关闭'
        when 118 then 'SHOPEE订单系统自动关闭'
        when 119 then '客户取消包裹'
        when 121 then '地址错误'
        when 122 then '当日运力不足，无法揽收'
    end as 疑难原因
#     ,case
#         when t1.state = 6 and di.pno is not null then 'KAM/揽件网点未协商'
#         when t1.state = 6 and di.pno is null  then '闪速系统沟通处理中'
#         when t1.state != 6 and plt.pno is not null and plt2.pno is not null then '闪速系统沟通处理中'
#         when plt.pno is null and pct.pno is not null then '闪速超时效理赔未完成'
#         when de.last_store_id = t1.ticket_pickup_store_id and plt2.pno is null then '揽件未发出'
#         when t1.dst_store_id = 'PH19040F05' and plt2.pno is null then '弃件未到拍卖仓'
#         when t1.state != 6 and datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) > 7 and plt2.pno is not null then 'QAQC无须追责后长期无有效路由'
#         else null
#     end 卡点原因
#     ,de.last_store_name 当前节点
    ,datediff(now(), convert_tz(pr.routed_at, '+00:00', '+08:00')) 最后有效路由距今天数
#     ,de.last_cn_route_action 最新一条有效路由
    ,case pr.route_action # 路由动作
         when 'ACCEPT_PARCEL' then '接件扫描'
         when 'ARRIVAL_GOODS_VAN_CHECK_SCAN' then '车货关联到港'
         when 'ARRIVAL_WAREHOUSE_SCAN' then '到件入仓扫描'
         when 'CANCEL_ARRIVAL_WAREHOUSE_SCAN' then '取消到件入仓扫描'
         when 'CANCEL_PARCEL' then '撤销包裹'
         when 'CANCEL_SHIPMENT_WAREHOUSE' then '取消发件出仓'
         when 'CHANGE_PARCEL_CANCEL' then '修改包裹为撤销'
         when 'CHANGE_PARCEL_CLOSE' then '修改包裹为异常关闭'
         when 'CHANGE_PARCEL_IN_TRANSIT' then '修改包裹为运输中'
         when 'CHANGE_PARCEL_INFO' then '修改包裹信息'
         when 'CHANGE_PARCEL_SIGNED' then '修改包裹为签收'
         when 'CLAIMS_CLOSE' then '理赔关闭'
         when 'CLAIMS_COMPLETE' then '理赔完成'
         when 'CLAIMS_CONTACT' then '已联系客户'
         when 'CLAIMS_TRANSFER_CS' then '转交总部cs处理'
         when 'CLOSE_ORDER' then '关闭订单'
         when 'CONTINUE_TRANSPORT' then '疑难件继续配送'
         when 'CREATE_WORK_ORDER' then '创建工单'
         when 'CUSTOMER_CHANGE_PARCEL_INFO' then '客户修改包裹信息'
         when 'CUSTOMER_OPERATING_RETURN' then '客户操作退回寄件人'
         when 'DELIVERY_CONFIRM' then '确认妥投'
         when 'DELIVERY_MARKER' then '派件标记'
         when 'DELIVERY_PICKUP_STORE_SCAN' then '自提取件扫描'
         when 'DELIVERY_TICKET_CREATION_SCAN' then '交接扫描'
         when 'DELIVERY_TRANSFER' then '派件转单'
         when 'DEPARTURE_GOODS_VAN_CK_SCAN' then '车货关联出港'
         when 'DETAIN_WAREHOUSE' then '货件留仓'
         when 'DIFFICULTY_FINISH_INDEMNITY' then '疑难件支付赔偿'
         when 'DIFFICULTY_HANDOVER' then '疑难件交接'
         when 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE' then '疑难件交接货件留仓'
         when 'DIFFICULTY_RE_TRANSIT' then '疑难件退回区域总部/重启运送'
         when 'DIFFICULTY_RETURN' then '疑难件退回寄件人'
         when 'DIFFICULTY_SEAL' then '集包异常'
         when 'DISCARD_RETURN_BKK' then '丢弃包裹的，换单后寄回BKK'
         when 'DISTRIBUTION_INVENTORY' then '分拨盘库'
         when 'DWS_WEIGHT_IMAGE' then 'DWS复秤照片'
         when 'EXCHANGE_PARCEL' then '换货'
         when 'FAKE_CANCEL_HANDLE' then '虚假撤销判责'
         when 'FLASH_HOME_SCAN' then 'FH交接扫描'
         when 'FORCE_TAKE_PHOTO' then '强制拍照路由'
         when 'HAVE_HAIR_SCAN_NO_TO' then '有发无到'
         when 'HURRY_PARCEL' then '催单'
         when 'INCOMING_CALL' then '来电接听'
         when 'INTERRUPT_PARCEL_AND_RETURN' then '中断运输并退回'
         when 'INVENTORY' then '盘库'
         when 'LOSE_PARCEL_TEAM_OPERATION' then '丢失件团队处理'
         when 'MANUAL_REMARK' then '添加备注'
         when 'MISS_PICKUP_HANDLE' then '漏包裹揽收判责'
         when 'MISSING_PARCEL_SCAN' then '丢失件包裹操作'
         when 'NOTICE_LOST_PARTS_TEAM' then '已通知丢失件团队'
         when 'PARCEL_HEADLESS_CLAIMED' then '无头件包裹已认领'
         when 'PARCEL_HEADLESS_PRINTED' then '无头件包裹已打单'
         when 'PENDING_RETURN' then '待退件'
         when 'PHONE' then '电话联系'
         when 'PICK_UP_STORE' then '待自提取件'
         when 'PICKUP_RETURN_RECEIPT' then '签回单揽收'
         when 'PRINTING' then '打印面单'
         when 'QAQC_OPERATION' then 'QAQC判责'
         when 'RECEIVE_WAREHOUSE_SCAN' then '收件入仓'
         when 'RECEIVED' then '已揽收,初始化动作，实际情况并没有作用'
         when 'REFUND_CONFIRM' then '退件妥投'
         when 'REPAIRED' then '上报问题修复路由'
         when 'REPLACE_PNO' then '换单'
         when 'REPLY_WORK_ORDER' then '回复工单'
         when 'REVISION_TIME' then '改约时间'
         when 'SEAL' then '集包'
         when 'SEAL_NUMBER_CHANGE' then '集包件数变化'
         when 'SHIPMENT_WAREHOUSE_SCAN' then '发件出仓扫描'
         when 'SORTER_WEIGHT_IMAGE' then '分拣机复秤照片'
         when 'SORTING_SCAN' then '分拣扫描'
         when 'STAFF_INFO_UPDATE_WEIGHT' then '快递员修改重量'
         when 'STORE_KEEPER_UPDATE_WEIGHT' then '仓管员复秤'
         when 'STORE_SORTER_UPDATE_WEIGHT' then '分拣机复秤'
         when 'SYSTEM_AUTO_RETURN' then '系统自动退件'
         when 'TAKE_PHOTO' then '异常打单拍照'
         when 'THIRD_EXPRESS_ROUTE' then '第三方公司路由'
         when 'THIRD_PARTY_REASON_DETAIN' then '第三方原因滞留'
         when 'TICKET_WEIGHT_IMAGE' then '揽收称重照片'
         when 'TRANSFER_LOST_PARTS_TEAM' then '已转交丢失件团队'
         when 'TRANSFER_QAQC' then '转交QAQC处理'
         when 'UNSEAL' then '拆包'
         when 'UNSEAL_NO_PARCEL' then '上报包裹不在集包里'
         when 'UNSEAL_NOT_SCANNED' then '集包已拆包，本包裹未被扫描'
         when 'VEHICLE_ACCIDENT_REG' then '车辆车祸登记'
         when 'VEHICLE_ACCIDENT_REGISTRATION' then '车辆车祸登记'
         when 'VEHICLE_WET_DAMAGE_REG' then '车辆湿损登记'
         when 'VEHICLE_WET_DAMAGE_REGISTRATION' then '车辆湿损登记'
        end as 最后一条路由
    ,pr.store_name 最后有效路由动作网点
    ,convert_tz(pr.routed_at ,'+00:00', '+08:00') 最新一条有效路由时间
    ,datediff(now(), de.dst_routed_at) 目的地网点停留时间
    ,de.dst_store 目的地网点
    ,de.src_store 揽收网点
    ,de.pickup_time 揽收时间
    ,de.pick_date 揽收日期
    ,if(hold.pno is not null, 'yes', 'no' ) 是否有holding标记
    ,if(pr3.pno is not null, 'yes', 'no') 是否有待退件标记
    ,td.try_num 尝试派送次数
from t t1
left join ph_staging.ka_profile kp on t1.client_id = kp.id
left join dwm.dwd_dim_bigClient bc on bc.client_id = t1.client_id
left join dwm.dwd_ex_ph_parcel_details de on de.pno = t1.pno
left join
    (
        select
            plt.pno
            ,group_concat(ss.name ) should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        left join ph_bi.work_order wo on wo.loseparcel_task_id = plt.id
        left join ph_staging.sys_store ss on ss.id = wo.store_id
        where
            plt.state in (3)
            and wo.status in (1,2)
        group by 1

        union  all

        select
            plt.pno
            ,'QAQC' should_do
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state in (1,2,4)
    ) plt on plt.pno = t1.pno
left join
    (
        select
            t2.pno
            ,cdt.negotiation_result_category
            ,di.diff_marker_category
            ,case
                when di.diff_marker_category in (20,21)  and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 1 then 'KAM'
                when di.diff_marker_category not in (20,21) and cdt.vip_enable = 0 then ss2.name
                WHEN di.diff_marker_category in (20,21) and cdt.vip_enable = 0 then ss2.name
            end sh_do
        from ph_staging.diff_info di
        join t t2 on t2.pno = di.pno
        join ph_staging.customer_diff_ticket cdt on cdt.diff_info_id = di.id
        left join ph_bi.parcel_lose_task plt on plt.source_id = cdt.id
        left join ph_staging.sys_store ss2 on ss2.id = t2.ticket_pickup_store_id
        where
            cdt.negotiation_result_category is null
    ) di on di.pno = t1.pno
left join  
    (
        select
            pr.pno
            ,pr.store_name
            ,pr.routed_at
            ,pr.route_action
            ,row_number() over (partition by pr.pno order by pr.routed_at desc ) rk
        from  ph_staging.parcel_route pr
        join t t3 on t3.pno = pr.pno
        where
            pr.route_action in ('INVENTORY','RECEIVED' ,'RECEIVE_WAREHOUSE_SCAN', 'SORTING_SCAN', 'DELIVERY_TICKET_CREATION_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SHIPMENT_WAREHOUSE_SCAN', 'DETAIN_WAREHOUSE', 'DELIVERY_CONFIRM', 'DIFFICULTY_HANDOVER', 'DELIVERY_MARKER', 'REPLACE_PNO','SEAL', 'UNSEAL', 'STAFF_INFO_UPDATE_WEIGHT', 'STORE_KEEPER_UPDATE_WEIGHT', 'STORE_SORTER_UPDATE_WEIGHT', 'DISCARD_RETURN_BKK', 'DELIVERY_TRANSFER', 'PICKUP_RETURN_RECEIPT', 'FLASH_HOME_SCAN', 'ARRIVAL_WAREHOUSE_SCAN', 'SORTING_SCAN ', 'DELIVERY_PICKUP_STORE_SCAN', 'DIFFICULTY_HANDOVER_DETAIN_WAREHOUSE', 'REFUND_CONFIRM', 'ACCEPT_PARCEL')
            and pr.organization_type = 1
        ) pr on pr.pno = t1.pno and pr.rk = 1
left join
    (
        select
            plt.pno
        from ph_bi.parcel_lose_task plt
        join t t1 on t1.pno = plt.pno
        where
            plt.state = 5
            and plt.operator_id not in (10000,10001,10002)
        group by 1
    ) plt2 on plt2.pno = t1.pno
left join
    (
        select
            plt.pno
        from ph_bi.parcel_claim_task plt
        join t t4  on t4.pno = plt.pno
        where
            plt.state not in (6,7,8)
            and plt.source = 11
        group by 1
    ) pct on pct.pno = t1.pno
left join
    (
        select
            pr2.pno
        from ph_staging.parcel_route pr2
        join t t1 on t1.pno = pr2.pno
        where
            pr2.route_action = 'REFUND_CONFIRM'
        group by 1
    ) hold on hold.pno = t1.pno
left join
    (
        select
            pr2.pno
        from  ph_staging.parcel_route pr2
        join t t1 on t1.pno = pr2.pno
        where
            pr2.route_action = 'PENDING_RETURN'
        group by 1
    ) pr3 on pr3.pno = t1.pno
left join
    (
        select
            td.pno
            ,count(distinct date(convert_tz(tdm.created_at, '+00:00', '+08:00'))) try_num
        from ph_staging.ticket_delivery td
        join t t1 on t1.pno = td.pno
        left join ph_staging.ticket_delivery_marker tdm on tdm.delivery_id = td.id
        group by 1
    ) td on td.pno = t1.pno
group by t1.pno;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date >= '2023-07-07'
        and ds.stat_date <= '2023-07-07'
)

select
    a.stat_date 日期
    ,a.store_id 网点ID
    ,dp.store_name 网点名称
    ,dp.region_name 大区
    ,dp.piece_name 片区
    ,a.应交接
    ,a.已交接
    ,concat(round(a.交接率*100,2),'%') as 交接率
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null and a.e_check is null, 'C', '')) 交接评级
    ,concat(round(a.A_rate * 100,2),'%')  'A时段（<0930 ）'
    ,concat(round(a.B_rate * 100,2),'%') 'B时段（0930<=X<1200）'
    ,concat(round(a.C_rate * 100,2),'%')'C时段（1200<=X<1600 ）'
    ,concat(round(a.D_rate * 100,2),'%')'D时段（>=1600）'
from
    (
        select
            t1.store_id
            ,t1.stat_date
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 , 'E', null ) e_check
        from t t1
        left join
            (
                select
                    sc.*
                from
                    (
                        select
                            pr.pno
                            ,pr.store_id
                            ,pr.store_name
                            ,t1.stat_date
                            ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                            ,date(convert_tz(pr.routed_at, '+00:00', '+08:00')) route_date
                            ,row_number() over (partition by pr.pno,t1.stat_date order by pr.routed_at) rk
                        from ph_staging.parcel_route pr
                        join t t1 on t1.pno = pr.pno
                        where
                            pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                           and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                          and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
                    ) sc
                where
                    sc.rk = 1
            ) sc on sc.pno = t1.pno and t1.stat_date = sc.stat_date
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
where
    dp.store_category = 1;
;-- -. . -..- - / . -. - .-. -.--
with t as
(
    select
         ds.store_id
        ,ds.pno
        ,ds.stat_date
    from ph_bi.dc_should_delivery_today ds
    where
        ds.stat_date >= '2023-07-07'
        and ds.stat_date <= '2023-07-07'
        and ds.arrival_scan_route_at < concat(ds.stat_date, ' 09:00:00')
)

select
    a.stat_date 日期
    ,a.store_id 网点ID
    ,dp.store_name 网点名称
    ,dp.region_name 大区
    ,case
        when dp.region_name in ('Area3', 'Area6') then '彭万松'
        when dp.region_name in ('Area4', 'Area9') then '韩钥'
        when dp.region_name in ('Area7', 'Area8','Area10', 'Area11','FHome') then '张可新'
        when dp.region_name in ('Area1', 'Area2','Area5', 'Area12') then '李俊'
    end 大区负责人
    ,dp.piece_name 片区
    ,a.应交接
    ,a.已交接
    ,concat(round(a.交接率*100,2),'%') as 交接率
    ,concat(ifnull(a.a_check,''), ifnull(a.b_check,''), ifnull(a.d_check,''), ifnull(a.e_check,''),if(a.a_check is null  and a.d_check is null and a.b_check is null and a.e_check is null, 'C', '')) 交接评级
    ,concat(round(a.A_rate * 100,2),'%')  'A时段（<0930 ）'
    ,concat(round(a.B_rate * 100,2),'%') 'B时段（0930<=X<1200）'
    ,concat(round(a.C_rate * 100,2),'%')'C时段（1200<=X<1600 ）'
    ,concat(round(a.D_rate * 100,2),'%')'D时段（>=1600）'
from
    (
        select
            t1.store_id
            ,t1.stat_date
            ,count(t1.pno) 应交接
            ,count(if(sc.pno is not null , t1.pno, null)) 已交接
            ,count(if(sc.pno is not null , t1.pno, null))/count(t1.pno) 交接率
            ,count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as A_rate
            ,count(if(time(sc.route_time) >= '09:30:00' and time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as B_rate
            ,count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as C_rate
            ,count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) as D_rate

            ,if(count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.95, 'A', null ) a_check
            ,if(count(if(time(sc.route_time) < '12:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.98 and count(if(time(sc.route_time) < '09:30:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) <= 0.95, 'B', null ) b_check
            ,if(count(if(time(sc.route_time) >= '12:00:00' and time(sc.route_time) < '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03, 'D', null ) d_check
            ,if(count(if(time(sc.route_time) >= '16:00:00', t1.pno, null))/count(if(sc.pno is not null , t1.pno, null)) > 0.03 , 'E', null ) e_check
        from t t1
        left join
            (
                select
                    sc.*
                from
                    (
                        select
                            pr.pno
                            ,pr.store_id
                            ,pr.store_name
                            ,t1.stat_date
                            ,convert_tz(pr.routed_at, '+00:00', '+08:00') route_time
                            ,date(convert_tz(pr.routed_at, '+00:00', '+08:00')) route_date
                            ,row_number() over (partition by pr.pno,t1.stat_date order by pr.routed_at) rk
                        from ph_staging.parcel_route pr
                        join t t1 on t1.pno = pr.pno
                        where
                            pr.route_action = 'DELIVERY_TICKET_CREATION_SCAN'
                           and pr.routed_at >= date_sub(t1.stat_date, interval 8 hour)
                          and pr.routed_at < date_add(t1.stat_date, interval 16 hour )
                    ) sc
                where
                    sc.rk = 1
            ) sc on sc.pno = t1.pno and t1.stat_date = sc.stat_date
        group by 1,2
    ) a
left join dwm.dim_ph_sys_store_rd dp on dp.store_id = a.store_id and dp.stat_date = date_sub(curdate(), interval 1 day)
where
    dp.store_category in (1)
order by 5,9;